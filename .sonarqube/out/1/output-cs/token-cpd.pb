Ö
LC:\Program Files (x86)\GeneXus\GeneXus15PlatformSDK\Src\CommonPackageInfo.cs
[ 
assembly 	
:	 
 
PackageCompatibility 
(  
Version  '
=( )
$num* /
)/ 0
]0 1®>
?C:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\AboutBox1.cs
	namespace		 	
Concepto		
 
.		 
Packages		 
.		 
KBDoctor		 $
{

 
partial 
class 
	AboutBox1 
: 
Form "
{ 
public 
	AboutBox1 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
this 
. 
Text 
= 
String 
. 
Format %
(% &
$str& 1
,1 2
AssemblyTitle3 @
)@ A
;A B
this 
. 
labelProductName !
.! "
Text" &
=' (
AssemblyProduct) 8
;8 9
this 
. 
labelVersion 
. 
Text "
=# $
String% +
.+ ,
Format, 2
(2 3
$str3 @
,@ A
AssemblyVersionB Q
)Q R
;R S
this 
. 
labelCopyright 
.  
Text  $
=% &
AssemblyCopyright' 8
;8 9
this 
. 
labelCompanyName !
.! "
Text" &
=' (
AssemblyCompany) 8
;8 9
this 
. 
textBoxDescription #
.# $
Text$ (
=) *
AssemblyDescription+ >
;> ?
} 	
public 
string 
AssemblyTitle #
{ 	
get 
{ 
object 
[ 
] 

attributes #
=$ %
Assembly& .
.. / 
GetExecutingAssembly/ C
(C D
)D E
.E F
GetCustomAttributesF Y
(Y Z
typeofZ `
(` a"
AssemblyTitleAttributea w
)w x
,x y
falsez 
)	 Ä
;
Ä Å
if 
( 

attributes 
. 
Length %
>& '
$num( )
)) *
{   "
AssemblyTitleAttribute!! *
titleAttribute!!+ 9
=!!: ;
(!!< ="
AssemblyTitleAttribute!!= S
)!!S T

attributes!!T ^
[!!^ _
$num!!_ `
]!!` a
;!!a b
if"" 
("" 
titleAttribute"" &
.""& '
Title""' ,
!=""- /
$str""0 2
)""2 3
{## 
return$$ 
titleAttribute$$ -
.$$- .
Title$$. 3
;$$3 4
}%% 
}&& 
return'' 
System'' 
.'' 
IO''  
.''  !
Path''! %
.''% &'
GetFileNameWithoutExtension''& A
(''A B
Assembly''B J
.''J K 
GetExecutingAssembly''K _
(''_ `
)''` a
.''a b
CodeBase''b j
)''j k
;''k l
}(( 
})) 	
public++ 
string++ 
AssemblyVersion++ %
{,, 	
get-- 
{.. 
return// 
Assembly// 
.//   
GetExecutingAssembly//  4
(//4 5
)//5 6
.//6 7
GetName//7 >
(//> ?
)//? @
.//@ A
Version//A H
.//H I
ToString//I Q
(//Q R
)//R S
;//S T
}00 
}11 	
public33 
string33 
AssemblyDescription33 )
{44 	
get55 
{66 
object77 
[77 
]77 

attributes77 #
=77$ %
Assembly77& .
.77. / 
GetExecutingAssembly77/ C
(77C D
)77D E
.77E F
GetCustomAttributes77F Y
(77Y Z
typeof77Z `
(77` a(
AssemblyDescriptionAttribute77a }
)77} ~
,77~ 
false
77Ä Ö
)
77Ö Ü
;
77Ü á
if88 
(88 

attributes88 
.88 
Length88 %
==88& (
$num88) *
)88* +
{99 
return:: 
$str:: 
;:: 
};; 
return<< 
(<< 
(<< (
AssemblyDescriptionAttribute<< 5
)<<5 6

attributes<<6 @
[<<@ A
$num<<A B
]<<B C
)<<C D
.<<D E
Description<<E P
;<<P Q
}== 
}>> 	
public@@ 
string@@ 
AssemblyProduct@@ %
{AA 	
getBB 
{CC 
objectDD 
[DD 
]DD 

attributesDD #
=DD$ %
AssemblyDD& .
.DD. / 
GetExecutingAssemblyDD/ C
(DDC D
)DDD E
.DDE F
GetCustomAttributesDDF Y
(DDY Z
typeofDDZ `
(DD` a$
AssemblyProductAttributeDDa y
)DDy z
,DDz {
false	DD| Å
)
DDÅ Ç
;
DDÇ É
ifEE 
(EE 

attributesEE 
.EE 
LengthEE %
==EE& (
$numEE) *
)EE* +
{FF 
returnGG 
$strGG 
;GG 
}HH 
returnII 
(II 
(II $
AssemblyProductAttributeII 1
)II1 2

attributesII2 <
[II< =
$numII= >
]II> ?
)II? @
.II@ A
ProductIIA H
;IIH I
}JJ 
}KK 	
publicMM 
stringMM 
AssemblyCopyrightMM '
{NN 	
getOO 
{PP 
objectQQ 
[QQ 
]QQ 

attributesQQ #
=QQ$ %
AssemblyQQ& .
.QQ. / 
GetExecutingAssemblyQQ/ C
(QQC D
)QQD E
.QQE F
GetCustomAttributesQQF Y
(QQY Z
typeofQQZ `
(QQ` a&
AssemblyCopyrightAttributeQQa {
)QQ{ |
,QQ| }
false	QQ~ É
)
QQÉ Ñ
;
QQÑ Ö
ifRR 
(RR 

attributesRR 
.RR 
LengthRR %
==RR& (
$numRR) *
)RR* +
{SS 
returnTT 
$strTT 
;TT 
}UU 
returnVV 
(VV 
(VV &
AssemblyCopyrightAttributeVV 3
)VV3 4

attributesVV4 >
[VV> ?
$numVV? @
]VV@ A
)VVA B
.VVB C
	CopyrightVVC L
;VVL M
}WW 
}XX 	
publicZZ 
stringZZ 
AssemblyCompanyZZ %
{[[ 	
get\\ 
{]] 
object^^ 
[^^ 
]^^ 

attributes^^ #
=^^$ %
Assembly^^& .
.^^. / 
GetExecutingAssembly^^/ C
(^^C D
)^^D E
.^^E F
GetCustomAttributes^^F Y
(^^Y Z
typeof^^Z `
(^^` a$
AssemblyCompanyAttribute^^a y
)^^y z
,^^z {
false	^^| Å
)
^^Å Ç
;
^^Ç É
if__ 
(__ 

attributes__ 
.__ 
Length__ %
==__& (
$num__) *
)__* +
{`` 
returnaa 
$straa 
;aa 
}bb 
returncc 
(cc 
(cc $
AssemblyCompanyAttributecc 1
)cc1 2

attributescc2 <
[cc< =
$numcc= >
]cc> ?
)cc? @
.cc@ A
CompanyccA H
;ccH I
}dd 
}ee 	
privatehh 
voidhh  
logoPictureBox_Clickhh )
(hh) *
objecthh* 0
senderhh1 7
,hh7 8
	EventArgshh9 B
ehhC D
)hhD E
{ii 	
}kk 	
}ll 
}mm ¢¯
FC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\AttributesHelper.cs
	namespace 	
Concepto
 
. 
Packages 
. 
KBDoctor $
{ 
static 

class 
AttributesHelper !
{ 
public 
static 
void %
ListAttWithoutDescription 4
(4 5
)5 6
{ 	

IKBService 
kbserv 
= 

UIServices  *
.* +
KB+ -
;- .
string 
title 
= 
$str N
;N O
string 

outputFile 
= 
	Functions  )
.) *
CreateOutputFile* :
(: ;
kbserv; A
,A B
titleC H
)H I
;I J
IOutputService 
output !
=" #
CommonServices$ 2
.2 3
Output3 9
;9 :
output   
.   
StartSection   
(    
title    %
)  % &
;  & '
KBDoctorXMLWriter## 
writer## $
=##% &
new##' *
KBDoctorXMLWriter##+ <
(##< =

outputFile##= G
,##G H
Encoding##I Q
.##Q R
UTF8##R V
)##V W
;##W X
writer$$ 
.$$ 
	AddHeader$$ 
($$ 
title$$ "
)$$" #
;$$# $
writer%% 
.%% 
AddTableHeader%% !
(%%! "
new%%" %
string%%& ,
[%%, -
]%%- .
{%%/ 0
$str%%1 8
,%%8 9
$str%%: E
,%%E F
$str%%G T
,%%T U
$str%%V a
,%%a b
$str%%c j
,%%j k
$str%%l z
}%%{ |
)%%| }
;%%} ~
string&& 
description&& 
;&& 
string'' 
titlesuggested'' !
;''! "
string(( 
columnTitle(( 
;(( 
foreach)) 
()) 
Artech)) 
.)) 
Genexus)) #
.))# $
Common))$ *
.))* +
Objects))+ 2
.))2 3
	Attribute))3 <
a))= >
in))? A
Artech))B H
.))H I
Genexus))I P
.))P Q
Common))Q W
.))W X
Objects))X _
.))_ `
	Attribute))` i
.))i j
GetAll))j p
())p q
kbserv))q w
.))w x
CurrentModel	))x Ñ
)
))Ñ Ö
)
))Ö Ü
{** 
description++ 
=++ 
a++ 
.++  
Description++  +
;+++ ,
titlesuggested,, 
=,,  
a,,! "
.,," #
Title,,# (
;,,( )
columnTitle-- 
=-- 
a-- 
.--  
ColumnTitle--  +
;--+ ,
string.. 
Picture.. 
=..  
	Functions..! *
...* +
ReturnPicture..+ 8
(..8 9
a..9 :
)..: ;
;..; <
if00 
(00 
(00 
a00 
.00 
Description00 "
.00" #
Replace00# *
(00* +
$str00+ .
,00. /
$str000 2
)002 3
==004 6
a007 8
.008 9
Name009 =
)00= >
||00? A
(00B C
a00C D
.00D E
Title00E J
==00K M
a00N O
.00O P
Description00P [
)00[ \
||00] _
(00` a
a00a b
.00b c
ColumnTitle00c n
==00o q
a00r s
.00s t
Description00t 
)	00 Ä
)
00Ä Å
{11 
string22 
attNameLink22 &
=22' (
	Functions22) 2
.222 3

linkObject223 =
(22= >
a22> ?
)22? @
;22@ A
if44 
(44 
a44 
.44 
Title44 
==44  "
a44# $
.44$ %
Description44% 0
)440 1
{55 
titlesuggested66 &
=66' (
$str	66) á
+
66à â
a
66ä ã
.
66ã å
Name
66å ê
+
66ë í
$str
66ì ò
+
66ô ö
a
66õ ú
.
66ú ù
Title
66ù ¢
+
66£ §
$str
66• ´
;
66´ ¨
}88 
if:: 
(:: 
a:: 
.:: 
Description:: %
.::% &
Replace::& -
(::- .
$str::. 1
,::1 2
$str::3 5
)::5 6
==::7 9
a::: ;
.::; <
Name::< @
)::@ A
{;; 
description<< #
=<<$ %
$str	<<& ä
+
<<ã å
a
<<ç é
.
<<é è
Name
<<è ì
+
<<î ï
$str
<<ñ õ
+
<<ú ù
a
<<û ü
.
<<ü †
Description
<<† ´
+
<<¨ ≠
$str
<<Æ ¥
;
<<¥ µ
Table== 
t== 
===  !
TablesHelper==" .
.==. /
TableOfAttribute==/ ?
(==? @
a==@ A
)==A B
;==B C
writer>> 
.>> 
AddTableData>> +
(>>+ ,
new>>, /
string>>0 6
[>>6 7
]>>7 8
{>>9 :
	Functions>>: C
.>>C D

linkObject>>D N
(>>N O
t>>O P
)>>P Q
,>>Q R
attNameLink>>S ^
,>>^ _
description>>` k
,>>k l
Picture>>m t
,>>t u
titlesuggested	>>v Ñ
,
>>Ñ Ö
columnTitle
>>Ü ë
}
>>í ì
)
>>ì î
;
>>î ï
}@@ 
ifBB 
(BB 
aBB 
.BB 
ColumnTitleBB %
==BB& (
aBB) *
.BB* +
DescriptionBB+ 6
)BB6 7
{CC 
columnTitleDD #
=DD$ %
$str	DD& ä
+
DDã å
a
DDç é
.
DDé è
Name
DDè ì
+
DDî ï
$str
DDñ õ
+
DDú ù
a
DDû ü
.
DDü †
ColumnTitle
DD† ´
+
DD¨ ≠
$str
DDÆ ¥
;
DD¥ µ
}EE 
}HH 
}JJ 
writerLL 
.LL 
	AddFooterLL 
(LL 
)LL 
;LL 
writerMM 
.MM 
CloseMM 
(MM 
)MM 
;MM 
KBDoctorHelperOO 
.OO 
ShowKBDoctorResultsOO .
(OO. /

outputFileOO/ 9
)OO9 :
;OO: ;
boolPP 
successPP 
=PP 
truePP 
;PP  
outputQQ 
.QQ 

EndSectionQQ 
(QQ 
titleQQ #
,QQ# $
successQQ% ,
)QQ, -
;QQ- .
}SS 	
publicUU 
staticUU 
voidUU 

AttFormulaUU %
(UU% &
)UU& '
{VV 	

IKBServiceWW 
kbservWW 
=WW 

UIServicesWW  *
.WW* +
KBWW+ -
;WW- .
stringZZ 
titleZZ 
=ZZ 
$strZZ :
;ZZ: ;
string[[ 

outputFile[[ 
=[[ 
	Functions[[  )
.[[) *
CreateOutputFile[[* :
([[: ;
kbserv[[; A
,[[A B
title[[C H
)[[H I
;[[I J
IOutputService]] 
output]] !
=]]" #
CommonServices]]$ 2
.]]2 3
Output]]3 9
;]]9 :
output^^ 
.^^ 
StartSection^^ 
(^^  
title^^  %
)^^% &
;^^& '
KBDoctorXMLWriteraa 
writeraa $
=aa% &
newaa' *
KBDoctorXMLWriteraa+ <
(aa< =

outputFileaa= G
,aaG H
EncodingaaI Q
.aaQ R
UTF8aaR V
)aaV W
;aaW X
writerbb 
.bb 
	AddHeaderbb 
(bb 
titlebb "
)bb" #
;bb# $
writercc 
.cc 
AddTableHeadercc !
(cc! "
newcc" %
stringcc& ,
[cc, -
]cc- .
{cc/ 0
$strcc1 <
,cc< =
$strcc> K
,ccK L
$strccM W
,ccW X
$strccY b
,ccb c
$strccd l
,ccl m
$str	ccn É
,
ccÉ Ñ
$str
ccÖ í
}
ccì î
)
ccî ï
;
ccï ñ
stringdd 
descriptiondd 
;dd 
stringee 
titlesuggestedee !
;ee! "
stringff 
columnTitleff 
;ff 
foreachgg 
(gg 
Artechgg 
.gg 
Genexusgg #
.gg# $
Commongg$ *
.gg* +
Objectsgg+ 2
.gg2 3
	Attributegg3 <
agg= >
ingg? A
ArtechggB H
.ggH I
GenexusggI P
.ggP Q
CommonggQ W
.ggW X
ObjectsggX _
.gg_ `
	Attributegg` i
.ggi j
GetAllggj p
(ggp q
kbservggq w
.ggw x
CurrentModel	ggx Ñ
)
ggÑ Ö
)
ggÖ Ü
{hh 
descriptionii 
=ii 
aii 
.ii  
Descriptionii  +
;ii+ ,
titlesuggestedjj 
=jj  
ajj! "
.jj" #
Titlejj# (
;jj( )
columnTitlekk 
=kk 
akk 
.kk  
ColumnTitlekk  +
;kk+ ,
Formulall 
formulall 
=ll  !
all" #
.ll# $
Formulall$ +
;ll+ ,
ifmm 
(mm 
formulamm 
==mm 
nullmm #
)mm# $
{nn 
}pp 
elseqq 
{qq 
outputss 
.ss 
AddLiness "
(ss" #
$strss# -
+ss. /
ass0 1
.ss1 2
Namess2 6
)ss6 7
;ss7 8
stringtt 
Picturett "
=tt# $
	Functionstt% .
.tt. /
ReturnPicturett/ <
(tt< =
att= >
)tt> ?
;tt? @
stringuu 
attNameLinkuu &
=uu' (
	Functionsuu) 2
.uu2 3

linkObjectuu3 =
(uu= >
auu> ?
)uu? @
;uu@ A
stringvv 
redundantInTablesvv ,
=vv- .
$strvv/ 1
;vv1 2
stringww 
tablesww !
=ww" #
$strww$ &
;ww& '#
GetTablesAttIsRedundantxx +
(xx+ ,
kbservxx, 2
.xx2 3
CurrentModelxx3 ?
,xx? @
axxA B
,xxB C
outxxD G
tablesxxH N
,xxN O
outxxP S
redundantInTablesxxT e
)xxe f
;xxf g
intzz 
Countzz 
=zz 
$numzz  !
;zz! "
foreach{{ 
({{ 
EntityReference{{ ,
	entityRef{{- 6
in{{7 9
kbserv{{: @
.{{@ A
CurrentModel{{A M
.{{M N
GetReferencesTo{{N ]
({{] ^
a{{^ _
.{{_ `
Key{{` c
){{c d
){{d e
{|| 
KBObject}}  
objRef}}! '
=}}( )
KBObject}}* 2
.}}2 3
Get}}3 6
(}}6 7
kbserv}}7 =
.}}= >
CurrentModel}}> J
,}}J K
	entityRef}}K T
.}}T U
From}}U Y
)}}Y Z
;}}Z [
if~~ 
(~~ 
objRef~~ "
!=~~# %
null~~& *
)~~* +
{ 
if
ÄÄ 
(
ÄÄ  
!
ÄÄ  !
(
ÄÄ! "
objRef
ÄÄ" (
is
ÄÄ) +
Table
ÄÄ, 1
)
ÄÄ1 2
&&
ÄÄ3 5
!
ÄÄ6 7
(
ÄÄ7 8
objRef
ÄÄ8 >
is
ÄÄ? A
Transaction
ÄÄB M
)
ÄÄM N
)
ÄÄN O
Count
ÅÅ  %
+=
ÅÅ& (
$num
ÅÅ) *
;
ÅÅ+ ,
}
ÇÇ 
}
ÑÑ 
if
ÖÖ 
(
ÖÖ 
Count
ÖÖ 
==
ÖÖ 
$num
ÖÖ  
)
ÖÖ  !
foreach
àà 
(
àà  
EntityReference
àà  /
	entityRef
àà0 9
in
àà: <
kbserv
àà= C
.
ààC D
CurrentModel
ààD P
.
ààP Q
GetReferencesTo
ààQ `
(
àà` a
a
ààa b
.
ààb c
Key
ààc f
)
ààf g
)
ààg h
{
ââ 
KBObject
ää #
objRef
ää$ *
=
ää+ ,
KBObject
ää- 5
.
ää5 6
Get
ää6 9
(
ää9 :
kbserv
ää: @
.
ää@ A
CurrentModel
ääA M
,
ääM N
	entityRef
ääO X
.
ääX Y
From
ääY ]
)
ää] ^
;
ää^ _
if
ãã 
(
ãã 
objRef
ãã %
!=
ãã& (
null
ãã) -
)
ãã- .
{
åå 
if
çç  
(
çç! "
objRef
çç" (
is
çç) +
Transaction
çç, 7
)
çç7 8
foreach
èè  '
(
èè( )
KBObjectPart
èè) 5
part
èè6 :
in
èè; =
objRef
èè> D
.
èèD E
Parts
èèE J
)
èèJ K
{
êê  !
if
ëë$ &
(
ëë' (
!
ëë( )
(
ëë) *
part
ëë* .
is
ëë/ 1
StructurePart
ëë2 ?
)
ëë? @
)
ëë@ A
foreach
íí( /
(
íí0 1
EntityReference
íí1 @
ref2
ííA E
in
ííF H
part
ííI M
.
ííM N
GetPartReferences
ííN _
(
íí_ `
)
íí` a
)
íía b
{
ìì( )
if
îî, .
(
îî/ 0
ref2
îî0 4
.
îî4 5
To
îî5 7
.
îî7 8
Id
îî8 :
==
îî; =
a
îî> ?
.
îî? @
Id
îî@ B
)
îîB C
Count
ïï0 5
+=
ïï6 8
$num
ïï9 :
;
ïï: ;
}
ññ( )
}
óó  !
}
òò 
}
ôô 
writer
úú 
.
úú 
AddTableData
úú +
(
úú+ ,
new
úú, /
string
úú0 6
[
úú6 7
]
úú7 8
{
úú9 :
attNameLink
úú; F
,
úúF G
description
úúH S
,
úúS T
Picture
úúU \
,
úú\ ]
formula
úú^ e
.
úúe f
ToString
úúf n
(
úún o
)
úúo p
,
úúp q
tables
úúr x
,
úúx y 
redundantInTablesúúz ã
,úúã å
Countúúç í
.úúí ì
ToStringúúì õ
(úúõ ú
)úúú ù
}úúû ü
)úúü †
;úú† °
}
ùù 
}
üü 
writer
°° 
.
°° 
	AddFooter
°° 
(
°° 
)
°° 
;
°° 
writer
¢¢ 
.
¢¢ 
Close
¢¢ 
(
¢¢ 
)
¢¢ 
;
¢¢ 
KBDoctorHelper
§§ 
.
§§ !
ShowKBDoctorResults
§§ .
(
§§. /

outputFile
§§/ 9
)
§§9 :
;
§§: ;
bool
•• 
success
•• 
=
•• 
true
•• 
;
••  
output
¶¶ 
.
¶¶ 

EndSection
¶¶ 
(
¶¶ 
title
¶¶ #
,
¶¶# $
success
¶¶% ,
)
¶¶, -
;
¶¶- .
}
®® 	
static
ÆÆ 
void
ÆÆ %
GetTablesAttIsRedundant
ÆÆ +
(
ÆÆ+ ,
KBModel
ÆÆ, 3
model
ÆÆ4 9
,
ÆÆ9 :
Artech
ÆÆ; A
.
ÆÆA B
Genexus
ÆÆB I
.
ÆÆI J
Common
ÆÆJ P
.
ÆÆP Q
Objects
ÆÆQ X
.
ÆÆX Y
	Attribute
ÆÆY b
att
ÆÆc f
,
ÆÆf g
out
ÆÆh k
string
ÆÆl r
tables
ÆÆs y
,
ÆÆy z
out
ÆÆ{ ~
stringÆÆ Ö
tablesRedundantÆÆÜ ï
)ÆÆï ñ
{
ØØ 	
tables
∞∞ 
=
∞∞ 
$str
∞∞ 
;
∞∞ 
tablesRedundant
±± 
=
±± 
$str
±±  
;
±±  !
if
≤≤ 
(
≤≤ 
att
≤≤ 
.
≤≤ 
Formula
≤≤ 
==
≤≤ 
null
≤≤ #
)
≤≤# $
{
≥≥ 
}
µµ 
else
∂∂ 
foreach
∏∏ 
(
∏∏ 
EntityReference
∏∏ (
	entityRef
∏∏) 2
in
∏∏3 5
model
∏∏6 ;
.
∏∏; <
GetReferencesTo
∏∏< K
(
∏∏K L
att
∏∏L O
.
∏∏O P
Key
∏∏P S
)
∏∏S T
)
∏∏T U
{
ππ 
if
∫∫ 
(
∫∫ 
	entityRef
∫∫ !
.
∫∫! "
From
∫∫" &
.
∫∫& '
Type
∫∫' +
==
∫∫, .
ObjClass
∫∫/ 7
.
∫∫7 8
Table
∫∫8 =
)
∫∫= >
{
ªª 
Table
ºº 
table
ºº #
=
ºº$ %
model
ºº& +
.
ºº+ ,
Objects
ºº, 3
.
ºº3 4
Get
ºº4 7
(
ºº7 8
	entityRef
ºº8 A
.
ººA B
From
ººB F
.
ººF G
Type
ººG K
,
ººK L
	entityRef
ººM V
.
ººV W
From
ººW [
.
ºº[ \
Id
ºº\ ^
)
ºº^ _
as
ºº` b
Table
ººc h
;
ººh i
if
ΩΩ 
(
ΩΩ 
table
ΩΩ !
!=
ΩΩ" $
null
ΩΩ% )
)
ΩΩ) *
{
ææ 
Artech
¿¿ "
.
¿¿" #
Genexus
¿¿# *
.
¿¿* +
Common
¿¿+ 1
.
¿¿1 2
Parts
¿¿2 7
.
¿¿7 8
TableAttribute
¿¿8 F
tblAtt
¿¿G M
=
¿¿N O
table
¿¿P U
.
¿¿U V
TableStructure
¿¿V d
.
¿¿d e
GetAttribute
¿¿e q
(
¿¿q r
att
¿¿r u
.
¿¿u v
Key
¿¿v y
)
¿¿y z
;
¿¿z {
if
¡¡ 
(
¡¡  
tblAtt
¡¡  &
!=
¡¡' )
null
¡¡* .
&&
¡¡/ 1
tblAtt
¡¡2 8
.
¡¡8 9
	IsFormula
¡¡9 B
&&
¡¡C E
tblAtt
¡¡F L
.
¡¡L M
IsRedundant
¡¡M X
)
¡¡X Y
tablesRedundant
¬¬  /
+=
¬¬0 2
table
¬¬3 8
.
¬¬8 9
Name
¬¬9 =
+
¬¬> ?
$str
¬¬@ C
;
¬¬C D
else
√√  
tables
ƒƒ  &
+=
ƒƒ' )
table
ƒƒ* /
.
ƒƒ/ 0
Name
ƒƒ0 4
+
ƒƒ5 6
$str
ƒƒ7 :
;
ƒƒ: ;
}
≈≈ 
}
∆∆ 
}
«« 
}
…… 	
public
ÕÕ 
static
ÕÕ 
void
ÕÕ 
ListWithoutDomain
ÕÕ ,
(
ÕÕ, -
)
ÕÕ- .
{
ŒŒ 	

IKBService
œœ 
kbserv
œœ 
=
œœ 

UIServices
œœ  *
.
œœ* +
KB
œœ+ -
;
œœ- .

Dictionary
–– 
<
–– 
string
–– 
,
–– 
string
–– %
>
––% &
myDict
––' -
=
––. /
new
––0 3

Dictionary
––4 >
<
––> ?
string
––? E
,
––E F
string
––G M
>
––M N
(
––N O
)
––O P
;
––P Q
string
““ 
title
““ 
=
““ 
$str
““ A
;
““A B
string
”” 

outputFile
”” 
=
”” 
	Functions
””  )
.
””) *
CreateOutputFile
””* :
(
””: ;
kbserv
””; A
,
””A B
title
””C H
)
””H I
;
””I J
IOutputService
’’ 
output
’’ !
=
’’" #
CommonServices
’’$ 2
.
’’2 3
Output
’’3 9
;
’’9 :
output
÷÷ 
.
÷÷ 
StartSection
÷÷ 
(
÷÷  
title
÷÷  %
)
÷÷% &
;
÷÷& '
KBDoctorXMLWriter
ŸŸ 
writer
ŸŸ $
=
ŸŸ% &
new
ŸŸ' *
KBDoctorXMLWriter
ŸŸ+ <
(
ŸŸ< =

outputFile
ŸŸ= G
,
ŸŸG H
Encoding
ŸŸI Q
.
ŸŸQ R
UTF8
ŸŸR V
)
ŸŸV W
;
ŸŸW X
writer
⁄⁄ 
.
⁄⁄ 
	AddHeader
⁄⁄ 
(
⁄⁄ 
title
⁄⁄ "
)
⁄⁄" #
;
⁄⁄# $
writer
€€ 
.
€€ 
AddTableHeader
€€ !
(
€€! "
new
€€" %
string
€€& ,
[
€€, -
]
€€- .
{
€€/ 0
$str
€€1 <
,
€€< =
$str
€€> K
,
€€K L
$str
€€M X
,
€€X Y
$str
€€Z m
}
€€n o
)
€€o p
;
€€p q
foreach
›› 
(
›› 
Artech
›› 
.
›› 
Genexus
›› #
.
››# $
Common
››$ *
.
››* +
Objects
››+ 2
.
››2 3
	Attribute
››3 <
a
››= >
in
››? A
Artech
››B H
.
››H I
Genexus
››I P
.
››P Q
Common
››Q W
.
››W X
Objects
››X _
.
››_ `
	Attribute
››` i
.
››i j
GetAll
››j p
(
››p q
kbserv
››q w
.
››w x
CurrentModel››x Ñ
)››Ñ Ö
)››Ö Ü
{
ﬁﬁ 
string
ﬂﬂ 
Picture
ﬂﬂ 
=
ﬂﬂ  
	Functions
ﬂﬂ! *
.
ﬂﬂ* +
ReturnPicture
ﬂﬂ+ 8
(
ﬂﬂ8 9
a
ﬂﬂ9 :
)
ﬂﬂ: ;
;
ﬂﬂ; <
bool
‡‡ 
	isSubtype
‡‡ 
=
‡‡  
	Functions
‡‡! *
.
‡‡* +
AttIsSubtype
‡‡+ 7
(
‡‡7 8
a
‡‡8 9
)
‡‡9 :
;
‡‡: ;
if
·· 
(
·· 
(
·· 
a
·· 
.
·· 
DomainBasedOn
·· $
==
··% '
null
··( ,
)
··, -
&&
··. 0
!
··1 2
	isSubtype
··2 ;
)
··; <
{
‚‚ 
output
‰‰ 
.
‰‰ 
AddLine
‰‰ "
(
‰‰" #
$str
‰‰# /
+
‰‰0 1
a
‰‰2 3
.
‰‰3 4
Name
‰‰4 8
)
‰‰8 9
;
‰‰9 :
string
ÂÂ 
suggestedDomains
ÂÂ +
=
ÂÂ, -
$str
ÂÂ. 0
;
ÂÂ0 1
string
ÊÊ 
value
ÊÊ  
=
ÊÊ! "
$str
ÊÊ# %
;
ÊÊ% &
if
ËË 
(
ËË 
myDict
ËË 
.
ËË 
TryGetValue
ËË *
(
ËË* +
Picture
ËË+ 2
,
ËË2 3
out
ËË4 7
value
ËË8 =
)
ËË= >
)
ËË> ?
{
ÈÈ 
suggestedDomains
ÍÍ (
=
ÍÍ) *
value
ÍÍ+ 0
;
ÍÍ0 1
}
ÎÎ 
else
ÏÏ 
{
ÌÌ 
suggestedDomains
ÓÓ (
=
ÓÓ) *
SuggestedDomains
ÓÓ+ ;
(
ÓÓ; <
kbserv
ÓÓ< B
,
ÓÓB C
a
ÓÓD E
)
ÓÓE F
;
ÓÓF G
}
ÔÔ 
string
 
attNameLink
 &
=
' (
	Functions
) 2
.
2 3

linkObject
3 =
(
= >
a
> ?
)
? @
;
@ A
writer
ÒÒ 
.
ÒÒ 
AddTableData
ÒÒ '
(
ÒÒ' (
new
ÒÒ( +
string
ÒÒ, 2
[
ÒÒ2 3
]
ÒÒ3 4
{
ÒÒ5 6
attNameLink
ÒÒ7 B
,
ÒÒB C
a
ÒÒD E
.
ÒÒE F
Description
ÒÒF Q
,
ÒÒQ R
Picture
ÒÒS Z
,
ÒÒZ [
suggestedDomains
ÒÒ\ l
}
ÒÒm n
)
ÒÒn o
;
ÒÒo p
}
ÚÚ 
}
ÛÛ 
writer
ıı 
.
ıı 
	AddFooter
ıı 
(
ıı 
)
ıı 
;
ıı 
writer
ˆˆ 
.
ˆˆ 
Close
ˆˆ 
(
ˆˆ 
)
ˆˆ 
;
ˆˆ 
KBDoctorHelper
¯¯ 
.
¯¯ !
ShowKBDoctorResults
¯¯ .
(
¯¯. /

outputFile
¯¯/ 9
)
¯¯9 :
;
¯¯: ;
bool
˘˘ 
success
˘˘ 
=
˘˘ 
true
˘˘ 
;
˘˘  
output
˙˙ 
.
˙˙ 

EndSection
˙˙ 
(
˙˙ 
title
˙˙ #
,
˙˙# $
success
˙˙% ,
)
˙˙, -
;
˙˙- .
}
¸¸ 	
private
˛˛ 
static
˛˛ 
string
˛˛ 
SuggestedDomains
˛˛ .
(
˛˛. /

IKBService
˛˛/ 9
kbserv
˛˛: @
,
˛˛@ A
Artech
˛˛B H
.
˛˛H I
Genexus
˛˛I P
.
˛˛P Q
Common
˛˛Q W
.
˛˛W X
Objects
˛˛X _
.
˛˛_ `
	Attribute
˛˛` i
a
˛˛j k
)
˛˛k l
{
ˇˇ 	
string
ÄÄ 
suggestedDomains
ÄÄ #
=
ÄÄ$ %
$str
ÄÄ& (
;
ÄÄ( )
foreach
ÇÇ 
(
ÇÇ 
Domain
ÇÇ 
d
ÇÇ 
in
ÇÇ  
Domain
ÇÇ! '
.
ÇÇ' (
GetAll
ÇÇ( .
(
ÇÇ. /
kbserv
ÇÇ/ 5
.
ÇÇ5 6
CurrentModel
ÇÇ6 B
)
ÇÇB C
)
ÇÇC D
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 
(
ÑÑ 
a
ÑÑ 
.
ÑÑ 
Type
ÑÑ 
==
ÑÑ 
d
ÑÑ  
.
ÑÑ  !
Type
ÑÑ! %
)
ÑÑ% &
&&
ÑÑ' )
(
ÑÑ* +
a
ÑÑ+ ,
.
ÑÑ, -
Length
ÑÑ- 3
==
ÑÑ4 6
d
ÑÑ7 8
.
ÑÑ8 9
Length
ÑÑ9 ?
)
ÑÑ? @
&&
ÑÑA C
(
ÑÑD E
a
ÑÑE F
.
ÑÑF G
Decimals
ÑÑG O
==
ÑÑP R
d
ÑÑS T
.
ÑÑT U
Decimals
ÑÑU ]
)
ÑÑ] ^
&&
ÑÑ_ a
(
ÑÑb c
a
ÑÑc d
.
ÑÑd e
Signed
ÑÑe k
==
ÑÑl n
d
ÑÑo p
.
ÑÑp q
Signed
ÑÑq w
)
ÑÑw x
)
ÑÑx y
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
suggestedDomains
ÜÜ (
!=
ÜÜ) +
$str
ÜÜ, .
)
ÜÜ. /
{
áá 
suggestedDomains
àà (
+=
àà) +
$str
àà, 0
;
àà0 1
}
ââ 
suggestedDomains
ää $
+=
ää% '
$strää( á
+ääà â
aäää ã
.ääã å
Nameääå ê
+ääë í
$strääì °
+ää¢ £
dää§ •
.ää• ¶
Nameää¶ ™
+ää´ ¨
$strää≠ ≤
+ää≥ ¥
dääµ ∂
.ää∂ ∑
Nameää∑ ª
+ääº Ω
$strääæ ƒ
;ääƒ ≈
}
ãã 
}
çç 
return
èè 
suggestedDomains
èè #
;
èè# $
}
êê 	
public
îî 
static
îî 
void
îî 
ListCharToVarchar
îî ,
(
îî, -
)
îî- .
{
ïï 	

IKBService
ññ 
kbserv
ññ 
=
ññ 

UIServices
ññ  *
.
ññ* +
KB
ññ+ -
;
ññ- .
string
òò 
title
òò 
=
òò 
$str
òò M
;
òòM N
string
ôô 

outputFile
ôô 
=
ôô 
	Functions
ôô  )
.
ôô) *
CreateOutputFile
ôô* :
(
ôô: ;
kbserv
ôô; A
,
ôôA B
title
ôôC H
)
ôôH I
;
ôôI J
IOutputService
õõ 
output
õõ !
=
õõ" #
CommonServices
õõ$ 2
.
õõ2 3
Output
õõ3 9
;
õõ9 :
output
úú 
.
úú 
StartSection
úú 
(
úú  
title
úú  %
)
úú% &
;
úú& '
KBDoctorXMLWriter
ûû 
writer
ûû $
=
ûû% &
new
ûû' *
KBDoctorXMLWriter
ûû+ <
(
ûû< =

outputFile
ûû= G
,
ûûG H
Encoding
ûûI Q
.
ûûQ R
UTF8
ûûR V
)
ûûV W
;
ûûW X
writer
üü 
.
üü 
	AddHeader
üü 
(
üü 
title
üü "
)
üü" #
;
üü# $
writer
†† 
.
†† 
AddTableHeader
†† !
(
††! "
new
††" %
string
††& ,
[
††, -
]
††- .
{
††/ 0
$str
††1 <
,
††< =
$str
††> K
,
††K L
$str
††M X
,
††X Y
$str
††Z b
}
††c d
)
††d e
;
††e f
foreach
¢¢ 
(
¢¢ 
Artech
¢¢ 
.
¢¢ 
Genexus
¢¢ #
.
¢¢# $
Common
¢¢$ *
.
¢¢* +
Objects
¢¢+ 2
.
¢¢2 3
	Attribute
¢¢3 <
a
¢¢= >
in
¢¢? A
Artech
¢¢B H
.
¢¢H I
Genexus
¢¢I P
.
¢¢P Q
Common
¢¢Q W
.
¢¢W X
Objects
¢¢X _
.
¢¢_ `
	Attribute
¢¢` i
.
¢¢i j
GetAll
¢¢j p
(
¢¢p q
kbserv
¢¢q w
.
¢¢w x
CurrentModel¢¢x Ñ
)¢¢Ñ Ö
)¢¢Ö Ü
{
££ 
string
§§ 
Picture
§§ 
=
§§  
	Functions
§§! *
.
§§* +
ReturnPicture
§§+ 8
(
§§8 9
a
§§9 :
)
§§: ;
;
§§; <
if
•• 
(
•• 
(
•• 
a
•• 
.
•• 
Type
•• 
==
•• 
Artech
•• %
.
••% &
Genexus
••& -
.
••- .
Common
••. 4
.
••4 5
eDBType
••5 <
.
••< =
	CHARACTER
••= F
)
••F G
&&
••H J
(
••K L
a
••L M
.
••M N
Length
••N T
>
••U V
$num
••W Y
)
••Y Z
&&
••[ ]
!
••^ _
	Functions
••_ h
.
••h i
AttIsSubtype
••i u
(
••u v
a
••v w
)
••w x
)
••x y
{
¶¶ 
string
ßß 
domLink
ßß "
=
ßß# $%
DomainLinkFromAttribute
ßß% <
(
ßß< =
a
ßß= >
)
ßß> ?
;
ßß? @
string
©© 
attNameLink
©© &
=
©©' (
$str
©©) +
;
©©+ ,
attNameLink
™™ 
=
™™  !
	Functions
™™" +
.
™™+ ,

linkObject
™™, 6
(
™™6 7
a
™™7 8
)
™™8 9
;
™™9 :
writer
¨¨ 
.
¨¨ 
AddTableData
¨¨ '
(
¨¨' (
new
¨¨( +
string
¨¨, 2
[
¨¨2 3
]
¨¨3 4
{
¨¨5 6
attNameLink
¨¨7 B
,
¨¨B C
a
¨¨D E
.
¨¨E F
Description
¨¨F Q
,
¨¨Q R
Picture
¨¨S Z
,
¨¨Z [
domLink
¨¨\ c
}
¨¨d e
)
¨¨e f
;
¨¨f g
}
≠≠ 
}
ÆÆ 
writer
∞∞ 
.
∞∞ 
	AddFooter
∞∞ 
(
∞∞ 
)
∞∞ 
;
∞∞ 
writer
±± 
.
±± 
Close
±± 
(
±± 
)
±± 
;
±± 
KBDoctorHelper
≥≥ 
.
≥≥ !
ShowKBDoctorResults
≥≥ .
(
≥≥. /

outputFile
≥≥/ 9
)
≥≥9 :
;
≥≥: ;
bool
¥¥ 
success
¥¥ 
=
¥¥ 
true
¥¥ 
;
¥¥  
output
µµ 
.
µµ 

EndSection
µµ 
(
µµ 
title
µµ #
,
µµ# $
success
µµ% ,
)
µµ, -
;
µµ- .
}
∑∑ 	
private
ππ 
static
ππ 
string
ππ %
DomainLinkFromAttribute
ππ 5
(
ππ5 6
Artech
ππ6 <
.
ππ< =
Genexus
ππ= D
.
ππD E
Common
ππE K
.
ππK L
Objects
ππL S
.
ππS T
	Attribute
ππT ]
a
ππ^ _
)
ππ_ `
{
∫∫ 	
string
ªª 
domLink
ªª 
=
ªª 
$str
ªª 
;
ªª  
if
ºº 
(
ºº 
a
ºº 
.
ºº 
DomainBasedOn
ºº 
!=
ºº  "
null
ºº# '
)
ºº' (
{
ΩΩ 
KBObject
ææ 
dom
ææ 
=
ææ 
Domain
ææ %
.
ææ% &
Get
ææ& )
(
ææ) *

UIServices
ææ* 4
.
ææ4 5
KB
ææ5 7
.
ææ7 8
CurrentModel
ææ8 D
,
ææD E
a
ææF G
.
ææG H
	DomainKey
ææH Q
)
ææQ R
;
ææR S
domLink
øø 
=
øø 
	Functions
øø #
.
øø# $

linkObject
øø$ .
(
øø. /
dom
øø/ 2
)
øø2 3
;
øø3 4
}
¿¿ 
else
¡¡ 
{
¬¬ 
domLink
√√ 
=
√√ 
$str
√√ 
;
√√ 
}
ƒƒ 
return
≈≈ 
domLink
≈≈ 
;
≈≈ 
}
∆∆ 	
public
»» 
static
»» 
void
»» 
ListVarcharToChar
»» ,
(
»», -
)
»»- .
{
…… 	

IKBService
   
kbserv
   
=
   

UIServices
    *
.
  * +
KB
  + -
;
  - .
string
ÃÃ 
title
ÃÃ 
=
ÃÃ 
$str
ÃÃ M
;
ÃÃM N
string
ÕÕ 

outputFile
ÕÕ 
=
ÕÕ 
	Functions
ÕÕ  )
.
ÕÕ) *
CreateOutputFile
ÕÕ* :
(
ÕÕ: ;
kbserv
ÕÕ; A
,
ÕÕA B
title
ÕÕC H
)
ÕÕH I
;
ÕÕI J
IOutputService
œœ 
output
œœ !
=
œœ" #
CommonServices
œœ$ 2
.
œœ2 3
Output
œœ3 9
;
œœ9 :
output
–– 
.
–– 
StartSection
–– 
(
––  
title
––  %
)
––% &
;
––& '
KBDoctorXMLWriter
”” 
writer
”” $
=
””% &
new
””' *
KBDoctorXMLWriter
””+ <
(
””< =

outputFile
””= G
,
””G H
Encoding
””I Q
.
””Q R
UTF8
””R V
)
””V W
;
””W X
writer
‘‘ 
.
‘‘ 
	AddHeader
‘‘ 
(
‘‘ 
title
‘‘ "
)
‘‘" #
;
‘‘# $
writer
’’ 
.
’’ 
AddTableHeader
’’ !
(
’’! "
new
’’" %
string
’’& ,
[
’’, -
]
’’- .
{
’’/ 0
$str
’’1 <
,
’’< =
$str
’’> K
,
’’K L
$str
’’M X
,
’’X Y
$str
’’Z b
}
’’c d
)
’’d e
;
’’e f
foreach
◊◊ 
(
◊◊ 
Artech
◊◊ 
.
◊◊ 
Genexus
◊◊ #
.
◊◊# $
Common
◊◊$ *
.
◊◊* +
Objects
◊◊+ 2
.
◊◊2 3
	Attribute
◊◊3 <
a
◊◊= >
in
◊◊? A
Artech
◊◊B H
.
◊◊H I
Genexus
◊◊I P
.
◊◊P Q
Common
◊◊Q W
.
◊◊W X
Objects
◊◊X _
.
◊◊_ `
	Attribute
◊◊` i
.
◊◊i j
GetAll
◊◊j p
(
◊◊p q
kbserv
◊◊q w
.
◊◊w x
CurrentModel◊◊x Ñ
)◊◊Ñ Ö
)◊◊Ö Ü
{
ÿÿ 
string
ŸŸ 
Picture
ŸŸ 
=
ŸŸ  
	Functions
ŸŸ! *
.
ŸŸ* +
ReturnPicture
ŸŸ+ 8
(
ŸŸ8 9
a
ŸŸ9 :
)
ŸŸ: ;
;
ŸŸ; <
if
⁄⁄ 
(
⁄⁄ 
(
⁄⁄ 
(
⁄⁄ 
a
⁄⁄ 
.
⁄⁄ 
Type
⁄⁄ 
==
⁄⁄ 
Artech
⁄⁄  &
.
⁄⁄& '
Genexus
⁄⁄' .
.
⁄⁄. /
Common
⁄⁄/ 5
.
⁄⁄5 6
eDBType
⁄⁄6 =
.
⁄⁄= >
VARCHAR
⁄⁄> E
)
⁄⁄E F
||
⁄⁄G I
(
⁄⁄J K
a
⁄⁄K L
.
⁄⁄L M
Type
⁄⁄M Q
==
⁄⁄R T
Artech
⁄⁄U [
.
⁄⁄[ \
Genexus
⁄⁄\ c
.
⁄⁄c d
Common
⁄⁄d j
.
⁄⁄j k
eDBType
⁄⁄k r
.
⁄⁄r s
LONGVARCHAR
⁄⁄s ~
)
⁄⁄~ 
)⁄⁄ Ä
&&⁄⁄Å É
(⁄⁄Ñ Ö
a⁄⁄Ö Ü
.⁄⁄Ü á
Length⁄⁄á ç
<=⁄⁄é ê
$num⁄⁄ë ì
)⁄⁄ì î
&&⁄⁄ï ó
!⁄⁄ò ô
	Functions⁄⁄ô ¢
.⁄⁄¢ £
AttIsSubtype⁄⁄£ Ø
(⁄⁄Ø ∞
a⁄⁄∞ ±
)⁄⁄± ≤
)⁄⁄≤ ≥
{
€€ 
string
‹‹ 
domLink
‹‹ "
=
‹‹# $%
DomainLinkFromAttribute
‹‹% <
(
‹‹< =
a
‹‹= >
)
‹‹> ?
;
‹‹? @
string
ﬁﬁ 
attNameLink
ﬁﬁ &
=
ﬁﬁ' (
$str
ﬁﬁ) +
;
ﬁﬁ+ ,
attNameLink
‡‡ 
=
‡‡  !
	Functions
‡‡" +
.
‡‡+ ,

linkObject
‡‡, 6
(
‡‡6 7
a
‡‡7 8
)
‡‡8 9
;
‡‡9 :
writer
·· 
.
·· 
AddTableData
·· '
(
··' (
new
··( +
string
··, 2
[
··2 3
]
··3 4
{
··5 6
attNameLink
··7 B
,
··B C
a
··D E
.
··E F
Description
··F Q
,
··Q R
Picture
··S Z
,
··Z [
domLink
··\ c
}
··d e
)
··e f
;
··f g
}
‚‚ 
}
„„ 
writer
ÂÂ 
.
ÂÂ 
	AddFooter
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ 
writer
ÊÊ 
.
ÊÊ 
Close
ÊÊ 
(
ÊÊ 
)
ÊÊ 
;
ÊÊ 
KBDoctorHelper
ËË 
.
ËË !
ShowKBDoctorResults
ËË .
(
ËË. /

outputFile
ËË/ 9
)
ËË9 :
;
ËË: ;
bool
ÈÈ 
success
ÈÈ 
=
ÈÈ 
true
ÈÈ 
;
ÈÈ  
output
ÍÍ 
.
ÍÍ 

EndSection
ÍÍ 
(
ÍÍ 
title
ÍÍ #
,
ÍÍ# $
success
ÍÍ% ,
)
ÍÍ, -
;
ÍÍ- .
}
ÏÏ 	
internal
ÓÓ 
static
ÓÓ 
void
ÓÓ 
ListAttributes
ÓÓ +
(
ÓÓ+ ,
)
ÓÓ, -
{
ÔÔ 	

IKBService
 
kbserv
 
=
 

UIServices
  *
.
* +
KB
+ -
;
- .
string
ÛÛ 
title
ÛÛ 
=
ÛÛ 
$str
ÛÛ 7
;
ÛÛ7 8
string
ÙÙ 

outputFile
ÙÙ 
=
ÙÙ 
	Functions
ÙÙ  )
.
ÙÙ) *
CreateOutputFile
ÙÙ* :
(
ÙÙ: ;
kbserv
ÙÙ; A
,
ÙÙA B
title
ÙÙC H
)
ÙÙH I
;
ÙÙI J
IOutputService
ˆˆ 
output
ˆˆ !
=
ˆˆ" #
CommonServices
ˆˆ$ 2
.
ˆˆ2 3
Output
ˆˆ3 9
;
ˆˆ9 :
output
˜˜ 
.
˜˜ 
StartSection
˜˜ 
(
˜˜  
title
˜˜  %
)
˜˜% &
;
˜˜& '
KBDoctorXMLWriter
˙˙ 
writer
˙˙ $
=
˙˙% &
new
˙˙' *
KBDoctorXMLWriter
˙˙+ <
(
˙˙< =

outputFile
˙˙= G
,
˙˙G H
Encoding
˙˙I Q
.
˙˙Q R
UTF8
˙˙R V
)
˙˙V W
;
˙˙W X
writer
˚˚ 
.
˚˚ 
	AddHeader
˚˚ 
(
˚˚ 
title
˚˚ "
)
˚˚" #
;
˚˚# $
writer
¸¸ 
.
¸¸ 
AddTableHeader
¸¸ !
(
¸¸! "
new
¸¸" %
string
¸¸& ,
[
¸¸, -
]
¸¸- .
{
¸¸/ 0
$str
¸¸1 <
,
¸¸< =
$str
¸¸> K
,
¸¸K L
$str
¸¸M X
,
¸¸X Y
$str
¸¸Z b
,
¸¸b c
$str
¸¸d m
,
¸¸n o
$str
¸¸p w
,
¸¸w x
$str¸¸y á
,¸¸á à
$str¸¸â ï
,¸¸ï ñ
$str¸¸ó ¢
}¸¸¢ £
)¸¸£ §
;¸¸§ •
foreach
˛˛ 
(
˛˛ 
Artech
˛˛ 
.
˛˛ 
Genexus
˛˛ #
.
˛˛# $
Common
˛˛$ *
.
˛˛* +
Objects
˛˛+ 2
.
˛˛2 3
	Attribute
˛˛3 <
a
˛˛= >
in
˛˛? A
Artech
˛˛B H
.
˛˛H I
Genexus
˛˛I P
.
˛˛P Q
Common
˛˛Q W
.
˛˛W X
Objects
˛˛X _
.
˛˛_ `
	Attribute
˛˛` i
.
˛˛i j
GetAll
˛˛j p
(
˛˛p q
kbserv
˛˛q w
.
˛˛w x
CurrentModel˛˛x Ñ
)˛˛Ñ Ö
)˛˛Ö Ü
{
ˇˇ 
string
ÄÄ 
Picture
ÄÄ 
=
ÄÄ  
	Functions
ÄÄ! *
.
ÄÄ* +
ReturnPicture
ÄÄ+ 8
(
ÄÄ8 9
a
ÄÄ9 :
)
ÄÄ: ;
;
ÄÄ; <
string
ÅÅ 
domlink
ÅÅ 
=
ÅÅ  
a
ÅÅ! "
.
ÅÅ" #
DomainBasedOn
ÅÅ# 0
==
ÅÅ1 3
null
ÅÅ4 8
?
ÅÅ9 :
$str
ÅÅ; >
:
ÅÅ> ?
	Functions
ÅÅ@ I
.
ÅÅI J

linkObject
ÅÅJ T
(
ÅÅT U
a
ÅÅU V
.
ÅÅV W
DomainBasedOn
ÅÅW d
)
ÅÅd e
;
ÅÅe f
string
ÇÇ 
superTypeName
ÇÇ $
=
ÇÇ% &
a
ÇÇ' (
.
ÇÇ( )
SuperTypeKey
ÇÇ) 5
==
ÇÇ5 7
null
ÇÇ7 ;
?
ÇÇ; <
$str
ÇÇ= @
:
ÇÇ@ A
a
ÇÇB C
.
ÇÇC D
	SuperType
ÇÇD M
.
ÇÇM N
Name
ÇÇN R
;
ÇÇR S
output
ÉÉ 
.
ÉÉ 
AddLine
ÉÉ 
(
ÉÉ 
$str
ÉÉ +
+
ÉÉ, -
a
ÉÉ. /
.
ÉÉ/ 0
Name
ÉÉ0 4
)
ÉÉ4 5
;
ÉÉ5 6
string
ÑÑ 
	isFormula
ÑÑ  
=
ÑÑ! "
a
ÑÑ# $
.
ÑÑ$ %
Formula
ÑÑ% ,
==
ÑÑ- /
null
ÑÑ0 4
?
ÑÑ5 6
$str
ÑÑ7 9
:
ÑÑ: ;
$str
ÑÑ< ?
;
ÑÑ? @
writer
ÖÖ 
.
ÖÖ 
AddTableData
ÖÖ #
(
ÖÖ# $
new
ÖÖ$ '
string
ÖÖ( .
[
ÖÖ. /
]
ÖÖ/ 0
{
ÖÖ1 2
	Functions
ÖÖ3 <
.
ÖÖ< =

linkObject
ÖÖ= G
(
ÖÖG H
a
ÖÖH I
)
ÖÖI J
,
ÖÖJ K
a
ÖÖL M
.
ÖÖM N
Description
ÖÖN Y
,
ÖÖY Z
Picture
ÖÖ[ b
,
ÖÖb c
domlink
ÖÖd k
,
ÖÖl m
superTypeName
ÖÖo |
,
ÖÖ| }
a
ÖÖ~ 
.ÖÖ Ä
TitleÖÖÄ Ö
,ÖÖÖ Ü
aÖÖá à
.ÖÖà â
ColumnTitleÖÖâ î
,ÖÖî ï
aÖÖñ ó
.ÖÖó ò'
ContextualTitlePropertyÖÖò Ø
,ÖÖØ ∞
	isFormulaÖÖ∞ π
}ÖÖπ ∫
)ÖÖ∫ ª
;ÖÖª º
}
ÜÜ 
writer
àà 
.
àà 
	AddFooter
àà 
(
àà 
)
àà 
;
àà 
writer
ââ 
.
ââ 
Close
ââ 
(
ââ 
)
ââ 
;
ââ 
KBDoctorHelper
ãã 
.
ãã !
ShowKBDoctorResults
ãã .
(
ãã. /

outputFile
ãã/ 9
)
ãã9 :
;
ãã: ;
bool
åå 
success
åå 
=
åå 
true
åå 
;
åå  
output
çç 
.
çç 

EndSection
çç 
(
çç 
title
çç #
,
çç# $
success
çç% ,
)
çç, -
;
çç- .
}
éé 	
public
êê 
static
êê 
void
êê 
ListKeyVarchar
êê )
(
êê) *
)
êê* +
{
ëë 	

IKBService
íí 
kbserv
íí 
=
íí 

UIServices
íí  *
.
íí* +
KB
íí+ -
;
íí- .
string
îî 
title
îî 
=
îî 
$str
îî \
;
îî\ ]
string
ïï 

outputFile
ïï 
=
ïï 
	Functions
ïï  )
.
ïï) *
CreateOutputFile
ïï* :
(
ïï: ;
kbserv
ïï; A
,
ïïA B
title
ïïC H
)
ïïH I
;
ïïI J
IOutputService
óó 
output
óó !
=
óó" #
CommonServices
óó$ 2
.
óó2 3
Output
óó3 9
;
óó9 :
output
òò 
.
òò 
StartSection
òò 
(
òò  
title
òò  %
)
òò% &
;
òò& '
KBDoctorXMLWriter
öö 
writer
öö $
=
öö% &
new
öö' *
KBDoctorXMLWriter
öö+ <
(
öö< =

outputFile
öö= G
,
ööG H
Encoding
ööI Q
.
ööQ R
UTF8
ööR V
)
ööV W
;
ööW X
writer
õõ 
.
õõ 
	AddHeader
õõ 
(
õõ 
title
õõ "
)
õõ" #
;
õõ# $
writer
úú 
.
úú 
AddTableHeader
úú !
(
úú! "
new
úú" %
string
úú& ,
[
úú, -
]
úú- .
{
úú/ 0
$str
úú1 <
,
úú< =
$str
úú> K
,
úúK L
$str
úúM X
,
úúX Y
$str
úúZ b
,
úúb c
$str
úúd l
}
úúm n
)
úún o
;
úúo p
foreach
ûû 
(
ûû 
Table
ûû 
t
ûû 
in
ûû 
Table
ûû  %
.
ûû% &
GetAll
ûû& ,
(
ûû, -
kbserv
ûû- 3
.
ûû3 4
CurrentModel
ûû4 @
)
ûû@ A
)
ûûA B
{
üü 
output
†† 
.
†† 
AddLine
†† 
(
†† 
$str
†† /
+
††0 1
t
††2 3
.
††3 4
Name
††4 8
)
††8 9
;
††9 :
string
°° 
objNameLink
°° "
=
°°# $
	Functions
°°% .
.
°°. /

linkObject
°°/ 9
(
°°9 :
t
°°: ;
)
°°; <
;
°°< =
foreach
§§ 
(
§§ 
TableAttribute
§§ '
attr
§§( ,
in
§§- /
t
§§0 1
.
§§1 2
TableStructure
§§2 @
.
§§@ A

PrimaryKey
§§A K
)
§§K L
{
•• 
if
¶¶ 
(
¶¶ 
(
¶¶ 
attr
¶¶ 
.
¶¶ 
	Attribute
¶¶ '
.
¶¶' (
Type
¶¶( ,
==
¶¶- /
Artech
¶¶0 6
.
¶¶6 7
Genexus
¶¶7 >
.
¶¶> ?
Common
¶¶? E
.
¶¶E F
eDBType
¶¶F M
.
¶¶M N
VARCHAR
¶¶N U
)
¶¶U V
||
¶¶W Y
(
¶¶Z [
attr
¶¶[ _
.
¶¶_ `
	Attribute
¶¶` i
.
¶¶i j
Type
¶¶j n
==
¶¶o q
Artech
¶¶r x
.
¶¶x y
Genexus¶¶y Ä
.¶¶Ä Å
Common¶¶Å á
.¶¶á à
eDBType¶¶à è
.¶¶è ê
LONGVARCHAR¶¶ê õ
)¶¶õ ú
)¶¶ú ù
{
ßß 
output
®® 
.
®® 
AddLine
®® &
(
®®& '
$str
®®' 4
+
®®5 6
attr
®®7 ;
.
®®; <
Name
®®< @
)
®®@ A
;
®®A B
if
©© 
(
©© 
!
©© 
	Functions
©© &
.
©©& '
AttIsSubtype
©©' 3
(
©©3 4
attr
©©4 8
)
©©8 9
)
©©9 :
{
™™ 
string
´´ "
domLink
´´# *
=
´´+ ,%
DomainLinkFromAttribute
´´- D
(
´´D E
attr
´´E I
)
´´I J
;
´´J K
string
¨¨ "
attNameLink
¨¨# .
=
¨¨/ 0
	Functions
¨¨1 :
.
¨¨: ;

linkObject
¨¨; E
(
¨¨E F
attr
¨¨F J
)
¨¨J K
;
¨¨K L
string
≠≠ "
Picture
≠≠# *
=
≠≠+ ,
	Functions
≠≠- 6
.
≠≠6 7
ReturnPicture
≠≠7 D
(
≠≠D E
attr
≠≠E I
)
≠≠I J
;
≠≠J K
writer
ÆÆ "
.
ÆÆ" #
AddTableData
ÆÆ# /
(
ÆÆ/ 0
new
ÆÆ0 3
string
ÆÆ4 :
[
ÆÆ: ;
]
ÆÆ; <
{
ÆÆ= >
attNameLink
ÆÆ? J
,
ÆÆJ K
attr
ÆÆL P
.
ÆÆP Q
	Attribute
ÆÆQ Z
.
ÆÆZ [
Description
ÆÆ[ f
,
ÆÆf g
Picture
ÆÆh o
,
ÆÆo p
domLink
ÆÆq x
,
ÆÆx y
t
ÆÆz {
.
ÆÆ{ |
NameÆÆ| Ä
}ÆÆÅ Ç
)ÆÆÇ É
;ÆÆÉ Ñ
}
ØØ 
}
∞∞ 
}
±± 
}
≤≤ 
writer
¥¥ 
.
¥¥ 
	AddFooter
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥ 
writer
µµ 
.
µµ 
Close
µµ 
(
µµ 
)
µµ 
;
µµ 
KBDoctorHelper
∑∑ 
.
∑∑ !
ShowKBDoctorResults
∑∑ .
(
∑∑. /

outputFile
∑∑/ 9
)
∑∑9 :
;
∑∑: ;
bool
∏∏ 
success
∏∏ 
=
∏∏ 
true
∏∏ 
;
∏∏  
output
ππ 
.
ππ 

EndSection
ππ 
(
ππ 
title
ππ #
,
ππ# $
success
ππ% ,
)
ππ, -
;
ππ- .
}
ªª 	
public
øø 
static
øø 
void
øø +
ListAttDescWithoutUniqueIndex
øø 8
(
øø8 9
)
øø9 :
{
¿¿ 	

IKBService
¡¡ 
kbserv
¡¡ 
=
¡¡ 

UIServices
¡¡  *
.
¡¡* +
KB
¡¡+ -
;
¡¡- .
string
√√ 
title
√√ 
=
√√ 
$str
√√ Q
;
√√Q R
string
ƒƒ 

outputFile
ƒƒ 
=
ƒƒ 
	Functions
ƒƒ  )
.
ƒƒ) *
CreateOutputFile
ƒƒ* :
(
ƒƒ: ;
kbserv
ƒƒ; A
,
ƒƒA B
title
ƒƒC H
)
ƒƒH I
;
ƒƒI J
IOutputService
«« 
output
«« !
=
««" #
CommonServices
««$ 2
.
««2 3
Output
««3 9
;
««9 :
output
»» 
.
»» 
StartSection
»» 
(
»»  
title
»»  %
)
»»% &
;
»»& '
string
   
tabla
   
=
   
$str
   
;
   
string
ÀÀ 
atributo
ÀÀ 
=
ÀÀ 
$str
ÀÀ  
;
ÀÀ  !
string
ÃÃ 
add
ÃÃ 
=
ÃÃ 
$str
ÃÃ 
;
ÃÃ 
KBDoctorXMLWriter
œœ 
writer
œœ $
=
œœ% &
new
œœ' *
KBDoctorXMLWriter
œœ+ <
(
œœ< =

outputFile
œœ= G
,
œœG H
Encoding
œœI Q
.
œœQ R
UTF8
œœR V
)
œœV W
;
œœW X
writer
–– 
.
–– 
	AddHeader
–– 
(
–– 
title
–– "
)
––" #
;
––# $
writer
—— 
.
—— 
AddTableHeader
—— !
(
——! "
new
——" %
string
——& ,
[
——, -
]
——- .
{
——/ 0
$str
——1 8
,
——8 9
$str
——: G
,
——G H
$str
——I T
,
——T U
$str
——V a
,
——a b
$str
——c e
}
——f g
)
——g h
;
——h i
foreach
‘‘ 
(
‘‘ 
Table
‘‘ 
t
‘‘ 
in
‘‘ 
Table
‘‘  %
.
‘‘% &
GetAll
‘‘& ,
(
‘‘, -
kbserv
‘‘- 3
.
‘‘3 4
CurrentModel
‘‘4 @
)
‘‘@ A
)
‘‘A B
{
’’ 
int
◊◊ 
	idAttDesc
◊◊ 
=
◊◊ 
t
◊◊  !
.
◊◊! "
TableStructure
◊◊" 0
.
◊◊0 1"
DescriptionAttribute
◊◊1 E
.
◊◊E F
Id
◊◊F H
;
◊◊H I
bool
ÿÿ 
existeIndice
ÿÿ !
=
ÿÿ" #
false
ÿÿ$ )
;
ÿÿ) *
tabla
⁄⁄ 
=
⁄⁄ 
t
⁄⁄ 
.
⁄⁄ 
Name
⁄⁄ 
+
⁄⁄  
$str
⁄⁄! &
+
⁄⁄' (
t
⁄⁄) *
.
⁄⁄* +
Description
⁄⁄+ 6
;
⁄⁄6 7
atributo
€€ 
=
€€ 
t
€€ 
.
€€ 
TableStructure
€€ +
.
€€+ ,"
DescriptionAttribute
€€, @
.
€€@ A
Name
€€A E
;
€€E F
foreach
›› 
(
›› 

TableIndex
›› #
index
››$ )
in
››* ,
t
››- .
.
››. /
TableIndexes
››/ ;
.
››; <
Indexes
››< C
)
››C D
{
ﬁﬁ 
int
ﬂﬂ 
nroAtributos
ﬂﬂ $
=
ﬂﬂ% &
$num
ﬂﬂ' (
;
ﬂﬂ( )
bool
‡‡ 
esta
‡‡ 
=
‡‡ 
false
‡‡  %
;
‡‡% &
foreach
·· 
(
·· 
EntityReference
·· ,
	reference
··- 6
in
··7 9
index
··: ?
.
··? @
Index
··@ E
.
··E F
GetReferences
··F S
(
··S T
LinkType
··T \
.
··\ ]

UsedObject
··] g
)
··g h
)
··h i
{
‚‚ 
if
„„ 
(
„„ 
!
„„ 
existeIndice
„„ )
)
„„) *
{
‰‰ 
KBObject
ÂÂ $
objRef
ÂÂ% +
=
ÂÂ, -
KBObject
ÂÂ. 6
.
ÂÂ6 7
Get
ÂÂ7 :
(
ÂÂ: ;
kbserv
ÂÂ; A
.
ÂÂA B
CurrentModel
ÂÂB N
,
ÂÂN O
	reference
ÂÂP Y
.
ÂÂY Z
To
ÂÂZ \
)
ÂÂ\ ]
;
ÂÂ] ^
if
ÊÊ 
(
ÊÊ  
objRef
ÊÊ  &
is
ÊÊ' )
Artech
ÊÊ* 0
.
ÊÊ0 1
Genexus
ÊÊ1 8
.
ÊÊ8 9
Common
ÊÊ9 ?
.
ÊÊ? @
Objects
ÊÊ@ G
.
ÊÊG H
	Attribute
ÊÊH Q
)
ÊÊQ R
{
ÁÁ 
if
ËË  "
(
ËË# $
objRef
ËË$ *
.
ËË* +
Id
ËË+ -
==
ËË. 0
	idAttDesc
ËË1 :
)
ËË: ;
esta
ÈÈ$ (
=
ÈÈ) *
true
ÈÈ+ /
;
ÈÈ/ 0
nroAtributos
ÍÍ  ,
=
ÍÍ- .
nroAtributos
ÍÍ/ ;
+
ÍÍ< =
$num
ÍÍ> ?
;
ÍÍ? @
}
ÎÎ 
if
ÏÏ 
(
ÏÏ  
(
ÏÏ  !
esta
ÏÏ! %
)
ÏÏ% &
&&
ÏÏ' )
(
ÏÏ* +
nroAtributos
ÏÏ+ 7
==
ÏÏ8 :
$num
ÏÏ; <
)
ÏÏ< =
)
ÏÏ= >
existeIndice
ÌÌ  ,
=
ÌÌ- .
true
ÌÌ/ 3
;
ÌÌ3 4
}
ÓÓ 
}
ÔÔ 
}
ÒÒ 
if
ÚÚ 
(
ÚÚ 
!
ÚÚ 
existeIndice
ÚÚ !
)
ÚÚ! "
{
ÛÛ 
add
ÙÙ 
=
ÙÙ 
$str
ÙÙ t
+
ÙÙu v
t
ÙÙw x
.
ÙÙx y
Name
ÙÙy }
+
ÙÙ~ 
$strÙÙÄ í
;ÙÙí ì
writer
ıı 
.
ıı 
AddTableData
ıı '
(
ıı' (
new
ıı( +
string
ıı, 2
[
ıı2 3
]
ıı3 4
{
ıı5 6
	Functions
ıı7 @
.
ıı@ A

linkObject
ııA K
(
ııK L
(
ııL M
KBObject
ııM U
)
ııU V
t
ııV W
)
ııW X
,
ııX Y
t
ııZ [
.
ıı[ \
Description
ıı\ g
,
ııg h
atributo
ııi q
,
ııq r
	Functions
ııs |
.
ıı| }
ReturnPictureıı} ä
(ııä ã
tııã å
.ııå ç
TableStructureııç õ
.ııõ ú$
DescriptionAttributeııú ∞
.ıı∞ ±
	Attributeıı± ∫
)ıı∫ ª
,ııª º
addııΩ ¿
}ıı¡ ¬
)ıı¬ √
;ıı√ ƒ
}
ˆˆ 
}
˘˘ 
writer
˚˚ 
.
˚˚ 
	AddFooter
˚˚ 
(
˚˚ 
)
˚˚ 
;
˚˚ 
writer
¸¸ 
.
¸¸ 
Close
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
KBDoctorHelper
˛˛ 
.
˛˛ !
ShowKBDoctorResults
˛˛ .
(
˛˛. /

outputFile
˛˛/ 9
)
˛˛9 :
;
˛˛: ;
bool
ˇˇ 
success
ˇˇ 
=
ˇˇ 
true
ˇˇ 
;
ˇˇ  
output
ÄÄ 
.
ÄÄ 

EndSection
ÄÄ 
(
ÄÄ 
title
ÄÄ #
,
ÄÄ# $
success
ÄÄ% ,
)
ÄÄ, -
;
ÄÄ- .
}
ÇÇ 	
public
ÑÑ 
static
ÑÑ 
void
ÑÑ %
AssignDomainToAttribute
ÑÑ 2
(
ÑÑ2 3
object
ÑÑ3 9
[
ÑÑ9 :
]
ÑÑ: ;

parameters
ÑÑ< F
)
ÑÑF G
{
ÖÖ 	
foreach
ÜÜ 
(
ÜÜ 
object
ÜÜ 
o
ÜÜ 
in
ÜÜ  

parameters
ÜÜ! +
)
ÜÜ+ ,
{
áá 

Dictionary
àà 
<
àà 
string
àà !
,
àà! "
string
àà# )
>
àà) *
dic
àà+ .
=
àà/ 0
(
àà1 2

Dictionary
àà2 <
<
àà< =
string
àà= C
,
ààC D
string
ààE K
>
ààK L
)
ààL M
o
ààM N
;
ààN O
int
ââ 
cant
ââ 
=
ââ 
$num
ââ 
;
ââ 
string
ãã 
attName
ãã 
=
ãã  
$str
ãã! #
;
ãã# $
string
åå 

domainName
åå !
=
åå" #
$str
åå$ &
;
åå& '
foreach
éé 
(
éé 
string
éé 
s
éé  !
in
éé" $
dic
éé% (
.
éé( )
Values
éé) /
)
éé/ 0
{
èè 
switch
êê 
(
êê 
cant
êê  
)
êê  !
{
ëë 
case
íí 
$num
íí 
:
íí 
attName
ìì #
=
ìì$ %
s
ìì& '
;
ìì' (
break
îî !
;
îî! "
case
ïï 
$num
ïï 
:
ïï 

domainName
ññ &
=
ññ' (
s
ññ) *
;
ññ* +
break
óó !
;
óó! "
default
òò 
:
òò  
break
ôô !
;
ôô! "
}
öö 
cant
õõ 
++
õõ 
;
õõ 
if
ùù 
(
ùù 
(
ùù 
attName
ùù  
!=
ùù! #
$str
ùù$ &
)
ùù& '
&&
ùù( *
(
ùù+ ,

domainName
ùù, 6
!=
ùù7 9
$str
ùù: <
)
ùù< =
)
ùù= >
{
ûû 
Artech
üü 
.
üü 
Genexus
üü &
.
üü& '
Common
üü' -
.
üü- .
Objects
üü. 5
.
üü5 6
	Attribute
üü6 ?
a
üü@ A
=
üüB C
Artech
üüD J
.
üüJ K
Genexus
üüK R
.
üüR S
Common
üüS Y
.
üüY Z
Objects
üüZ a
.
üüa b
	Attribute
üüb k
.
üük l
Get
üül o
(
üüo p

UIServices
üüp z
.
üüz {
KB
üü{ }
.
üü} ~
CurrentModelüü~ ä
,üüä ã
attNameüüå ì
)üüì î
;üüî ï
Domain
†† 
d
††  
=
††! "
	Functions
††# ,
.
††, -
DomainByName
††- 9
(
††9 :

domainName
††: D
)
††D E
;
††E F
a
¢¢ 
.
¢¢ 
DomainBasedOn
¢¢ '
=
¢¢( )
d
¢¢* +
;
¢¢+ ,
a
££ 
.
££ 
Save
££ 
(
££ 
)
££  
;
££  !
}
§§ 
}
•• 
}
¶¶ 
}
ßß 	
public
©© 
static
©© 
void
©© *
AssignDescriptionToAttribute
©© 7
(
©©7 8
object
©©8 >
[
©©> ?
]
©©? @

parameters
©©A K
,
©©K L
int
©©M P
descriptionToSet
©©Q a
)
©©a b
{
™™ 	
foreach
´´ 
(
´´ 
object
´´ 
o
´´ 
in
´´  

parameters
´´! +
)
´´+ ,
{
¨¨ 

Dictionary
≠≠ 
<
≠≠ 
string
≠≠ !
,
≠≠! "
string
≠≠# )
>
≠≠) *
dic
≠≠+ .
=
≠≠/ 0
(
≠≠1 2

Dictionary
≠≠2 <
<
≠≠< =
string
≠≠= C
,
≠≠C D
string
≠≠E K
>
≠≠K L
)
≠≠L M
o
≠≠M N
;
≠≠N O
int
ÆÆ 
cant
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
string
∞∞ 
attName
∞∞ 
=
∞∞  
$str
∞∞! #
;
∞∞# $
string
±± 
mensaje
±± 
=
±±  
$str
±±! #
;
±±# $
PromptDescription
≤≤ !
pd
≤≤" $
;
≤≤$ %
DialogResult
≥≥ 
dr
≥≥ 
;
≥≥  
foreach
µµ 
(
µµ 
string
µµ 
s
µµ  !
in
µµ" $
dic
µµ% (
.
µµ( )
Values
µµ) /
)
µµ/ 0
{
∂∂ 
if
∑∑ 
(
∑∑ 
cant
∑∑ 
==
∑∑ 
$num
∑∑  !
)
∑∑! "
{
∏∏ 
attName
ππ 
=
ππ  !
s
ππ" #
;
ππ# $
switch
∫∫ 
(
∫∫  
descriptionToSet
∫∫  0
)
∫∫0 1
{
ªª 
case
ºº  
$num
ºº! "
:
ºº" #
mensaje
ΩΩ  '
=
ΩΩ( )
$str
ΩΩ* M
+
ΩΩN O
attName
ΩΩP W
;
ΩΩW X
break
ææ  %
;
ææ% &
case
øø  
$num
øø! "
:
øø" #
mensaje
¿¿  '
=
¿¿( )
$str
¿¿* G
+
¿¿H I
attName
¿¿J Q
;
¿¿Q R
break
¡¡  %
;
¡¡% &
case
¬¬  
$num
¬¬! "
:
¬¬" #
mensaje
√√  '
=
√√( )
$str
√√* N
+
√√O P
attName
√√Q X
;
√√X Y
break
ƒƒ  %
;
ƒƒ% &
}
≈≈ 
pd
«« 
=
«« 
new
««  
PromptDescription
««! 2
(
««2 3
mensaje
««3 :
)
««: ;
;
««; <
dr
»» 
=
»» 
pd
»» 
.
»»  

ShowDialog
»»  *
(
»»* +
)
»»+ ,
;
»», -
if
   
(
   
dr
   
==
   !
DialogResult
  " .
.
  . /
OK
  / 1
)
  1 2
{
ÀÀ 
Artech
ÃÃ "
.
ÃÃ" #
Genexus
ÃÃ# *
.
ÃÃ* +
Common
ÃÃ+ 1
.
ÃÃ1 2
Objects
ÃÃ2 9
.
ÃÃ9 :
	Attribute
ÃÃ: C
a
ÃÃD E
=
ÃÃF G
Artech
ÃÃH N
.
ÃÃN O
Genexus
ÃÃO V
.
ÃÃV W
Common
ÃÃW ]
.
ÃÃ] ^
Objects
ÃÃ^ e
.
ÃÃe f
	Attribute
ÃÃf o
.
ÃÃo p
Get
ÃÃp s
(
ÃÃs t

UIServices
ÃÃt ~
.
ÃÃ~ 
KBÃÃ Å
.ÃÃÅ Ç
CurrentModelÃÃÇ é
,ÃÃé è
attNameÃÃê ó
)ÃÃó ò
;ÃÃò ô
switch
ÕÕ "
(
ÕÕ# $
descriptionToSet
ÕÕ$ 4
)
ÕÕ4 5
{
ŒŒ 
case
œœ  $
$num
œœ% &
:
œœ& '
a
––$ %
.
––% &
Description
––& 1
=
––2 3
pd
––4 6
.
––6 7
Description
––7 B
;
––B C
break
——$ )
;
——) *
case
““  $
$num
““% &
:
““& '
a
””$ %
.
””% &
Title
””& +
=
””, -
pd
””. 0
.
””0 1
Description
””1 <
;
””< =
break
‘‘$ )
;
‘‘) *
case
’’  $
$num
’’% &
:
’’& '
a
÷÷$ %
.
÷÷% &
ColumnTitle
÷÷& 1
=
÷÷2 3
pd
÷÷4 6
.
÷÷6 7
Description
÷÷7 B
;
÷÷B C
break
◊◊$ )
;
◊◊) *
}
ÿÿ 
a
ŸŸ 
.
ŸŸ 
Save
ŸŸ "
(
ŸŸ" #
)
ŸŸ# $
;
ŸŸ$ %
}
⁄⁄ 
}
€€ 
cant
›› 
++
›› 
;
›› 
}
ﬁﬁ 
}
ﬂﬂ 
}
‡‡ 	
public
„„ 
static
„„ 
void
„„  
AddDescriptorIndex
„„ -
(
„„- .
object
„„. 4
[
„„4 5
]
„„5 6

parameters
„„7 A
)
„„A B
{
‰‰ 	
foreach
ÂÂ 
(
ÂÂ 
object
ÂÂ 
o
ÂÂ 
in
ÂÂ  

parameters
ÂÂ! +
)
ÂÂ+ ,
{
ÊÊ 

Dictionary
ÁÁ 
<
ÁÁ 
string
ÁÁ !
,
ÁÁ! "
string
ÁÁ# )
>
ÁÁ) *
dic
ÁÁ+ .
=
ÁÁ/ 0
(
ÁÁ1 2

Dictionary
ÁÁ2 <
<
ÁÁ< =
string
ÁÁ= C
,
ÁÁC D
string
ÁÁE K
>
ÁÁK L
)
ÁÁL M
o
ÁÁM N
;
ÁÁN O
int
ËË 
cant
ËË 
=
ËË 
$num
ËË 
;
ËË 
string
ÍÍ 
tabName
ÍÍ 
=
ÍÍ  
$str
ÍÍ! #
;
ÍÍ# $
foreach
ÏÏ 
(
ÏÏ 
string
ÏÏ 
s
ÏÏ  !
in
ÏÏ" $
dic
ÏÏ% (
.
ÏÏ( )
Values
ÏÏ) /
)
ÏÏ/ 0
{
ÌÌ 
if
ÓÓ 
(
ÓÓ 
cant
ÓÓ 
==
ÓÓ 
$num
ÓÓ  !
)
ÓÓ! "
{
ÔÔ 
tabName
 
=
  !
s
" #
;
# $
}
ÒÒ 
cant
ÛÛ 
++
ÛÛ 
;
ÛÛ 
}
ÙÙ 

IKBService
ÄÄ 
kbserv
ÄÄ !
=
ÄÄ" #

UIServices
ÄÄ$ .
.
ÄÄ. /
KB
ÄÄ/ 1
;
ÄÄ1 2
Artech
ÇÇ 
.
ÇÇ 
Genexus
ÇÇ 
.
ÇÇ 
Common
ÇÇ %
.
ÇÇ% &
Objects
ÇÇ& -
.
ÇÇ- .
Index
ÇÇ. 3
i
ÇÇ4 5
=
ÇÇ6 7
Artech
ÇÇ8 >
.
ÇÇ> ?
Genexus
ÇÇ? F
.
ÇÇF G
Common
ÇÇG M
.
ÇÇM N
Objects
ÇÇN U
.
ÇÇU V
Index
ÇÇV [
.
ÇÇ[ \
Create
ÇÇ\ b
(
ÇÇb c
kbserv
ÇÇc i
.
ÇÇi j
CurrentModel
ÇÇj v
)
ÇÇv w
;
ÇÇw x
try
ÉÉ 
{
ÑÑ 
Table
ÖÖ 
t
ÖÖ 
=
ÖÖ 
Table
ÖÖ #
.
ÖÖ# $
Get
ÖÖ$ '
(
ÖÖ' (
kbserv
ÖÖ( .
.
ÖÖ. /
CurrentModel
ÖÖ/ ;
,
ÖÖ; <
tabName
ÖÖ= D
)
ÖÖD E
;
ÖÖE F
if
ÜÜ 
(
ÜÜ 
t
ÜÜ 
!=
ÜÜ 
null
ÜÜ !
)
ÜÜ! "
{
áá 
Artech
àà 
.
àà 
Genexus
àà &
.
àà& '
Common
àà' -
.
àà- .
Objects
àà. 5
.
àà5 6
	Attribute
àà6 ?
descAtt
àà@ G
=
ààH I
t
ààJ K
.
ààK L
TableStructure
ààL Z
.
ààZ ["
DescriptionAttribute
àà[ o
.
àào p
	Attribute
ààp y
;
àày z
if
ââ 
(
ââ 
descAtt
ââ #
!=
ââ$ &
null
ââ' +
)
ââ+ ,
{
ãã 
i
åå 
.
åå 
Name
åå "
=
åå# $
t
åå% &
.
åå& '
Name
åå' +
+
åå, -
$str
åå. 1
+
åå2 3
descAtt
åå4 ;
.
åå; <
Name
åå< @
;
åå@ A
i
çç 
.
çç 
	IndexType
çç '
=
çç( )
Artech
çç* 0
.
çç0 1
Genexus
çç1 8
.
çç8 9
Common
çç9 ?
.
çç? @
	IndexType
çç@ I
.
ççI J
Unique
ççJ P
;
ççP Q
i
éé 
.
éé 
Source
éé $
=
éé% &
IndexSource
éé' 2
.
éé2 3
User
éé3 7
;
éé7 8
i
èè 
.
èè 
Description
èè )
=
èè* +
$str
èè, >
;
èè> ?
IndexMember
ëë '
	idxMember
ëë( 1
=
ëë2 3
new
ëë4 7
IndexMember
ëë8 C
(
ëëC D
i
ëëD E
.
ëëE F
IndexStructure
ëëF T
)
ëëT U
;
ëëU V
	idxMember
íí %
.
íí% &
	Attribute
íí& /
=
íí0 1
t
íí2 3
.
íí3 4
TableStructure
íí4 B
.
ííB C"
DescriptionAttribute
ííC W
.
ííW X
	Attribute
ííX a
;
íía b
	idxMember
ìì %
.
ìì% &
Order
ìì& +
=
ìì, -

IndexOrder
ìì. 8
.
ìì8 9
	Ascending
ìì9 B
;
ììB C
i
îî 
.
îî 
IndexStructure
îî ,
.
îî, -
Members
îî- 4
.
îî4 5
Add
îî5 8
(
îî8 9
	idxMember
îî9 B
)
îîB C
;
îîC D
t
óó 
.
óó 
TableIndexes
óó *
.
óó* +
Indexes
óó+ 2
.
óó2 3
Add
óó3 6
(
óó6 7
new
óó7 :

TableIndex
óó; E
(
óóE F
t
óóF G
.
óóG H
TableIndexes
óóH T
,
óóT U
i
óóV W
)
óóW X
)
óóX Y
;
óóY Z
t
òò 
.
òò 
Save
òò "
(
òò" #
)
òò# $
;
òò$ %

MessageBox
ôô &
.
ôô& '
Show
ôô' +
(
ôô+ ,
$str
ôô, 4
+
ôô5 6
i
ôô7 8
.
ôô8 9
Name
ôô9 =
+
ôô> ?
$str
ôô@ \
)
ôô\ ]
;
ôô] ^
}
öö 
}
úú 
}
ùù 
catch
ûû 
(
ûû 
GxException
ûû "
gxe
ûû# &
)
ûû& '
{
üü 

MessageBox
†† 
.
†† 
Show
†† #
(
††# $
gxe
††$ '
.
††' (
Message
††( /
,
††/ 0
$str
††1 I
,
††I J
MessageBoxButtons
††K \
.
††\ ]
OK
††] _
,
††_ `
MessageBoxIcon
††a o
.
††o p
Warning
††p w
)
††w x
;
††x y
}
°° 
}
££ 
}
§§ 	
public
¶¶ 
static
¶¶ 
void
¶¶ 
AttInOneTrnOnly
¶¶ *
(
¶¶* +
)
¶¶+ ,
{
ßß 	

IKBService
®® 
kbserv
®® 
=
®® 

UIServices
®®  *
.
®®* +
KB
®®+ -
;
®®- .
string
™™ 
title
™™ 
=
™™ 
$str
™™ F
;
™™F G
string
´´ 

outputFile
´´ 
=
´´ 
	Functions
´´  )
.
´´) *
CreateOutputFile
´´* :
(
´´: ;
kbserv
´´; A
,
´´A B
title
´´C H
)
´´H I
;
´´I J
IOutputService
ÆÆ 
output
ÆÆ !
=
ÆÆ" #
CommonServices
ÆÆ$ 2
.
ÆÆ2 3
Output
ÆÆ3 9
;
ÆÆ9 :
output
ØØ 
.
ØØ 
StartSection
ØØ 
(
ØØ  
title
ØØ  %
)
ØØ% &
;
ØØ& '
KBDoctorXMLWriter
≤≤ 
writer
≤≤ $
=
≤≤% &
new
≤≤' *
KBDoctorXMLWriter
≤≤+ <
(
≤≤< =

outputFile
≤≤= G
,
≤≤G H
Encoding
≤≤I Q
.
≤≤Q R
UTF8
≤≤R V
)
≤≤V W
;
≤≤W X
writer
≥≥ 
.
≥≥ 
	AddHeader
≥≥ 
(
≥≥ 
title
≥≥ "
)
≥≥" #
;
≥≥# $
writer
¥¥ 
.
¥¥ 
AddTableHeader
¥¥ !
(
¥¥! "
new
¥¥" %
string
¥¥& ,
[
¥¥, -
]
¥¥- .
{
¥¥/ 0
$str
¥¥1 <
,
¥¥< =
$str
¥¥> J
,
¥¥J K
$str
¥¥L Y
,
¥¥Y Z
$str
¥¥[ f
,
¥¥f g
$str
¥¥h p
,
¥¥p q
$str¥¥r Ä
}¥¥Å Ç
)¥¥Ç É
;¥¥É Ñ
output
∑∑ 
.
∑∑ 
AddLine
∑∑ 
(
∑∑ 
$str
∑∑ 1
)
∑∑1 2
;
∑∑2 3
List
∏∏ 
<
∏∏ 
Artech
∏∏ 
.
∏∏ 
Genexus
∏∏ 
.
∏∏  
Common
∏∏  &
.
∏∏& '
Objects
∏∏' .
.
∏∏. /
	Attribute
∏∏/ 8
>
∏∏8 9
attTodos
∏∏: B
=
∏∏C D
new
∏∏E H
List
∏∏I M
<
∏∏M N
Artech
∏∏N T
.
∏∏T U
Genexus
∏∏U \
.
∏∏\ ]
Common
∏∏] c
.
∏∏c d
Objects
∏∏d k
.
∏∏k l
	Attribute
∏∏l u
>
∏∏u v
(
∏∏v w
)
∏∏w x
;
∏∏x y
foreach
ππ 
(
ππ 
Artech
ππ 
.
ππ 
Genexus
ππ #
.
ππ# $
Common
ππ$ *
.
ππ* +
Objects
ππ+ 2
.
ππ2 3
	Attribute
ππ3 <
a
ππ= >
in
ππ? A
Artech
ππB H
.
ππH I
Genexus
ππI P
.
ππP Q
Common
ππQ W
.
ππW X
Objects
ππX _
.
ππ_ `
	Attribute
ππ` i
.
ππi j
GetAll
ππj p
(
ππp q
kbserv
ππq w
.
ππw x
CurrentModelππx Ñ
)ππÑ Ö
)ππÖ Ü
{
∫∫ 
attTodos
ªª 
.
ªª 
Add
ªª 
(
ªª 
a
ªª 
)
ªª 
;
ªª  
}
ºº 
output
ææ 
.
ææ 
AddLine
ææ 
(
ææ 
$str
ææ 1
)
ææ1 2
;
ææ2 3
foreach
¿¿ 
(
¿¿ 
KBObject
¿¿ 
obj
¿¿ !
in
¿¿" $
kbserv
¿¿% +
.
¿¿+ ,
CurrentModel
¿¿, 8
.
¿¿8 9
Objects
¿¿9 @
.
¿¿@ A
GetAll
¿¿A G
(
¿¿G H
)
¿¿H I
)
¿¿I J
{
¡¡ 
if
ƒƒ 
(
ƒƒ 
(
ƒƒ 
!
ƒƒ 
(
ƒƒ 
obj
ƒƒ 
is
ƒƒ 
Transaction
ƒƒ )
)
ƒƒ) *
&&
ƒƒ+ -
!
ƒƒ. /
(
ƒƒ/ 0
obj
ƒƒ0 3
is
ƒƒ4 6
Table
ƒƒ7 <
)
ƒƒ< =
&&
ƒƒ> @
!
ƒƒA B
(
ƒƒB C
obj
ƒƒC F
is
ƒƒG I
SDT
ƒƒJ M
)
ƒƒM N
)
ƒƒN O
||
ƒƒP R
obj
ƒƒS V
.
ƒƒV W
GetPropertyValue
ƒƒW g
<
ƒƒg h
bool
ƒƒh l
>
ƒƒl m
(
ƒƒm n
$strƒƒn Ö
)ƒƒÖ Ü
)ƒƒÜ á
{
≈≈ 
foreach
∆∆ 
(
∆∆ 
EntityReference
∆∆ ,
	reference
∆∆- 6
in
∆∆7 9
obj
∆∆: =
.
∆∆= >
GetReferences
∆∆> K
(
∆∆K L
LinkType
∆∆L T
.
∆∆T U

UsedObject
∆∆U _
)
∆∆_ `
)
∆∆` a
{
«« 
KBObject
»»  
objRef
»»! '
=
»»( )
KBObject
»»* 2
.
»»2 3
Get
»»3 6
(
»»6 7
kbserv
»»7 =
.
»»= >
CurrentModel
»»> J
,
»»J K
	reference
»»L U
.
»»U V
To
»»V X
)
»»X Y
;
»»Y Z
if
…… 
(
…… 
objRef
…… "
is
……# %
Artech
……& ,
.
……, -
Genexus
……- 4
.
……4 5
Common
……5 ;
.
……; <
Objects
……< C
.
……C D
	Attribute
……D M
)
……M N
{
   
Artech
ÀÀ "
.
ÀÀ" #
Genexus
ÀÀ# *
.
ÀÀ* +
Common
ÀÀ+ 1
.
ÀÀ1 2
Objects
ÀÀ2 9
.
ÀÀ9 :
	Attribute
ÀÀ: C
a
ÀÀD E
=
ÀÀF G
(
ÀÀH I
Artech
ÀÀI O
.
ÀÀO P
Genexus
ÀÀP W
.
ÀÀW X
Common
ÀÀX ^
.
ÀÀ^ _
Objects
ÀÀ_ f
.
ÀÀf g
	Attribute
ÀÀg p
)
ÀÀp q
objRef
ÀÀq w
;
ÀÀw x
attTodos
ÃÃ $
.
ÃÃ$ %
Remove
ÃÃ% +
(
ÃÃ+ ,
a
ÃÃ, -
)
ÃÃ- .
;
ÃÃ. /
}
ÕÕ 
}
ŒŒ 
}
œœ 
}
–– 
foreach
”” 
(
”” 
Artech
”” 
.
”” 
Genexus
”” #
.
””# $
Common
””$ *
.
””* +
Objects
””+ 2
.
””2 3
	Attribute
””3 <
a
””= >
in
””? A
attTodos
””B J
)
””J K
{
‘‘ 
output
’’ 
.
’’ 
AddLine
’’ 
(
’’ 
$str
’’ .
+
’’/ 0
a
’’1 2
.
’’2 3
Name
’’3 7
)
’’7 8
;
’’8 9
string
◊◊ 
attNameLink
◊◊ "
=
◊◊# $
	Functions
◊◊% .
.
◊◊. /

linkObject
◊◊/ 9
(
◊◊9 :
a
◊◊: ;
)
◊◊; <
;
◊◊< =
string
ÿÿ 
Picture
ÿÿ 
=
ÿÿ  
	Functions
ÿÿ! *
.
ÿÿ* +
ReturnPicture
ÿÿ+ 8
(
ÿÿ8 9
a
ÿÿ9 :
)
ÿÿ: ;
;
ÿÿ; <
string
ŸŸ 
table
ŸŸ 
=
ŸŸ 

TableOfAtt
ŸŸ )
(
ŸŸ) *
a
ŸŸ* +
)
ŸŸ+ ,
;
ŸŸ, -
bool
⁄⁄ 
	canDelete
⁄⁄ 
;
⁄⁄ 
string
€€ 
trns
€€ 
=
€€ 
TransactionsOfAtt
€€ /
(
€€/ 0
a
€€0 1
,
€€1 2
out
€€3 6
	canDelete
€€7 @
)
€€@ A
;
€€A B
string
‹‹ 
strCanDelete
‹‹ #
=
‹‹$ %
	canDelete
‹‹& /
?
‹‹0 1
$str
‹‹2 7
:
‹‹8 9
$str
‹‹: <
;
‹‹< =
writer
›› 
.
›› 
AddTableData
›› #
(
››# $
new
››$ '
string
››( .
[
››. /
]
››/ 0
{
››1 2
attNameLink
››3 >
,
››> ?
strCanDelete
››@ L
,
››L M
a
››N O
.
››O P
Description
››P [
,
››[ \
Picture
››] d
,
››d e
table
››f k
,
››k l
trns
››m q
}
››r s
)
››s t
;
››t u
}
ﬂﬂ 
writer
·· 
.
·· 
	AddFooter
·· 
(
·· 
)
·· 
;
·· 
writer
‚‚ 
.
‚‚ 
Close
‚‚ 
(
‚‚ 
)
‚‚ 
;
‚‚ 
KBDoctorHelper
‰‰ 
.
‰‰ !
ShowKBDoctorResults
‰‰ .
(
‰‰. /

outputFile
‰‰/ 9
)
‰‰9 :
;
‰‰: ;
bool
ÂÂ 
success
ÂÂ 
=
ÂÂ 
true
ÂÂ 
;
ÂÂ  
output
ÊÊ 
.
ÊÊ 

EndSection
ÊÊ 
(
ÊÊ 
title
ÊÊ #
,
ÊÊ# $
success
ÊÊ% ,
)
ÊÊ, -
;
ÊÊ- .
}
ËË 	
public
ÍÍ 
static
ÍÍ 
void
ÍÍ 
ReplaceDomain
ÍÍ (
(
ÍÍ( )
)
ÍÍ) *
{
ÎÎ 	

IKBService
ÏÏ 
kbserv
ÏÏ 
=
ÏÏ 

UIServices
ÏÏ  *
.
ÏÏ* +
KB
ÏÏ+ -
;
ÏÏ- .
bool
ÓÓ 
success
ÓÓ 
=
ÓÓ 
true
ÓÓ 
;
ÓÓ  
string
ÔÔ 
title
ÔÔ 
=
ÔÔ 
$str
ÔÔ 7
;
ÔÔ7 8
IOutputService
 
output
 !
=
" #
CommonServices
$ 2
.
2 3
Output
3 9
;
9 :
ReplaceDomain
ÛÛ 
rd
ÛÛ 
=
ÛÛ 
new
ÛÛ "
ReplaceDomain
ÛÛ# 0
(
ÛÛ0 1
)
ÛÛ1 2
;
ÛÛ2 3
DialogResult
ÙÙ 
dr
ÙÙ 
=
ÙÙ 
new
ÙÙ !
DialogResult
ÙÙ" .
(
ÙÙ. /
)
ÙÙ/ 0
;
ÙÙ0 1
dr
ıı 
=
ıı 
rd
ıı 
.
ıı 

ShowDialog
ıı 
(
ıı 
)
ıı  
;
ıı  !
if
˜˜ 
(
˜˜ 
dr
˜˜ 
==
˜˜ 
DialogResult
˜˜ "
.
˜˜" #
OK
˜˜# %
)
˜˜% &
{
¯¯ 
output
˘˘ 
.
˘˘ 
StartSection
˘˘ #
(
˘˘# $
title
˘˘$ )
)
˘˘) *
;
˘˘* +
Domain
˙˙ 
od
˙˙ 
=
˙˙ 
	Functions
˙˙ %
.
˙˙% &
DomainByName
˙˙& 2
(
˙˙2 3
rd
˙˙3 5
.
˙˙5 6 
originalDomainName
˙˙6 H
)
˙˙H I
;
˙˙I J
Domain
˚˚ 
ud
˚˚ 
=
˚˚ 
	Functions
˚˚ %
.
˚˚% &
DomainByName
˚˚& 2
(
˚˚2 3
rd
˚˚3 5
.
˚˚5 6
destDomainName
˚˚6 D
)
˚˚D E
;
˚˚E F
if
¸¸ 
(
¸¸ 
od
¸¸ 
!=
¸¸ 
null
¸¸ 
&&
¸¸ !
ud
¸¸" $
!=
¸¸% '
null
¸¸( ,
)
¸¸, -
{
˝˝ 
foreach
ˇˇ 
(
ˇˇ 
EntityReference
ˇˇ ,
	reference
ˇˇ- 6
in
ˇˇ7 9
od
ˇˇ: <
.
ˇˇ< =
GetReferencesTo
ˇˇ= L
(
ˇˇL M
)
ˇˇM N
)
ˇˇN O
{
ÄÄ 
KBObject
ÅÅ  
objRef
ÅÅ! '
=
ÅÅ( )
KBObject
ÅÅ* 2
.
ÅÅ2 3
Get
ÅÅ3 6
(
ÅÅ6 7

UIServices
ÅÅ7 A
.
ÅÅA B
KB
ÅÅB D
.
ÅÅD E
CurrentModel
ÅÅE Q
,
ÅÅQ R
	reference
ÅÅS \
.
ÅÅ\ ]
From
ÅÅ] a
)
ÅÅa b
;
ÅÅb c
output
ÇÇ 
.
ÇÇ 
AddLine
ÇÇ &
(
ÇÇ& '
$str
ÇÇ' 3
+
ÇÇ4 5
objRef
ÇÇ6 <
.
ÇÇ< =
Name
ÇÇ= A
)
ÇÇA B
;
ÇÇB C
if
ÉÉ 
(
ÉÉ 
objRef
ÉÉ "
is
ÉÉ# %
Artech
ÉÉ& ,
.
ÉÉ, -
Genexus
ÉÉ- 4
.
ÉÉ4 5
Common
ÉÉ5 ;
.
ÉÉ; <
Objects
ÉÉ< C
.
ÉÉC D
	Attribute
ÉÉD M
)
ÉÉM N
{
ÑÑ 
Artech
ÜÜ "
.
ÜÜ" #
Genexus
ÜÜ# *
.
ÜÜ* +
Common
ÜÜ+ 1
.
ÜÜ1 2
Objects
ÜÜ2 9
.
ÜÜ9 :
	Attribute
ÜÜ: C
att
ÜÜD G
=
ÜÜH I
(
ÜÜJ K
Artech
ÜÜK Q
.
ÜÜQ R
Genexus
ÜÜR Y
.
ÜÜY Z
Common
ÜÜZ `
.
ÜÜ` a
Objects
ÜÜa h
.
ÜÜh i
	Attribute
ÜÜi r
)
ÜÜr s
objRef
ÜÜs y
;
ÜÜy z
att
áá 
.
áá  
DomainBasedOn
áá  -
=
áá. /
ud
áá0 2
;
áá2 3
att
àà 
.
àà  
Save
àà  $
(
àà$ %
)
àà% &
;
àà& '
}
ââ 
else
ää 
{
ãã 
VariablesPart
åå )
vp
åå* ,
=
åå- .
objRef
åå/ 5
.
åå5 6
Parts
åå6 ;
.
åå; <
Get
åå< ?
<
åå? @
VariablesPart
åå@ M
>
ååM N
(
ååN O
)
ååO P
;
ååP Q
if
çç 
(
çç  
vp
çç  "
!=
çç# %
null
çç& *
)
çç* +
{
éé 
foreach
èè  '
(
èè( )
Variable
èè) 1
v
èè2 3
in
èè4 6
vp
èè7 9
.
èè9 :
	Variables
èè: C
)
èèC D
{
êê  !
if
ëë$ &
(
ëë' (
v
ëë( )
.
ëë) *
DomainBasedOn
ëë* 7
==
ëë8 :
od
ëë; =
&&
ëë> @
!
ëëA B
v
ëëB C
.
ëëC D

IsStandard
ëëD N
)
ëëN O
{
íí$ %
v
ìì( )
.
ìì) *
DomainBasedOn
ìì* 7
=
ìì8 9
ud
ìì: <
;
ìì< =
}
îî$ %
}
ïï  !
objRef
ññ  &
.
ññ& '
Save
ññ' +
(
ññ+ ,
)
ññ, -
;
ññ- .
}
óó 
else
òò  
{
ôô 
output
öö  &
.
öö& '
AddLine
öö' .
(
öö. /
$str
öö/ 9
+
öö: ;
od
öö< >
.
öö> ?
Name
öö? C
+
ööD E
$str
ööF c
+
ööd e
objRef
ööf l
.
ööl m
Name
ööm q
)
ööq r
;
öör s
success
õõ  '
=
õõ( )
false
õõ* /
;
õõ/ 0
}
úú 
}
üü 
}
†† 
}
°° 
output
¢¢ 
.
¢¢ 

EndSection
¢¢ !
(
¢¢! "
title
¢¢" '
,
¢¢' (
success
¢¢( /
)
¢¢/ 0
;
¢¢0 1
}
££ 
}
¶¶ 	
public
®® 
static
®® 
void
®® 

ListDomain
®® %
(
®®% &
)
®®& '
{
©© 	

IKBService
™™ 
kbserv
™™ 
=
™™ 

UIServices
™™  *
.
™™* +
KB
™™+ -
;
™™- .
string
¨¨ 
title
¨¨ 
=
¨¨ 
$str
¨¨ /
;
¨¨/ 0
string
≠≠ 

outputFile
≠≠ 
=
≠≠ 
	Functions
≠≠  )
.
≠≠) *
CreateOutputFile
≠≠* :
(
≠≠: ;
kbserv
≠≠; A
,
≠≠A B
title
≠≠C H
)
≠≠H I
;
≠≠I J
IOutputService
ØØ 
output
ØØ !
=
ØØ" #
CommonServices
ØØ$ 2
.
ØØ2 3
Output
ØØ3 9
;
ØØ9 :
output
∞∞ 
.
∞∞ 
StartSection
∞∞ 
(
∞∞  
title
∞∞  %
)
∞∞% &
;
∞∞& '
KBDoctorXMLWriter
≥≥ 
writer
≥≥ $
=
≥≥% &
new
≥≥' *
KBDoctorXMLWriter
≥≥+ <
(
≥≥< =

outputFile
≥≥= G
,
≥≥G H
Encoding
≥≥I Q
.
≥≥Q R
UTF8
≥≥R V
)
≥≥V W
;
≥≥W X
writer
¥¥ 
.
¥¥ 
	AddHeader
¥¥ 
(
¥¥ 
title
¥¥ "
)
¥¥" #
;
¥¥# $
writer
µµ 
.
µµ 
AddTableHeader
µµ !
(
µµ! "
new
µµ" %
string
µµ& ,
[
µµ, -
]
µµ- .
{
µµ/ 0
$str
µµ1 9
,
µµ9 :
$str
µµ; H
,
µµH I
$str
µµJ U
,
µµU V
$str
µµW g
,
µµg h
$str
µµi {
}
µµ| }
)
µµ} ~
;
µµ~ 
string
∂∂ 
description
∂∂ 
;
∂∂ 
string
∑∑ 
titlesuggested
∑∑ !
;
∑∑! "
string
∏∏ 
columnTitle
∏∏ 
;
∏∏ 
foreach
ππ 
(
ππ 
Domain
ππ 
d
ππ 
in
ππ  
Domain
ππ! '
.
ππ' (
GetAll
ππ( .
(
ππ. /
kbserv
ππ/ 5
.
ππ5 6
CurrentModel
ππ6 B
)
ππB C
)
ππC D
{
∫∫ 
description
ªª 
=
ªª 
d
ªª 
.
ªª  
Description
ªª  +
;
ªª+ ,
string
ºº 
Picture
ºº 
=
ºº  
	Functions
ºº! *
.
ºº* +!
ReturnPictureDomain
ºº+ >
(
ºº> ?
d
ºº? @
)
ºº@ A
;
ººA B
int
ΩΩ 
attReferences
ΩΩ !
=
ΩΩ" #
$num
ΩΩ$ %
;
ΩΩ% &
int
ææ 
otherReferences
ææ #
=
ææ$ %
$num
ææ& '
;
ææ' (
foreach
øø 
(
øø 
EntityReference
øø (
r
øø) *
in
øø+ -
d
øø. /
.
øø/ 0
GetReferencesTo
øø0 ?
(
øø? @
)
øø@ A
)
øøA B
{
¿¿ 
KBObject
¡¡ 
objRef
¡¡ #
=
¡¡$ %
KBObject
¡¡& .
.
¡¡. /
Get
¡¡/ 2
(
¡¡2 3

UIServices
¡¡3 =
.
¡¡= >
KB
¡¡> @
.
¡¡@ A
CurrentModel
¡¡A M
,
¡¡M N
r
¡¡O P
.
¡¡P Q
From
¡¡Q U
)
¡¡U V
;
¡¡V W
if
¬¬ 
(
¬¬ 
objRef
¬¬ 
is
¬¬ !
Artech
¬¬" (
.
¬¬( )
Genexus
¬¬) 0
.
¬¬0 1
Common
¬¬1 7
.
¬¬7 8
Objects
¬¬8 ?
.
¬¬? @
	Attribute
¬¬@ I
)
¬¬I J
attReferences
√√ %
+=
√√& (
$num
√√) *
;
√√* +
else
ƒƒ 
otherReferences
≈≈ '
+=
≈≈( *
$num
≈≈+ ,
;
≈≈, -
}
∆∆ 
writer
«« 
.
«« 
AddTableData
«« #
(
««# $
new
««$ '
string
««( .
[
««. /
]
««/ 0
{
««1 2
	Functions
««3 <
.
««< =

linkObject
««= G
(
««G H
d
««H I
)
««I J
,
««J K
description
««L W
,
««W X
Picture
««Y `
,
««` a
attReferences
««b o
.
««o p
ToString
««p x
(
««x y
)
««y z
,
««z {
otherReferences««| ã
.««ã å
ToString««å î
(««î ï
)««ï ñ
}««ó ò
)««ò ô
;««ô ö
}
»» 
writer
…… 
.
…… 
	AddFooter
…… 
(
…… 
)
…… 
;
…… 
writer
   
.
   
Close
   
(
   
)
   
;
   
KBDoctorHelper
ÃÃ 
.
ÃÃ !
ShowKBDoctorResults
ÃÃ .
(
ÃÃ. /

outputFile
ÃÃ/ 9
)
ÃÃ9 :
;
ÃÃ: ;
bool
ÕÕ 
success
ÕÕ 
=
ÕÕ 
true
ÕÕ 
;
ÕÕ  
output
ŒŒ 
.
ŒŒ 

EndSection
ŒŒ 
(
ŒŒ 
title
ŒŒ #
,
ŒŒ# $
success
ŒŒ% ,
)
ŒŒ, -
;
ŒŒ- .
}
œœ 	
internal
““ 
static
““ 
Artech
““ 
.
““ 
Genexus
““ &
.
““& '
Common
““' -
.
““- .
Objects
““. 5
.
““5 6
	Attribute
““6 ?
Att2SubType
““@ K
(
““K L
Artech
““L R
.
““R S
Genexus
““S Z
.
““Z [
Common
““[ a
.
““a b
Objects
““b i
.
““i j
	Attribute
““j s
a
““t u
)
““u v
{
”” 	

IKBService
‘‘ 
kbserv
‘‘ 
=
‘‘ 

UIServices
‘‘  *
.
‘‘* +
KB
‘‘+ -
;
‘‘- .
	EntityKey
’’ 
superTypeKey
’’ "
=
’’# $
a
’’% &
.
’’& '
SuperTypeKey
’’' 3
;
’’3 4
Artech
÷÷ 
.
÷÷ 
Genexus
÷÷ 
.
÷÷ 
Common
÷÷ !
.
÷÷! "
Objects
÷÷" )
.
÷÷) *
	Attribute
÷÷* 3
	superType
÷÷4 =
=
÷÷> ?
a
÷÷@ A
.
÷÷A B
GetPropertyValue
÷÷B R
<
÷÷R S
Artech
÷÷S Y
.
÷÷Y Z
Genexus
÷÷Z a
.
÷÷a b
Common
÷÷b h
.
÷÷h i
Objects
÷÷i p
.
÷÷p q
	Attribute
÷÷q z
>
÷÷z {
(
÷÷{ |
$str÷÷| á
)÷÷á à
;÷÷à â
if
◊◊ 
(
◊◊ 
superTypeKey
◊◊ 
!=
◊◊ 
null
◊◊  $
&&
◊◊% '
(
◊◊( )
	superType
◊◊) 2
==
◊◊3 5
null
◊◊6 :
||
◊◊; =
	superType
◊◊> G
.
◊◊G H
Key
◊◊H K
!=
◊◊L N
superTypeKey
◊◊O [
)
◊◊[ \
)
◊◊\ ]
{
ÿÿ 
	superType
ŸŸ 
=
ŸŸ 
Artech
ŸŸ "
.
ŸŸ" #
Genexus
ŸŸ# *
.
ŸŸ* +
Common
ŸŸ+ 1
.
ŸŸ1 2
Objects
ŸŸ2 9
.
ŸŸ9 :
	Attribute
ŸŸ: C
.
ŸŸC D
Get
ŸŸD G
(
ŸŸG H
kbserv
ŸŸH N
.
ŸŸN O
CurrentModel
ŸŸO [
,
ŸŸ[ \
superTypeKey
ŸŸ] i
.
ŸŸi j
Id
ŸŸj l
)
ŸŸl m
;
ŸŸm n
}
⁄⁄ 
return
€€ 
	superType
€€ 
;
€€ 
}
‹‹ 	
public
ﬁﬁ 
static
ﬁﬁ 
string
ﬁﬁ 

TableOfAtt
ﬁﬁ '
(
ﬁﬁ' (
Artech
ﬁﬁ( .
.
ﬁﬁ. /
Genexus
ﬁﬁ/ 6
.
ﬁﬁ6 7
Common
ﬁﬁ7 =
.
ﬁﬁ= >
Objects
ﬁﬁ> E
.
ﬁﬁE F
	Attribute
ﬁﬁF O
att
ﬁﬁP S
)
ﬁﬁS T
{
ﬂﬂ 	

IKBService
‡‡ 
kbserv
‡‡ 
=
‡‡ 

UIServices
‡‡  *
.
‡‡* +
KB
‡‡+ -
;
‡‡- .
string
·· 
tables
·· 
=
·· 
$str
·· 
;
·· 
foreach
‚‚ 
(
‚‚ 
EntityReference
‚‚ $
	entityRef
‚‚% .
in
‚‚/ 1
kbserv
‚‚2 8
.
‚‚8 9
CurrentModel
‚‚9 E
.
‚‚E F
GetReferencesTo
‚‚F U
(
‚‚U V
att
‚‚V Y
.
‚‚Y Z
Key
‚‚Z ]
)
‚‚] ^
)
‚‚^ _
{
„„ 
if
‰‰ 
(
‰‰ 
	entityRef
‰‰ 
.
‰‰ 
From
‰‰ "
.
‰‰" #
Type
‰‰# '
==
‰‰( *
ObjClass
‰‰+ 3
.
‰‰3 4
Table
‰‰4 9
)
‰‰9 :
{
ÂÂ 
Table
ÊÊ 
table
ÊÊ 
=
ÊÊ  !
kbserv
ÊÊ" (
.
ÊÊ( )
CurrentModel
ÊÊ) 5
.
ÊÊ5 6
Objects
ÊÊ6 =
.
ÊÊ= >
Get
ÊÊ> A
(
ÊÊA B
	entityRef
ÊÊB K
.
ÊÊK L
From
ÊÊL P
.
ÊÊP Q
Type
ÊÊQ U
,
ÊÊU V
	entityRef
ÊÊW `
.
ÊÊ` a
From
ÊÊa e
.
ÊÊe f
Id
ÊÊf h
)
ÊÊh i
as
ÊÊj l
Table
ÊÊm r
;
ÊÊr s
if
ÁÁ 
(
ÁÁ 
table
ÁÁ 
!=
ÁÁ  
null
ÁÁ! %
)
ÁÁ% &
{
ËË 
tables
ÈÈ 
+=
ÈÈ !
table
ÈÈ" '
.
ÈÈ' (
Name
ÈÈ( ,
+
ÈÈ- .
$str
ÈÈ/ 2
;
ÈÈ2 3
}
ÍÍ 
}
ÎÎ 
}
ÏÏ 
return
ÌÌ 
tables
ÌÌ 
;
ÌÌ 
}
ÓÓ 	
public
 
static
 
string
 
TransactionsOfAtt
 .
(
. /
Artech
/ 5
.
5 6
Genexus
6 =
.
= >
Common
> D
.
D E
Objects
E L
.
L M
	Attribute
M V
att
W Z
,
Z [
out
\ _
bool
` d
	canDelete
e n
)
n o
{
ÒÒ 	

IKBService
ÚÚ 
kbserv
ÚÚ 
=
ÚÚ 

UIServices
ÚÚ  *
.
ÚÚ* +
KB
ÚÚ+ -
;
ÚÚ- .
string
ÛÛ 
transactions
ÛÛ 
=
ÛÛ  !
$str
ÛÛ" $
;
ÛÛ$ %
	canDelete
ÙÙ 
=
ÙÙ 
true
ÙÙ 
;
ÙÙ 
foreach
ıı 
(
ıı 
EntityReference
ıı $
	entityRef
ıı% .
in
ıı/ 1
kbserv
ıı2 8
.
ıı8 9
CurrentModel
ıı9 E
.
ııE F
GetReferencesTo
ııF U
(
ııU V
att
ııV Y
.
ııY Z
Key
ııZ ]
)
ıı] ^
)
ıı^ _
{
ˆˆ 
if
˜˜ 
(
˜˜ 
	entityRef
˜˜ 
.
˜˜ 
From
˜˜ "
.
˜˜" #
Type
˜˜# '
==
˜˜( *
ObjClass
˜˜+ 3
.
˜˜3 4
Transaction
˜˜4 ?
)
˜˜? @
{
¯¯ 
Transaction
˘˘ 
Trn
˘˘  #
=
˘˘$ %
kbserv
˘˘& ,
.
˘˘, -
CurrentModel
˘˘- 9
.
˘˘9 :
Objects
˘˘: A
.
˘˘A B
Get
˘˘B E
(
˘˘E F
	entityRef
˘˘F O
.
˘˘O P
From
˘˘P T
.
˘˘T U
Type
˘˘U Y
,
˘˘Y Z
	entityRef
˘˘[ d
.
˘˘d e
From
˘˘e i
.
˘˘i j
Id
˘˘j l
)
˘˘l m
as
˘˘n p
Transaction
˘˘q |
;
˘˘| }
if
˙˙ 
(
˙˙ 
Trn
˙˙ 
!=
˙˙ 
null
˙˙ #
)
˙˙# $
{
˚˚ 
transactions
¸¸ $
+=
¸¸% '
Trn
¸¸( +
.
¸¸+ ,
Name
¸¸, 0
+
¸¸1 2
$str
¸¸3 6
;
¸¸6 7
if
˝˝ 
(
˝˝ 
Trn
˝˝ 
.
˝˝  
GetPropertyValue
˝˝  0
<
˝˝0 1
bool
˝˝1 5
>
˝˝5 6
(
˝˝6 7

Properties
˝˝7 A
.
˝˝A B
TRN
˝˝B E
.
˝˝E F
GenerateObject
˝˝F T
)
˝˝T U
)
˝˝U V
	canDelete
˛˛ %
=
˛˛& '
false
˛˛( -
;
˛˛- .
}
ˇˇ 
}
ÄÄ 
}
ÅÅ 
return
ÇÇ 
transactions
ÇÇ 
;
ÇÇ  
}
ÉÉ 	
}
ââ 
}ää ì%
JC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\AskAttributeandTable.cs
	namespace 	
Concepto
 
. 
Packages 
. 
KBDoctor $
{ 
public 

partial 
class  
AskAttributeandTable -
:. /
Form0 4
{ 
public  
AskAttributeandTable #
(# $
)$ %
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
private 
void %
AskAttributeandTable_Load .
(. /
object/ 5
sender6 <
,< =
	EventArgs> G
eH I
)I J
{ 	
foreach 
( 
Table 
t  
in! #
Artech$ *
.* +
Genexus+ 2
.2 3
Common3 9
.9 :
Objects: A
.A B
TableB G
.G H
GetAllH N
(N O

UIServicesO Y
.Y Z
KBZ \
.\ ]
CurrentModel] i
)i j
)j k
{ 
comboBoxTable !
.! "
Items" '
.' (
Add( +
(+ ,
t, -
.- .
Name. 2
)2 3
;3 4
} 
} 	
private 
void ,
 comboBoxAtt_SelectedIndexChanged 5
(5 6
object6 <
sender= C
,C D
	EventArgsE N
eO P
)P Q
{ 	
}!! 	
private## 
void## .
"comboBoxTable_SelectedIndexChanged## 7
(##7 8
object##8 >
sender##? E
,##E F
	EventArgs##G P
e##Q R
)##R S
{$$ 	
comboBoxAtt%% 
.%% 
Items%% 
.%% 
Clear%% #
(%%# $
)%%$ %
;%%% &
Table&& 
t&& 
=&& 
Artech&& 
.&& 
Genexus&& $
.&&$ %
Common&&% +
.&&+ ,
Objects&&, 3
.&&3 4
Table&&4 9
.&&9 :
Get&&: =
(&&= >

UIServices&&> H
.&&H I
KB&&I K
.&&K L
CurrentModel&&L X
,&&X Y
comboBoxTable&&Z g
.&&g h
SelectedItem&&h t
.&&t u
ToString&&u }
(&&} ~
)&&~ 
)	&& Ä
;
&&Ä Å
foreach'' 
('' 
TableAttribute'' #
attr''$ (
in'') +
t'', -
.''- .
TableStructure''. <
.''< =

Attributes''= G
)''G H
{(( 
comboBoxAtt)) 
.)) 
Items)) !
.))! "
Add))" %
())% &
attr))& *
.))* +
Name))+ /
)))/ 0
;))0 1
}++ 
}-- 	
private// 
void// 
button1_Click// "
(//" #
object//# )
sender//* 0
,//0 1
	EventArgs//2 ;
e//< =
)//= >
{00 	
string11 
	tableName11 
=11 
comboBoxTable11 ,
.11, -
SelectedItem11- 9
.119 :
ToString11: B
(11B C
)11C D
;11D E
string22 
atrName22 
=22 
comboBoxAtt22 (
.22( )
SelectedItem22) 5
.225 6
ToString226 >
(22> ?
)22? @
;22@ A
if33 
(33 
	tableName33 
==33 
$str33 
||33  "
atrName33# *
==33+ -
$str33. 0
)330 1
{44 
lblError55 
.55 
Text55 
=55 
$str55  <
;55< =
}66 
else77 
{88 
lblError99 
.99 
Text99 
=99 
$str99  "
;99" #
return:: 
;:: 
};; 
}<< 	
public>> 
string>> 
tblName>> 
{>> 
get>>  #
{>>$ %
return>>& ,
comboBoxTable>>- :
.>>: ;
SelectedItem>>; G
.>>G H
ToString>>H P
(>>P Q
)>>Q R
;>>R S
}>>T U
}>>V W
public?? 
string?? 
attName?? 
{?? 
get??  #
{??$ %
return??& ,
comboBoxAtt??- 8
.??8 9
SelectedItem??9 E
.??E F
ToString??F N
(??N O
)??O P
;??P Q
}??R S
}??T U
}BB 
}CC ËÔ
?C:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\Functions.cs
	namespace 	
Concepto
 
. 
Packages 
. 
KBDoctor $
{ 
static 

class 
	Functions 
{ 
public 
static 
int 
MaxCodeBlock &
(& '
string' -
source. 4
)4 5
{ 	
int 
MaxCodeBlock 
= 
$num  
;  !
int 
	countLine 
= 
$num 
; 
using 
( 
StringReader 
reader  &
=' (
new) ,
StringReader- 9
(9 :
source: @
)@ A
)A B
{ 
string 
line 
; 
while 
( 
( 
line 
= 
reader %
.% &
ReadLine& .
(. /
)/ 0
)0 1
!=2 4
null5 9
)9 :
{ 
	countLine 
+=  
$num! "
;" #
if!! 
(!! 
line!! 
.!! 

StartsWith!! '
(!!' (
$str!!( .
)!!. /
||!!0 2
line!!3 7
.!!7 8

StartsWith!!8 B
(!!B C
$str!!C K
)!!K L
)!!L M
{"" 
MaxCodeBlock## $
=##% &
(##' (
MaxCodeBlock##( 4
<=##5 7
	countLine##8 A
)##A B
?##C D
	countLine##E N
:##O P
MaxCodeBlock##Q ]
;##] ^
	countLine$$ !
=$$" #
$num$$$ %
;$$% &
}%% 
}'' 
MaxCodeBlock(( 
=(( 
(((  
MaxCodeBlock((  ,
<=((- /
	countLine((0 9
)((9 :
?((; <
	countLine((= F
:((G H
MaxCodeBlock((I U
;((U V
})) 
return++ 
MaxCodeBlock++ 
;++  
},, 	
public.. 
static.. 
int.. 
ComplexityLevel.. )
(..) *
string..* 0
source..1 7
)..7 8
{// 	
int00 
ComplexityLevel00 
=00  !
$num00" #
;00# $
using22 
(22 
StringReader22 
reader22  &
=22' (
new22) ,
StringReader22- 9
(229 :
source22: @
)22@ A
)22A B
{33 
string44 
line44 
;44 
while55 
(55 
(55 
line55 
=55 
reader55 %
.55% &
ReadLine55& .
(55. /
)55/ 0
)550 1
!=552 4
null555 9
)559 :
{66 
line88 
=88 
line88 
.88  
	TrimStart88  )
(88) *
)88* +
.88+ ,
ToUpper88, 3
(883 4
)884 5
;885 6
if99 
(99 
line99 
.99 

StartsWith99 '
(99' (
$str99( 2
)992 3
||994 6
line997 ;
.99; <

StartsWith99< F
(99F G
$str99G K
)99K L
||99M O
line99P T
.99T U

StartsWith99U _
(99_ `
$str99` i
)99i j
||99k m
line99n r
.99r s

StartsWith99s }
(99} ~
$str	99~ É
)
99É Ñ
)
99Ñ Ö
{:: 
ComplexityLevel;; '
+=;;( *
$num;;+ ,
;;;, -
}<< 
}== 
}>> 
return?? 
ComplexityLevel?? "
;??" #
}@@ 	
publicBB 
staticBB 
intBB 
MaxNestLevelBB &
(BB& '
stringBB' -
sourceBB. 4
)BB4 5
{CC 	
intDD 
MaxNestLevelDD 
=DD 
$numDD  
;DD  !
intEE 
	NestLevelEE 
=EE 
$numEE 
;EE 
usingFF 
(FF 
StringReaderFF 
readerFF  &
=FF' (
newFF) ,
StringReaderFF- 9
(FF9 :
sourceFF: @
)FF@ A
)FFA B
{GG 
stringHH 
lineHH 
;HH 
whileII 
(II 
(II 
lineII 
=II 
readerII %
.II% &
ReadLineII& .
(II. /
)II/ 0
)II0 1
!=II2 4
nullII5 9
)II9 :
{JJ 
lineLL 
=LL 
lineLL 
.LL  
	TrimStartLL  )
(LL) *
)LL* +
.LL+ ,
ToUpperLL, 3
(LL3 4
)LL4 5
;LL5 6
ifMM 
(MM 
lineMM 
.MM 

StartsWithMM '
(MM' (
$strMM( .
)MM. /
)MM/ 0
{NN 
}PP 
elseQQ 
{RR 
ifTT 
(TT 
lineTT  
.TT  !

StartsWithTT! +
(TT+ ,
$strTT, 2
)TT2 3
||TT4 6
lineTT7 ;
.TT; <

StartsWithTT< F
(TTF G
$strTTG L
)TTL M
||TTN P
lineTTQ U
.TTU V

StartsWithTTV `
(TT` a
$strTTa f
)TTf g
||TTh j
lineTTk o
.TTo p

StartsWithTTp z
(TTz {
$str	TT{ Ä
)
TTÄ Å
||
TTÇ Ñ
line
TTÖ â
.
TTâ ä

StartsWith
TTä î
(
TTî ï
$str
TTï ö
)
TTö õ
)
TTõ ú
{UU 
	NestLevelVV %
+=VV& (
$numVV) *
;VV* +
MaxNestLevelWW (
=WW) *
(WW+ ,
	NestLevelWW, 5
>WW6 7
MaxNestLevelWW8 D
)WWD E
?WWF G
	NestLevelWWH Q
:WWR S
MaxNestLevelWWT `
;WW` a
}XX 
elseYY 
ifZZ 
(ZZ  
lineZZ  $
.ZZ$ %

StartsWithZZ% /
(ZZ/ 0
$strZZ0 8
)ZZ8 9
||ZZ: <
lineZZ= A
.ZZA B

StartsWithZZB L
(ZZL M
$strZZM T
)ZZT U
||ZZV X
lineZZY ]
.ZZ] ^

StartsWithZZ^ h
(ZZh i
$strZZi p
)ZZp q
||ZZr t
lineZZu y
.ZZy z

StartsWith	ZZz Ñ
(
ZZÑ Ö
$str
ZZÖ é
)
ZZé è
||
ZZê í
line
ZZì ó
.
ZZó ò

StartsWith
ZZò ¢
(
ZZ¢ £
$str
ZZ£ ´
)
ZZ´ ¨
||
ZZ≠ Ø
line
ZZ∞ ¥
.
ZZ¥ µ

StartsWith
ZZµ ø
(
ZZø ¿
$str
ZZ¿ »
)
ZZ» …
)
ZZ…  
{[[ 
	NestLevel\\ %
-=\\& (
$num\\) *
;\\* +
}]] 
}^^ 
}__ 
return`` 
MaxNestLevel`` #
;``# $
}aa 
}cc 	
publichh 
statichh 
boolhh 
ValidateINOUTinParmhh .
(hh. /
KBObjecthh/ 7
objhh8 ;
)hh; <
{ii 	
booljj 
errjj 
=jj 
falsejj 
;jj 
ICallableObjectkk 
callableObjectkk *
=kk+ ,
objkk- 0
askk1 3
ICallableObjectkk4 C
;kkC D
ifmm 
(mm 
callableObjectmm 
!=mm !
nullmm" &
)mm& '
{nn 
foreachoo 
(oo 
	Signatureoo "
	signatureoo# ,
inoo- /
callableObjectoo0 >
.oo> ?
GetSignaturesoo? L
(ooL M
)ooM N
)ooN O
{pp 
Booleanqq 
	someInOutqq %
=qq& '
falseqq( -
;qq- .
foreachrr 
(rr 
	Parameterrr &
parmrr' +
inrr, .
	signaturerr/ 8
.rr8 9

Parametersrr9 C
)rrC D
{ss 
iftt 
(tt 
parmtt  
.tt  !
Accessortt! )
.tt) *
ToStringtt* 2
(tt2 3
)tt3 4
==tt5 7
$strtt8 D
)ttD E
{uu 
	someInOutvv %
=vv& '
truevv( ,
;vv, -
breakww !
;ww! "
}xx 
}yy 
ifzz 
(zz 
	someInOutzz !
)zz! "
{{{ 
	RulesPart|| !
	rulesPart||" +
=||, -
obj||. 1
.||1 2
Parts||2 7
.||7 8
Get||8 ;
<||; <
	RulesPart||< E
>||E F
(||F G
)||G H
;||H I
if~~ 
(~~ 
	rulesPart~~ %
!=~~& (
null~~) -
)~~- .
{ 
Regex
ÄÄ !
myReg
ÄÄ" '
=
ÄÄ( )
new
ÄÄ* -
Regex
ÄÄ. 3
(
ÄÄ3 4
$str
ÄÄ4 :
,
ÄÄ: ;
RegexOptions
ÄÄ< H
.
ÄÄH I
None
ÄÄI M
)
ÄÄM N
;
ÄÄN O
Regex
ÅÅ !
paramReg
ÅÅ" *
=
ÅÅ+ ,
new
ÅÅ- 0
Regex
ÅÅ1 6
(
ÅÅ6 7
$str
ÅÅ7 D
,
ÅÅD E
RegexOptions
ÅÅF R
.
ÅÅR S%
IgnorePatternWhitespace
ÅÅS j
|
ÅÅk l
RegexOptions
ÅÅm y
.
ÅÅy z
CompiledÅÅz Ç
|ÅÅÉ Ñ
RegexOptionsÅÅÖ ë
.ÅÅë í
	MultilineÅÅí õ
|ÅÅú ù
RegexOptionsÅÅû ™
.ÅÅ™ ´

IgnoreCaseÅÅ´ µ
)ÅÅµ ∂
;ÅÅ∂ ∑
string
ÇÇ "
reglas
ÇÇ# )
=
ÇÇ* +
	rulesPart
ÇÇ, 5
.
ÇÇ5 6
Source
ÇÇ6 <
;
ÇÇ< =
reglas
ÉÉ "
=
ÉÉ# $
myReg
ÉÉ% *
.
ÉÉ* +
Replace
ÉÉ+ 2
(
ÉÉ2 3
reglas
ÉÉ3 9
,
ÉÉ9 :
$str
ÉÉ; =
)
ÉÉ= >
;
ÉÉ> ?
Match
ÑÑ !
match
ÑÑ" '
=
ÑÑ( )
paramReg
ÑÑ* 2
.
ÑÑ2 3
Match
ÑÑ3 8
(
ÑÑ8 9
reglas
ÑÑ9 ?
)
ÑÑ? @
;
ÑÑ@ A
if
ÖÖ 
(
ÖÖ  
match
ÖÖ  %
!=
ÖÖ& (
null
ÖÖ) -
)
ÖÖ- .
{
ÜÜ 
int
áá  #

countparms
áá$ .
=
áá/ 0
match
áá1 6
.
áá6 7
ToString
áá7 ?
(
áá? @
)
áá@ A
.
ááA B
Split
ááB G
(
ááG H
new
ááH K
char
ááL P
[
ááP Q
]
ááQ R
{
ááS T
$char
ááU X
}
ááY Z
)
ááZ [
.
áá[ \
Length
áá\ b
;
ááb c
int
àà  #
countsemicolon
àà$ 2
=
àà3 4
match
àà5 :
.
àà: ;
ToString
àà; C
(
ààC D
)
ààD E
.
ààE F
Split
ààF K
(
ààK L
new
ààL O
char
ààP T
[
ààT U
]
ààU V
{
ààW X
$char
ààY \
}
àà] ^
)
àà^ _
.
àà_ `
Length
àà` f
-
ààg h
$num
àài j
;
ààj k
err
ââ  #
=
ââ$ %
(
ââ& '

countparms
ââ' 1
!=
ââ2 4
countsemicolon
ââ5 C
)
ââC D
;
ââD E
}
ãã 
}
åå 
}
çç 
}
éé 
}
èè 
return
êê 
(
êê 
err
êê 
)
êê 
;
êê 
}
ëë 	
internal
ìì 
static
ìì 
void
ìì 
AddLineSummary
ìì +
(
ìì+ ,
string
ìì, 2
fileName
ìì3 ;
,
ìì; <
string
ìì= C
texto
ììD I
)
ììI J
{
îî 	

IKBService
ïï 
kbserv
ïï 
=
ïï 

UIServices
ïï  *
.
ïï* +
KB
ïï+ -
;
ïï- .
string
óó 

outputFile
óó 
=
óó 
kbserv
óó  &
.
óó& '
	CurrentKB
óó' 0
.
óó0 1
UserDirectory
óó1 >
+
óó? @
$str
óóA E
+
óóF G
fileName
óóH P
;
óóP Q
using
ôô 
(
ôô 

FileStream
ôô 
fs
ôô  
=
ôô! "
new
ôô# &

FileStream
ôô' 1
(
ôô1 2

outputFile
ôô2 <
,
ôô< =
FileMode
ôô> F
.
ôôF G
Append
ôôG M
,
ôôM N

FileAccess
ôôO Y
.
ôôY Z
Write
ôôZ _
)
ôô_ `
)
ôô` a
using
öö 
(
öö 
StreamWriter
öö 
sw
öö  "
=
öö# $
new
öö% (
StreamWriter
öö) 5
(
öö5 6
fs
öö6 8
)
öö8 9
)
öö9 :
{
õõ 
sw
úú 
.
úú 
	WriteLine
úú 
(
úú 
DateTime
úú %
.
úú% &
Now
úú& )
.
úú) *
ToString
úú* 2
(
úú2 3
)
úú3 4
+
úú5 6
$str
úú7 :
+
úú; <
texto
úú= B
)
úúB C
;
úúC D
}
ùù 
}
ûû 	
internal
†† 
static
†† 
void
†† 
AddLine
†† $
(
††$ %
string
††% +
fileName
††, 4
,
††4 5
string
††6 <
texto
††= B
)
††B C
{
°° 	

IKBService
¢¢ 
kbserv
¢¢ 
=
¢¢ 

UIServices
¢¢  *
.
¢¢* +
KB
¢¢+ -
;
¢¢- .
string
§§ 

outputFile
§§ 
=
§§ 
kbserv
§§  &
.
§§& '
	CurrentKB
§§' 0
.
§§0 1
UserDirectory
§§1 >
+
§§? @
$str
§§A E
+
§§F G
fileName
§§H P
;
§§P Q
using
¶¶ 
(
¶¶ 

FileStream
¶¶ 
fs
¶¶  
=
¶¶! "
new
¶¶# &

FileStream
¶¶' 1
(
¶¶1 2

outputFile
¶¶2 <
,
¶¶< =
FileMode
¶¶> F
.
¶¶F G
Append
¶¶G M
,
¶¶M N

FileAccess
¶¶O Y
.
¶¶Y Z
Write
¶¶Z _
)
¶¶_ `
)
¶¶` a
using
ßß 
(
ßß 
StreamWriter
ßß 
sw
ßß  "
=
ßß# $
new
ßß% (
StreamWriter
ßß) 5
(
ßß5 6
fs
ßß6 8
)
ßß8 9
)
ßß9 :
{
®® 
sw
©© 
.
©© 
	WriteLine
©© 
(
©© 
texto
©© "
)
©©" #
;
©©# $
}
™™ 
}
´´ 	
public
≠≠ 
static
≠≠ 
string
≠≠ 
ObjectSourceUpper
≠≠ .
(
≠≠. /
KBObject
≠≠/ 7
obj
≠≠8 ;
)
≠≠; <
{
ÆÆ 	
string
ØØ 
source
ØØ 
=
ØØ 
$str
ØØ 
;
ØØ 
try
∞∞ 
{
±± 
if
≤≤ 
(
≤≤ 
obj
≤≤ 
is
≤≤ 
	Procedure
≤≤ $
)
≤≤$ %
source
≤≤& ,
=
≤≤- .
obj
≤≤/ 2
.
≤≤2 3
Parts
≤≤3 8
.
≤≤8 9
Get
≤≤9 <
<
≤≤< =
ProcedurePart
≤≤= J
>
≤≤J K
(
≤≤K L
)
≤≤L M
.
≤≤M N
Source
≤≤N T
;
≤≤T U
if
¥¥ 
(
¥¥ 
obj
¥¥ 
is
¥¥ 
Transaction
¥¥ &
)
¥¥& '
source
¥¥( .
=
¥¥/ 0
obj
¥¥1 4
.
¥¥4 5
Parts
¥¥5 :
.
¥¥: ;
Get
¥¥; >
<
¥¥> ?

EventsPart
¥¥? I
>
¥¥I J
(
¥¥J K
)
¥¥K L
.
¥¥L M
Source
¥¥M S
;
¥¥S T
if
∂∂ 
(
∂∂ 
obj
∂∂ 
is
∂∂ 
	WorkPanel
∂∂ $
)
∂∂$ %
source
∂∂& ,
=
∂∂- .
obj
∂∂/ 2
.
∂∂2 3
Parts
∂∂3 8
.
∂∂8 9
Get
∂∂9 <
<
∂∂< =

EventsPart
∂∂= G
>
∂∂G H
(
∂∂H I
)
∂∂I J
.
∂∂J K
Source
∂∂K Q
;
∂∂Q R
if
∏∏ 
(
∏∏ 
obj
∏∏ 
is
∏∏ 
WebPanel
∏∏ #
)
∏∏# $
source
∏∏% +
=
∏∏, -
obj
∏∏. 1
.
∏∏1 2
Parts
∏∏2 7
.
∏∏7 8
Get
∏∏8 ;
<
∏∏; <

EventsPart
∏∏< F
>
∏∏F G
(
∏∏G H
)
∏∏H I
.
∏∏I J
Source
∏∏J P
;
∏∏P Q
}
ππ 
catch
∫∫ 
(
∫∫ 
	Exception
∫∫ 
e
∫∫ 
)
∫∫ 
{
∫∫  !
source
ªª 
=
ªª 
$str
ªª 
;
ªª 
}
ºº 
return
ææ 
source
ææ 
.
ææ 
ToUpper
ææ !
(
ææ! "
)
ææ" #
;
ææ# $
}
øø 	
public
¡¡ 
static
¡¡ 
bool
¡¡ 
	isRunable
¡¡ $
(
¡¡$ %
KBObject
¡¡% -
obj
¡¡. 1
)
¡¡1 2
{
¬¬ 	
return
√√ 
(
√√ 
obj
√√ 
is
√√ 
Transaction
√√ &
||
√√' )
obj
√√* -
is
√√. 0
	WorkPanel
√√1 :
||
√√; =
obj
√√> A
is
√√B D
WebPanel
√√E M
||
ƒƒ 
obj
ƒƒ 
is
ƒƒ 
DataProvider
ƒƒ &
||
ƒƒ' )
obj
ƒƒ* -
is
ƒƒ. 0
DataSelector
ƒƒ1 =
||
ƒƒ> @
obj
ƒƒA D
is
ƒƒE G
	Procedure
ƒƒH Q
||
ƒƒR T
obj
ƒƒU X
is
ƒƒY [
Menubar
ƒƒ\ c
)
ƒƒc d
;
ƒƒd e
}
≈≈ 	
public
«« 
static
«« 
bool
«« 

CanBeBuilt
«« %
(
««% &
KBObject
««& .
obj
««/ 2
)
««2 3
{
»» 	
return
…… 
(
…… 
obj
…… 
is
…… 
Transaction
…… &
||
……' )
obj
……* -
is
……. 0
WebPanel
……1 9
||
……: <
obj
……= @
is
……A C
	Procedure
……D M
||
……N P
obj
……Q T
is
……U W
DataProvider
……X d
||
……e g
obj
……h k
is
……l n
Menubar
……o v
)
……v w
;
……w x
}
   	
public
ÃÃ 
static
ÃÃ 
string
ÃÃ 
ExtractComments
ÃÃ ,
(
ÃÃ, -
string
ÃÃ- 3
source
ÃÃ4 :
)
ÃÃ: ;
{
ÕÕ 	
var
œœ 
blockComments
œœ 
=
œœ 
$str
œœ  .
;
œœ. /
var
–– 
lineComments
–– 
=
–– 
$str
–– .
;
––. /
var
—— 
strings
—— 
=
—— 
$str
—— 5
;
——5 6
var
““ 
verbatimStrings
““ 
=
““  !
$str
““" 3
;
““3 4
string
‘‘ 

noComments
‘‘ 
=
‘‘ 
Regex
‘‘  %
.
‘‘% &
Replace
‘‘& -
(
‘‘- .
source
‘‘. 4
,
‘‘4 5
blockComments
‘‘6 C
+
‘‘D E
$str
‘‘F I
+
‘‘J K
lineComments
‘‘L X
+
‘‘Y Z
$str
‘‘[ ^
+
‘‘_ `
strings
‘‘a h
+
‘‘i j
$str
‘‘k n
+
‘‘o p
verbatimStrings‘‘q Ä
,‘‘Ä Å
me
’’ 
=>
’’ 
{
÷÷ 
if
◊◊ 
(
◊◊ 
me
◊◊ 
.
◊◊ 
Value
◊◊ 
.
◊◊ 

StartsWith
◊◊ (
(
◊◊( )
$str
◊◊) -
)
◊◊- .
||
◊◊/ 1
me
◊◊2 4
.
◊◊4 5
Value
◊◊5 :
.
◊◊: ;

StartsWith
◊◊; E
(
◊◊E F
$str
◊◊F J
)
◊◊J K
)
◊◊K L
return
ÿÿ 
me
ÿÿ 
.
ÿÿ 
Value
ÿÿ $
.
ÿÿ$ %

StartsWith
ÿÿ% /
(
ÿÿ/ 0
$str
ÿÿ0 4
)
ÿÿ4 5
?
ÿÿ6 7
Environment
ÿÿ8 C
.
ÿÿC D
NewLine
ÿÿD K
:
ÿÿL M
$str
ÿÿN P
;
ÿÿP Q
return
⁄⁄ 
me
⁄⁄ 
.
⁄⁄ 
Value
⁄⁄  
;
⁄⁄  !
}
€€ 
,
€€ 
RegexOptions
‹‹  
.
‹‹  !

Singleline
‹‹! +
)
‹‹+ ,
;
‹‹, -

noComments
ﬁﬁ 
=
ﬁﬁ 

noComments
ﬁﬁ #
.
ﬁﬁ# $
Replace
ﬁﬁ$ +
(
ﬁﬁ+ ,
$str
ﬁﬁ, /
,
ﬁﬁ/ 0
$str
ﬁﬁ1 5
)
ﬁﬁ5 6
;
ﬁﬁ6 7

noComments
ﬂﬂ 
=
ﬂﬂ 

noComments
ﬂﬂ #
.
ﬂﬂ# $
Replace
ﬂﬂ$ +
(
ﬂﬂ+ ,
$str
ﬂﬂ, /
,
ﬂﬂ/ 0
$str
ﬂﬂ1 5
)
ﬂﬂ5 6
;
ﬂﬂ6 7

noComments
‡‡ 
=
‡‡ 

noComments
‡‡ #
.
‡‡# $
Replace
‡‡$ +
(
‡‡+ ,
$str
‡‡, 0
,
‡‡0 1
$str
‡‡2 6
)
‡‡6 7
;
‡‡7 8

noComments
·· 
=
·· 

noComments
·· #
.
··# $
Replace
··$ +
(
··+ ,
$str
··, 0
,
··0 1
$str
··2 5
)
··5 6
;
··6 7
string
‰‰ 
aux
‰‰ 
=
‰‰ 

noComments
‰‰ #
.
‰‰# $
Replace
‰‰$ +
(
‰‰+ ,
$str
‰‰, 0
,
‰‰0 1
$str
‰‰2 5
)
‰‰5 6
;
‰‰6 7
do
ÂÂ 
{
ÊÊ 

noComments
ÁÁ 
=
ÁÁ 
aux
ÁÁ  
;
ÁÁ  !
aux
ËË 
=
ËË 

noComments
ËË  
.
ËË  !
Replace
ËË! (
(
ËË( )
$str
ËË) -
,
ËË- .
$str
ËË/ 2
)
ËË2 3
;
ËË3 4
}
ÈÈ 
while
ÈÈ 
(
ÈÈ 

noComments
ÈÈ 
!=
ÈÈ  "
aux
ÈÈ# &
)
ÈÈ& '
;
ÈÈ' (
return
ÎÎ 

noComments
ÎÎ 
;
ÎÎ 
}
ÏÏ 	
public
ÓÓ 
static
ÓÓ 
string
ÓÓ 
CodeCommented
ÓÓ *
(
ÓÓ* +
string
ÓÓ+ 1
source
ÓÓ2 8
)
ÓÓ8 9
{
ÔÔ 	
var
ÒÒ 
codeComments
ÒÒ 
=
ÒÒ 
$strÒÒ ü
;ÒÒü †
return
ÛÛ 
Regex
ÛÛ 
.
ÛÛ 
Match
ÛÛ 
(
ÛÛ 
source
ÛÛ %
,
ÛÛ% &
codeComments
ÛÛ' 3
)
ÛÛ3 4
.
ÛÛ4 5
Value
ÛÛ5 :
;
ÛÛ: ;
}
ıı 	
public
˜˜ 
static
˜˜ 
bool
˜˜ 
HasCodeCommented
˜˜ +
(
˜˜+ ,
string
˜˜, 2
source
˜˜3 9
)
˜˜9 :
{
¯¯ 	
var
˙˙ 
codeComments
˙˙ 
=
˙˙ 
$str˙˙ ü
;˙˙ü †
return
¸¸ 
(
¸¸ 
Regex
¸¸ 
.
¸¸ 
Match
¸¸ 
(
¸¸  
source
¸¸  &
,
¸¸& '
codeComments
¸¸( 4
)
¸¸4 5
.
¸¸5 6
Value
¸¸6 ;
!=
¸¸< >
$str
¸¸? A
)
¸¸A B
;
¸¸B C
}
˛˛ 	
public
ÄÄ 
static
ÄÄ 
Domain
ÄÄ 
DomainByName
ÄÄ )
(
ÄÄ) *
string
ÄÄ* 0

domainName
ÄÄ1 ;
)
ÄÄ; <
{
ÅÅ 	
foreach
ÇÇ 
(
ÇÇ 
Domain
ÇÇ 
d
ÇÇ 
in
ÇÇ  
Domain
ÇÇ! '
.
ÇÇ' (
GetAll
ÇÇ( .
(
ÇÇ. /

UIServices
ÇÇ/ 9
.
ÇÇ9 :
KB
ÇÇ: <
.
ÇÇ< =
CurrentModel
ÇÇ= I
)
ÇÇI J
)
ÇÇJ K
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 
d
ÑÑ 
.
ÑÑ 
Name
ÑÑ 
==
ÑÑ 

domainName
ÑÑ (
)
ÑÑ( )
{
ÖÖ 
return
ÜÜ 
d
ÜÜ 
;
ÜÜ 
break
áá 
;
áá 
}
àà 
}
ââ 
return
ää 
null
ää 
;
ää 
}
ãã 	
public
çç 
static
çç 
string
çç 
RemoveEmptyLines
çç -
(
çç- .
string
çç. 4
lines
çç5 :
)
çç: ;
{
éé 	
return
èè 
Regex
èè 
.
èè 
Replace
èè  
(
èè  !
lines
èè! &
,
èè& '
$str
èè( 5
,
èè5 6
$str
èè7 9
,
èè9 :
RegexOptions
èè; G
.
èèG H
	Multiline
èèH Q
)
èèQ R
;
èèR S
}
êê 	
public
íí 
static
íí 
int
íí 
	LineCount
íí #
(
íí# $
string
íí$ *
s
íí+ ,
)
íí, -
{
ìì 	
int
îî 
n
îî 
=
îî 
$num
îî 
;
îî 
foreach
ïï 
(
ïï 
var
ïï 
c
ïï 
in
ïï 
s
ïï 
)
ïï  
{
ññ 
if
óó 
(
óó 
c
óó 
==
óó 
$char
óó 
)
óó 
n
óó  
++
óó  "
;
óó" #
}
òò 
return
ôô 
n
ôô 
;
ôô 
}
öö 	
public
úú 
static
úú 
string
úú 

linkObject
úú '
(
úú' (
KBObject
úú( 0
obj
úú1 4
)
úú4 5
{
ùù 	
return
ûû 
$str
ûû b
+
ûûc d
obj
ûûe h
.
ûûh i
Guid
ûûi m
.
ûûm n
ToString
ûûn v
(
ûûv w
)
ûûw x
+
ûûy z
$strûû{ Ä
+ûûÅ Ç
objûûÉ Ü
.ûûÜ á
Nameûûá ã
+ûûå ç
$strûûé î
;ûûî ï
}
üü 	
public
°° 
static
°° 
string
°° 
linkFile
°° %
(
°°% &
string
°°& ,
file
°°- 1
)
°°1 2
{
¢¢ 	
return
££ 
$str
££ '
+
££( )
file
££* .
+
££/ 0
$str
££1 5
+
££6 7
$str
££8 ;
+
££< =
file
££> B
+
££C D
$str
££E J
+
££K L
$str
££M P
;
££P Q
}
§§ 	
public
¶¶ 
static
¶¶ 
string
¶¶ 
ExtractRuleParm
¶¶ ,
(
¶¶, -
KBObject
¶¶- 5
obj
¶¶6 9
)
¶¶9 :
{
ßß 	
	RulesPart
®® 
	rulesPart
®® 
=
®®  !
obj
®®" %
.
®®% &
Parts
®®& +
.
®®+ ,
Get
®®, /
<
®®/ 0
	RulesPart
®®0 9
>
®®9 :
(
®®: ;
)
®®; <
;
®®< =
string
©© 
aux
©© 
=
©© 
$str
©© 
;
©© 
if
´´ 
(
´´ 
	rulesPart
´´ 
!=
´´ 
null
´´ !
)
´´! "
{
¨¨ 
Regex
≠≠ 
myReg
≠≠ 
=
≠≠ 
new
≠≠ !
Regex
≠≠" '
(
≠≠' (
$str
≠≠( .
,
≠≠. /
RegexOptions
≠≠0 <
.
≠≠< =
None
≠≠= A
)
≠≠A B
;
≠≠B C
Regex
ÆÆ 
paramReg
ÆÆ 
=
ÆÆ  
new
ÆÆ! $
Regex
ÆÆ% *
(
ÆÆ* +
$str
ÆÆ+ 8
,
ÆÆ8 9
RegexOptions
ÆÆ: F
.
ÆÆF G%
IgnorePatternWhitespace
ÆÆG ^
|
ÆÆ_ `
RegexOptions
ÆÆa m
.
ÆÆm n
Compiled
ÆÆn v
|
ÆÆw x
RegexOptionsÆÆy Ö
.ÆÆÖ Ü
	MultilineÆÆÜ è
|ÆÆê ë
RegexOptionsÆÆí û
.ÆÆû ü

IgnoreCaseÆÆü ©
)ÆÆ© ™
;ÆÆ™ ´
string
ØØ 
reglas
ØØ 
=
ØØ 
	rulesPart
ØØ  )
.
ØØ) *
Source
ØØ* 0
;
ØØ0 1
reglas
∞∞ 
=
∞∞ 
myReg
∞∞ 
.
∞∞ 
Replace
∞∞ &
(
∞∞& '
reglas
∞∞' -
,
∞∞- .
$str
∞∞/ 1
)
∞∞1 2
;
∞∞2 3
Match
±± 
match
±± 
=
±± 
paramReg
±± &
.
±±& '
Match
±±' ,
(
±±, -
reglas
±±- 3
)
±±3 4
;
±±4 5
if
≤≤ 
(
≤≤ 
match
≤≤ 
!=
≤≤ 
null
≤≤ !
)
≤≤! "
aux
≥≥ 
=
≥≥ 
match
≥≥ 
.
≥≥  
ToString
≥≥  (
(
≥≥( )
)
≥≥) *
;
≥≥* +
else
¥¥ 
aux
µµ 
=
µµ 
$str
µµ 
;
µµ 
}
∂∂ 
return
∑∑ 
aux
∑∑ 
;
∑∑ 
}
∏∏ 	
public
∫∫ 
static
∫∫ 
string
∫∫ 
CleanFileName
∫∫ *
(
∫∫* +
string
∫∫+ 1
filename
∫∫2 :
)
∫∫: ;
{
ªª 	
return
ºº 
string
ºº 
.
ºº 
Join
ºº 
(
ºº 
$str
ºº "
,
ºº" #
filename
ºº$ ,
.
ºº, -
Split
ºº- 2
(
ºº2 3
Path
ºº3 7
.
ºº7 8%
GetInvalidFileNameChars
ºº8 O
(
ººO P
)
ººP Q
)
ººQ R
)
ººR S
;
ººS T
}
ΩΩ 	
public
øø 
static
øø 
string
øø 
CreateOutputFile
øø -
(
øø- .

IKBService
øø. 8
kbserv
øø9 ?
,
øø? @
string
øøA G
title
øøH M
)
øøM N
{
¿¿ 	
string
¡¡ 

outputFile
¡¡ 
=
¡¡ 
kbserv
¡¡  &
.
¡¡& '
	CurrentKB
¡¡' 0
.
¡¡0 1
UserDirectory
¡¡1 >
+
¡¡? @
$str
¡¡A N
+
¡¡O P
	Functions
¡¡Q Z
.
¡¡Z [
CleanFileName
¡¡[ h
(
¡¡h i
title
¡¡i n
)
¡¡n o
+
¡¡p q
$str
¡¡r y
;
¡¡y z
if
¬¬ 
(
¬¬ 
File
¬¬ 
.
¬¬ 
Exists
¬¬ 
(
¬¬ 

outputFile
¬¬ &
)
¬¬& '
)
¬¬' (
{
√√ 
File
ƒƒ 
.
ƒƒ 
Delete
ƒƒ 
(
ƒƒ 

outputFile
ƒƒ &
)
ƒƒ& '
;
ƒƒ' (
}
≈≈ 
return
«« 

outputFile
«« 
;
«« 
}
»» 	
public
   
static
   
bool
   
AttIsSubtype
   '
(
  ' (
Artech
  ( .
.
  . /
Genexus
  / 6
.
  6 7
Common
  7 =
.
  = >
Objects
  > E
.
  E F
	Attribute
  F O
a
  P Q
)
  Q R
{
ÀÀ 	
if
ÃÃ 
(
ÃÃ 
a
ÃÃ 
.
ÃÃ 
SuperTypeKey
ÃÃ 
!=
ÃÃ !
null
ÃÃ" &
)
ÃÃ& '
return
ÕÕ 
true
ÕÕ 
;
ÕÕ 
else
ŒŒ 
return
œœ 
false
œœ 
;
œœ 
}
—— 	
public
”” 
static
”” 
void
”” 
KillAttribute
”” (
(
””( )
Artech
””) /
.
””/ 0
Genexus
””0 7
.
””7 8
Common
””8 >
.
””> ?
Objects
””? F
.
””F G
	Attribute
””G P
a
””Q R
)
””R S
{
‘‘ 	
IOutputService
’’ 
output
’’ !
=
’’" #
CommonServices
’’$ 2
.
’’2 3
Output
’’3 9
;
’’9 :
foreach
◊◊ 
(
◊◊ 
EntityReference
◊◊ $
	reference
◊◊% .
in
◊◊/ 1
a
◊◊2 3
.
◊◊3 4
GetReferencesTo
◊◊4 C
(
◊◊C D
)
◊◊D E
)
◊◊E F
{
ÿÿ 
KBObject
ŸŸ 
objRef
ŸŸ 
=
ŸŸ  !
KBObject
ŸŸ" *
.
ŸŸ* +
Get
ŸŸ+ .
(
ŸŸ. /
a
ŸŸ/ 0
.
ŸŸ0 1
Model
ŸŸ1 6
,
ŸŸ6 7
	reference
ŸŸ8 A
.
ŸŸA B
From
ŸŸB F
)
ŸŸF G
;
ŸŸG H
if
€€ 
(
€€ 
objRef
€€ 
!=
€€ 
null
€€ "
)
€€" #
{
‹‹ ,
CleanVariablesBasedInAttribute
›› 2
(
››2 3
a
››3 4
,
››4 5
output
››6 <
,
››< =
objRef
››> D
)
››D E
;
››E F
CleanSDT
ﬁﬁ 
(
ﬁﬁ 
a
ﬁﬁ 
,
ﬁﬁ 
output
ﬁﬁ  &
,
ﬁﬁ& '
objRef
ﬁﬁ( .
)
ﬁﬁ. /
;
ﬁﬁ/ 0
if
‡‡ 
(
‡‡ 
!
‡‡ 
(
‡‡ 
objRef
‡‡  
is
‡‡! #
DataView
‡‡$ ,
)
‡‡, -
)
‡‡- .
{
·· 
try
‚‚ 
{
„„ 
objRef
‰‰ "
.
‰‰" #
Save
‰‰# '
(
‰‰' (
)
‰‰( )
;
‰‰) *
}
ÂÂ 
catch
ÊÊ 
(
ÊÊ 
	Exception
ÊÊ (
e
ÊÊ) *
)
ÊÊ* +
{
ÁÁ 
output
ËË "
.
ËË" #
AddErrorLine
ËË# /
(
ËË/ 0
$str
ËË0 L
+
ËËM N
objRef
ËËO U
.
ËËU V
Name
ËËV Z
+
ËË[ \
e
ËË] ^
.
ËË^ _
Message
ËË_ f
)
ËËf g
;
ËËg h
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 
}
ÏÏ 
}
ÌÌ 	
private
ÔÔ 
static
ÔÔ 
void
ÔÔ ,
CleanVariablesBasedInAttribute
ÔÔ :
(
ÔÔ: ;
Artech
ÔÔ; A
.
ÔÔA B
Genexus
ÔÔB I
.
ÔÔI J
Common
ÔÔJ P
.
ÔÔP Q
Objects
ÔÔQ X
.
ÔÔX Y
	Attribute
ÔÔY b
a
ÔÔc d
,
ÔÔd e
IOutputService
ÔÔf t
output
ÔÔu {
,
ÔÔ{ |
KBObjectÔÔ} Ö
objRefÔÔÜ å
)ÔÔå ç
{
 	
output
ÒÒ 
.
ÒÒ 
AddLine
ÒÒ 
(
ÒÒ 
$str
ÒÒ >
+
ÒÒ? @
a
ÒÒA B
.
ÒÒB C
Name
ÒÒC G
+
ÒÒH I
$str
ÒÒJ P
+
ÒÒQ R
objRef
ÒÒS Y
.
ÒÒY Z
Name
ÒÒZ ^
)
ÒÒ^ _
;
ÒÒ_ `
VariablesPart
ÛÛ 
vp
ÛÛ 
=
ÛÛ 
objRef
ÛÛ %
.
ÛÛ% &
Parts
ÛÛ& +
.
ÛÛ+ ,
Get
ÛÛ, /
<
ÛÛ/ 0
VariablesPart
ÛÛ0 =
>
ÛÛ= >
(
ÛÛ> ?
)
ÛÛ? @
;
ÛÛ@ A
if
ıı 
(
ıı 
vp
ıı 
!=
ıı 
null
ıı 
)
ıı 
{
ˆˆ 
foreach
˜˜ 
(
˜˜ 
Variable
˜˜ !
v
˜˜" #
in
˜˜$ &
vp
˜˜' )
.
˜˜) *
	Variables
˜˜* 3
)
˜˜3 4
{
¯¯ 
if
˘˘ 
(
˘˘ 
!
˘˘ 
v
˘˘ 
.
˘˘ 

IsStandard
˘˘ %
&&
˘˘& (
(
˘˘) *
(
˘˘* +
v
˘˘+ ,
.
˘˘, -
AttributeBasedOn
˘˘- =
!=
˘˘> @
null
˘˘A E
)
˘˘E F
&&
˘˘G I
(
˘˘J K
a
˘˘K L
.
˘˘L M
Name
˘˘M Q
==
˘˘R T
v
˘˘U V
.
˘˘V W
AttributeBasedOn
˘˘W g
.
˘˘g h
Name
˘˘h l
)
˘˘l m
)
˘˘m n
)
˘˘n o
{
˙˙ 
output
˚˚ 
.
˚˚ 
AddLine
˚˚ &
(
˚˚& '
$str
˚˚' *
+
˚˚+ ,
v
˚˚- .
.
˚˚. /
Name
˚˚/ 3
+
˚˚4 5
$str
˚˚6 C
+
˚˚D E
a
˚˚F G
.
˚˚G H
Name
˚˚H L
)
˚˚L M
;
˚˚M N
eDBType
¸¸ 
type
¸¸  $
=
¸¸% &
v
¸¸' (
.
¸¸( )
Type
¸¸) -
;
¸¸- .
int
˝˝ 
length
˝˝ "
=
˝˝# $
v
˝˝% &
.
˝˝& '
Length
˝˝' -
;
˝˝- .
bool
˛˛ 
signed
˛˛ #
=
˛˛$ %
v
˛˛& '
.
˛˛' (
Signed
˛˛( .
;
˛˛. /
string
ˇˇ 
desc
ˇˇ #
=
ˇˇ$ %
v
ˇˇ& '
.
ˇˇ' (
Description
ˇˇ( 3
;
ˇˇ3 4
int
ÄÄ 
dec
ÄÄ 
=
ÄÄ  !
v
ÄÄ" #
.
ÄÄ# $
Decimals
ÄÄ$ ,
;
ÄÄ, -
v
ÉÉ 
.
ÉÉ 
AttributeBasedOn
ÉÉ *
=
ÉÉ+ ,
null
ÉÉ- 1
;
ÉÉ1 2
v
ÑÑ 
.
ÑÑ 
Type
ÑÑ 
=
ÑÑ  
type
ÑÑ! %
;
ÑÑ% &
v
ÖÖ 
.
ÖÖ 
Decimals
ÖÖ "
=
ÖÖ# $
dec
ÖÖ% (
;
ÖÖ( )
v
ÜÜ 
.
ÜÜ 
Description
ÜÜ %
=
ÜÜ& '
desc
ÜÜ( ,
;
ÜÜ, -
v
áá 
.
áá 
Length
áá  
=
áá! "
length
áá# )
;
áá) *
v
àà 
.
àà 
Signed
àà  
=
àà! "
signed
àà# )
;
àà) *
}
ää 
}
ãã 
}
êê 
}
ëë 	
internal
ìì 
static
ìì 

KBCategory
ìì "
MainCategory
ìì# /
(
ìì/ 0
KBModel
ìì0 7
model
ìì8 =
)
ìì= >
{
îî 	
return
ïï 

KBCategory
ïï 
.
ïï 
Get
ïï  
(
ïï  !
model
ïï! &
,
ïï& '
$str
ïï( 7
)
ïï7 8
;
ïï8 9
}
ññ 	
private
òò 
static
òò 
void
òò 
CleanSDT
òò $
(
òò$ %
Artech
òò% +
.
òò+ ,
Genexus
òò, 3
.
òò3 4
Common
òò4 :
.
òò: ;
Objects
òò; B
.
òòB C
	Attribute
òòC L
a
òòM N
,
òòN O
IOutputService
òòP ^
output
òò_ e
,
òòe f
KBObject
òòg o
objRef
òòp v
)
òòv w
{
ôô 	
if
úú 
(
úú 
objRef
úú 
is
úú 
SDT
úú 
)
úú 
{
ùù 
output
ûû 
.
ûû 
AddLine
ûû 
(
ûû 
$str
ûû <
+
ûû= >
a
ûû? @
.
ûû@ A
Name
ûûA E
+
ûûF G
$str
ûûH N
+
ûûO P
objRef
ûûQ W
.
ûûW X
Name
ûûX \
)
ûû\ ]
;
ûû] ^
SDTStructurePart
üü  
	sdtstruct
üü" +
=
üü- .
objRef
üü/ 5
.
üü5 6
Parts
üü6 ;
.
üü; <
Get
üü< ?
<
üü? @
SDTStructurePart
üü@ P
>
üüP Q
(
üüQ R
)
üüR S
;
üüS T
foreach
°° 
(
°° 
IStructureItem
°° '

structItem
°°( 2
in
°°3 5
	sdtstruct
°°6 ?
.
°°? @
Root
°°@ D
.
°°D E
Items
°°E J
)
°°J K
{
¢¢ 
try
££ 
{
§§ 
SDTItem
•• 
sdtItem
••  '
=
••( )
(
••* +
SDTItem
••+ 2
)
••2 3

structItem
••3 =
;
••= >
if
¶¶ 
(
¶¶ 
sdtItem
¶¶ #
.
¶¶# $
BasedOn
¶¶$ +
!=
¶¶, .
null
¶¶/ 3
&&
¶¶4 6
sdtItem
¶¶7 >
.
¶¶> ?
BasedOn
¶¶? F
.
¶¶F G
Key
¶¶G J
==
¶¶K M
a
¶¶N O
.
¶¶O P
Key
¶¶P S
)
¶¶S T
{
ßß 
output
©© "
.
©©" #
AddLine
©©# *
(
©©* +
$str
©©+ 0
+
©©1 2
sdtItem
©©3 :
.
©©: ;
Name
©©; ?
+
©©@ A
$str
©©B O
+
©©P Q
a
©©R S
.
©©S T
Name
©©T X
)
©©X Y
;
©©Y Z
eDBType
™™ #
type
™™$ (
=
™™) *
sdtItem
™™+ 2
.
™™2 3
Type
™™3 7
;
™™7 8
int
´´ 
length
´´  &
=
´´' (
sdtItem
´´) 0
.
´´0 1
Length
´´1 7
;
´´7 8
bool
¨¨  
signed
¨¨! '
=
¨¨( )
sdtItem
¨¨* 1
.
¨¨1 2
Signed
¨¨2 8
;
¨¨8 9
string
≠≠ "
desc
≠≠# '
=
≠≠( )
sdtItem
≠≠* 1
.
≠≠1 2
Description
≠≠2 =
;
≠≠= >
int
ÆÆ 
dec
ÆÆ  #
=
ÆÆ$ %
sdtItem
ÆÆ& -
.
ÆÆ- .
Decimals
ÆÆ. 6
;
ÆÆ6 7
sdtItem
±± #
.
±±# $
AttributeBasedOn
±±$ 4
=
±±5 6
null
±±7 ;
;
±±; <
sdtItem
≤≤ #
.
≤≤# $
Type
≤≤$ (
=
≤≤) *
type
≤≤+ /
;
≤≤/ 0
sdtItem
≥≥ #
.
≥≥# $
Decimals
≥≥$ ,
=
≥≥- .
dec
≥≥/ 2
;
≥≥2 3
sdtItem
¥¥ #
.
¥¥# $
Description
¥¥$ /
=
¥¥0 1
desc
¥¥2 6
;
¥¥6 7
sdtItem
µµ #
.
µµ# $
Length
µµ$ *
=
µµ+ ,
length
µµ- 3
;
µµ3 4
sdtItem
∂∂ #
.
∂∂# $
Signed
∂∂$ *
=
∂∂+ ,
signed
∂∂- 3
;
∂∂3 4
}
∏∏ 
}
ππ 
catch
∫∫ 
(
∫∫ 
	Exception
∫∫ $
e
∫∫% &
)
∫∫& '
{
∫∫( )
output
∫∫* 0
.
∫∫0 1
AddErrorLine
∫∫1 =
(
∫∫= >
e
∫∫> ?
.
∫∫? @
Message
∫∫@ G
)
∫∫G H
;
∫∫H I
}
∫∫J K
;
∫∫K L
}
ºº 
}
ΩΩ 
}
ææ 	
public
¬¬ 
static
¬¬ 
string
¬¬ 
ReturnPicture
¬¬ *
(
¬¬* +
Artech
¬¬+ 1
.
¬¬1 2
Genexus
¬¬2 9
.
¬¬9 :
Common
¬¬: @
.
¬¬@ A
Objects
¬¬A H
.
¬¬H I
	Attribute
¬¬I R
a
¬¬S T
)
¬¬T U
{
√√ 	
string
ƒƒ 
Picture
ƒƒ 
=
ƒƒ 
$str
ƒƒ 
;
ƒƒ  
Picture
≈≈ 
=
≈≈ 
a
≈≈ 
.
≈≈ 
Type
≈≈ 
.
≈≈ 
ToString
≈≈ %
(
≈≈% &
)
≈≈& '
+
≈≈( )
$str
≈≈* -
+
≈≈. /
a
≈≈0 1
.
≈≈1 2
Length
≈≈2 8
.
≈≈8 9
ToString
≈≈9 A
(
≈≈A B
)
≈≈B C
+
≈≈D E
(
≈≈F G
a
≈≈G H
.
≈≈H I
Decimals
≈≈I Q
>
≈≈R S
$num
≈≈T U
?
≈≈V W
$str
≈≈X [
+
≈≈\ ]
a
≈≈^ _
.
≈≈_ `
Decimals
≈≈` h
.
≈≈h i
ToString
≈≈i q
(
≈≈q r
)
≈≈r s
:
≈≈t u
$str
≈≈v x
)
≈≈x y
+
≈≈z {
$str
≈≈| 
+≈≈Ä Å
(≈≈Ç É
a≈≈É Ñ
.≈≈Ñ Ö
Signed≈≈Ö ã
?≈≈å ç
$str≈≈é ë
:≈≈í ì
$str≈≈î ñ
)≈≈ñ ó
;≈≈ó ò
return
∆∆ 
Picture
∆∆ 
;
∆∆ 
}
«« 	
public
…… 
static
…… 
string
…… #
ReturnPictureVariable
…… 2
(
……2 3
Variable
……3 ;
v
……< =
)
……= >
{
   	
string
ÀÀ 
Picture
ÀÀ 
=
ÀÀ 
$str
ÀÀ 
;
ÀÀ  
Picture
ÃÃ 
=
ÃÃ 
v
ÃÃ 
.
ÃÃ 
Type
ÃÃ 
.
ÃÃ 
ToString
ÃÃ %
(
ÃÃ% &
)
ÃÃ& '
+
ÃÃ( )
$str
ÃÃ* -
+
ÃÃ. /
v
ÃÃ0 1
.
ÃÃ1 2
Length
ÃÃ2 8
.
ÃÃ8 9
ToString
ÃÃ9 A
(
ÃÃA B
)
ÃÃB C
+
ÃÃD E
(
ÃÃF G
v
ÃÃG H
.
ÃÃH I
Decimals
ÃÃI Q
>
ÃÃR S
$num
ÃÃT U
?
ÃÃV W
$str
ÃÃX [
+
ÃÃ\ ]
v
ÃÃ^ _
.
ÃÃ_ `
Decimals
ÃÃ` h
.
ÃÃh i
ToString
ÃÃi q
(
ÃÃq r
)
ÃÃr s
:
ÃÃt u
$str
ÃÃv x
)
ÃÃx y
+
ÃÃz {
$str
ÃÃ| 
+ÃÃÄ Å
(ÃÃÇ É
vÃÃÉ Ñ
.ÃÃÑ Ö
SignedÃÃÖ ã
?ÃÃå ç
$strÃÃé ë
:ÃÃí ì
$strÃÃî ñ
)ÃÃñ ó
;ÃÃó ò
return
ÕÕ 
Picture
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
public
–– 
static
–– 
string
–– !
ReturnPictureDomain
–– 0
(
––0 1
Domain
––1 7
d
––8 9
)
––9 :
{
—— 	
string
”” 
Picture
”” 
=
”” 
$str
”” 
;
””  
Picture
‘‘ 
=
‘‘ 
d
‘‘ 
.
‘‘ 
Type
‘‘ 
.
‘‘ 
ToString
‘‘ %
(
‘‘% &
)
‘‘& '
+
‘‘( )
$str
‘‘* -
+
‘‘. /
d
‘‘0 1
.
‘‘1 2
Length
‘‘2 8
.
‘‘8 9
ToString
‘‘9 A
(
‘‘A B
)
‘‘B C
+
‘‘D E
(
‘‘F G
d
‘‘G H
.
‘‘H I
Decimals
‘‘I Q
>
‘‘R S
$num
‘‘T U
?
‘‘V W
$str
‘‘X [
+
‘‘\ ]
d
‘‘^ _
.
‘‘_ `
Decimals
‘‘` h
.
‘‘h i
ToString
‘‘i q
(
‘‘q r
)
‘‘r s
:
‘‘t u
$str
‘‘v x
)
‘‘x y
+
‘‘z {
$str
‘‘| 
+‘‘Ä Å
(‘‘Ç É
d‘‘É Ñ
.‘‘Ñ Ö
Signed‘‘Ö ã
?‘‘å ç
$str‘‘é ë
:‘‘í ì
$str‘‘î ñ
)‘‘ñ ó
;‘‘ó ò
return
’’ 
Picture
’’ 
;
’’ 
}
÷÷ 	
public
ÿÿ 
static
ÿÿ 
void
ÿÿ 

SaveObject
ÿÿ %
(
ÿÿ% &
IOutputService
ÿÿ& 4
output
ÿÿ5 ;
,
ÿÿ; <
KBObject
ÿÿ= E
obj
ÿÿF I
)
ÿÿI J
{
ŸŸ 	
try
€€ 
{
‹‹ 
obj
›› 
.
›› 
Save
›› 
(
›› 
)
›› 
;
›› 
}
ﬁﬁ 
catch
ﬂﬂ 
(
ﬂﬂ 
	Exception
ﬂﬂ 
e
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 
output
·· 
.
·· 
AddErrorLine
·· #
(
··# $
e
··$ %
.
··% &
Message
··& -
+
··. /
$str
··0 5
+
··6 7
e
··8 9
.
··9 :
InnerException
··: H
)
··H I
;
··I J
}
‚‚ 
}
„„ 	
}
ÁÁ 
}ËË é∂
KC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\CodeGeneration\CodeGeneration.cs
	namespace!! 	
Concepto!!
 
.!! 
Packages!! 
.!! 
KBDoctor!! $
{"" 
static## 

class## 
CodeGeneration## 
{$$ 
public&& 
static&& 
void&& !
CreateProcedureGetSet&& 0
(&&0 1
)&&1 2
{'' 	

IKBService(( 
kB(( 
=(( 

UIServices(( &
.((& '
KB((' )
;(() *
if)) 
()) 
kB)) 
!=)) 
null)) 
&&)) 
kB))  
.))  !
CurrentModel))! -
!=)). 0
null))1 5
)))5 6
{** 
SelectObjectOptions++ #
selectObjectOption++$ 6
=++7 8
new++9 <
SelectObjectOptions++= P
(++P Q
)++Q R
;++R S
selectObjectOption,, "
.,," #
MultipleSelection,,# 4
=,,5 6
false,,7 <
;,,< =
KBModel-- 
kbModel-- 
=--  !

UIServices--" ,
.--, -
KB--- /
.--/ 0
CurrentModel--0 <
;--< =
selectObjectOption// "
.//" #
ObjectTypes//# .
.//. /
Add/// 2
(//2 3
KBObjectDescriptor//3 E
.//E F
Get//F I
<//I J
Table//J O
>//O P
(//P Q
)//Q R
)//R S
;//S T
List00 
<00 
Table00 
>00 
tablas00 "
=00# $

UIServices00% /
.00/ 0
SelectObjectDialog000 B
.00B C
SelectObjects00C P
(00P Q
selectObjectOption00Q c
)00c d
as00e g
List00h l
<00l m
Table00m r
>00r s
;00s t
foreach11 
(11 
Table11 
tabla11 $
in11% '
tablas11( .
)11. /
{22 
string55 
title55  
=55! "
$str55# [
+55\ ]
tabla55^ c
.55c d
Name55d h
;55h i
IOutputService66 "
output66# )
=66* +
CommonServices66, :
.66: ;
Output66; A
;66A B
output77 
.77 
StartSection77 '
(77' (
title77( -
)77- .
;77. /
try99 
{:: 
output<< 
.<< 
AddLine<< &
(<<& '
$str<<' 8
)<<8 9
;<<9 :
SDT== 
Sdt== 
===  !
GenerateSdt==" -
(==- .
tabla==. 3
)==3 4
;==4 5
output?? 
.?? 
AddLine?? &
(??& '
$str??' B
)??B C
;??C D 
GenerateGetProcedure@@ ,
(@@, -
kbModel@@- 4
,@@4 5
tabla@@6 ;
,@@; <
Sdt@@= @
)@@@ A
;@@A B
outputBB 
.BB 
AddLineBB &
(BB& '
$strBB' B
)BBB C
;BBC D 
GenerateSetProcedureCC ,
(CC, -
kbModelCC- 4
,CC4 5
tablaCC6 ;
,CC; <
SdtCC= @
)CC@ A
;CCA B
outputEE 
.EE 
AddLineEE &
(EE& '
$strEE' E
)EEE F
;EEF G#
GenerateInsertProcedureFF /
(FF/ 0
kbModelFF0 7
,FF7 8
tablaFF9 >
,FF> ?
SdtFF@ C
)FFC D
;FFD E
outputHH 
.HH 
AddLineHH &
(HH& '
$strHH' A
)HHA B
;HHB C 
GenerateDataProviderII ,
(II, -
kbModelII- 4
,II4 5
tablaII6 ;
,II; <
SdtII= @
)II@ A
;IIA B
outputKK 
.KK 
AddLineKK &
(KK& '
$strKK' :
)KK: ;
;KK; <"
GenerateExistProcedureLL .
(LL. /
kbModelLL/ 6
,LL6 7
tablaLL8 =
,LL= >
SdtLL? B
)LLB C
;LLC D
}MM 
catchNN 
(NN 
	ExceptionNN $
exNN% '
)NN' (
{OO 
outputPP 
.PP 
AddErrorLinePP +
(PP+ ,
exPP, .
)PP. /
;PP/ 0
}QQ 
ApplicationRR 
.RR  
DoEventsRR  (
(RR( )
)RR) *
;RR* +
outputSS 
.SS 

EndSectionSS %
(SS% &
titleSS& +
,SS+ ,
trueSS- 1
)SS1 2
;SS2 3
}UU 
}WW 
}ZZ 
private]] 
static]] 
SDT]] 
GenerateSdt]] &
(]]& '
Table]]' ,
tabla]]- 2
)]]2 3
{^^ 	
SDT__ 
Sdt__ 
=__ 
SDT__ 
.__ 
Create__  
(__  !

UIServices__! +
.__+ ,
KB__, .
.__. /
CurrentModel__/ ;
)__; <
;__< =
Sdt`` 
.`` 
Name`` 
=`` 
$str`` 
+`` 
tabla``  %
.``% &
Name``& *
;``+ ,
Sdtbb 
.bb 
Descriptionbb 
=bb 
tablabb #
.bb# $
Descriptionbb$ /
;bb/ 0
foreachff 
(ff 
TableAttributeff #
atrff$ '
inff( *
tablaff+ 0
.ff0 1
TableStructureff1 ?
.ff? @

Attributesff@ J
)ffJ K
{gg 
SDTItemhh 
itemhh 
=hh 
newhh "
SDTItemhh# *
(hh* +
Sdthh+ .
.hh. /
SDTStructurehh/ ;
)hh; <
;hh< =
itemii 
.ii 
Nameii 
=ii 
atrii 
.ii  
Nameii  $
;ii$ %
itemjj 
.jj 
Descriptionjj  
=jj! "
atrjj# &
.jj& '
	Attributejj' 0
.jj0 1
Descriptionjj1 <
;jj< =
itemkk 
.kk 
AttributeBasedOnkk %
=kk& '
atrkk( +
;kk+ ,
Sdtll 
.ll 
SDTStructurell  
.ll  !
Rootll! %
.ll% &
AddItemll& -
(ll- .
itemll. 2
)ll2 3
;ll3 4
}mm 
Sdtnn 
.nn 
Savenn 
(nn 
)nn 
;nn 
returnoo 
Sdtoo 
;oo 
}pp 	
privaterr 
staticrr 
voidrr  
GenerateGetProcedurerr 0
(rr0 1
KBModelrr1 8
kbModelrr9 @
,rr@ A
TablerrB G
tablarrH M
,rrM N
SDTrrO R
SdtrrS V
)rrV W
{ss 	
Artechtt 
.tt 
Genexustt 
.tt 
Commontt !
.tt! "
Objectstt" )
.tt) *
	Procedurett* 3
proctt4 8
=tt9 :
newtt; >
Artechtt? E
.ttE F
GenexusttF M
.ttM N
CommonttN T
.ttT U
ObjectsttU \
.tt\ ]
	Procedurett] f
(ttf g
kbModelttg n
)ttn o
;tto p
stringuu 
procNameuu 
=uu 
$struu $
+uu% &
tablauu' ,
.uu, -
Nameuu- 1
;uu1 2
procww 
.ww 
Nameww 
=ww 
procNameww  
;ww  !
AddSDTVariablezz 
(zz 
kbModelzz "
,zz" #
proczz$ (
,zz( )
Sdtzz* -
)zz- .
;zz. /
string|| 
Source|| 
=|| 
$str|| 7
+||8 9
DateTime||: B
.||B C
Now||C F
.||F G
ToString||G O
(||O P
)||P Q
+||R S
Environment||T _
.||_ `
NewLine||` g
;||g h
Source}} 
+=}}  
GenerateForEachToSDT}} *
(}}* +
tabla}}+ 0
,}}0 1
Sdt}}2 5
)}}5 6
;}}6 7
proc~~ 
.~~ 
ProcedurePart~~ 
.~~ 
Source~~ %
=~~& '
Source~~( .
;~~. /
proc
ÄÄ 
.
ÄÄ 
Rules
ÄÄ 
.
ÄÄ 
Source
ÄÄ 
=
ÄÄ 
GenerateParmRule
ÄÄ  0
(
ÄÄ0 1
tabla
ÄÄ1 6
,
ÄÄ6 7
Sdt
ÄÄ8 ;
,
ÄÄ; <
$str
ÄÄ< B
)
ÄÄB C
;
ÄÄC D
AddVariables
ÅÅ 
(
ÅÅ 
kbModel
ÅÅ  
,
ÅÅ  !
proc
ÅÅ" &
,
ÅÅ& '
tabla
ÅÅ( -
)
ÅÅ- .
;
ÅÅ. /
proc
ÇÇ 
.
ÇÇ 
Description
ÇÇ 
=
ÇÇ 
$str
ÇÇ /
+
ÇÇ0 1
tabla
ÇÇ2 7
.
ÇÇ7 8
Name
ÇÇ8 <
+
ÇÇ= >
$str
ÇÇ? B
;
ÇÇB C
proc
ÉÉ 
.
ÉÉ 
Save
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
private
ââ 
static
ââ 
void
ââ "
GenerateSetProcedure
ââ 0
(
ââ0 1
KBModel
ââ1 8
kbModel
ââ9 @
,
ââ@ A
Table
ââB G
tabla
ââH M
,
ââM N
SDT
ââO R
Sdt
ââS V
)
ââV W
{
ää 	
Artech
ãã 
.
ãã 
Genexus
ãã 
.
ãã 
Common
ãã !
.
ãã! "
Objects
ãã" )
.
ãã) *
	Procedure
ãã* 3
proc
ãã4 8
=
ãã9 :
new
ãã; >
Artech
ãã? E
.
ããE F
Genexus
ããF M
.
ããM N
Common
ããN T
.
ããT U
Objects
ããU \
.
ãã\ ]
	Procedure
ãã] f
(
ããf g
kbModel
ããg n
)
ããn o
;
ãão p
string
åå 
procName
åå 
=
åå 
$str
åå $
+
åå% &
tabla
åå' ,
.
åå, -
Name
åå- 1
;
åå1 2
proc
éé 
.
éé 
Name
éé 
=
éé 
procName
éé  
;
éé  !
string
èè 
Source
èè 
=
èè 
$str
èè 7
+
èè8 9
DateTime
èè: B
.
èèB C
Now
èèC F
.
èèF G
ToString
èèG O
(
èèO P
)
èèP Q
+
èèR S
Environment
èèT _
.
èè_ `
NewLine
èè` g
;
èèg h
AddSDTVariable
íí 
(
íí 
kbModel
íí "
,
íí" #
proc
íí$ (
,
íí( )
Sdt
íí* -
)
íí- .
;
íí. /
Source
ìì 
+=
ìì $
GenerateForEachFromSDT
ìì ,
(
ìì, -
tabla
ìì- 2
,
ìì2 3
Sdt
ìì4 7
)
ìì7 8
;
ìì8 9
proc
îî 
.
îî 
ProcedurePart
îî 
.
îî 
Source
îî %
=
îî& '
Source
îî( .
;
îî. /
proc
ïï 
.
ïï 
Rules
ïï 
.
ïï 
Source
ïï 
=
ïï 
GenerateParmRule
ïï  0
(
ïï0 1
tabla
ïï1 6
,
ïï6 7
Sdt
ïï8 ;
,
ïï; <
$str
ïï< A
)
ïïA B
;
ïïB C
AddVariables
ññ 
(
ññ 
kbModel
ññ  
,
ññ  !
proc
ññ" &
,
ññ& '
tabla
ññ( -
)
ññ- .
;
ññ. /
proc
óó 
.
óó 
Description
óó 
=
óó 
$str
óó /
+
óó0 1
tabla
óó2 7
.
óó7 8
Name
óó8 <
+
óó= >
$str
óó? B
;
óóB C
proc
òò 
.
òò 
Save
òò 
(
òò 
)
òò 
;
òò 
}
ôô 	
private
õõ 
static
õõ 
void
õõ 
AddVariables
õõ (
(
õõ( )
KBModel
õõ) 0
kbModel
õõ1 8
,
õõ8 9
	Procedure
õõ: C
proc
õõD H
,
õõH I
Table
õõJ O
tabla
õõP U
)
õõU V
{
úú 	
foreach
ûû 
(
ûû 
TableAttribute
ûû #
attr
ûû$ (
in
ûû) +
tabla
ûû, 1
.
ûû1 2
TableStructure
ûû2 @
.
ûû@ A

Attributes
ûûA K
)
ûûK L
{
üü 
Variable
†† 
oVariableNew
†† %
=
††& '
new
††( +
Variable
††, 4
(
††4 5
proc
††5 9
.
††9 :
	Variables
††: C
)
††C D
;
††D E
oVariableNew
°° 
.
°° 
Name
°° !
=
°°" #
attr
°°$ (
.
°°( )
Name
°°) -
;
°°- .
oVariableNew
¢¢ 
.
¢¢ 
AttributeBasedOn
¢¢ -
=
¢¢. /
attr
¢¢0 4
;
¢¢4 5
DataType
§§ 
.
§§ 
	ParseInto
§§ "
(
§§" #
kbModel
§§# *
,
§§* +
attr
§§, 0
.
§§0 1
Name
§§1 5
,
§§5 6
oVariableNew
§§7 C
)
§§C D
;
§§D E
proc
¶¶ 
.
¶¶ 
	Variables
¶¶ 
.
¶¶ 
Add
¶¶ "
(
¶¶" #
oVariableNew
¶¶# /
)
¶¶/ 0
;
¶¶0 1
}
ßß 
}
®® 	
private
™™ 
static
™™ 
string
™™ 
GenerateParmRule
™™ .
(
™™. /
Table
™™/ 4
tabla
™™5 :
,
™™: ;
SDT
™™< ?
sdt
™™@ C
,
™™C D
string
™™E K
INorOut
™™L S
)
™™S T
{
´´ 	
string
¨¨ 
Rules
¨¨ 
=
¨¨ 
$str
¨¨ "
;
¨¨" #
foreach
≠≠ 
(
≠≠ 
TableAttribute
≠≠ #
pk
≠≠$ &
in
≠≠' )
tabla
≠≠* /
.
≠≠/ 0
TableStructure
≠≠0 >
.
≠≠> ?

PrimaryKey
≠≠? I
)
≠≠I J
{
ÆÆ 
Rules
ØØ 
+=
ØØ 
$str
ØØ  
+
ØØ! "
pk
ØØ# %
.
ØØ% &
Name
ØØ& *
+
ØØ+ ,
$str
ØØ- 0
;
ØØ0 1
}
±± 
Rules
≤≤ 
+=
≤≤ 
INorOut
≤≤ 
+
≤≤ 
$str
≤≤ "
+
≤≤# $
sdt
≤≤% (
.
≤≤( )
Name
≤≤) -
+
≤≤. /
$str
≤≤0 4
;
≤≤4 5
return
≥≥ 
Rules
≥≥ 
;
≥≥ 
}
¥¥ 	
private
∂∂ 
static
∂∂ 
string
∂∂ #
GenerateParmRuleINSDT
∂∂ 3
(
∂∂3 4
string
∂∂4 :
sdtName
∂∂; B
)
∂∂B C
{
∑∑ 	
string
∏∏ 
Rules
∏∏ 
=
∏∏ 
$str
∏∏ &
+
∏∏' (
sdtName
∏∏) 0
+
∏∏1 2
$str
∏∏3 7
;
∏∏7 8
return
ππ 
Rules
ππ 
;
ππ 
}
∫∫ 	
private
ºº 
static
ºº 
string
ºº  
GenerateNewFromSDT
ºº 0
(
ºº0 1
Table
ºº1 6
tabla
ºº7 <
,
ºº< =
SDT
ºº> A
sdt
ººB E
)
ººE F
{
ΩΩ 	
string
ææ 
Source
ææ 
=
ææ 
$str
ææ !
+
ææ" #
Environment
ææ$ /
.
ææ/ 0
NewLine
ææ0 7
;
ææ7 8
string
øø 
Comment
øø 
=
øø 
$str
øø !
+
øø" #
Environment
øø$ /
.
øø/ 0
NewLine
øø0 7
;
øø7 8
foreach
¬¬ 
(
¬¬ 
TableAttribute
¬¬ #
atr
¬¬$ '
in
¬¬( *
tabla
¬¬+ 0
.
¬¬0 1
TableStructure
¬¬1 ?
.
¬¬? @

Attributes
¬¬@ J
)
¬¬J K
{
√√ 
if
ƒƒ 
(
ƒƒ 
!
ƒƒ 
atr
ƒƒ 
.
ƒƒ 
	IsFormula
ƒƒ "
)
ƒƒ" #
Source
≈≈ 
+=
≈≈ 
$str
≈≈ *
+
≈≈+ ,
atr
≈≈- 0
.
≈≈0 1
Name
≈≈1 5
+
≈≈6 7
$str
≈≈8 >
+
≈≈? @
sdt
≈≈A D
.
≈≈D E
Name
≈≈E I
+
≈≈J K
$str
≈≈L O
+
≈≈P Q
atr
≈≈R U
.
≈≈U V
Name
≈≈V Z
+
≈≈[ \
Environment
≈≈] h
.
≈≈h i
NewLine
≈≈i p
;
≈≈p q
Comment
∆∆ 
+=
∆∆ 
$str
∆∆ 
+
∆∆  !
sdt
∆∆" %
.
∆∆% &
Name
∆∆& *
+
∆∆+ ,
$str
∆∆- 0
+
∆∆1 2
atr
∆∆3 6
.
∆∆6 7
Name
∆∆7 ;
+
∆∆< =
$str
∆∆> C
+
∆∆D E
atr
∆∆F I
.
∆∆I J
Name
∆∆J N
;
∆∆N O
}
»» 
Source
…… 
+=
…… 
$str
…… 3
+
……4 5
Environment
……7 B
.
……B C
NewLine
……C J
;
……J K
Source
   
+=
   
$str
   
+
    
Environment
  ! ,
.
  , -
NewLine
  - 4
;
  4 5
Source
ÃÃ 
+=
ÃÃ 
Comment
ÃÃ 
+
ÃÃ 
Environment
ÃÃ  +
.
ÃÃ+ ,
NewLine
ÃÃ, 3
+
ÃÃ4 5
$str
ÃÃ6 :
;
ÃÃ: ;
return
ŒŒ 
Source
ŒŒ 
;
ŒŒ 
}
œœ 	
private
—— 
static
—— 
string
—— $
GenerateForEachFromSDT
—— 4
(
——4 5
Table
——5 :
tabla
——; @
,
——@ A
SDT
——B E
sdt
——F I
)
——I J
{
““ 	
string
”” 
Source
”” 
=
”” 
$str
”” &
+
””' (
Environment
””) 4
.
””4 5
NewLine
””5 <
;
””< =
Source
‘‘ 
+=
‘‘ 
GenerateWhere
‘‘ '
(
‘‘' (
tabla
‘‘( -
)
‘‘- .
;
‘‘. /
Source
’’ 
+=
’’ #
GenerateAssignFromSDT
’’ /
(
’’/ 0
tabla
’’0 5
,
’’5 6
sdt
’’7 :
)
’’: ;
;
’’; <
Source
÷÷ 
+=
÷÷ 
$str
÷÷ 
+
÷÷  
Environment
÷÷! ,
.
÷÷, -
NewLine
÷÷- 4
;
÷÷4 5
return
ÿÿ 
Source
ÿÿ 
;
ÿÿ 
}
ŸŸ 	
private
‹‹ 
static
‹‹ 
string
‹‹ "
GenerateForEachToSDT
‹‹ 2
(
‹‹2 3
Table
‹‹3 8
tabla
‹‹9 >
,
‹‹> ?
SDT
‹‹@ C
sdt
‹‹D G
)
‹‹G H
{
›› 	
string
ﬁﬁ 
Source
ﬁﬁ 
=
ﬁﬁ 
$str
ﬁﬁ &
+
ﬁﬁ' (
Environment
ﬁﬁ) 4
.
ﬁﬁ4 5
NewLine
ﬁﬁ5 <
;
ﬁﬁ< =
Source
ﬂﬂ 
+=
ﬂﬂ 
GenerateWhere
ﬂﬂ &
(
ﬂﬂ& '
tabla
ﬂﬂ' ,
)
ﬂﬂ, -
;
ﬂﬂ- .
Source
‡‡ 
+=
‡‡ !
GenerateAssignToSDT
‡‡ ,
(
‡‡, -
tabla
‡‡- 2
,
‡‡2 3
sdt
‡‡4 7
)
‡‡7 8
;
‡‡8 9
Source
·· 
+=
·· 
$str
·· 
+
··  
Environment
··! ,
.
··, -
NewLine
··- 4
;
··4 5
return
„„ 
Source
„„ 
;
„„ 
}
‰‰ 	
private
ÊÊ 
static
ÊÊ 
string
ÊÊ !
GenerateAssignToSDT
ÊÊ 1
(
ÊÊ1 2
Table
ÊÊ2 7
tabla
ÊÊ8 =
,
ÊÊ= >
SDT
ÊÊ? B
sdt
ÊÊC F
)
ÊÊF G
{
ÁÁ 	
String
ËË 
Source
ËË 
=
ËË 
Environment
ËË '
.
ËË' (
NewLine
ËË( /
;
ËË/ 0
foreach
ÈÈ 
(
ÈÈ 
TableAttribute
ÈÈ #
atr
ÈÈ$ '
in
ÈÈ( *
tabla
ÈÈ+ 0
.
ÈÈ0 1
TableStructure
ÈÈ1 ?
.
ÈÈ? @

Attributes
ÈÈ@ J
)
ÈÈJ K
{
ÍÍ 
if
ÎÎ 
(
ÎÎ 
!
ÎÎ 
atr
ÎÎ 
.
ÎÎ 
IsKey
ÎÎ 
)
ÎÎ 
Source
ÏÏ 
+=
ÏÏ 
$str
ÏÏ +
+
ÏÏ, -
sdt
ÏÏ. 1
.
ÏÏ1 2
Name
ÏÏ2 6
+
ÏÏ7 8
$str
ÏÏ9 <
+
ÏÏ= >
atr
ÏÏ? B
.
ÏÏB C
Name
ÏÏC G
+
ÏÏH I
$str
ÏÏJ O
+
ÏÏP Q
atr
ÏÏR U
.
ÏÏU V
Name
ÏÏV Z
+
ÏÏ[ \
Environment
ÏÏ] h
.
ÏÏh i
NewLine
ÏÏi p
;
ÏÏp q
}
ÌÌ 
Source
ÓÓ 
+=
ÓÓ 
Environment
ÓÓ !
.
ÓÓ! "
NewLine
ÓÓ" )
;
ÓÓ) *
return
ÔÔ 
Source
ÔÔ 
;
ÔÔ 
}
 	
private
ÚÚ 
static
ÚÚ 
string
ÚÚ #
GenerateAssignFromSDT
ÚÚ 3
(
ÚÚ3 4
Table
ÚÚ4 9
tabla
ÚÚ: ?
,
ÚÚ? @
SDT
ÚÚA D
sdt
ÚÚE H
)
ÚÚH I
{
ÛÛ 	
String
ÙÙ 
Source
ÙÙ 
=
ÙÙ 
Environment
ÙÙ '
.
ÙÙ' (
NewLine
ÙÙ( /
;
ÙÙ/ 0
foreach
ıı 
(
ıı 
TableAttribute
ıı #
atr
ıı$ '
in
ıı( *
tabla
ıı+ 0
.
ıı0 1
TableStructure
ıı1 ?
.
ıı? @

Attributes
ıı@ J
)
ııJ K
{
ˆˆ 
if
˜˜ 
(
˜˜ 
!
˜˜ 
atr
˜˜ 
.
˜˜ 
IsKey
˜˜ 
)
˜˜ 
Source
¯¯ 
+=
¯¯ 
$str
¯¯  ,
+
¯¯. /
atr
¯¯0 3
.
¯¯3 4
Name
¯¯4 8
+
¯¯9 :
$str
¯¯; A
+
¯¯C D
sdt
¯¯E H
.
¯¯H I
Name
¯¯I M
+
¯¯N O
$str
¯¯P S
+
¯¯T U
atr
¯¯V Y
.
¯¯Y Z
Name
¯¯Z ^
+
¯¯_ `
Environment
¯¯a l
.
¯¯l m
NewLine
¯¯m t
;
¯¯t u
}
˘˘ 
Source
˙˙ 
+=
˙˙ 
Environment
˙˙ !
.
˙˙! "
NewLine
˙˙" )
;
˙˙) *
return
˚˚ 
Source
˚˚ 
;
˚˚ 
}
¸¸ 	
private
˛˛ 
static
˛˛ 
string
˛˛ 
GenerateWhere
˛˛ +
(
˛˛+ ,
Table
˛˛, 1
tabla
˛˛2 7
)
˛˛7 8
{
ˇˇ 	
string
ÄÄ 
Source
ÄÄ 
=
ÄÄ 
$str
ÄÄ 
;
ÄÄ 
foreach
ÅÅ 
(
ÅÅ 
TableAttribute
ÅÅ #
pk
ÅÅ$ &
in
ÅÅ' )
tabla
ÅÅ* /
.
ÅÅ/ 0
TableStructure
ÅÅ0 >
.
ÅÅ> ?

PrimaryKey
ÅÅ? I
)
ÅÅI J
{
ÇÇ 
Source
ÉÉ 
+=
ÉÉ 
$str
ÉÉ (
+
ÉÉ) *
pk
ÉÉ+ -
.
ÉÉ- .
Name
ÉÉ. 2
+
ÉÉ3 4
$str
ÉÉ5 ;
+
ÉÉ< =
pk
ÉÉ> @
.
ÉÉ@ A
Name
ÉÉA E
+
ÉÉF G
Environment
ÉÉH S
.
ÉÉS T
NewLine
ÉÉT [
;
ÉÉ[ \
}
ÑÑ 
return
ÜÜ 
Source
ÜÜ 
;
ÜÜ 
}
áá 	
private
ââ 
static
ââ 
string
ââ 
GenerateWhereSDT
ââ .
(
ââ. /
Table
ââ/ 4
tabla
ââ5 :
,
ââ: ;
string
ââ< B
sdtname
ââC J
)
ââJ K
{
ää 	
string
ãã 
Source
ãã 
=
ãã 
$str
ãã 
;
ãã 
foreach
åå 
(
åå 
TableAttribute
åå #
pk
åå$ &
in
åå' )
tabla
åå* /
.
åå/ 0
TableStructure
åå0 >
.
åå> ?

PrimaryKey
åå? I
)
ååI J
{
éé 
string
èè 
attName
èè 
=
èè  
pk
èè! #
.
èè# $
Name
èè$ (
;
èè( )
Source
êê 
+=
êê 
$str
êê (
+
êê) *
attName
êê+ 2
+
êê3 4
$str
êê5 ;
+
êê< =
sdtname
êê> E
+
êêF G
$str
êêH K
+
êêL M
attName
êêN U
+
êêV W
$str
êêX e
+
êêf g
sdtname
êêh o
+
êêp q
$str
êêr u
+
êêv w
attName
êêx 
+êêÄ Å
$strêêÇ è
+êêê ë
Environmentêêí ù
.êêù û
NewLineêêû •
;êê• ¶
}
ëë 
return
ìì 
Source
ìì 
;
ìì 
}
îî 	
private
ññ 
static
ññ 
string
ññ 
GenerateListaAtt
ññ .
(
ññ. /
Table
ññ/ 4
tabla
ññ5 :
)
ññ: ;
{
óó 	
string
òò 
Source
òò 
=
òò 
$str
òò 
;
òò 
foreach
ôô 
(
ôô 
TableAttribute
ôô #
att
ôô$ '
in
ôô( *
tabla
ôô+ 0
.
ôô0 1
TableStructure
ôô1 ?
.
ôô? @

Attributes
ôô@ J
)
ôôJ K
{
öö 
Source
õõ 
+=
õõ 
$str
õõ #
+
õõ$ %
att
õõ& )
.
õõ) *
Name
õõ* .
+
õõ/ 0
Environment
õõ1 <
.
õõ< =
NewLine
õõ= D
;
õõD E
}
úú 
return
ûû 
Source
ûû 
;
ûû 
}
üü 	
public
££ 
static
££ 
void
££ 
AddSDTVariable
££ )
(
££) *
KBModel
££* 1
kbModel
££2 9
,
££9 :
Artech
££; A
.
££A B
Genexus
££B I
.
££I J
Common
££J P
.
££P Q
Objects
££Q X
.
££X Y
	Procedure
££Y b
proc
££c g
,
££g h
SDT
££i l
sdtobj
££m s
)
££s t
{
§§ 	
Variable
•• 
oVariableNew
•• !
=
••" #
new
••$ '
Variable
••( 0
(
••0 1
proc
••1 5
.
••5 6
	Variables
••6 ?
)
••? @
;
••@ A
oVariableNew
¶¶ 
.
¶¶ 
Name
¶¶ 
=
¶¶ 
sdtobj
¶¶  &
.
¶¶& '
Name
¶¶' +
;
¶¶+ ,
oVariableNew
ßß 
.
ßß 
Type
ßß 
=
ßß 
eDBType
ßß  '
.
ßß' (
GX_SDT
ßß( .
;
ßß. /
DataType
©© 
.
©© 
	ParseInto
©© 
(
©© 
kbModel
©© &
,
©©& '
sdtobj
©©( .
.
©©. /
Name
©©/ 3
,
©©3 4
oVariableNew
©©5 A
)
©©A B
;
©©B C
proc
´´ 
.
´´ 
	Variables
´´ 
.
´´ 
Add
´´ 
(
´´ 
oVariableNew
´´ +
)
´´+ ,
;
´´, -
}
¨¨ 	
public
ÆÆ 
static
ÆÆ 
void
ÆÆ  
AddSDTVariableToDP
ÆÆ -
(
ÆÆ- .
KBModel
ÆÆ. 5
kbModel
ÆÆ6 =
,
ÆÆ= >
DataProvider
ÆÆ? K
dp
ÆÆL N
,
ÆÆN O
SDT
ÆÆP S
sdtobj
ÆÆT Z
,
ÆÆZ [
string
ÆÆ\ b
sdtname
ÆÆc j
)
ÆÆj k
{
ØØ 	
Variable
∞∞ 
oVariableNew
∞∞ !
=
∞∞" #
new
∞∞$ '
Variable
∞∞( 0
(
∞∞0 1
dp
∞∞1 3
.
∞∞3 4
	Variables
∞∞4 =
)
∞∞= >
;
∞∞> ?
oVariableNew
±± 
.
±± 
Name
±± 
=
±± 
sdtname
±±  '
;
±±' (
oVariableNew
≤≤ 
.
≤≤ 
Type
≤≤ 
=
≤≤ 
eDBType
≤≤  '
.
≤≤' (
GX_SDT
≤≤( .
;
≤≤. /
DataType
¥¥ 
.
¥¥ 
	ParseInto
¥¥ 
(
¥¥ 
kbModel
¥¥ &
,
¥¥& '
sdtobj
¥¥( .
.
¥¥. /
Name
¥¥/ 3
,
¥¥3 4
oVariableNew
¥¥5 A
)
¥¥A B
;
¥¥B C
dp
∂∂ 
.
∂∂ 
	Variables
∂∂ 
.
∂∂ 
Add
∂∂ 
(
∂∂ 
oVariableNew
∂∂ )
)
∂∂) *
;
∂∂* +
}
∑∑ 	
private
ππ 
static
ππ 
void
ππ %
GenerateInsertProcedure
ππ 3
(
ππ3 4
KBModel
ππ4 ;
kbModel
ππ< C
,
ππC D
Table
ππE J
tabla
ππK P
,
ππP Q
SDT
ππR U
Sdt
ππV Y
)
ππY Z
{
∫∫ 	
Artech
ªª 
.
ªª 
Genexus
ªª 
.
ªª 
Common
ªª !
.
ªª! "
Objects
ªª" )
.
ªª) *
	Procedure
ªª* 3
proc
ªª4 8
=
ªª9 :
new
ªª; >
Artech
ªª? E
.
ªªE F
Genexus
ªªF M
.
ªªM N
Common
ªªN T
.
ªªT U
Objects
ªªU \
.
ªª\ ]
	Procedure
ªª] f
(
ªªf g
kbModel
ªªg n
)
ªªn o
;
ªªo p
string
ºº 
procName
ºº 
=
ºº 
$str
ºº $
+
ºº% &
tabla
ºº' ,
.
ºº, -
Name
ºº- 1
;
ºº1 2
proc
ææ 
.
ææ 
Name
ææ 
=
ææ 
procName
ææ  
;
ææ  !
string
øø 
Source
øø 
=
øø 
$str
øø 7
+
øø8 9
DateTime
øø: B
.
øøB C
Now
øøC F
.
øøF G
ToString
øøG O
(
øøO P
)
øøP Q
+
øøR S
Environment
øøT _
.
øø_ `
NewLine
øø` g
;
øøg h
AddSDTVariable
¬¬ 
(
¬¬ 
kbModel
¬¬ "
,
¬¬" #
proc
¬¬$ (
,
¬¬( )
Sdt
¬¬* -
)
¬¬- .
;
¬¬. /
Source
√√ 
+=
√√  
GenerateNewFromSDT
√√ (
(
√√( )
tabla
√√) .
,
√√. /
Sdt
√√0 3
)
√√3 4
;
√√4 5
proc
ƒƒ 
.
ƒƒ 
ProcedurePart
ƒƒ 
.
ƒƒ 
Source
ƒƒ %
=
ƒƒ& '
Source
ƒƒ( .
;
ƒƒ. /
proc
≈≈ 
.
≈≈ 
Rules
≈≈ 
.
≈≈ 
Source
≈≈ 
=
≈≈ #
GenerateParmRuleINSDT
≈≈  5
(
≈≈5 6
Sdt
≈≈6 9
.
≈≈9 :
Name
≈≈: >
)
≈≈> ?
;
≈≈? @
AddVariables
∆∆ 
(
∆∆ 
kbModel
∆∆  
,
∆∆  !
proc
∆∆" &
,
∆∆& '
tabla
∆∆( -
)
∆∆- .
;
∆∆. /
proc
«« 
.
«« 
Description
«« 
=
«« 
$str
«« 2
+
««3 4
tabla
««5 :
.
««: ;
Name
««; ?
+
««@ A
$str
««B E
;
««E F
proc
»» 
.
»» 
Save
»» 
(
»» 
)
»» 
;
»» 
}
…… 	
private
ÃÃ 
static
ÃÃ 
void
ÃÃ "
GenerateDataProvider
ÃÃ 0
(
ÃÃ0 1
KBModel
ÃÃ1 8
kbModel
ÃÃ9 @
,
ÃÃ@ A
Table
ÃÃB G
tabla
ÃÃH M
,
ÃÃM N
SDT
ÃÃO R
Sdt
ÃÃS V
)
ÃÃV W
{
ÕÕ 	
Artech
ŒŒ 
.
ŒŒ 
Genexus
ŒŒ 
.
ŒŒ 
Common
ŒŒ !
.
ŒŒ! "
Objects
ŒŒ" )
.
ŒŒ) *
DataProvider
ŒŒ* 6
dp
ŒŒ7 9
=
ŒŒ: ;
new
ŒŒ< ?
Artech
ŒŒ@ F
.
ŒŒF G
Genexus
ŒŒG N
.
ŒŒN O
Common
ŒŒO U
.
ŒŒU V
Objects
ŒŒV ]
.
ŒŒ] ^
DataProvider
ŒŒ^ j
(
ŒŒj k
kbModel
ŒŒk r
)
ŒŒr s
;
ŒŒs t
string
œœ 
dpName
œœ 
=
œœ 
$str
œœ !
+
œœ" #
tabla
œœ$ )
.
œœ) *
Name
œœ* .
;
œœ. /
string
–– 
sdtparam
–– 
=
–– 
$str
–– &
+
––' (
Sdt
––) ,
.
––, -
Name
––- 1
;
––1 2
dp
““ 
.
““ 
Name
““ 
=
““ 
dpName
““ 
;
““ 
string
”” 
Source
”” 
;
”” 
Source
’’ 
=
’’ 
Sdt
’’ 
.
’’ 
Name
’’ 
+
’’ 
Environment
’’  +
.
’’+ ,
NewLine
’’, 3
;
’’3 4
Source
◊◊ 
+=
◊◊ 
GenerateWhereSDT
◊◊ &
(
◊◊& '
tabla
◊◊' ,
,
◊◊, -
sdtparam
◊◊. 6
)
◊◊6 7
;
◊◊7 8
Source
ÿÿ 
+=
ÿÿ 
$str
ÿÿ 
+
ÿÿ 
Environment
ÿÿ '
.
ÿÿ' (
NewLine
ÿÿ( /
;
ÿÿ/ 0
Source
ŸŸ 
+=
ŸŸ 
GenerateListaAtt
ŸŸ &
(
ŸŸ& '
tabla
ŸŸ' ,
)
ŸŸ, -
;
ŸŸ- .
Source
⁄⁄ 
+=
⁄⁄ 
$str
⁄⁄ 
;
⁄⁄ 
dp
‹‹ 
.
‹‹  
DataProviderSource
‹‹ !
.
‹‹! "
Source
‹‹" (
=
‹‹) *
Source
‹‹+ 1
;
‹‹1 2 
AddSDTVariableToDP
ﬁﬁ 
(
ﬁﬁ 
kbModel
ﬁﬁ &
,
ﬁﬁ& '
dp
ﬁﬁ( *
,
ﬁﬁ+ ,
Sdt
ﬁﬁ- 0
,
ﬁﬁ0 1
sdtparam
ﬁﬁ2 :
)
ﬁﬁ: ;
;
ﬁﬁ; < 
AddSDTVariableToDP
ﬂﬂ 
(
ﬂﬂ 
kbModel
ﬂﬂ &
,
ﬂﬂ& '
dp
ﬂﬂ( *
,
ﬂﬂ* +
Sdt
ﬂﬂ, /
,
ﬂﬂ/ 0
Sdt
ﬂﬂ1 4
.
ﬂﬂ4 5
Name
ﬂﬂ5 9
)
ﬂﬂ9 :
;
ﬂﬂ: ;
dp
·· 
.
·· 
Rules
·· 
.
·· 
Source
·· 
=
·· #
GenerateParmRuleINSDT
·· 3
(
··3 4
sdtparam
··4 <
)
··< =
;
··= >
dp
„„ 
.
„„ 
Description
„„ 
=
„„ 
$str
„„ 8
+
„„9 :
tabla
„„; @
.
„„@ A
Name
„„A E
+
„„F G
$str
„„H K
;
„„K L
dp
ÂÂ 
.
ÂÂ 
SetPropertyValue
ÂÂ 
(
ÂÂ  

Properties
ÂÂ  *
.
ÂÂ* +
DPRV
ÂÂ+ /
.
ÂÂ/ 0
Output
ÂÂ0 6
,
ÂÂ6 7
new
ÂÂ8 ;
KBObjectReference
ÂÂ< M
(
ÂÂM N
Sdt
ÂÂN Q
)
ÂÂQ R
)
ÂÂR S
;
ÂÂS T
dp
ÊÊ 
.
ÊÊ 
SetPropertyValue
ÊÊ 
(
ÊÊ  

Properties
ÊÊ  *
.
ÊÊ* +
DPRV
ÊÊ+ /
.
ÊÊ/ 0

Collection
ÊÊ0 :
,
ÊÊ: ;
true
ÊÊ< @
)
ÊÊ@ A
;
ÊÊA B
dp
ÁÁ 
.
ÁÁ 
Save
ÁÁ 
(
ÁÁ 
)
ÁÁ 
;
ÁÁ 
}
ÍÍ 	
private
ÏÏ 
static
ÏÏ 
void
ÏÏ $
GenerateExistProcedure
ÏÏ 2
(
ÏÏ2 3
KBModel
ÏÏ3 :
kbModel
ÏÏ; B
,
ÏÏB C
Table
ÏÏD I
tabla
ÏÏJ O
,
ÏÏO P
SDT
ÏÏQ T
sdt
ÏÏU X
)
ÏÏX Y
{
ÌÌ 	
Artech
ÓÓ 
.
ÓÓ 
Genexus
ÓÓ 
.
ÓÓ 
Common
ÓÓ !
.
ÓÓ! "
Objects
ÓÓ" )
.
ÓÓ) *
	Procedure
ÓÓ* 3
proc
ÓÓ4 8
=
ÓÓ9 :
new
ÓÓ; >
Artech
ÓÓ? E
.
ÓÓE F
Genexus
ÓÓF M
.
ÓÓM N
Common
ÓÓN T
.
ÓÓT U
Objects
ÓÓU \
.
ÓÓ\ ]
	Procedure
ÓÓ] f
(
ÓÓf g
kbModel
ÓÓg n
)
ÓÓn o
;
ÓÓo p
string
ÔÔ 
procName
ÔÔ 
=
ÔÔ 
$str
ÔÔ '
+
ÔÔ( )
tabla
ÔÔ* /
.
ÔÔ/ 0
Name
ÔÔ0 4
;
ÔÔ4 5
AddSDTVariable
ÒÒ 
(
ÒÒ 
kbModel
ÒÒ "
,
ÒÒ" #
proc
ÒÒ$ (
,
ÒÒ( )
sdt
ÒÒ* -
)
ÒÒ- .
;
ÒÒ. /
proc
ÛÛ 
.
ÛÛ 
Name
ÛÛ 
=
ÛÛ 
procName
ÛÛ  
;
ÛÛ  !
string
ÙÙ 
Source
ÙÙ 
;
ÙÙ 
Source
ˆˆ 
=
ˆˆ 
$str
ˆˆ 
+
ˆˆ  !
Environment
ˆˆ" -
.
ˆˆ- .
NewLine
ˆˆ. 5
;
ˆˆ5 6
Source
˜˜ 
+=
˜˜ 
GenerateWhere
˜˜ #
(
˜˜# $
tabla
˜˜$ )
)
˜˜) *
;
˜˜* +
Source
¯¯ 
+=
¯¯ 
$str
¯¯ -
+
¯¯. /
Environment
¯¯0 ;
.
¯¯; <
NewLine
¯¯< C
;
¯¯C D
Source
˘˘ 
+=
˘˘ 
$str
˘˘ '
+
˘˘( )
Environment
˘˘* 5
.
˘˘5 6
NewLine
˘˘6 =
;
˘˘= >
Source
˙˙ 
+=
˙˙ 
$str
˙˙ .
+
˙˙/ 0
Environment
˙˙1 <
.
˙˙< =
NewLine
˙˙= D
;
˙˙D E
Source
˚˚ 
+=
˚˚ 
$str
˚˚ 
+
˚˚  
Environment
˚˚! ,
.
˚˚, -
NewLine
˚˚- 4
;
˚˚4 5
proc
˝˝ 
.
˝˝ 
ProcedurePart
˝˝ 
.
˝˝ 
Source
˝˝ %
=
˝˝& '
Source
˝˝( .
;
˝˝. /
string
ˇˇ 
Rules
ˇˇ 
=
ˇˇ 
$str
ˇˇ "
;
ˇˇ" #
foreach
ÄÄ 
(
ÄÄ 
TableAttribute
ÄÄ #
pk
ÄÄ$ &
in
ÄÄ' )
tabla
ÄÄ* /
.
ÄÄ/ 0
TableStructure
ÄÄ0 >
.
ÄÄ> ?

PrimaryKey
ÄÄ? I
)
ÄÄI J
{
ÅÅ 
Rules
ÇÇ 
+=
ÇÇ 
$str
ÇÇ 
+
ÇÇ  !
pk
ÇÇ" $
.
ÇÇ$ %
Name
ÇÇ% )
+
ÇÇ* +
$str
ÇÇ, /
;
ÇÇ/ 0
}
ÑÑ 
Rules
ÖÖ 
+=
ÖÖ 
$str
ÖÖ $
;
ÖÖ$ %
proc
ÜÜ 
.
ÜÜ 
Rules
ÜÜ 
.
ÜÜ 
Source
ÜÜ 
=
ÜÜ 
Rules
ÜÜ  %
;
ÜÜ% &
AddVariables
áá 
(
áá 
kbModel
áá  
,
áá  !
proc
áá" &
,
áá& '
tabla
áá( -
)
áá- .
;
áá. /
Variable
ââ 
oVariableNew
ââ !
=
ââ" #
new
ââ$ '
Variable
ââ( 0
(
ââ0 1
proc
ââ1 5
.
ââ5 6
	Variables
ââ6 ?
)
ââ? @
;
ââ@ A
oVariableNew
ää 
.
ää 
Name
ää 
=
ää 
$str
ää  (
;
ää( )
oVariableNew
ãã 
.
ãã 
Type
ãã 
=
ãã 
eDBType
ãã  '
.
ãã' (
Boolean
ãã( /
;
ãã/ 0
proc
çç 
.
çç 
	Variables
çç 
.
çç 
Add
çç 
(
çç 
oVariableNew
çç +
)
çç+ ,
;
çç, -
proc
éé 
.
éé 
Description
éé 
=
éé 
$str
éé 8
+
éé9 :
tabla
éé; @
.
éé@ A
Name
ééA E
+
ééF G
$str
ééH K
;
ééK L
proc
èè 
.
èè 
Save
èè 
(
èè 
)
èè 
;
èè 
}
êê 	
}
íí 
}ìì Èß
AC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\GraphHelper.cs
	namespace 	
Concepto
 
. 
Packages 
. 
KBDoctor $
{ 
static 

class 
GraphHelper 
{ 
public 
static 
void 
GenerateGraph (
(( )
)) *
{ 	

IKBService 
kbserv 
= 

UIServices  *
.* +
KB+ -
;- .
string 
title 
= 
$str 7
;7 8
string 

outputFile 
= 
	Functions  )
.) *
CreateOutputFile* :
(: ;
kbserv; A
,A B
titleC H
)H I
;I J
KBModel 
model 
= 
kbserv "
." #
	CurrentKB# ,
., -
DesignModel- 8
;8 9
int 
ATTNAME_LEN 
= 
model #
.# $
GetPropertyValue$ 4
<4 5
int5 8
>8 9
(9 :
$str: G
)G H
;H I
int 
TBLNAME_LEN 
= 
model #
.# $
GetPropertyValue$ 4
<4 5
int5 8
>8 9
(9 :
$str: G
)G H
;H I
int   
OBJNAME_LEN   
=   
model   #
.  # $
GetPropertyValue  $ 4
<  4 5
int  5 8
>  8 9
(  9 :
$str  : G
)  G H
;  H I
IOutputService## 
output## !
=##" #
CommonServices##$ 2
.##2 3
Output##3 9
;##9 :
output$$ 
.$$ 
StartSection$$ 
($$  
title$$  %
)$$% &
;$$& '
KBDoctorXMLWriter&& 
writer&& $
=&&% &
new&&' *
KBDoctorXMLWriter&&+ <
(&&< =

outputFile&&= G
,&&G H
Encoding&&I Q
.&&Q R
UTF8&&R V
)&&V W
;&&W X
writer'' 
.'' 
	AddHeader'' 
('' 
title'' "
)''" #
;''# $
writer(( 
.(( 
AddTableHeader(( !
(((! "
new((" %
string((& ,
[((, -
]((- .
{((/ 0
$str((1 8
,((8 9
$str((: @
}((A B
)((B C
;((C D
string** 
Check** 
=** 
$str** 
;** 
string++ 
Name++ 
=++ 
$str++ 
;++ 
string,, 
FileName,, 
=,, 
$str,,  
;,,  !
Check.. 
=.. 
$str.. $
;..$ %
Name// 
=// 
	Functions// 
.// 
CleanFileName// *
(//* +
Check//+ 0
)//0 1
;//1 2
FileName00 
=00 
kbserv00 
.00 
	CurrentKB00 '
.00' (
UserDirectory00( 5
+006 7
$str008 E
+00F G
Name00H L
+00M N
$str00O V
;00V W 
GenerateKBTableGraph11  
(11  !
Name11! %
,11% &
FileName11' /
)11/ 0
;110 1
writer22 
.22 
AddTableData22 
(22  
new22  #
string22$ *
[22* +
]22+ ,
{22- .
Check22/ 4
,224 5
	Functions226 ?
.22? @
linkFile22@ H
(22H I
FileName22I Q
)22Q R
}22S T
)22T U
;22U V
Check44 
=44 
$str44 %
;44% &
Name55 
=55 
	Functions55 
.55 
CleanFileName55 *
(55* +
Check55+ 0
)550 1
;551 2
FileName66 
=66 
kbserv66 
.66 
	CurrentKB66 '
.66' (
UserDirectory66( 5
+666 7
$str668 E
+66F G
Name66H L
+66M N
$str66O V
;66V W!
GenerateKBObjectGraph77 !
(77! "
Name77" &
,77& '
FileName77( 0
)770 1
;771 2
writer88 
.88 
AddTableData88 
(88  
new88  #
string88$ *
[88* +
]88+ ,
{88- .
Check88/ 4
,884 5
	Functions886 ?
.88? @
linkFile88@ H
(88H I
FileName88I Q
)88Q R
}88S T
)88T U
;88U V
Check:: 
=:: 
$str:: %
;::% &
Name;; 
=;; 
	Functions;; 
.;; 
CleanFileName;; *
(;;* +
Check;;+ 0
);;0 1
;;;1 2
FileName<< 
=<< 
kbserv<< 
.<< 
	CurrentKB<< '
.<<' (
UserDirectory<<( 5
+<<6 7
$str<<8 E
+<<F G
Name<<H L
+<<M N
$str<<O V
;<<V W!
GenerateKBModuleGraph== !
(==! "
Name==" &
,==& '
FileName==( 0
)==0 1
;==1 2
writer>> 
.>> 
AddTableData>> 
(>>  
new>>  #
string>>$ *
[>>* +
]>>+ ,
{>>- .
Check>>/ 4
,>>4 5
	Functions>>6 ?
.>>? @
linkFile>>@ H
(>>H I
FileName>>I Q
)>>Q R
}>>S T
)>>T U
;>>U V
writer@@ 
.@@ 
	AddFooter@@ 
(@@ 
)@@ 
;@@ 
writerAA 
.AA 
CloseAA 
(AA 
)AA 
;AA 
KBDoctorHelperCC 
.CC 
ShowKBDoctorResultsCC .
(CC. /

outputFileCC/ 9
)CC9 :
;CC: ;
boolDD 
successDD 
=DD 
trueDD 
;DD  
outputEE 
.EE 

EndSectionEE 
(EE 
titleEE #
,EE# $
successEE% ,
)EE, -
;EE- .
}FF 	
privateHH 
staticHH 
voidHH )
GenerateKBConexComponentGraphHH 9
(HH9 :
stringHH: @
nameHHA E
)HHE F
{II 	

IKBServiceJJ 
kbservJJ 
=JJ 

UIServicesJJ  *
.JJ* +
KBJJ+ -
;JJ- .
KBModelKK 
modelKK 
=KK 
kbservKK "
.KK" #
CurrentModelKK# /
;KK/ 0
intLL 
iLL 
=LL 
$numLL 
;LL 
stringMM 
fileNameMM 
=MM 
nameMM "
+MM# $
iMM% &
+MM' (
$strMM) 0
;MM0 1
KBObjectCollectionNN 
visitedNN &
=NN' (
newNN) ,
KBObjectCollectionNN- ?
(NN? @
)NN@ A
;NNA B
IEnumerablePP 
<PP 
KBObjectPP  
>PP  !
listObjNodePP" -
=PP. /
(PP0 1
fromPP1 5
rPP6 7
inPP8 :
modelPP; @
.PP@ A
ObjectsPPA H
.PPH I
GetAllPPI O
(PPO P
)PPP Q
wherePPR W
isNodePPX ^
(PP^ _
rPP_ `
)PP` a
selectPPb h
modelPPi n
.PPn o
ObjectsPPo v
.PPv w
GetPPw z
(PPz {
rPP{ |
.PP| }
Key	PP} Ä
)
PPÄ Å
)
PPÅ Ç
;
PPÇ É
foreachRR 
(RR 
KBObjectRR 
objRR !
inRR" $
listObjNodeRR% 0
)RR0 1
{SS 
ifUU 
(UU 
!UU 
visitedUU 
.UU 
ContainsUU %
(UU% &
objUU& )
)UU) *
)UU* +
{VV 
iWW 
+=WW 
$numWW 
;WW 
visitedXX 
.XX  
AddXX  #
(XX# $
objXX$ '
)XX' (
;XX( )
IOutputServiceYY &
outputYY' -
=YY. /
CommonServicesYY0 >
.YY> ?
OutputYY? E
;YYE F
outputZZ 
.ZZ 
AddLineZZ &
(ZZ& '
$strZZ' )
)ZZ) *
;ZZ* +
output[[ 
.[[ 
AddWarningLine[[ -
([[- .
$str[[. H
+[[I J
i[[K L
.[[L M
ToString[[M U
([[U V
)[[V W
)[[W X
;[[X Y
ComponenteConexo]] (
(]]( )
obj]]) ,
,]], -
visited]]. 5
)]]5 6
;]]6 7
output__ 
.__ 
AddWarningLine__ -
(__- .
$str__. F
+__G H
i__I J
.__J K
ToString__K S
(__S T
)__T U
)__U V
;__V W
}`` 
}aa 
}ff	 

privatehh 
statichh 
boolhh 
isNodehh "
(hh" #
KBObjecthh# +
objhh, /
)hh/ 0
{ii 	
ifjj 
(jj 
objjj 
!=jj 
nulljj 
)jj 
returnkk 
(kk 
(kk 
	Functionskk "
.kk" #
	isRunablekk# ,
(kk, -
objkk- 0
)kk0 1
&&kk2 4
ObjectsHelperkk5 B
.kkB C
isGeneratedkkC N
(kkN O
objkkO R
)kkR S
)kkS T
||kkU W
(kkX Y
objkkY \
iskk] _
Tablekk` e
)kke f
||kkg i
(kkj k
objkkk n
iskko q
ExternalObject	kkr Ä
)
kkÄ Å
)
kkÅ Ç
;
kkÇ É
elsell 
returnmm 
falsemm 
;mm 
}nn 	
privatepp 
staticpp 
voidpp 
ComponenteConexopp ,
(pp, -
KBObjectpp- 5
objpp6 9
,pp9 :
KBObjectCollectionpp; M
visitedppN U
)ppU V
{qq 	
foreachss 
(ss 
EntityReferencess $
rss% &
inss' )
objss* -
.ss- .
GetReferencesToss. =
(ss= >
)ss> ?
)ss? @
{tt 
KBObjectuu 
objRefuu 
=uu  !
KBObjectuu" *
.uu* +
Getuu+ .
(uu. /
objuu/ 2
.uu2 3
Modeluu3 8
,uu8 9
ruu: ;
.uu; <
Fromuu< @
)uu@ A
;uuA B
	VisitNodevv 
(vv 
visitedvv !
,vv! "
objvv# &
,vv& '
objRefvv( .
)vv. /
;vv/ 0
}ww 
foreachyy 
(yy 
EntityReferenceyy $
ryy% &
inyy' )
objyy* -
.yy- .
GetReferencesyy. ;
(yy; <
)yy< =
)yy= >
{zz 
KBObject{{ 
objRef{{ 
={{  !
KBObject{{" *
.{{* +
Get{{+ .
({{. /
obj{{/ 2
.{{2 3
Model{{3 8
,{{8 9
r{{: ;
.{{; <
To{{< >
){{> ?
;{{? @
	VisitNode|| 
(|| 
visited|| !
,||! "
obj||# &
,||& '
objRef||( .
)||. /
;||/ 0
}}} 
}~~ 	
private
ÄÄ 
static
ÄÄ 
void
ÄÄ 
	VisitNode
ÄÄ %
(
ÄÄ% & 
KBObjectCollection
ÄÄ& 8
visited
ÄÄ9 @
,
ÄÄ@ A
KBObject
ÄÄB J
obj
ÄÄK N
,
ÄÄN O
KBObject
ÄÄP X
objRef
ÄÄY _
)
ÄÄ_ `
{
ÅÅ 	
IOutputService
ÇÇ 
output
ÇÇ !
=
ÇÇ" #
CommonServices
ÇÇ$ 2
.
ÇÇ2 3
Output
ÇÇ3 9
;
ÇÇ9 :
if
ÉÉ 
(
ÉÉ 
isNode
ÉÉ 
(
ÉÉ 
objRef
ÉÉ 
)
ÉÉ 
)
ÉÉ 
{
ÑÑ 
output
ÖÖ 
.
ÖÖ 
AddLine
ÖÖ 
(
ÖÖ 

NombreNodo
ÖÖ  *
(
ÖÖ* +
obj
ÖÖ+ .
)
ÖÖ. /
+
ÖÖ0 1
$str
ÖÖ2 5
+
ÖÖ6 7

NombreNodo
ÖÖ8 B
(
ÖÖB C
objRef
ÖÖC I
)
ÖÖI J
)
ÖÖJ K
;
ÖÖK L
if
áá 
(
áá 
!
áá 
visited
áá 
.
áá 
Contains
áá %
(
áá% &
objRef
áá& ,
)
áá, -
)
áá- .
{
àà 
visited
ââ 
.
ââ 
Add
ââ 
(
ââ  
objRef
ââ  &
)
ââ& '
;
ââ' (
ComponenteConexo
ää $
(
ää$ %
objRef
ää% +
,
ää+ ,
visited
ää- 4
)
ää4 5
;
ää5 6
}
åå 
}
çç 
}
éé 	
private
ìì 
static
ìì 
void
ìì "
GenerateKBTableGraph
ìì 0
(
ìì0 1
string
ìì1 7
name
ìì8 <
,
ìì< =
string
ìì> D
fileName
ììE M
)
ììM N
{
îî 	

IKBService
ïï 
kbserv
ïï 
=
ïï 

UIServices
ïï  *
.
ïï* +
KB
ïï+ -
;
ïï- .
KBModel
ññ 
model
ññ 
=
ññ 
kbserv
ññ "
.
ññ" #
CurrentModel
ññ# /
;
ññ/ 0
StreamWriter
óó 

scriptFile
óó #
=
óó$ %
new
óó& )
StreamWriter
óó* 6
(
óó6 7
fileName
óó7 ?
)
óó? @
;
óó@ A
IOutputService
òò 
output
òò !
=
òò" #
CommonServices
òò$ 2
.
òò2 3
Output
òò3 9
;
òò9 :
StringCollection
ôô 
aristas
ôô $
=
ôô% &
new
ôô' *
StringCollection
ôô+ ;
(
ôô; <
)
ôô< =
;
ôô= >
output
öö 
.
öö 
AddLine
öö 
(
öö 
$str
öö (
+
öö) *
name
öö+ /
)
öö/ 0
;
öö0 1

scriptFile
úú 
.
úú 
	WriteLine
úú  
(
úú  !
$str
úú! M
)
úúM N
;
úúN O

scriptFile
ûû 
.
ûû 
	WriteLine
ûû  
(
ûû  !
$str
ûû! |
)
ûû| }
;
ûû} ~

scriptFile
üü 
.
üü 
	WriteLine
üü  
(
üü  !
$strüü! »
)üü» …
;üü…  

scriptFile
°° 
.
°° 
	WriteLine
°°  
(
°°  !
$str
°°! [
)
°°[ \
;
°°\ ]

scriptFile
¢¢ 
.
¢¢ 
	WriteLine
¢¢  
(
¢¢  !
$str¢¢! Ç
)¢¢Ç É
;¢¢É Ñ

scriptFile
§§ 
.
§§ 
	WriteLine
§§  
(
§§  !
$str
§§! 0
)
§§0 1
;
§§1 2
foreach
•• 
(
•• 
Table
•• 
t
•• 
in
•• 
Table
••  %
.
••% &
GetAll
••& ,
(
••, -
model
••- 2
)
••2 3
)
••3 4
{
¶¶ 

scriptFile
ßß 
.
ßß 
	WriteLine
ßß $
(
ßß$ %
$str
ßß% ;
+
ßß< =
t
ßß> ?
.
ßß? @
Name
ßß@ D
+
ßßE F
$str
ßßG R
+
ßßS T
t
ßßU V
.
ßßV W
Name
ßßW [
+
ßß\ ]
$str
ßß^ c
)
ßßc d
;
ßßd e

scriptFile
®® 
.
®® 
	WriteLine
®® $
(
®®$ %
$str
®®% ]
+
®®^ _
TablesHelper
®®` l
.
®®l m
TableModule
®®m x
(
®®x y
model
®®y ~
,
®®~ 
t®®Ä Å
)®®Å Ç
.®®Ç É
Name®®É á
+®®à â
$str®®ä ù
)®®ù û
;®®û ü

scriptFile
©© 
.
©© 
	WriteLine
©© $
(
©©$ %
$str
©©% 8
)
©©8 9
;
©©9 :
foreach
™™ 
(
™™ 
TableRelation
™™ &
relation
™™' /
in
™™0 2
t
™™3 4
.
™™4 5"
SuperordinatedTables
™™5 I
)
™™I J
{
´´ 
String
¨¨ 
edge
¨¨ 
=
¨¨  !
$str
¨¨" F
+
¨¨G H
relation
¨¨I Q
.
¨¨Q R
	BaseTable
¨¨R [
.
¨¨[ \
Name
¨¨\ `
+
¨¨a b
$str
¨¨c o
+
¨¨p q
relation
¨¨r z
.
¨¨z {
RelatedTable¨¨{ á
.¨¨á à
Name¨¨à å
+¨¨ç é
$str¨¨è ó
;¨¨ó ò
if
≠≠ 
(
≠≠ 
!
≠≠ 
aristas
≠≠  
.
≠≠  !
Contains
≠≠! )
(
≠≠) *
edge
≠≠* .
)
≠≠. /
)
≠≠/ 0
aristas
ÆÆ 
.
ÆÆ  
Add
ÆÆ  #
(
ÆÆ# $
edge
ÆÆ$ (
)
ÆÆ( )
;
ÆÆ) *
}
ØØ 
}
∞∞ 
;
∞∞ 

scriptFile
±± 
.
±± 
	WriteLine
±±  
(
±±  !
$str
±±! 1
)
±±1 2
;
±±2 3

scriptFile
¥¥ 
.
¥¥ 
	WriteLine
¥¥  
(
¥¥  !
$str
¥¥! 0
)
¥¥0 1
;
¥¥1 2
int
∂∂ 
i
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
foreach
∑∑ 
(
∑∑ 
String
∑∑ 
s
∑∑ 
in
∑∑  
aristas
∑∑! (
)
∑∑( )
{
∏∏ 
string
ππ 
s2
ππ 
=
ππ 
s
ππ 
.
ππ 
Replace
ππ %
(
ππ% &
$str
ππ& ,
,
ππ, -
i
ππ. /
.
ππ/ 0
ToString
ππ0 8
(
ππ8 9
)
ππ9 :
)
ππ: ;
;
ππ; <

scriptFile
∫∫ 
.
∫∫ 
	WriteLine
∫∫ $
(
∫∫$ %
$str
∫∫% 1
+
∫∫2 3
s2
∫∫4 6
)
∫∫6 7
;
∫∫7 8
i
ªª 
+=
ªª 
$num
ªª 
;
ªª 
}
ºº 
;
ºº 

scriptFile
ΩΩ 
.
ΩΩ 
	WriteLine
ΩΩ  
(
ΩΩ  !
$str
ΩΩ! 1
)
ΩΩ1 2
;
ΩΩ2 3

scriptFile
ææ 
.
ææ 
	WriteLine
ææ  
(
ææ  !
$str
ææ! -
)
ææ- .
;
ææ. /

scriptFile
øø 
.
øø 
	WriteLine
øø  
(
øø  !
$str
øø! *
)
øø* +
;
øø+ ,

scriptFile
¿¿ 
.
¿¿ 
Close
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
}
¡¡ 	
private
√√ 
static
√√ 
void
√√ )
GenerateKBTableGraphSatsuma
√√ 7
(
√√7 8
string
√√8 >
name
√√? C
,
√√C D
string
√√E K
fileName
√√L T
)
√√T U
{
ƒƒ 	

IKBService
≈≈ 
kbserv
≈≈ 
=
≈≈ 

UIServices
≈≈  *
.
≈≈* +
KB
≈≈+ -
;
≈≈- .
KBModel
∆∆ 
model
∆∆ 
=
∆∆ 
kbserv
∆∆ "
.
∆∆" #
CurrentModel
∆∆# /
;
∆∆/ 0
StreamWriter
«« 

scriptFile
«« #
=
««$ %
new
««& )
StreamWriter
««* 6
(
««6 7
fileName
««7 ?
)
««? @
;
««@ A
IOutputService
»» 
output
»» !
=
»»" #
CommonServices
»»$ 2
.
»»2 3
Output
»»3 9
;
»»9 :
StringCollection
…… 
aristas
…… $
=
……% &
new
……' *
StringCollection
……+ ;
(
……; <
)
……< =
;
……= >
output
   
.
   
AddLine
   
(
   
$str
   (
+
  ) *
name
  + /
)
  / 0
;
  0 1

scriptFile
ÃÃ 
.
ÃÃ 
	WriteLine
ÃÃ  
(
ÃÃ  !
$str
ÃÃ! 1
)
ÃÃ1 2
;
ÃÃ2 3

scriptFile
ÕÕ 
.
ÕÕ 
	WriteLine
ÕÕ  
(
ÕÕ  !
$str
ÕÕ! -
)
ÕÕ- .
;
ÕÕ. /

scriptFile
ŒŒ 
.
ŒŒ 
	WriteLine
ŒŒ  
(
ŒŒ  !
$str
ŒŒ! *
)
ŒŒ* +
;
ŒŒ+ ,

scriptFile
œœ 
.
œœ 
Close
œœ 
(
œœ 
)
œœ 
;
œœ 
}
–– 	
private
““ 
static
““ 
void
““ #
GenerateKBObjectGraph
““ 1
(
““1 2
string
““2 8
name
““9 =
,
““= >
string
““? E
fileName
““F N
)
““N O
{
”” 	

IKBService
‘‘ 
kbserv
‘‘ 
=
‘‘ 

UIServices
‘‘  *
.
‘‘* +
KB
‘‘+ -
;
‘‘- .
KBModel
’’ 
model
’’ 
=
’’ 
kbserv
’’ "
.
’’" #
CurrentModel
’’# /
;
’’/ 0
StreamWriter
÷÷ 

scriptFile
÷÷ #
=
÷÷$ %
new
÷÷& )
StreamWriter
÷÷* 6
(
÷÷6 7
fileName
÷÷7 ?
)
÷÷? @
;
÷÷@ A
IOutputService
◊◊ 
output
◊◊ !
=
◊◊" #
CommonServices
◊◊$ 2
.
◊◊2 3
Output
◊◊3 9
;
◊◊9 :
StringCollection
ÿÿ 
aristas
ÿÿ $
=
ÿÿ% &
new
ÿÿ' *
StringCollection
ÿÿ+ ;
(
ÿÿ; <
)
ÿÿ< =
;
ÿÿ= >
output
ŸŸ 
.
ŸŸ 
AddLine
ŸŸ 
(
ŸŸ 
$str
ŸŸ (
+
ŸŸ) *
name
ŸŸ+ /
)
ŸŸ/ 0
;
ŸŸ0 1

scriptFile
€€ 
.
€€ 
	WriteLine
€€  
(
€€  !
$str
€€! M
)
€€M N
;
€€N O

scriptFile
›› 
.
›› 
	WriteLine
››  
(
››  !
$str
››! |
)
››| }
;
››} ~

scriptFile
ﬁﬁ 
.
ﬁﬁ 
	WriteLine
ﬁﬁ  
(
ﬁﬁ  !
$strﬁﬁ! »
)ﬁﬁ» …
;ﬁﬁ…  

scriptFile
‡‡ 
.
‡‡ 
	WriteLine
‡‡  
(
‡‡  !
$str
‡‡! [
)
‡‡[ \
;
‡‡\ ]

scriptFile
·· 
.
·· 
	WriteLine
··  
(
··  !
$str··! Ç
)··Ç É
;··É Ñ

scriptFile
„„ 
.
„„ 
	WriteLine
„„  
(
„„  !
$str
„„! 0
)
„„0 1
;
„„1 2
string
ÂÂ 
objName
ÂÂ 
=
ÂÂ 
$str
ÂÂ 
;
ÂÂ  
StringCollection
ÊÊ 
nodos
ÊÊ "
=
ÊÊ# $
new
ÊÊ% (
StringCollection
ÊÊ) 9
(
ÊÊ9 :
)
ÊÊ: ;
;
ÊÊ; <
foreach
ÁÁ 
(
ÁÁ 
KBObject
ÁÁ 
obj
ÁÁ !
in
ÁÁ" $
model
ÁÁ% *
.
ÁÁ* +
Objects
ÁÁ+ 2
.
ÁÁ2 3
GetAll
ÁÁ3 9
(
ÁÁ9 :
)
ÁÁ: ;
)
ÁÁ; <
{
ËË 
if
ÍÍ 
(
ÍÍ 
(
ÍÍ 
	Functions
ÍÍ 
.
ÍÍ 
	isRunable
ÍÍ (
(
ÍÍ( )
obj
ÍÍ) ,
)
ÍÍ, -
&&
ÍÍ. 0
ObjectsHelper
ÍÍ1 >
.
ÍÍ> ?
isGenerated
ÍÍ? J
(
ÍÍJ K
obj
ÍÍK N
)
ÍÍN O
)
ÍÍP Q
||
ÍÍR T
(
ÍÍU V
obj
ÍÍV Y
is
ÍÍZ \
Table
ÍÍ] b
)
ÍÍc d
)
ÍÍd e
{
ÎÎ 
objName
ÌÌ 
=
ÌÌ 

NombreNodo
ÌÌ (
(
ÌÌ( )
obj
ÌÌ) ,
)
ÌÌ, -
;
ÌÌ- .
string
ÓÓ 

modulename
ÓÓ %
=
ÓÓ& '
ModulesHelper
ÓÓ( 5
.
ÓÓ5 6
ObjectModule
ÓÓ6 B
(
ÓÓB C
obj
ÓÓC F
)
ÓÓF G
;
ÓÓG H
if
 
(
 
!
 
nodos
 
.
 
Contains
 '
(
' (
objName
( /
)
/ 0
)
0 1
{
ÒÒ 

scriptFile
ÚÚ "
.
ÚÚ" #
	WriteLine
ÚÚ# ,
(
ÚÚ, -
$str
ÚÚ- C
+
ÚÚD E
objName
ÚÚF M
+
ÚÚN O
$str
ÚÚP [
+
ÚÚ\ ]
objName
ÚÚ^ e
+
ÚÚf g
$str
ÚÚi n
)
ÚÚn o
;
ÚÚo p

scriptFile
ÛÛ "
.
ÛÛ" #
	WriteLine
ÛÛ# ,
(
ÛÛ, -
$str
ÛÛ- e
+
ÛÛf g

modulename
ÛÛh r
+
ÛÛs t
$strÛÛu à
)ÛÛà â
;ÛÛâ ä

scriptFile
ÙÙ "
.
ÙÙ" #
	WriteLine
ÙÙ# ,
(
ÙÙ, -
$str
ÙÙ- @
)
ÙÙ@ A
;
ÙÙA B
nodos
ıı 
.
ıı 
Add
ıı !
(
ıı! "
objName
ıı" )
)
ıı) *
;
ıı* +
}
ˆˆ 
foreach
¯¯ 
(
¯¯ 
EntityReference
¯¯ ,
r
¯¯- .
in
¯¯/ 1
obj
¯¯2 5
.
¯¯5 6
GetReferencesTo
¯¯6 E
(
¯¯E F
)
¯¯F G
)
¯¯G H
{
˘˘ 
KBObject
˙˙  
objRef
˙˙! '
=
˙˙( )
KBObject
˙˙* 2
.
˙˙2 3
Get
˙˙3 6
(
˙˙6 7
obj
˙˙7 :
.
˙˙: ;
Model
˙˙; @
,
˙˙@ A
r
˙˙B C
.
˙˙C D
From
˙˙D H
)
˙˙H I
;
˙˙I J
if
˚˚ 
(
˚˚ 
(
˚˚ 
objRef
˚˚ #
!=
˚˚$ &
null
˚˚' +
)
˚˚+ ,
&&
˚˚- /
(
˚˚0 1
	Functions
˚˚1 :
.
˚˚: ;
	isRunable
˚˚; D
(
˚˚D E
objRef
˚˚E K
)
˚˚K L
||
˚˚M O
objRef
˚˚P V
is
˚˚W Y
Table
˚˚Z _
)
˚˚_ `
)
˚˚a b
{
˝˝ 
string
˛˛ "

objRefName
˛˛# -
=
˛˛. /

NombreNodo
˛˛0 :
(
˛˛: ;
objRef
˛˛; A
)
˛˛A B
;
˛˛B C
if
ˇˇ 
(
ˇˇ  
objName
ˇˇ  '
!=
ˇˇ( *

objRefName
ˇˇ+ 5
)
ˇˇ5 6
{
ÄÄ 
String
ÅÅ  &
edge
ÅÅ' +
=
ÅÅ, -
$str
ÅÅ. R
+
ÅÅS T

objRefName
ÅÅU _
+
ÅÅ` a
$str
ÅÅb n
+
ÅÅo p
objName
ÅÅq x
+
ÅÅy z
$strÅÅ{ É
;ÅÅÉ Ñ
if
ÇÇ  "
(
ÇÇ# $
!
ÇÇ$ %
aristas
ÇÇ% ,
.
ÇÇ, -
Contains
ÇÇ- 5
(
ÇÇ5 6
edge
ÇÇ6 :
)
ÇÇ: ;
)
ÇÇ; <
aristas
ÉÉ$ +
.
ÉÉ+ ,
Add
ÉÉ, /
(
ÉÉ/ 0
edge
ÉÉ0 4
)
ÉÉ4 5
;
ÉÉ5 6
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 
}
áá 
}
àà 
;
àà 

scriptFile
ââ 
.
ââ 
	WriteLine
ââ  
(
ââ  !
$str
ââ! 1
)
ââ1 2
;
ââ2 3

scriptFile
åå 
.
åå 
	WriteLine
åå  
(
åå  !
$str
åå! 0
)
åå0 1
;
åå1 2
int
éé 
i
éé 
=
éé 
$num
éé 
;
éé 
foreach
èè 
(
èè 
String
èè 
s
èè 
in
èè  
aristas
èè! (
)
èè( )
{
êê 
string
ëë 
s2
ëë 
=
ëë 
s
ëë 
.
ëë 
Replace
ëë %
(
ëë% &
$str
ëë& ,
,
ëë, -
i
ëë. /
.
ëë/ 0
ToString
ëë0 8
(
ëë8 9
)
ëë9 :
)
ëë: ;
;
ëë; <

scriptFile
íí 
.
íí 
	WriteLine
íí $
(
íí$ %
$str
íí% 1
+
íí2 3
s2
íí4 6
)
íí6 7
;
íí7 8
i
ìì 
+=
ìì 
$num
ìì 
;
ìì 
}
îî 
;
îî 

scriptFile
ïï 
.
ïï 
	WriteLine
ïï  
(
ïï  !
$str
ïï! 1
)
ïï1 2
;
ïï2 3

scriptFile
ññ 
.
ññ 
	WriteLine
ññ  
(
ññ  !
$str
ññ! -
)
ññ- .
;
ññ. /

scriptFile
óó 
.
óó 
	WriteLine
óó  
(
óó  !
$str
óó! *
)
óó* +
;
óó+ ,

scriptFile
òò 
.
òò 
Close
òò 
(
òò 
)
òò 
;
òò 
}
ôô 	
private
õõ 
static
õõ 
string
õõ 

NombreNodo
õõ (
(
õõ( )
KBObject
õõ) 1
obj
õõ2 5
)
õõ5 6
{
úú 	
IOutputService
ùù 
output
ùù !
=
ùù" #
CommonServices
ùù$ 2
.
ùù2 3
Output
ùù3 9
;
ùù9 :
string
ûû 
objName
ûû 
=
ûû 
obj
ûû  
.
ûû  !
Name
ûû! %
+
ûû& '
$str
ûû( +
+
ûû, -
obj
ûû. 1
.
ûû1 2
TypeDescriptor
ûû2 @
.
ûû@ A
Name
ûûA E
;
ûûF G
if
üü 
(
üü 
obj
üü 
.
üü 
GetPropertyValue
üü $
<
üü$ %
bool
üü% )
>
üü) *
(
üü* + 
KBObjectProperties
üü+ =
.
üü= >
IsGeneratedObject
üü> O
)
üüO P
)
üüP Q
{
†† 
PatternDefinition
¢¢ !
pattern
¢¢" )
;
¢¢) *
if
££ 
(
££ 
InstanceManager
££ #
.
££# $
IsInstanceObject
££$ 4
(
££4 5
obj
££5 8
,
££8 9
out
££: =
pattern
££> E
)
££E F
)
££F G
{
§§ 
objName
•• 
=
•• 
obj
•• !
.
••! "
Parent
••" (
.
••( )
Name
••) -
+
••. /
$str
••/ 2
+
••3 4
obj
••5 8
.
••8 9
Parent
••9 ?
.
••? @
TypeDescriptor
••@ N
.
••N O
Name
••O S
;
••S T
}
¶¶ 
}
ßß 
return
©© 
objName
©© 
;
©© 
}
™™ 	
private
¨¨ 
static
¨¨ 
void
¨¨ #
GenerateKBModuleGraph
¨¨ 1
(
¨¨1 2
string
¨¨2 8
name
¨¨9 =
,
¨¨= >
string
¨¨? E
fileName
¨¨F N
)
¨¨N O
{
≠≠ 	

IKBService
ÆÆ 
kbserv
ÆÆ 
=
ÆÆ 

UIServices
ÆÆ  *
.
ÆÆ* +
KB
ÆÆ+ -
;
ÆÆ- .
KBModel
ØØ 
model
ØØ 
=
ØØ 
kbserv
ØØ "
.
ØØ" #
CurrentModel
ØØ# /
;
ØØ/ 0
StreamWriter
∞∞ 

scriptFile
∞∞ #
=
∞∞$ %
new
∞∞& )
StreamWriter
∞∞* 6
(
∞∞6 7
fileName
∞∞7 ?
)
∞∞? @
;
∞∞@ A
IOutputService
±± 
output
±± !
=
±±" #
CommonServices
±±$ 2
.
±±2 3
Output
±±3 9
;
±±9 :
StringCollection
≤≤ 
aristas
≤≤ $
=
≤≤% &
new
≤≤' *
StringCollection
≤≤+ ;
(
≤≤; <
)
≤≤< =
;
≤≤= >
output
≥≥ 
.
≥≥ 
AddLine
≥≥ 
(
≥≥ 
$str
≥≥ (
+
≥≥) *
name
≥≥+ /
)
≥≥/ 0
;
≥≥0 1

scriptFile
µµ 
.
µµ 
	WriteLine
µµ  
(
µµ  !
$str
µµ! M
)
µµM N
;
µµN O

scriptFile
∑∑ 
.
∑∑ 
	WriteLine
∑∑  
(
∑∑  !
$str
∑∑! |
)
∑∑| }
;
∑∑} ~

scriptFile
∏∏ 
.
∏∏ 
	WriteLine
∏∏  
(
∏∏  !
$str∏∏! »
)∏∏» …
;∏∏…  

scriptFile
∫∫ 
.
∫∫ 
	WriteLine
∫∫  
(
∫∫  !
$str
∫∫! [
)
∫∫[ \
;
∫∫\ ]

scriptFile
ªª 
.
ªª 
	WriteLine
ªª  
(
ªª  !
$strªª! Ç
)ªªÇ É
;ªªÉ Ñ

scriptFile
ΩΩ 
.
ΩΩ 
	WriteLine
ΩΩ  
(
ΩΩ  !
$str
ΩΩ! 0
)
ΩΩ0 1
;
ΩΩ1 2
foreach
øø 
(
øø 
Module
øø 
mdl
øø 
in
øø  "
Module
øø# )
.
øø) *
GetAll
øø* 0
(
øø0 1
model
øø1 6
)
øø6 7
)
øø7 8
{
¡¡ 
string
√√ 

modulename
√√ !
=
√√" #
mdl
√√$ '
.
√√' (
Name
√√( ,
;
√√, -

scriptFile
≈≈ 
.
≈≈ 
	WriteLine
≈≈ $
(
≈≈$ %
$str
≈≈% ;
+
≈≈< =
mdl
≈≈> A
.
≈≈A B
Name
≈≈B F
+
≈≈G H
$str
≈≈I T
+
≈≈U V
mdl
≈≈W Z
.
≈≈Z [
Description
≈≈[ f
+
≈≈g h
$str
≈≈i n
)
≈≈n o
;
≈≈o p

scriptFile
∆∆ 
.
∆∆ 
	WriteLine
∆∆ $
(
∆∆$ %
$str
∆∆% ]
+
∆∆^ _
mdl
∆∆` c
.
∆∆c d
Name
∆∆d h
+
∆∆i j
$str
∆∆k ~
)
∆∆~ 
;∆∆ Ä

scriptFile
«« 
.
«« 
	WriteLine
«« $
(
««$ %
$str
««% 8
)
««8 9
;
««9 :
foreach
…… 
(
…… 
KBObject
…… !
obj
……" %
in
……& (
mdl
……) ,
.
……, -
GetAllMembers
……- :
(
……: ;
)
……; <
)
……< =
{
   
if
ÀÀ 
(
ÀÀ 
obj
ÀÀ 
is
ÀÀ 
	Procedure
ÀÀ (
||
ÀÀ) +
obj
ÀÀ, /
is
ÀÀ0 2
Table
ÀÀ3 8
)
ÀÀ8 9
{
ÃÃ 
foreach
ÕÕ 
(
ÕÕ  !
EntityReference
ÕÕ! 0
r
ÕÕ1 2
in
ÕÕ3 5
obj
ÕÕ6 9
.
ÕÕ9 :
GetReferences
ÕÕ: G
(
ÕÕG H
)
ÕÕH I
)
ÕÕI J
{
ŒŒ 
KBObject
œœ $
objRef
œœ% +
=
œœ, -
KBObject
œœ. 6
.
œœ6 7
Get
œœ7 :
(
œœ: ;
obj
œœ; >
.
œœ> ?
Model
œœ? D
,
œœD E
r
œœF G
.
œœG H
To
œœH J
)
œœJ K
;
œœK L
if
–– 
(
––  
(
––  !
objRef
––! '
!=
––( *
null
––+ /
)
––/ 0
&&
––1 3
(
––4 5
	Functions
––5 >
.
––> ?
	isRunable
––? H
(
––H I
objRef
––I O
)
––O P
||
––Q S
objRef
––T Z
is
––[ ]
Table
––^ c
)
––c d
&&
––e g

modulename
––h r
!=
––s u
ModulesHelper––v É
.––É Ñ
ObjectModule––Ñ ê
(––ê ë
objRef––ë ó
)––ó ò
)––ò ô
{
““ 
String
””  &
edge
””' +
=
””, -
$str
””. R
+
””S T

modulename
””U _
+
””` a
$str
””b n
+
””o p
ModulesHelper
””q ~
.
””~ 
ObjectModule”” ã
(””ã å
objRef””å í
)””í ì
+””î ï
$str””ñ û
;””û ü
if
‘‘  "
(
‘‘# $
!
‘‘$ %
aristas
‘‘% ,
.
‘‘, -
Contains
‘‘- 5
(
‘‘5 6
edge
‘‘6 :
)
‘‘: ;
)
‘‘; <
aristas
’’$ +
.
’’+ ,
Add
’’, /
(
’’/ 0
edge
’’0 4
)
’’4 5
;
’’5 6
}
÷÷ 
}
◊◊ 
}
ÿÿ 
}
ŸŸ 
}
⁄⁄ 

scriptFile
€€ 
.
€€ 
	WriteLine
€€  
(
€€  !
$str
€€! 1
)
€€1 2
;
€€2 3

scriptFile
ﬁﬁ 
.
ﬁﬁ 
	WriteLine
ﬁﬁ  
(
ﬁﬁ  !
$str
ﬁﬁ! 0
)
ﬁﬁ0 1
;
ﬁﬁ1 2
int
‡‡ 
i
‡‡ 
=
‡‡ 
$num
‡‡ 
;
‡‡ 
foreach
·· 
(
·· 
String
·· 
s
·· 
in
··  
aristas
··! (
)
··( )
{
‚‚ 
string
„„ 
s2
„„ 
=
„„ 
s
„„ 
.
„„ 
Replace
„„ %
(
„„% &
$str
„„& ,
,
„„, -
i
„„. /
.
„„/ 0
ToString
„„0 8
(
„„8 9
)
„„9 :
)
„„: ;
;
„„; <

scriptFile
‰‰ 
.
‰‰ 
	WriteLine
‰‰ $
(
‰‰$ %
$str
‰‰% 1
+
‰‰2 3
s2
‰‰4 6
)
‰‰6 7
;
‰‰7 8
i
ÂÂ 
+=
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
}
ÊÊ 
;
ÊÊ 

scriptFile
ÁÁ 
.
ÁÁ 
	WriteLine
ÁÁ  
(
ÁÁ  !
$str
ÁÁ! 1
)
ÁÁ1 2
;
ÁÁ2 3

scriptFile
ËË 
.
ËË 
	WriteLine
ËË  
(
ËË  !
$str
ËË! -
)
ËË- .
;
ËË. /

scriptFile
ÈÈ 
.
ÈÈ 
	WriteLine
ÈÈ  
(
ÈÈ  !
$str
ÈÈ! *
)
ÈÈ* +
;
ÈÈ+ ,

scriptFile
ÍÍ 
.
ÍÍ 
Close
ÍÍ 
(
ÍÍ 
)
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
}
ÏÏ 
}ÒÒ π7
:C:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\Labs.cs
	namespace++ 	
Concepto++
 
.++ 
Packages++ 
.++ 
KBDoctor++ $
{,, 
static-- 

class-- 
Labs-- 
{.. 
public// 
static// 
void// "
ReplaceNullsCompatible// 1
(//1 2
)//2 3
{00 	

IKBService11 
kbserv11 
=11 

UIServices11  *
.11* +
KB11+ -
;11- .
IOutputService22 
output22 !
=22" #
CommonServices22$ 2
.222 3
Output223 9
;229 :
string33 
title33 
=33 
$str33 R
;33R S
string44 

outputFile44 
=44 
	Functions44  )
.44) *
CreateOutputFile44* :
(44: ;
kbserv44; A
,44A B
title44C H
)44H I
;44I J
output66 
.66 
StartSection66 
(66  
title66  %
)66% &
;66& '
KBDoctorXMLWriter88 
writer88 $
=88% &
new88' *
KBDoctorXMLWriter88+ <
(88< =

outputFile88= G
,88G H
Encoding88I Q
.88Q R
UTF888R V
)88V W
;88W X
writer99 
.99 
	AddHeader99 
(99 
title99 "
)99" #
;99# $
writer:: 
.:: 
AddTableHeader:: !
(::! "
new::" %
string::& ,
[::, -
]::- .
{::/ 0
$str::1 9
,::9 :
$str::; H
,::H I
$str::J U
,::U V
$str::W d
,::d e
$str::f o
,::o p
$str::q {
}::| }
)::} ~
;::~ 
SelectObjectOptions== 
selectObjectOption==  2
===3 4
new==5 8
SelectObjectOptions==9 L
(==L M
)==M N
;==N O
selectObjectOption>> 
.>> 
MultipleSelection>> 0
=>>1 2
true>>3 7
;>>7 8
KBModel?? 
kbModel?? 
=?? 

UIServices?? (
.??( )
KB??) +
.??+ ,
CurrentModel??, 8
;??8 9
selectObjectOption@@ 
.@@ 
ObjectTypes@@ *
.@@* +
Add@@+ .
(@@. /
KBObjectDescriptor@@/ A
.@@A B
Get@@B E
<@@E F
Transaction@@F Q
>@@Q R
(@@R S
)@@S T
)@@T U
;@@U V
foreachBB 
(BB 
KBObjectBB 
objBB !
inBB" $

UIServicesBB% /
.BB/ 0
SelectObjectDialogBB0 B
.BBB C
SelectObjectsBBC P
(BBP Q
selectObjectOptionBBQ c
)BBc d
)BBd e
{CC 
boolDD 
saveObjDD 
=DD 
falseDD $
;DD$ %
TransactionEE 
trnEE 
=EE  !
(EE" #
TransactionEE# .
)EE. /
objEE/ 2
;EE2 3
ifFF 
(FF 
trnFF 
!=FF 
nullFF 
)FF  
{GG 
foreachHH 
(HH 
TransactionLevelHH -
LVLHH. 1
inHH2 4
trnHH5 8
.HH8 9
	StructureHH9 B
.HHB C
	GetLevelsHHC L
(HHL M
)HHM N
)HHN O
{II 
boolJJ 
isLevelRemovableJJ -
=JJ. /
trueJJ0 4
;JJ4 5
TableLL 
TBLLL !
=LL" #
LVLLL$ '
.LL' (
AssociatedTableLL( 7
;LL7 8
foreachNN 
(NN  ! 
TransactionAttributeNN! 5
aNN6 7
inNN8 :
LVLNN; >
.NN> ?
	StructureNN? H
.NNH I
GetAttributesNNI V
(NNV W
)NNW X
)NNX Y
{OO 
outputPP "
.PP" #
AddLinePP# *
(PP* +
aPP+ ,
.PP, -
NamePP- 1
)PP1 2
;PP2 3
writerQQ "
.QQ" #
AddTableDataQQ# /
(QQ/ 0
newQQ0 3
stringQQ4 :
[QQ: ;
]QQ; <
{QQ= >
	FunctionsQQ? H
.QQH I

linkObjectQQI S
(QQS T
trnQQT W
)QQW X
,QQX Y
trnQQZ ]
.QQ] ^
DescriptionQQ^ i
,QQi j
	FunctionsQQk t
.QQt u

linkObjectQQu 
(	QQ Ä
a
QQÄ Å
)
QQÅ Ç
,
QQÇ É
a
QQÑ Ö
.
QQÖ Ü
	Attribute
QQÜ è
.
QQè ê
Description
QQê õ
,
QQõ ú
a
QQù û
.
QQû ü
IsForeignKey
QQü ´
.
QQ´ ¨
ToString
QQ¨ ¥
(
QQ¥ µ
)
QQµ ∂
,
QQ∂ ∑
a
QQ∏ π
.
QQπ ∫

IsNullable
QQ∫ ƒ
.
QQƒ ≈
ToString
QQ≈ Õ
(
QQÕ Œ
)
QQŒ œ
}
QQ– —
)
QQ— “
;
QQ“ ”
ifRR 
(RR  
!RR  !
aRR! "
.RR" #
IsForeignKeyRR# /
&&RR0 2
!RR3 4
aRR4 5
.RR5 6
IsKeyRR6 ;
&&RR< >
(RR? @
aRR@ A
.RRA B

IsNullableRRB L
==RRM O
TableAttributeRRP ^
.RR^ _
IsNullableValueRR_ n
.RRn o

CompatibleRRo y
||RRz |
aRR} ~
.RR~ 

IsNullable	RR â
==
RRä å
TableAttribute
RRç õ
.
RRõ ú
IsNullableValue
RRú ´
.
RR´ ¨
True
RR¨ ∞
)
RR∞ ±
)
RR± ≤
{SS  !
aTT  !
.TT! "

IsNullableTT" ,
=TT- .
TableAttributeTT/ =
.TT= >
IsNullableValueTT> M
.TTM N
FalseTTN S
;TTS T
saveObjUU  '
=UU( )
trueUU* .
;UU. /
}VV  !
}WW 
}XX 
ifYY 
(YY 
saveObjYY 
)YY  
{ZZ 
output[[ 
.[[ 
AddLine[[ &
([[& '
$str[[' 1
+[[2 3
trn[[4 7
.[[7 8
Name[[8 <
)[[< =
;[[= >
trn\\ 
.\\ 
Save\\  
(\\  !
)\\! "
;\\" #
}]] 
}^^ 
}__ 
writeraa 
.aa 
	AddFooteraa 
(aa 
)aa 
;aa 
writerbb 
.bb 
Closebb 
(bb 
)bb 
;bb 
KBDoctorHelperdd 
.dd 
ShowKBDoctorResultsdd .
(dd. /

outputFiledd/ 9
)dd9 :
;dd: ;
boolee 
successee 
=ee 
trueee 
;ee  
outputff 
.ff 

EndSectionff 
(ff 
titleff #
,ff# $
successff% ,
)ff, -
;ff- .
}gg 	
}hh 
}ii É˘
CC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\ModulesHelper.cs
	namespace 	
Concepto
 
. 
Packages 
. 
KBDoctor $
{ 
static 

class 
ModulesHelper 
{ 
public 
static 
string 
ObjectModule )
() *
KBObject* 2
obj3 6
)6 7
{ 	
string   

modulename   
=   
$str    "
;  " #
if!! 
(!! 
obj!! 
is!! 
Table!! 
)!! 

modulename"" 
="" 
TablesHelper"" )
."") *
TableModule""* 5
(""5 6
obj""6 9
.""9 :
Model"": ?
,""? @
(""A B
Table""B G
)""G H
obj""H K
)""K L
.""L M
Name""M Q
;""Q R
else## 

modulename$$ 
=$$ 
obj$$  
.$$  !
Module$$! '
.$$' (
Name$$( ,
;$$, -
return%% 

modulename%% 
;%% 
}&& 	
public(( 
static(( 
void(( 
MarkPublicObjects(( ,
(((, -
)((- .
{)) 	

IKBService** 
kbserv** 
=** 

UIServices**  *
.*** +
KB**+ -
;**- .
IOutputService++ 
output++ !
=++" #
CommonServices++$ 2
.++2 3
Output++3 9
;++9 :
bool,, 
success,, 
=,, 
true,, 
;,,  
string-- 
title-- 
=-- 
$str-- :
;--: ;
output.. 
... 
StartSection.. 
(..  
title..  %
)..% &
;..& '
string// 

outputFile// 
=// 
	Functions//  )
.//) *
CreateOutputFile//* :
(//: ;
kbserv//; A
,//A B
title//C H
)//H I
;//I J
KBDoctorXMLWriter00 
writer00 $
=00% &
new00' *
KBDoctorXMLWriter00+ <
(00< =

outputFile00= G
,00G H
Encoding00I Q
.00Q R
UTF800R V
)00V W
;00W X
writer11 
.11 
	AddHeader11 
(11 
title11 "
)11" #
;11# $
writer22 
.22 
AddTableHeader22 !
(22! "
new22" %
string22& ,
[22, -
]22- .
{22/ 0
$str221 9
,229 :
$str22; A
,22A B
$str22C P
,22P Q
$str22R ^
}22_ `
)22` a
;22a b
MakeAllObjectPublic44 
(44  
kbserv44  &
,44& '
output44( .
)44. /
;44/ 0
foreach66 
(66 
KBObject66 
obj66 !
in66" $
kbserv66% +
.66+ ,
CurrentModel66, 8
.668 9
Objects669 @
.66@ A
GetAll66A G
(66G H
)66H I
)66I J
{77 
output88 
.88 
AddLine88 
(88 
$str88 (
+88) *
obj88+ .
.88. /
Name88/ 3
)883 4
;884 5
ICallableObject99 
callableObject99  .
=99/ 0
obj991 4
as995 7
ICallableObject998 G
;99G H
if:: 
(:: 
(:: 
(:: 
callableObject:: $
!=::% '
null::( ,
)::, -
||::. 0
obj::1 4
is::5 7
ExternalObject::8 F
||::G I
obj::J M
is::N P
SDT::Q T
||::U W
obj::X [
is::\ ^
DataSelector::_ k
)::k l
&&::m o
(::p q
!::q r
(::r s
obj::s v
is::w y
Transaction	::z Ö
)
::Ö Ü
)
::Ü á
)
::á à
{;; 
ObjectVisibility<< $
objVisibility<<% 2
=<<3 4
obj<<5 8
.<<8 9
GetPropertyValue<<9 I
<<<I J
ObjectVisibility<<J Z
><<Z [
(<<[ \
$str<<\ n
)<<n o
;<<o p
ObjectVisibility>> $
newObjVisibility>>% 5
=>>6 7
RecoverVisibility>>8 I
(>>I J
obj>>J M
)>>M N
;>>N O
if@@ 
(@@ 
objVisibility@@ %
!=@@& (
newObjVisibility@@) 9
)@@9 :
{AA 
objBB 
.BB 
SetPropertyValueBB ,
(BB, -
$strBB- ?
,BB? @
newObjVisibilityBBA Q
)BBQ R
;BBR S
	FunctionsCC !
.CC! "

SaveObjectCC" ,
(CC, -
outputCC- 3
,CC3 4
objCC5 8
)CC8 9
;CC9 :
stringDD 
objNameLinkDD *
=DD+ ,
	FunctionsDD- 6
.DD6 7

linkObjectDD7 A
(DDA B
objDDB E
)DDE F
;DDF G
writerEE 
.EE 
AddTableDataEE +
(EE+ ,
newEE, /
stringEE0 6
[EE6 7
]EE7 8
{EE9 :
objNameLinkEE; F
,EEF G
objEEH K
.EEK L
TypeDescriptorEEL Z
.EEZ [
NameEE[ _
,EE_ `
objEEa d
.EEd e
DescriptionEEe p
,EEp q
newObjVisibility	EEr Ç
.
EEÇ É
ToString
EEÉ ã
(
EEã å
)
EEå ç
}
EEé è
)
EEè ê
;
EEê ë
outputFF 
.FF 
AddLineFF &
(FF& '
$strFF' ;
+FF< =
objFF> A
.FFA B
NameFFB F
)FFF G
;FFG H
}GG 
}HH 
}II 
outputJJ 
.JJ 
AddLineJJ 
(JJ 
$strJJ 
)JJ 
;JJ 
outputKK 
.KK 

EndSectionKK 
(KK 
titleKK #
,KK# $
successKK% ,
)KK, -
;KK- .
writerLL 
.LL 
	AddFooterLL 
(LL 
)LL 
;LL 
writerMM 
.MM 
CloseMM 
(MM 
)MM 
;MM 
KBDoctorHelperNN 
.NN 
ShowKBDoctorResultsNN .
(NN. /

outputFileNN/ 9
)NN9 :
;NN: ;
}OO 	
privateQQ 
staticQQ 
voidQQ 
MakeAllObjectPublicQQ /
(QQ/ 0

IKBServiceQQ0 :
kbservQQ; A
,QQA B
IOutputServiceQQC Q
outputQQR X
)QQX Y
{RR 	
boolSS 

ToContinueSS 
=SS 
trueSS "
;SS" #
intTT 
cantTT 
=TT 
$numTT 
;TT 
doVV 
{WW 

ToContinueXX 
=XX 
falseXX "
;XX" #
cantYY 
=YY 
$numYY 
;YY 
foreachZZ 
(ZZ 
KBObjectZZ !
objZZ" %
inZZ& (
kbservZZ) /
.ZZ/ 0
CurrentModelZZ0 <
.ZZ< =
ObjectsZZ= D
.ZZD E
GetAllZZE K
(ZZK L
)ZZL M
)ZZM N
{[[ 
ObjectVisibility\\ $
objVisibility\\% 2
=\\3 4
obj\\5 8
.\\8 9
GetPropertyValue\\9 I
<\\I J
ObjectVisibility\\J Z
>\\Z [
(\\[ \
$str\\\ n
)\\n o
;\\o p
if]] 
(]] 
objVisibility]] %
!=]]& (
ObjectVisibility]]) 9
.]]9 :
Public]]: @
&&]]A C
	Functions]]D M
.]]M N
	isRunable]]N W
(]]W X
obj]]X [
)]][ \
&&]]] _
!]]` a
(]]a b
obj]]b e
is]]f h
Transaction]]i t
)]]t u
)]]u v
{^^ 
obj__ 
.__ 
SetPropertyValue__ ,
(__, -
$str__- ?
,__? @
ObjectVisibility__A Q
.__Q R
Public__R X
)__X Y
;__Y Z
	Functions`` !
.``! "

SaveObject``" ,
(``, -
output``- 3
,``3 4
obj``5 8
)``8 9
;``9 :

ToContinueaa "
=aa# $
trueaa% )
;aa) *
cantbb 
+=bb 
$numbb  !
;bb! "
}cc 
}dd 
outputee 
.ee 
AddLineee 
(ee 
$stree (
+ee) *
cantee+ /
.ee/ 0
ToStringee0 8
(ee8 9
)ee9 :
)ee: ;
;ee; <
}ff 
whileff 
(ff 

ToContinueff 
)ff  
;ff  !
}hh 	
privatekk 
statickk 
ObjectVisibilitykk '#
RecoverObjectVisibilitykk( ?
(kk? @
KBObjectkk@ H
objkkI L
)kkL M
{ll 	
ifmm 
(mm 
objmm 
ismm 
Tablemm 
)mm 
returnnn 
TableVisibilitynn &
(nn& '
(nn' (
Tablenn( -
)nn- .
objnn. 1
)nn1 2
;nn2 3
elseoo 
returnpp 
objpp 
.pp 
GetPropertyValuepp +
<pp+ ,
ObjectVisibilitypp, <
>pp< =
(pp= >
$strpp> P
)ppP Q
;ppQ R
}qq 	
privatess 
staticss 
ObjectVisibilityss '
RecoverVisibilityss( 9
(ss9 :
KBObjectss: B
objssC F
)ssF G
{tt 	
stringuu 
	objModuleuu 
=uu 
objuu "
.uu" #
Moduleuu# )
.uu) *
Nameuu* .
;uu. /
stringvv 
objNamevv 
=vv 
objvv  
.vv  !
Namevv! %
;vv% &
ObjectVisibilityxx 
objVisibilityxx *
=xx+ ,
ObjectVisibilityxx- =
.xx= >
Privatexx> E
;xxE F
foreachzz 
(zz 
EntityReferencezz $
	referencezz% .
inzz/ 1
objzz2 5
.zz5 6
GetReferencesTozz6 E
(zzE F
)zzF G
)zzG H
{{{ 
KBObject~~ 
objRef~~ 
=~~  !
KBObject~~" *
.~~* +
Get~~+ .
(~~. /
obj~~/ 2
.~~2 3
Model~~3 8
,~~8 9
	reference~~: C
.~~C D
From~~D H
)~~H I
;~~I J
if
ÄÄ 
(
ÄÄ 
objRef
ÄÄ 
!=
ÄÄ 
null
ÄÄ "
&&
ÄÄ# %
	reference
ÄÄ& /
.
ÄÄ/ 0
ReferenceType
ÄÄ0 =
==
ÄÄ> @
ReferenceType
ÄÄA N
.
ÄÄN O
Hard
ÄÄO S
&&
ÄÄT V
	Functions
ÄÄW `
.
ÄÄ` a
	isRunable
ÄÄa j
(
ÄÄj k
obj
ÄÄk n
)
ÄÄn o
)
ÄÄo p
{
ÅÅ 
if
ÉÉ 
(
ÉÉ 
objRef
ÉÉ 
is
ÉÉ !
Artech
ÉÉ" (
.
ÉÉ( )
Genexus
ÉÉ) 0
.
ÉÉ0 1
Common
ÉÉ1 7
.
ÉÉ7 8
Objects
ÉÉ8 ?
.
ÉÉ? @
	Attribute
ÉÉ@ I
&&
ÉÉJ L
obj
ÉÉM P
is
ÉÉQ S
	Procedure
ÉÉT ]
)
ÉÉ] ^
objVisibility
ÑÑ %
=
ÑÑ& '
ObjectVisibility
ÑÑ( 8
.
ÑÑ8 9
Public
ÑÑ9 ?
;
ÑÑ? @
else
ÖÖ 
{
ÜÜ 
if
áá 
(
áá 
	Functions
áá %
.
áá% &
	isRunable
áá& /
(
áá/ 0
objRef
áá0 6
)
áá6 7
)
áá7 8
{
àà 
string
ââ "
objRefModule
ââ# /
=
ââ0 1
objRef
ââ2 8
.
ââ8 9
Module
ââ9 ?
.
ââ? @
Name
ââ@ D
;
ââD E
if
ää 
(
ää  
objRefModule
ää  ,
!=
ää- /
	objModule
ää0 9
)
ää9 :
{
ãã 
objVisibility
åå  -
=
åå. /
ObjectVisibility
åå0 @
.
åå@ A
Public
ååA G
;
ååG H
}
çç 
}
éé 
}
èè 
}
êê 
}
ëë 
return
íí 
objVisibility
íí  
;
íí  !
}
ìì 	
private
ïï 
static
ïï 
ObjectVisibility
ïï '
TableVisibility
ïï( 7
(
ïï7 8
Table
ïï8 =
tbl
ïï> A
)
ïïA B
{
ññ 	
ObjectVisibility
òò 
objVisibility
òò *
=
òò+ ,
ObjectVisibility
òò- =
.
òò= >
Private
òò> E
;
òòE F
foreach
öö 
(
öö 
Transaction
öö  
trn
öö! $
in
öö% '
tbl
öö( +
.
öö+ ,$
AssociatedTransactions
öö, B
)
ööB C
{
õõ 
if
úú 
(
úú 
trn
úú 
.
úú 
GetPropertyValue
úú (
<
úú( )
ObjectVisibility
úú) 9
>
úú9 :
(
úú: ;
$str
úú; M
)
úúM N
==
úúO Q
ObjectVisibility
úúR b
.
úúb c
Public
úúc i
)
úúi j
objVisibility
ùù !
=
ùù" #
ObjectVisibility
ùù$ 4
.
ùù4 5
Public
ùù5 ;
;
ùù; <
}
ûû 
return
üü 
objVisibility
üü  
;
üü  !
}
°° 	
public
ÆÆ 
static
ÆÆ 
void
ÆÆ #
ListModulesStatistics
ÆÆ 0
(
ÆÆ0 1
)
ÆÆ1 2
{
ØØ 	

IKBService
∞∞ 
kbserv
∞∞ 
=
∞∞ 

UIServices
∞∞  *
.
∞∞* +
KB
∞∞+ -
;
∞∞- .
IOutputService
±± 
output
±± !
=
±±" #
CommonServices
±±$ 2
.
±±2 3
Output
±±3 9
;
±±9 :
bool
≤≤ 
success
≤≤ 
=
≤≤ 
true
≤≤ 
;
≤≤  
int
≥≥ 
	objInRoot
≥≥ 
=
≥≥ 
$num
≥≥ 
;
≥≥ 
int
¥¥ 

objSinRoot
¥¥ 
=
¥¥ 
$num
¥¥ 
;
¥¥ 
string
µµ 
title
µµ 
=
µµ 
$str
µµ ?
;
µµ? @
output
∂∂ 
.
∂∂ 
StartSection
∂∂ 
(
∂∂  
title
∂∂  %
)
∂∂% &
;
∂∂& '
string
∑∑ 

outputFile
∑∑ 
=
∑∑ 
	Functions
∑∑  )
.
∑∑) *
CreateOutputFile
∑∑* :
(
∑∑: ;
kbserv
∑∑; A
,
∑∑A B
title
∑∑C H
)
∑∑H I
;
∑∑I J
KBDoctorXMLWriter
∏∏ 
writer
∏∏ $
=
∏∏% &
new
∏∏' *
KBDoctorXMLWriter
∏∏+ <
(
∏∏< =

outputFile
∏∏= G
,
∏∏G H
Encoding
∏∏I Q
.
∏∏Q R
UTF8
∏∏R V
)
∏∏V W
;
∏∏W X
writer
ππ 
.
ππ 
	AddHeader
ππ 
(
ππ 
title
ππ "
)
ππ" #
;
ππ# $
writer
∫∫ 
.
∫∫ 
AddTableHeader
∫∫ !
(
∫∫! "
new
∫∫" %
string
∫∫& ,
[
∫∫, -
]
∫∫- .
{
∫∫/ 0
$str
∫∫1 9
,
∫∫9 :
$str
∫∫; H
,
∫∫H I
$str
∫∫J R
,
∫∫R S
$str
∫∫T c
,
∫∫c d
$str
∫∫e n
,
∫∫n o
$str
∫∫p |
,
∫∫| }
$str∫∫~ ä
,∫∫ä ã
$str∫∫å õ
,∫∫ú ù
$str∫∫û Æ
}∫∫Ø ∞
)∫∫∞ ±
;∫∫± ≤!
SelectObjectOptions
ºº  
selectObjectOption
ºº  2
=
ºº3 4
new
ºº5 8!
SelectObjectOptions
ºº9 L
(
ººL M
)
ººM N
;
ººN O 
selectObjectOption
ΩΩ 
.
ΩΩ 
MultipleSelection
ΩΩ 0
=
ΩΩ1 2
true
ΩΩ3 7
;
ΩΩ7 8 
selectObjectOption
ææ 
.
ææ 
ObjectTypes
ææ *
.
ææ* +
Add
ææ+ .
(
ææ. / 
KBObjectDescriptor
ææ/ A
.
ææA B
Get
ææB E
<
ææE F
Module
ææF L
>
ææL M
(
ææM N
)
ææN O
)
ææO P
;
ææP Q
foreach
øø 
(
øø 
Module
øø 
mdl
øø 
in
øø  "

UIServices
øø# -
.
øø- . 
SelectObjectDialog
øø. @
.
øø@ A
SelectObjects
øøA N
(
øøN O 
selectObjectOption
øøO a
)
øøa b
)
øøb c
{
¿¿ 
output
¬¬ 
.
¬¬ 
AddLine
¬¬ "
(
¬¬" #
mdl
¬¬# &
.
¬¬& '
Name
¬¬' +
+
¬¬, -
$str
¬¬. 4
)
¬¬4 5
;
¬¬5 6
string
√√ 
[
√√ 
]
√√ 
mdlStat
√√ $
=
√√% &
ModuleStats2
√√' 3
(
√√3 4
mdl
√√4 7
)
√√7 8
;
√√8 9
if
≈≈ 
(
≈≈ 
mdl
≈≈ 
.
≈≈ 
Name
≈≈ 
==
≈≈ 
$str
≈≈  -
)
≈≈- .
{
∆∆ 
	objInRoot
«« 
=
«« 
Int32
««  %
.
««% &
Parse
««& +
(
««+ ,
mdlStat
««, 3
[
««3 4
$num
««4 5
]
««5 6
)
««6 7
;
««7 8
}
»» 
else
…… 
{
   
if
ÀÀ 
(
ÀÀ 
Int32
ÀÀ 
.
ÀÀ 
Parse
ÀÀ #
(
ÀÀ# $
mdlStat
ÀÀ$ +
[
ÀÀ+ ,
$num
ÀÀ, -
]
ÀÀ- .
)
ÀÀ. /
!=
ÀÀ0 2
$num
ÀÀ3 4
)
ÀÀ4 5

objSinRoot
ÃÃ #
=
ÃÃ$ %

objSinRoot
ÃÃ& 0
+
ÃÃ1 2
Int32
ÃÃ3 8
.
ÃÃ8 9
Parse
ÃÃ9 >
(
ÃÃ> ?
mdlStat
ÃÃ? F
[
ÃÃF G
$num
ÃÃG H
]
ÃÃH I
)
ÃÃI J
;
ÃÃJ K
}
ÕÕ 
writer
ŒŒ 
.
ŒŒ 
AddTableData
ŒŒ '
(
ŒŒ' (
mdlStat
ŒŒ( /
)
ŒŒ/ 0
;
ŒŒ0 1
}
—— 
output
““ 
.
““ 
AddLine
““ 
(
““ 
$str
““ 
)
““ 
;
““ 
output
”” 
.
”” 

EndSection
”” 
(
”” 
title
”” #
,
””# $
success
””% ,
)
””, -
;
””- .
int
‘‘ 
ratio
‘‘ 
=
‘‘ 
(
‘‘ 
	objInRoot
‘‘ "
==
‘‘# %
$num
‘‘& '
)
‘‘' (
?
‘‘) *
$num
‘‘+ ,
:
‘‘- .
(
‘‘/ 0

objSinRoot
‘‘0 :
*
‘‘; <
$num
‘‘= @
)
‘‘@ A
/
‘‘B C
	objInRoot
‘‘D M
;
‘‘M N
string
’’ 
Resumen
’’ 
=
’’ 
$str
’’ @
+
’’A B

objSinRoot
’’C M
.
’’M N
ToString
’’N V
(
’’V W
)
’’W X
+
’’Y Z
$str
’’[ ^
+
’’_ `
	objInRoot
’’a j
.
’’j k
ToString
’’k s
(
’’s t
)
’’t u
+
’’v w
$str
’’x {
+
’’| }
ratio’’~ É
.’’É Ñ
ToString’’Ñ å
(’’å ç
)’’ç é
;’’é è
writer
◊◊ 
.
◊◊ 
AddTableData
◊◊ 
(
◊◊  
new
◊◊  #
string
◊◊$ *
[
◊◊* +
]
◊◊+ ,
{
◊◊- .
Resumen
◊◊/ 6
}
◊◊7 8
)
◊◊8 9
;
◊◊9 :
writer
ÿÿ 
.
ÿÿ 
	AddFooter
ÿÿ 
(
ÿÿ 
)
ÿÿ 
;
ÿÿ 
writer
ŸŸ 
.
ŸŸ 
Close
ŸŸ 
(
ŸŸ 
)
ŸŸ 
;
ŸŸ 
KBDoctorHelper
⁄⁄ 
.
⁄⁄ !
ShowKBDoctorResults
⁄⁄ .
(
⁄⁄. /

outputFile
⁄⁄/ 9
)
⁄⁄9 :
;
⁄⁄: ;
	Functions
€€ 
.
€€ 
AddLineSummary
€€ $
(
€€$ %
$str
€€% 6
,
€€6 7
Resumen
€€8 ?
)
€€? @
;
€€@ A
}
›› 	
private
ﬂﬂ 
static
ﬂﬂ 
string
ﬂﬂ 
[
ﬂﬂ 
]
ﬂﬂ 
ModuleStats2
ﬂﬂ  ,
(
ﬂﬂ, -
Module
ﬂﬂ- 3
mdl
ﬂﬂ4 7
)
ﬂﬂ7 8
{
‡‡ 	
IOutputService
·· 
output
·· !
=
··" #
CommonServices
··$ 2
.
··2 3
Output
··3 9
;
··9 :

IKBService
„„ 
kbserv
„„ 
=
„„ 

UIServices
„„  *
.
„„* +
KB
„„+ -
;
„„- .
KBModel
‰‰ 
kbModel
‰‰ 
=
‰‰ 

UIServices
‰‰ (
.
‰‰( )
KB
‰‰) +
.
‰‰+ ,
CurrentModel
‰‰, 8
;
‰‰8 9
int
ÒÒ 
cantobj
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
int
ÚÚ 
cantobjmain
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
;
ÚÚ  
int
ÛÛ 

cantobjPub
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
;
ÛÛ 
int
ÙÙ 
	cantInRef
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
int
ıı 

cantOutRef
ıı 
=
ıı 
$num
ıı 
;
ıı 
foreach
ˆˆ 
(
ˆˆ 
KBObject
ˆˆ 
obj
ˆˆ !
in
ˆˆ" $
mdl
ˆˆ% (
.
ˆˆ( )
GetAllMembers
ˆˆ) 6
(
ˆˆ6 7
)
ˆˆ7 8
)
ˆˆ8 9
{
˜˜ 
cantobj
¯¯ 
+=
¯¯ 
$num
¯¯ 
;
¯¯ 
string
˘˘ 
aux
˘˘ 
=
˘˘ 
$str
˘˘ 
;
˘˘  
bool
˙˙ %
isReferencedFromOutside
˙˙ ,
=
˙˙- .%
IsReferencedFromOutside
˙˙/ F
(
˙˙F G
mdl
˙˙G J
,
˙˙J K
obj
˙˙L O
,
˙˙O P
out
˙˙Q T
aux
˙˙U X
)
˙˙X Y
;
˙˙Y Z
ObjectVisibility
¸¸  
objVisibility
¸¸! .
=
¸¸/ 0%
RecoverObjectVisibility
¸¸1 H
(
¸¸H I
obj
¸¸I L
)
¸¸L M
;
¸¸M N
if
˛˛ 
(
˛˛ 
	Functions
˛˛ 
.
˛˛ 
	isRunable
˛˛ '
(
˛˛' (
obj
˛˛( +
)
˛˛+ ,
)
˛˛, -
{
ˇˇ 
if
ÄÄ 
(
ÄÄ 
objVisibility
ÄÄ )
==
ÄÄ* ,
ObjectVisibility
ÄÄ- =
.
ÄÄ= >
Public
ÄÄ> D
)
ÄÄD E
{
ÅÅ 

cantobjPub
ÇÇ  *
+=
ÇÇ+ -
$num
ÇÇ. /
;
ÇÇ/ 0
}
ÉÉ 
if
ÖÖ 
(
ÖÖ 
!
ÖÖ %
isReferencedFromOutside
ÖÖ 4
)
ÖÖ4 5
{
ÜÜ 
	cantInRef
áá  )
+=
áá* ,
$num
áá- .
;
áá. /
;
áá0 1
}
àà 
}
ââ 
}
åå 
IList
ëë 
<
ëë 
KBObject
ëë 
>
ëë 
tblList
ëë #
=
ëë$ %
(
ëë& '
from
ëë' +
r
ëë, -
in
ëë. 0
Table
ëë1 6
.
ëë6 7
GetAll
ëë7 =
(
ëë= >
kbModel
ëë> E
)
ëëE F
where
íí' ,
TablesHelper
íí- 9
.
íí9 :
TableModule
íí: E
(
ííE F
kbModel
ííF M
,
ííM N
r
ííO P
)
ííP Q
==
ííR T
mdl
ííU X
select
ìì' -
kbModel
ìì. 5
.
ìì5 6
Objects
ìì6 =
.
ìì= >
Get
ìì> A
(
ììA B
r
ììB C
.
ììC D
Key
ììD G
)
ììG H
)
ììH I
.
ììI J
ToList
ììJ P
(
ììP Q
)
ììQ R
;
ììR S
int
ïï 
	cntTables
ïï 
=
ïï 
$num
ïï 
;
ïï 
int
ññ 
cntPublicTables
ññ 
=
ññ  !
$num
ññ" #
;
ññ# $
foreach
óó 
(
óó 
Table
óó 
tbl
óó 
in
óó !
tblList
óó" )
)
óó) *
{
òò 
	cntTables
ôô 
+=
ôô 
$num
ôô 
;
ôô 
string
õõ 
	tableName
õõ  
=
õõ! "
tbl
õõ# &
.
õõ& '
Name
õõ' +
;
õõ+ ,
ObjectVisibility
úú  

visibility
úú! +
=
úú, -
TableVisibility
úú. =
(
úú= >
tbl
úú> A
)
úúA B
;
úúB C
if
ûû 
(
ûû 

visibility
ûû 
==
ûû !
ObjectVisibility
ûû" 2
.
ûû2 3
Public
ûû3 9
)
ûû9 :
cntPublicTables
üü #
+=
üü$ &
$num
üü' (
;
üü( )
string
°° 0
"objOutsideModuleAccessPrivateTable
°° 9
=
°°: ;
$str
°°< >
;
°°> ?
bool
¢¢ (
TableReferencedFromOutside
¢¢ /
=
¢¢0 1%
IsReferencedFromOutside
¢¢2 I
(
¢¢I J
mdl
¢¢J M
,
¢¢M N
(
¢¢O P
KBObject
¢¢P X
)
¢¢X Y
tbl
¢¢Y \
,
¢¢\ ]
out
¢¢^ a1
"objOutsideModuleAccessPrivateTable¢¢b Ñ
)¢¢Ñ Ö
;¢¢Ö Ü
if
•• 
(
•• (
TableReferencedFromOutside
•• .
)
••/ 0
{
¶¶ 
	cantInRef
ßß 
+=
ßß  
$num
ßß! "
;
ßß" #
;
ßß$ %
}
®® 
}
™™ 
int
≠≠ 
rel
≠≠ 
=
≠≠ 
(
≠≠ 
cantobj
≠≠ 
==
≠≠ !
$num
≠≠" #
?
≠≠$ %
$num
≠≠& '
:
≠≠( )
(
≠≠* +

cantobjPub
≠≠+ 5
*
≠≠6 7
$num
≠≠8 ;
)
≠≠; <
/
≠≠= >
cantobj
≠≠? F
)
≠≠F G
;
≠≠G H
string
ÆÆ 
[
ÆÆ 
]
ÆÆ 
mdlStats
ÆÆ 
=
ÆÆ 
new
ÆÆ  #
string
ÆÆ$ *
[
ÆÆ* +
]
ÆÆ+ ,
{
ÆÆ- .
	Functions
ÆÆ/ 8
.
ÆÆ8 9

linkObject
ÆÆ9 C
(
ÆÆC D
mdl
ÆÆD G
)
ÆÆG H
,
ÆÆH I
mdl
ÆÆJ M
.
ÆÆM N
Description
ÆÆN Y
,
ÆÆY Z
	cntTables
ÆÆ[ d
.
ÆÆd e
ToString
ÆÆe m
(
ÆÆm n
)
ÆÆn o
,
ÆÆo p
cntPublicTablesÆÆq Ä
.ÆÆÄ Å
ToStringÆÆÅ â
(ÆÆâ ä
)ÆÆä ã
,ÆÆã å
cantobjÆÆç î
.ÆÆî ï
ToStringÆÆï ù
(ÆÆù û
)ÆÆû ü
,ÆÆü †

cantobjPubÆÆ¢ ¨
.ÆÆ¨ ≠
ToStringÆÆ≠ µ
(ÆÆµ ∂
)ÆÆ∂ ∑
,ÆÆ∑ ∏
relÆÆπ º
.ÆÆº Ω
ToStringÆÆΩ ≈
(ÆÆ≈ ∆
)ÆÆ∆ «
+ÆÆ» …
$strÆÆ  Œ
,ÆÆœ –
	cantInRefÆÆ— ⁄
.ÆÆ⁄ €
ToStringÆÆ€ „
(ÆÆ„ ‰
)ÆÆ‰ Â
,ÆÆÂ Ê

cantOutRefÆÆÁ Ò
.ÆÆÒ Ú
ToStringÆÆÚ ˙
(ÆÆ˙ ˚
)ÆÆ˚ ¸
}ÆÆ˝ ˛
;ÆÆ˛ ˇ
return
∞∞ 
mdlStats
∞∞ 
;
∞∞ 
}
±± 	
public
≥≥ 
static
≥≥ 
void
≥≥ 
MoveTransactions
≥≥ +
(
≥≥+ ,
)
≥≥, -
{
¥¥ 	

IKBService
µµ 
kbserv
µµ 
=
µµ 

UIServices
µµ  *
.
µµ* +
KB
µµ+ -
;
µµ- .
IOutputService
∂∂ 
output
∂∂ !
=
∂∂" #
CommonServices
∂∂$ 2
.
∂∂2 3
Output
∂∂3 9
;
∂∂9 :
bool
∑∑ 
success
∑∑ 
=
∑∑ 
true
∑∑ 
;
∑∑  
int
∏∏ 
	objInRoot
∏∏ 
=
∏∏ 
$num
∏∏ 
;
∏∏ 
int
ππ 

objSinRoot
ππ 
=
ππ 
$num
ππ 
;
ππ 
string
∫∫ 
title
∫∫ 
=
∫∫ 
$str
∫∫ 8
;
∫∫8 9
output
ªª 
.
ªª 
StartSection
ªª 
(
ªª  
title
ªª  %
)
ªª% &
;
ªª& '
string
ºº 

outputFile
ºº 
=
ºº 
	Functions
ºº  )
.
ºº) *
CreateOutputFile
ºº* :
(
ºº: ;
kbserv
ºº; A
,
ººA B
title
ººC H
)
ººH I
;
ººI J
KBDoctorXMLWriter
ΩΩ 
writer
ΩΩ $
=
ΩΩ% &
new
ΩΩ' *
KBDoctorXMLWriter
ΩΩ+ <
(
ΩΩ< =

outputFile
ΩΩ= G
,
ΩΩG H
Encoding
ΩΩI Q
.
ΩΩQ R
UTF8
ΩΩR V
)
ΩΩV W
;
ΩΩW X
writer
ææ 
.
ææ 
	AddHeader
ææ 
(
ææ 
title
ææ "
)
ææ" #
;
ææ# $
writer
øø 
.
øø 
AddTableHeader
øø !
(
øø! "
new
øø" %
string
øø& ,
[
øø, -
]
øø- .
{
øø/ 0
$str
øø1 >
,
øø> ?
$str
øø@ M
,
øøM N
$str
øøO V
,
øøV W
$str
øøX s
}
øøt u
)
øøu v
;
øøv w!
SelectObjectOptions
¡¡  
selectObjectOption
¡¡  2
=
¡¡3 4
new
¡¡5 8!
SelectObjectOptions
¡¡9 L
(
¡¡L M
)
¡¡M N
;
¡¡N O 
selectObjectOption
¬¬ 
.
¬¬ 
MultipleSelection
¬¬ 0
=
¬¬1 2
true
¬¬3 7
;
¬¬7 8 
selectObjectOption
√√ 
.
√√ 
ObjectTypes
√√ *
.
√√* +
Add
√√+ .
(
√√. / 
KBObjectDescriptor
√√/ A
.
√√A B
Get
√√B E
<
√√E F
Transaction
√√F Q
>
√√Q R
(
√√R S
)
√√S T
)
√√T U
;
√√U V
foreach
ƒƒ 
(
ƒƒ 
Transaction
ƒƒ  
trn
ƒƒ! $
in
ƒƒ% '

UIServices
ƒƒ( 2
.
ƒƒ2 3 
SelectObjectDialog
ƒƒ3 E
.
ƒƒE F
SelectObjects
ƒƒF S
(
ƒƒS T 
selectObjectOption
ƒƒT f
)
ƒƒf g
)
ƒƒg h
{
≈≈ 
foreach
»» 
(
»» 
TransactionLevel
»» -
lvl
»». 1
in
»»2 4
trn
»»5 8
.
»»8 9
	Structure
»»9 B
.
»»B C
	GetLevels
»»C L
(
»»L M
)
»»M N
)
»»N O
{
…… 
Table
   
tbl
   
=
   
lvl
    #
.
  # $
AssociatedTable
  $ 3
;
  3 4
List
ÀÀ 
<
ÀÀ 
string
ÀÀ 
>
ÀÀ  
fldlist
ÀÀ! (
=
ÀÀ) *$
MostReferencedInFolder
ÀÀ+ A
(
ÀÀA B
tbl
ÀÀB E
)
ÀÀE F
;
ÀÀF G
string
ÃÃ 
listatxt
ÃÃ #
=
ÃÃ$ %
$str
ÃÃ& (
;
ÃÃ( )
foreach
ÕÕ 
(
ÕÕ 
string
ÕÕ #
s
ÕÕ$ %
in
ÕÕ& (
fldlist
ÕÕ) 0
)
ÕÕ0 1
listatxt
ŒŒ  
+=
ŒŒ! #
s
ŒŒ$ %
+
ŒŒ& '
$str
ŒŒ( .
;
ŒŒ. /
writer
–– 
.
–– 
AddTableData
–– '
(
––' (
new
––( +
string
––, 2
[
––2 3
]
––3 4
{
––5 6
	Functions
––7 @
.
––@ A

linkObject
––A K
(
––K L
trn
––L O
)
––O P
,
––Q R
trn
––S V
.
––V W
Description
––W b
,
––b c
	Functions
––d m
.
––m n

linkObject
––n x
(
––x y
tbl
––y |
)
––| }
,
––} ~
listatxt––Ä à
}––â ä
)––ä ã
;––ã å
}
”” 
}
’’ 
writer
ÿÿ 
.
ÿÿ 
	AddFooter
ÿÿ 
(
ÿÿ 
)
ÿÿ 
;
ÿÿ 
writer
ŸŸ 
.
ŸŸ 
Close
ŸŸ 
(
ŸŸ 
)
ŸŸ 
;
ŸŸ 
KBDoctorHelper
⁄⁄ 
.
⁄⁄ !
ShowKBDoctorResults
⁄⁄ .
(
⁄⁄. /

outputFile
⁄⁄/ 9
)
⁄⁄9 :
;
⁄⁄: ;
}
›› 	
private
ﬂﬂ 
static
ﬂﬂ 
List
ﬂﬂ 
<
ﬂﬂ 
string
ﬂﬂ "
>
ﬂﬂ" #$
MostReferencedInFolder
ﬂﬂ$ :
(
ﬂﬂ: ;
Table
ﬂﬂ; @
tbl
ﬂﬂA D
)
ﬂﬂD E
{
‡‡ 	
IOutputService
·· 
output
·· !
=
··" #
CommonServices
··$ 2
.
··2 3
Output
··3 9
;
··9 :
List
‚‚ 
<
‚‚ 
string
‚‚ 
>
‚‚ 
list
‚‚ 
=
‚‚ 
new
‚‚  #
List
‚‚$ (
<
‚‚( )
string
‚‚) /
>
‚‚/ 0
(
‚‚0 1
)
‚‚1 2
;
‚‚2 3
foreach
‰‰ 
(
‰‰ 
EntityReference
‰‰ $
refe
‰‰% )
in
‰‰* ,
tbl
‰‰- 0
.
‰‰0 1
GetReferencesTo
‰‰1 @
(
‰‰@ A
)
‰‰A B
)
‰‰B C
{
ÂÂ 
KBObject
ÊÊ 
objRef
ÊÊ 
=
ÊÊ  !
KBObject
ÊÊ" *
.
ÊÊ* +
Get
ÊÊ+ .
(
ÊÊ. /
tbl
ÊÊ/ 2
.
ÊÊ2 3
Model
ÊÊ3 8
,
ÊÊ8 9
refe
ÊÊ: >
.
ÊÊ> ?
From
ÊÊ? C
)
ÊÊC D
;
ÊÊD E
if
ÁÁ 
(
ÁÁ 
objRef
ÁÁ 
!=
ÁÁ 
null
ÁÁ "
)
ÁÁ" #
{
ËË 
bool
ÈÈ 
read
ÈÈ 
,
ÈÈ 
insert
ÈÈ %
,
ÈÈ% &
update
ÈÈ' -
,
ÈÈ- .
delete
ÈÈ/ 5
,
ÈÈ5 6
isBase
ÈÈ7 =
;
ÈÈ= >
ReferenceTypeInfo
ÎÎ %
.
ÎÎ% &
ReadTableInfo
ÎÎ& 3
(
ÎÎ3 4
refe
ÎÎ4 8
.
ÎÎ8 9
LinkTypeInfo
ÎÎ9 E
,
ÎÎE F
out
ÎÎG J
read
ÎÎK O
,
ÎÎO P
out
ÎÎQ T
insert
ÎÎU [
,
ÎÎ[ \
out
ÎÎ] `
update
ÎÎa g
,
ÎÎg h
out
ÎÎi l
delete
ÎÎm s
,
ÎÎs t
out
ÎÎu x
isBase
ÎÎy 
)ÎÎ Ä
;ÎÎÄ Å
string
ÌÌ 
updated
ÌÌ "
=
ÌÌ# $
(
ÌÌ% &
update
ÌÌ& ,
||
ÌÌ- /
delete
ÌÌ0 6
||
ÌÌ7 9
insert
ÌÌ: @
)
ÌÌ@ A
?
ÌÌB C
$str
ÌÌD M
:
ÌÌN O
$str
ÌÌP R
;
ÌÌR S
if
ÔÔ 
(
ÔÔ 
objRef
ÔÔ 
.
ÔÔ 
Parent
ÔÔ %
is
ÔÔ& (
Folder
ÔÔ) /
)
ÔÔ/ 0
list
 
.
 
Add
  
(
  !
$str
! *
+
+ ,
objRef
- 3
.
3 4
Parent
4 :
.
: ;
Name
; ?
+
@ A
$str
B H
+
I J
updated
K R
)
R S
;
S T
if
ÒÒ 
(
ÒÒ 
objRef
ÒÒ 
.
ÒÒ 
Parent
ÒÒ %
is
ÒÒ& (
Module
ÒÒ) /
)
ÒÒ/ 0
list
ÚÚ 
.
ÚÚ 
Add
ÚÚ  
(
ÚÚ  !
$str
ÚÚ! *
+
ÚÚ+ ,
objRef
ÚÚ- 3
.
ÚÚ3 4
Parent
ÚÚ4 :
.
ÚÚ: ;
Name
ÚÚ; ?
+
ÚÚ@ A
$str
ÚÚB H
+
ÚÚI J
updated
ÚÚK R
)
ÚÚR S
;
ÚÚS T
}
ÛÛ 
}
ıı 
output
ˆˆ 
.
ˆˆ 
AddLine
ˆˆ 
(
ˆˆ 
$str
ˆˆ 
)
ˆˆ 
;
ˆˆ  
output
˜˜ 
.
˜˜ 
AddLine
˜˜ 
(
˜˜ 
$str
˜˜ +
+
˜˜, -
tbl
˜˜. 1
.
˜˜1 2
Name
˜˜2 6
)
˜˜6 7
;
˜˜7 8
list
˘˘ 
.
˘˘ 
Sort
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 
foreach
˙˙ 
(
˙˙ 
string
˙˙ 
s
˙˙ 
in
˙˙  
list
˙˙! %
)
˙˙% &
output
˚˚ 
.
˚˚ 
AddLine
˚˚ 
(
˚˚ 
s
˚˚  
)
˚˚  !
;
˚˚! "
return
¸¸ 
list
¸¸ 
;
¸¸ 
}
˝˝ 	
public
ˇˇ 
static
ˇˇ 
void
ˇˇ 
ListModulesErrors
ˇˇ ,
(
ˇˇ, -
)
ˇˇ- .
{
ÄÄ 	

IKBService
ÅÅ 
kbserv
ÅÅ 
=
ÅÅ 

UIServices
ÅÅ  *
.
ÅÅ* +
KB
ÅÅ+ -
;
ÅÅ- .
IOutputService
ÇÇ 
output
ÇÇ !
=
ÇÇ" #
CommonServices
ÇÇ$ 2
.
ÇÇ2 3
Output
ÇÇ3 9
;
ÇÇ9 :
bool
ÉÉ 
success
ÉÉ 
=
ÉÉ 
true
ÉÉ 
;
ÉÉ  
string
ÖÖ 
title
ÖÖ 
=
ÖÖ 
$str
ÖÖ ;
;
ÖÖ; <
output
ÜÜ 
.
ÜÜ 
StartSection
ÜÜ 
(
ÜÜ  
title
ÜÜ  %
)
ÜÜ% &
;
ÜÜ& '
string
áá 

outputFile
áá 
=
áá 
	Functions
áá  )
.
áá) *
CreateOutputFile
áá* :
(
áá: ;
kbserv
áá; A
,
ááA B
title
ááC H
)
ááH I
;
ááI J
KBDoctorXMLWriter
àà 
writer
àà $
=
àà% &
new
àà' *
KBDoctorXMLWriter
àà+ <
(
àà< =

outputFile
àà= G
,
ààG H
Encoding
ààI Q
.
ààQ R
UTF8
ààR V
)
ààV W
;
ààW X
writer
ââ 
.
ââ 
	AddHeader
ââ 
(
ââ 
title
ââ "
)
ââ" #
;
ââ# $
writer
ää 
.
ää 
AddTableHeader
ää !
(
ää! "
new
ää" %
string
ää& ,
[
ää, -
]
ää- .
{
ää/ 0
$str
ãã 
,
ãã 
$str
ãã A
,
ããA B
$str
ããC e
,
ããe f
$strããg à
,ããà â
$strããä ß
,ããß ®
$strãã© π
}ãã∫ ª
)ããª º
;ããº Ω!
SelectObjectOptions
çç  
selectObjectOption
çç  2
=
çç3 4
new
çç5 8!
SelectObjectOptions
çç9 L
(
ççL M
)
ççM N
;
ççN O 
selectObjectOption
éé 
.
éé 
MultipleSelection
éé 0
=
éé1 2
true
éé3 7
;
éé7 8 
selectObjectOption
èè 
.
èè 
ObjectTypes
èè *
.
èè* +
Add
èè+ .
(
èè. / 
KBObjectDescriptor
èè/ A
.
èèA B
Get
èèB E
<
èèE F
Module
èèF L
>
èèL M
(
èèM N
)
èèN O
)
èèO P
;
èèP Q
foreach
êê 
(
êê 
Module
êê 
mdl
êê 
in
êê  "

UIServices
êê# -
.
êê- . 
SelectObjectDialog
êê. @
.
êê@ A
SelectObjects
êêA N
(
êêN O 
selectObjectOption
êêO a
)
êêa b
)
êêb c
{
ëë 
if
íí 
(
íí 
mdl
íí 
is
íí 
Module
íí !
)
íí! "
{
ìì 
output
îî 
.
îî 
AddLine
îî "
(
îî" #
mdl
îî# &
.
îî& '
Name
îî' +
+
îî, -
$str
îî. 4
)
îî4 5
;
îî5 6
string
ïï 
[
ïï 
]
ïï 
mdlStat
ïï $
=
ïï% &
ModuleStats
ïï' 2
(
ïï2 3
(
ïï3 4
Module
ïï4 :
)
ïï: ;
mdl
ïï; >
)
ïï> ?
;
ïï? @
writer
óó 
.
óó 
AddTableData
óó '
(
óó' (
mdlStat
óó( /
)
óó/ 0
;
óó0 1
}
òò 
}
öö 
output
õõ 
.
õõ 
AddLine
õõ 
(
õõ 
$str
õõ 
)
õõ 
;
õõ 
output
úú 
.
úú 

EndSection
úú 
(
úú 
title
úú #
,
úú# $
success
úú% ,
)
úú, -
;
úú- .
writer
ûû 
.
ûû 
	AddFooter
ûû 
(
ûû 
)
ûû 
;
ûû 
writer
üü 
.
üü 
Close
üü 
(
üü 
)
üü 
;
üü 
KBDoctorHelper
†† 
.
†† !
ShowKBDoctorResults
†† .
(
††. /

outputFile
††/ 9
)
††9 :
;
††: ;
}
££ 	
private
•• 
static
•• 
string
•• 
[
•• 
]
•• 
ModuleStats
••  +
(
••+ ,
Module
••, 2
mdl
••3 6
)
••6 7
{
¶¶ 	
IOutputService
ßß 
output
ßß !
=
ßß" #
CommonServices
ßß$ 2
.
ßß2 3
Output
ßß3 9
;
ßß9 :

IKBService
©© 
kbserv
©© 
=
©© 

UIServices
©©  *
.
©©* +
KB
©©+ -
;
©©- .
KBModel
™™ 
kbModel
™™ 
=
™™ 

UIServices
™™ (
.
™™( )
KB
™™) +
.
™™+ ,
CurrentModel
™™, 8
;
™™8 9
string
´´ %
listPubObjNotReferenced
´´ *
=
´´+ ,
$str
´´- /
;
´´/ 0
string
¨¨ &
listPirvateObjReferenced
¨¨ +
=
¨¨, -
$str
¨¨. 0
;
¨¨0 1
string
≠≠ 4
&ListobjOutsideModuleAccessPrivateTable
≠≠ 9
=
≠≠: ;
$str
≠≠< >
;
≠≠> ?
foreach
ØØ 
(
ØØ 
KBObject
ØØ 
obj
ØØ !
in
ØØ" $
mdl
ØØ% (
.
ØØ( )
GetAllMembers
ØØ) 6
(
ØØ6 7
)
ØØ7 8
)
ØØ8 9
{
∞∞ 
string
≤≤ 
aux
≤≤ 
=
≤≤ 
$str
≤≤ 
;
≤≤  
bool
≥≥ %
isReferencedFromOutside
≥≥ ,
=
≥≥- .%
IsReferencedFromOutside
≥≥/ F
(
≥≥F G
mdl
≥≥G J
,
≥≥J K
obj
≥≥L O
,
≥≥O P
out
≥≥Q T
aux
≥≥U X
)
≥≥X Y
;
≥≥Y Z
ObjectVisibility
µµ  
objVisibility
µµ! .
=
µµ/ 0%
RecoverObjectVisibility
µµ1 H
(
µµH I
obj
µµI L
)
µµL M
;
µµM N
if
∑∑ 
(
∑∑ 
objVisibility
∑∑ !
==
∑∑" $
ObjectVisibility
∑∑% 5
.
∑∑5 6
Public
∑∑6 <
&&
∑∑= ?
	Functions
∑∑@ I
.
∑∑I J
	isRunable
∑∑J S
(
∑∑S T
obj
∑∑T W
)
∑∑W X
&&
∑∑Y [
!
∑∑\ ]
(
∑∑] ^
obj
∑∑^ a
is
∑∑b d
Transaction
∑∑e p
)
∑∑p q
)
∑∑q r
{
∏∏ 
if
∫∫ 
(
∫∫ 
!
∫∫ %
isReferencedFromOutside
∫∫ 0
)
∫∫0 1
{
ªª %
listPubObjNotReferenced
ºº /
+=
ºº0 2
	Functions
ºº3 <
.
ºº< =

linkObject
ºº= G
(
ººG H
obj
ººH K
)
ººK L
+
ººM N
$str
ººO R
;
ººR S
}
ΩΩ 
}
ææ 
if
¬¬ 
(
¬¬ 
objVisibility
¬¬ !
==
¬¬" $
ObjectVisibility
¬¬% 5
.
¬¬5 6
Private
¬¬6 =
&&
¬¬> @%
isReferencedFromOutside
¬¬A X
&&
¬¬Y [
!
¬¬\ ]
(
¬¬] ^
obj
¬¬^ a
is
¬¬b d
SDT
¬¬e h
)
¬¬h i
&&
¬¬j l
!
¬¬m n
(
¬¬n o
obj
¬¬o r
is
¬¬s u
Folder
¬¬v |
)
¬¬| }
)
¬¬} ~
{
√√ &
listPirvateObjReferenced
ƒƒ ,
+=
ƒƒ- /
	Functions
ƒƒ0 9
.
ƒƒ9 :

linkObject
ƒƒ: D
(
ƒƒD E
obj
ƒƒE H
)
ƒƒH I
+
ƒƒJ K
$str
ƒƒL O
;
ƒƒO P
}
≈≈ 
}
∆∆ 
string
»» 0
"objOutsideModuleAccessPrivateTable
»» 5
=
»»6 7
$str
»»8 :
;
»»: ;
string
…… (
objUpdateOutsideModuleList
…… -
=
……. /
$str
……0 2
;
……2 3
string
   
	objToMove
   
=
   
$str
   !
;
  ! "
IList
ÕÕ 
<
ÕÕ 
KBObject
ÕÕ 
>
ÕÕ 
tblList
ÕÕ #
=
ÕÕ$ %
(
ÕÕ& '
from
ÕÕ' +
r
ÕÕ, -
in
ÕÕ. 0
Table
ÕÕ1 6
.
ÕÕ6 7
GetAll
ÕÕ7 =
(
ÕÕ= >
kbModel
ÕÕ> E
)
ÕÕE F
where
ŒŒ' ,
TablesHelper
ŒŒ- 9
.
ŒŒ9 :
TableModule
ŒŒ: E
(
ŒŒE F
kbModel
ŒŒF M
,
ŒŒM N
r
ŒŒO P
)
ŒŒP Q
==
ŒŒR T
mdl
ŒŒU X
select
œœ' -
kbModel
œœ. 5
.
œœ5 6
Objects
œœ6 =
.
œœ= >
Get
œœ> A
(
œœA B
r
œœB C
.
œœC D
Key
œœD G
)
œœG H
)
œœH I
.
œœI J
ToList
œœJ P
(
œœP Q
)
œœQ R
;
œœR S
foreach
–– 
(
–– 
Table
–– 
tbl
–– 
in
–– !
tblList
––" )
)
––) *
{
—— 
string
““ 
	tableName
““  
=
““! "
tbl
““# &
.
““& '
Name
““' +
;
““+ ,
ObjectVisibility
””  

visibility
””! +
=
””, -
TableVisibility
””. =
(
””= >
tbl
””> A
)
””A B
;
””B C
bool
’’ (
TableReferencedFromOutside
’’ /
=
’’0 1%
IsReferencedFromOutside
’’2 I
(
’’I J
mdl
’’J M
,
’’M N
(
’’O P
KBObject
’’P X
)
’’X Y
tbl
’’Y \
,
’’\ ]
out
’’^ a1
"objOutsideModuleAccessPrivateTable’’b Ñ
)’’Ñ Ö
;’’Ö Ü
if
◊◊ 
(
◊◊ (
TableReferencedFromOutside
◊◊ .
&&
◊◊/ 1
(
◊◊2 3

visibility
◊◊3 =
==
◊◊> @
ObjectVisibility
◊◊A Q
.
◊◊Q R
Private
◊◊R Y
)
◊◊Y Z
)
◊◊Z [
{
ÿÿ 4
&ListobjOutsideModuleAccessPrivateTable
ŸŸ :
+=
ŸŸ; =0
"objOutsideModuleAccessPrivateTable
ŸŸ> `
+
ŸŸa b
$str
ŸŸc i
+
ŸŸj k
Environment
ŸŸl w
.
ŸŸw x
NewLine
ŸŸx 
;ŸŸ Ä
}
⁄⁄ 
else
€€ 
if
‹‹ 
(
‹‹ 
!
‹‹ (
TableReferencedFromOutside
‹‹ 3
&&
‹‹4 6
(
‹‹7 8

visibility
‹‹8 B
==
‹‹C E
ObjectVisibility
‹‹F V
.
‹‹V W
Public
‹‹W ]
)
‹‹] ^
)
‹‹^ _
{
›› %
listPubObjNotReferenced
ﬁﬁ 0
+=
ﬁﬁ1 3
	Functions
ﬁﬁ4 =
.
ﬁﬁ= >

linkObject
ﬁﬁ> H
(
ﬁﬁH I
(
ﬁﬁI J
KBObject
ﬁﬁJ R
)
ﬁﬁR S
tbl
ﬁﬁS V
)
ﬁﬁV W
+
ﬁﬁX Y
$str
ﬁﬁZ ]
;
ﬁﬁ] ^
}
ﬂﬂ 
string
·· -
objUpdateOutsideModuleListTable
·· 6
=
··7 8
$str
··9 ;
;
··; <
foreach
‚‚ 
(
‚‚ 
KBObject
‚‚ !$
objUpdateOutsideModule
‚‚" 8
in
‚‚9 ;
TablesHelper
‚‚< H
.
‚‚H I-
ObjectsUpdateTableOutsideModule
‚‚I h
(
‚‚h i
kbModel
‚‚i p
,
‚‚p q
tbl
‚‚r u
)
‚‚u v
)
‚‚v w
{
„„ -
objUpdateOutsideModuleListTable
ÂÂ 3
+=
ÂÂ4 6
	Functions
ÂÂ7 @
.
ÂÂ@ A

linkObject
ÂÂA K
(
ÂÂK L$
objUpdateOutsideModule
ÂÂL b
)
ÂÂb c
+
ÂÂd e
$str
ÂÂf i
;
ÂÂi j
}
ÊÊ 
if
ÁÁ 
(
ÁÁ -
objUpdateOutsideModuleListTable
ÁÁ 3
!=
ÁÁ4 6
$str
ÁÁ7 9
)
ÁÁ9 :(
objUpdateOutsideModuleList
ËË .
+=
ËË/ 1
tbl
ËË2 5
.
ËË5 6
Name
ËË6 :
+
ËË; <
$str
ËË= B
+
ËËC D-
objUpdateOutsideModuleListTable
ËËE d
+
ËËe f
$str
ËËg n
;
ËËn o
foreach
ÌÌ 
(
ÌÌ 
KBObject
ÌÌ !"
objreadOutsideModule
ÌÌ" 6
in
ÌÌ7 9
TablesHelper
ÌÌ: F
.
ÌÌF G+
ObjectsReadTableOutsideModule
ÌÌG d
(
ÌÌd e
tbl
ÌÌe h
)
ÌÌh i
)
ÌÌi j
{
ÓÓ 
if
 
(
 +
ListModulesOfReferencedTables
 5
(
5 6"
objreadOutsideModule
6 J
)
J K
.
K L
Count
L Q
==
R T
$num
U V
)
V W
	objToMove
ÒÒ !
+=
ÒÒ" $
	Functions
ÒÒ% .
.
ÒÒ. /

linkObject
ÒÒ/ 9
(
ÒÒ9 :"
objreadOutsideModule
ÒÒ: N
)
ÒÒN O
+
ÒÒP Q
$str
ÒÒQ U
;
ÒÒV W
}
ÚÚ 
}
ÛÛ 
string
ıı 
[
ıı 
]
ıı 
mdlStats
ıı 
=
ıı 
new
ıı  #
string
ıı$ *
[
ıı* +
]
ıı+ ,
{
ıı- .
	Functions
ıı/ 8
.
ıı8 9

linkObject
ıı9 C
(
ııC D
mdl
ııD G
)
ııG H
,
ııH I%
listPubObjNotReferenced
ııJ a
,
ııa b&
listPirvateObjReferenced
ııc {
,
ıı{ |5
&ListobjOutsideModuleAccessPrivateTableıı} £
,ıı£ §*
objUpdateOutsideModuleListıı• ø
,ııø ¿
	objToMoveıı¿ …
}ıı  À
;ııÀ Ã
return
˜˜ 
mdlStats
˜˜ 
;
˜˜ 
}
¯¯ 	
private
¸¸ 
static
¸¸ 
bool
¸¸ %
IsReferencedFromOutside
¸¸ 3
(
¸¸3 4
Module
¸¸4 :
mdl
¸¸; >
,
¸¸> ?
KBObject
¸¸@ H
obj
¸¸I L
,
¸¸L M
out
¸¸N Q
string
¸¸R X
objList
¸¸Y `
)
¸¸` a
{
˝˝ 	
if
˛˛ 
(
˛˛ 
obj
˛˛ 
is
˛˛ 
Table
˛˛ 
)
˛˛ 
objList
ˇˇ 
=
ˇˇ 
obj
ˇˇ 
.
ˇˇ 
Name
ˇˇ "
+
ˇˇ# $
$str
ˇˇ% (
;
ˇˇ( )
else
ÄÄ 
objList
ÅÅ 
=
ÅÅ 
$str
ÅÅ 
;
ÅÅ 
bool
ÉÉ %
isReferencedFromOutside
ÉÉ (
=
ÉÉ) *
false
ÉÉ+ 0
;
ÉÉ0 1
string
ÑÑ 
objName
ÑÑ 
=
ÑÑ 
obj
ÑÑ  
.
ÑÑ  !
Name
ÑÑ! %
;
ÑÑ% &
foreach
ÖÖ 
(
ÖÖ 
EntityReference
ÖÖ $
refer
ÖÖ% *
in
ÖÖ+ -
obj
ÖÖ. 1
.
ÖÖ1 2
GetReferencesTo
ÖÖ2 A
(
ÖÖA B
)
ÖÖB C
)
ÖÖC D
{
ÜÜ 
KBObject
áá 
objRef
áá 
=
áá  !
KBObject
áá" *
.
áá* +
Get
áá+ .
(
áá. /
obj
áá/ 2
.
áá2 3
Model
áá3 8
,
áá8 9
refer
áá: ?
.
áá? @
From
áá@ D
)
ááD E
;
ááE F
if
àà 
(
àà 
objRef
àà 
!=
àà 
null
àà "
&&
àà# %
	Functions
àà& /
.
àà/ 0
	isRunable
àà0 9
(
àà9 :
objRef
àà: @
)
àà@ A
)
ààA B
{
ââ 
Module
ää 
modref
ää !
=
ää" #
objRef
ää$ *
.
ää* +
Module
ää+ 1
;
ää1 2
if
ãã 
(
ãã 
modref
ãã 
!=
ãã !
mdl
ãã" %
)
ãã% &
{
åå %
isReferencedFromOutside
çç /
=
çç0 1
true
çç2 6
;
çç6 7
if
éé 
(
éé 
obj
éé 
is
éé  "
Table
éé# (
)
éé( )
objList
èè #
+=
èè$ &
$str
èè' *
+
èè+ ,
	Functions
èè- 6
.
èè6 7

linkObject
èè7 A
(
èèA B
objRef
èèB H
)
èèH I
;
èèI J
}
êê 
}
ëë 
}
íí 
return
îî %
isReferencedFromOutside
îî *
;
îî* +
}
ïï 	
private
ññ 
static
ññ  
KBObjectCollection
ññ )*
ObjectsReferencesFromOutside
ññ* F
(
ññF G
KBObject
ññG O
obj
ññP S
)
ññS T
{
óó 	 
KBObjectCollection
òò 
objCol
òò %
=
òò& '
new
òò( + 
KBObjectCollection
òò, >
(
òò> ?
)
òò? @
;
òò@ A
string
öö 
mdlName
öö 
=
öö 
ObjectModule
öö )
(
öö) *
obj
öö* -
)
öö- .
;
öö. /
foreach
úú 
(
úú 
EntityReference
úú $
refer
úú% *
in
úú+ -
obj
úú. 1
.
úú1 2
GetReferencesTo
úú2 A
(
úúA B
)
úúB C
)
úúC D
{
ùù 
KBObject
ûû 
objRef
ûû 
=
ûû  !
KBObject
ûû" *
.
ûû* +
Get
ûû+ .
(
ûû. /
obj
ûû/ 2
.
ûû2 3
Model
ûû3 8
,
ûû8 9
refer
ûû: ?
.
ûû? @
From
ûû@ D
)
ûûD E
;
ûûE F
if
üü 
(
üü 
objRef
üü 
!=
üü 
null
üü "
&&
üü# %
	Functions
üü& /
.
üü/ 0
	isRunable
üü0 9
(
üü9 :
objRef
üü: @
)
üü@ A
)
üüA B
{
†† 
string
°° 

mdlNameRef
°° %
=
°°& '
ObjectModule
°°( 4
(
°°4 5
objRef
°°5 ;
)
°°; <
;
°°< =
if
¢¢ 
(
¢¢ 

mdlNameRef
¢¢ "
!=
¢¢# %
mdlName
¢¢& -
)
¢¢- .
{
££ 
if
§§ 
(
§§ 
obj
§§ 
is
§§  "
Table
§§# (
)
§§( )
objCol
•• "
.
••" #
Add
••# &
(
••& '
obj
••' *
)
••* +
;
••+ ,
}
¶¶ 
}
ßß 
}
®® 
return
©© 
objCol
©© 
;
©© 
}
™™ 	
public
≠≠ 
static
≠≠ 
void
≠≠ 
BuildModule
≠≠ &
(
≠≠& '
)
≠≠' (
{
ÆÆ 	

IKBService
ØØ 
kbserv
ØØ 
=
ØØ 

UIServices
ØØ  *
.
ØØ* +
KB
ØØ+ -
;
ØØ- .
KBModel
∞∞ 
kbModel
∞∞ 
=
∞∞ 

UIServices
∞∞ (
.
∞∞( )
KB
∞∞) +
.
∞∞+ ,
CurrentModel
∞∞, 8
;
∞∞8 9
IOutputService
±± 
output
±± !
=
±±" #
CommonServices
±±$ 2
.
±±2 3
Output
±±3 9
;
±±9 :
bool
≥≥ 
success
≥≥ 
=
≥≥ 
true
≥≥ 
;
≥≥  
string
¥¥ 
title
¥¥ 
=
¥¥ 
$str
¥¥ 4
;
¥¥4 5
output
µµ 
.
µµ 
StartSection
µµ 
(
µµ  
title
µµ  %
)
µµ% &
;
µµ& '
string
∂∂ 

outputFile
∂∂ 
=
∂∂ 
	Functions
∂∂  )
.
∂∂) *
CreateOutputFile
∂∂* :
(
∂∂: ;
kbserv
∂∂; A
,
∂∂A B
title
∂∂C H
)
∂∂H I
;
∂∂I J
KBDoctorXMLWriter
∑∑ 
writer
∑∑ $
=
∑∑% &
new
∑∑' *
KBDoctorXMLWriter
∑∑+ <
(
∑∑< =

outputFile
∑∑= G
,
∑∑G H
Encoding
∑∑I Q
.
∑∑Q R
UTF8
∑∑R V
)
∑∑V W
;
∑∑W X
writer
∏∏ 
.
∏∏ 
	AddHeader
∏∏ 
(
∏∏ 
title
∏∏ "
)
∏∏" #
;
∏∏# $
writer
ππ 
.
ππ 
AddTableHeader
ππ !
(
ππ! "
new
ππ" %
string
ππ& ,
[
ππ, -
]
ππ- .
{
ππ/ 0
$str
ππ1 9
,
ππ9 :
$str
ππ; H
,
ππH I
$str
ππJ V
}
ππW X
)
ππX Y
;
ππY Z 
KBObjectCollection
ªª 

objToBuild
ªª )
=
ªª* +
new
ªª, / 
KBObjectCollection
ªª0 B
(
ªªB C
)
ªªC D
;
ªªD E!
SelectObjectOptions
ΩΩ  
selectObjectOption
ΩΩ  2
=
ΩΩ3 4
new
ΩΩ5 8!
SelectObjectOptions
ΩΩ9 L
(
ΩΩL M
)
ΩΩM N
;
ΩΩN O 
selectObjectOption
ææ 
.
ææ 
MultipleSelection
ææ 0
=
ææ1 2
true
ææ3 7
;
ææ7 8 
selectObjectOption
¿¿ 
.
¿¿ 
ObjectTypes
¿¿ *
.
¿¿* +
Add
¿¿+ .
(
¿¿. / 
KBObjectDescriptor
¿¿/ A
.
¿¿A B
Get
¿¿B E
<
¿¿E F
Module
¿¿F L
>
¿¿L M
(
¿¿M N
)
¿¿N O
)
¿¿O P
;
¿¿P Q
foreach
¡¡ 
(
¡¡ 
Module
¡¡ 
mdl
¡¡ 
in
¡¡  "

UIServices
¡¡# -
.
¡¡- . 
SelectObjectDialog
¡¡. @
.
¡¡@ A
SelectObjects
¡¡A N
(
¡¡N O 
selectObjectOption
¡¡O a
)
¡¡a b
)
¡¡b c
{
¬¬ 
foreach
√√ 
(
√√ 
KBObject
√√ !
o
√√" #
in
√√$ &2
$CreateListObjectsModuleAndReferences
√√' K
(
√√K L
kbModel
√√L S
,
√√S T
mdl
√√U X
,
√√X Y
writer
√√Z `
)
√√` a
)
√√a b

objToBuild
ƒƒ !
.
ƒƒ! "
Add
ƒƒ" %
(
ƒƒ% &
o
ƒƒ& '
)
ƒƒ' (
;
ƒƒ( )
}
≈≈ 
writer
«« 
.
«« 
	AddFooter
«« 
(
«« 
)
«« 
;
«« 
writer
»» 
.
»» 
Close
»» 
(
»» 
)
»» 
;
»» 
KBDoctorHelper
…… 
.
…… !
ShowKBDoctorResults
…… .
(
……. /

outputFile
……/ 9
)
……9 :
;
……: ;
GenexusUIServices
ÀÀ 
.
ÀÀ 
Build
ÀÀ #
.
ÀÀ# $ 
BuildWithTheseOnly
ÀÀ$ 6
(
ÀÀ6 7

objToBuild
ÀÀ7 A
.
ÀÀA B
Keys
ÀÀB F
)
ÀÀF G
;
ÀÀG H
do
ÕÕ 
{
ŒŒ 
Application
œœ 
.
œœ 
DoEvents
œœ $
(
œœ$ %
)
œœ% &
;
œœ& '
}
–– 
while
–– 
(
–– 
GenexusUIServices
–– &
.
––& '
Build
––' ,
.
––, -

IsBuilding
––- 7
)
––7 8
;
––8 9
output
““ 
.
““ 

EndSection
““ 
(
““ 
$str
““ (
,
““( )
true
““* .
)
““. /
;
““/ 0
}
’’ 	
private
◊◊ 
static
◊◊  
KBObjectCollection
◊◊ )2
$CreateListObjectsModuleAndReferences
◊◊* N
(
◊◊N O
KBModel
◊◊O V
kbModel
◊◊W ^
,
◊◊^ _
Module
◊◊` f
mdl
◊◊g j
,
◊◊j k
KBDoctorXMLWriter
◊◊l }
writer◊◊~ Ñ
)◊◊Ñ Ö
{
ÿÿ 	 
KBObjectCollection
ŸŸ 

objToBuild
ŸŸ )
=
ŸŸ* +
new
ŸŸ, / 
KBObjectCollection
ŸŸ0 B
(
ŸŸB C
)
ŸŸC D
;
ŸŸD E
foreach
⁄⁄ 
(
⁄⁄ 
KBObject
⁄⁄ 
obj
⁄⁄ !
in
⁄⁄" $
mdl
⁄⁄% (
.
⁄⁄( )
GetAllMembers
⁄⁄) 6
(
⁄⁄6 7
)
⁄⁄7 8
)
⁄⁄8 9
{
€€ 
if
‹‹ 
(
‹‹ 
KBObjectHelper
‹‹ "
.
‹‹" #
IsSpecifiable
‹‹# 0
(
‹‹0 1
obj
‹‹1 4
)
‹‹4 5
&&
‹‹6 8
ObjectsHelper
‹‹9 F
.
‹‹F G
isGenerated
‹‹G R
(
‹‹R S
obj
‹‹S V
)
‹‹V W
)
‹‹W X
{
›› 
if
ﬁﬁ 
(
ﬁﬁ 
!
ﬁﬁ 

objToBuild
ﬁﬁ #
.
ﬁﬁ# $
Contains
ﬁﬁ$ ,
(
ﬁﬁ, -
obj
ﬁﬁ- 0
)
ﬁﬁ0 1
)
ﬁﬁ1 2
{
ﬂﬂ 

objToBuild
‡‡ "
.
‡‡" #
Add
‡‡# &
(
‡‡& '
obj
‡‡' *
)
‡‡* +
;
‡‡+ ,
writer
·· 
.
·· 
AddTableData
·· +
(
··+ ,
new
··, /
string
··0 6
[
··6 7
]
··7 8
{
··9 :
obj
··; >
.
··> ?
QualifiedName
··? L
.
··L M
ToString
··M U
(
··U V
)
··V W
,
··W X
obj
··Y \
.
··\ ]
Description
··] h
,
··h i
obj
··j m
.
··m n
QualifiedName
··n {
.
··{ |
ToString··| Ñ
(··Ñ Ö
)··Ö Ü
+··á à
$str··â ç
+··é è
obj··ê ì
.··ì î
TypeDescriptor··î ¢
.··¢ £
Name··£ ß
+··® ©
$str··™ ≠
}··Æ Ø
)··Ø ∞
;··∞ ±
}
‚‚ 
}
„„ #
AddObjectsReferenceTo
‰‰ %
(
‰‰% &
obj
‰‰& )
,
‰‰) *

objToBuild
‰‰+ 5
,
‰‰5 6
writer
‰‰7 =
)
‰‰= >
;
‰‰> ?
}
ÂÂ 
foreach
ÁÁ 
(
ÁÁ 
Table
ÁÁ 
tbl
ÁÁ 
in
ÁÁ !
Table
ÁÁ" '
.
ÁÁ' (
GetAll
ÁÁ( .
(
ÁÁ. /
kbModel
ÁÁ/ 6
)
ÁÁ6 7
)
ÁÁ7 8
{
ËË 
if
ÈÈ 
(
ÈÈ 
TablesHelper
ÈÈ  
.
ÈÈ  !
TableModule
ÈÈ! ,
(
ÈÈ, -
kbModel
ÈÈ- 4
,
ÈÈ4 5
tbl
ÈÈ6 9
)
ÈÈ9 :
==
ÈÈ; =
mdl
ÈÈ> A
)
ÈÈA B#
AddObjectsReferenceTo
ÍÍ )
(
ÍÍ) *
tbl
ÍÍ* -
,
ÍÍ- .

objToBuild
ÍÍ/ 9
,
ÍÍ9 :
writer
ÍÍ; A
)
ÍÍA B
;
ÍÍB C
}
ÎÎ 
return
ÏÏ 

objToBuild
ÏÏ 
;
ÏÏ 
}
ÌÌ 	
public
ÔÔ 
static
ÔÔ 
void
ÔÔ #
AddObjectsReferenceTo
ÔÔ 0
(
ÔÔ0 1
KBObject
ÔÔ1 9
obj
ÔÔ: =
,
ÔÔ= > 
KBObjectCollection
ÔÔ? Q

objToBuild
ÔÔR \
,
ÔÔ\ ]
KBDoctorXMLWriter
ÔÔ^ o
writer
ÔÔp v
)
ÔÔv w
{
 	
foreach
ÒÒ 
(
ÒÒ 
EntityReference
ÒÒ $
refe
ÒÒ% )
in
ÒÒ* ,
obj
ÒÒ- 0
.
ÒÒ0 1
GetReferencesTo
ÒÒ1 @
(
ÒÒ@ A
)
ÒÒA B
)
ÒÒB C
{
ÚÚ 
KBObject
ÛÛ 
objRef
ÛÛ 
=
ÛÛ  !
KBObject
ÛÛ" *
.
ÛÛ* +
Get
ÛÛ+ .
(
ÛÛ. /
obj
ÛÛ/ 2
.
ÛÛ2 3
Model
ÛÛ3 8
,
ÛÛ8 9
refe
ÛÛ: >
.
ÛÛ> ?
From
ÛÛ? C
)
ÛÛC D
;
ÛÛD E
if
ÙÙ 
(
ÙÙ 
objRef
ÙÙ 
!=
ÙÙ 
null
ÙÙ "
&&
ÙÙ# %
KBObjectHelper
ÙÙ& 4
.
ÙÙ4 5
IsSpecifiable
ÙÙ5 B
(
ÙÙB C
objRef
ÙÙC I
)
ÙÙI J
&&
ÙÙK M
!
ÙÙN O

objToBuild
ÙÙO Y
.
ÙÙY Z
Contains
ÙÙZ b
(
ÙÙb c
objRef
ÙÙc i
)
ÙÙi j
&&
ÙÙk m
ObjectsHelper
ÙÙn {
.
ÙÙ{ |
isGeneratedÙÙ| á
(ÙÙá à
objRefÙÙà é
)ÙÙé è
)ÙÙê ë
{
ıı 

objToBuild
ˆˆ 
.
ˆˆ 
Add
ˆˆ "
(
ˆˆ" #
objRef
ˆˆ# )
)
ˆˆ) *
;
ˆˆ* +
writer
˜˜ 
.
˜˜ 
AddTableData
˜˜ '
(
˜˜' (
new
˜˜( +
string
˜˜, 2
[
˜˜2 3
]
˜˜3 4
{
˜˜5 6
objRef
˜˜7 =
.
˜˜= >
QualifiedName
˜˜> K
.
˜˜K L
ToString
˜˜L T
(
˜˜T U
)
˜˜U V
,
˜˜V W
objRef
˜˜X ^
.
˜˜^ _
Description
˜˜_ j
,
˜˜j k
obj
˜˜m p
.
˜˜p q
QualifiedName
˜˜q ~
.
˜˜~ 
ToString˜˜ á
(˜˜á à
)˜˜à â
+˜˜ä ã
$str˜˜å ê
+˜˜ë í
obj˜˜ì ñ
.˜˜ñ ó
TypeDescriptor˜˜ó •
.˜˜• ¶
Name˜˜¶ ™
+˜˜´ ¨
$str˜˜≠ ∞
}˜˜± ≤
)˜˜≤ ≥
;˜˜≥ ¥
}
¯¯ 
}
˘˘ 
}
˙˙ 	
public
˝˝ 
static
˝˝ 
List
˝˝ 
<
˝˝ 
	EntityKey
˝˝ $
>
˝˝$ %
GetAllObjectsKeys
˝˝& 7
(
˝˝7 8
IEnumerable
˝˝8 C
<
˝˝C D
KBObject
˝˝D L
>
˝˝L M
objects
˝˝N U
)
˝˝U V
{
˛˛ 	
List
ˇˇ 
<
ˇˇ 
KBObject
ˇˇ 
>
ˇˇ 
parents
ˇˇ "
=
ˇˇ# $
new
ˇˇ% (
List
ˇˇ) -
<
ˇˇ- .
KBObject
ˇˇ. 6
>
ˇˇ6 7
(
ˇˇ7 8
objects
ˇˇ8 ?
)
ˇˇ? @
;
ˇˇ@ A
if
ÄÄ 
(
ÄÄ 
parents
ÄÄ 
.
ÄÄ 
Count
ÄÄ 
==
ÄÄ  
$num
ÄÄ! "
)
ÄÄ" #
return
ÅÅ 
null
ÅÅ 
;
ÅÅ 
List
ÉÉ 
<
ÉÉ 
	EntityKey
ÉÉ 
>
ÉÉ 
keys
ÉÉ  
=
ÉÉ! "
new
ÉÉ# &
List
ÉÉ' +
<
ÉÉ+ ,
	EntityKey
ÉÉ, 5
>
ÉÉ5 6
(
ÉÉ6 7
)
ÉÉ7 8
;
ÉÉ8 9
parents
ÑÑ 
.
ÑÑ 
ForEach
ÑÑ 
(
ÑÑ 
o
ÑÑ 
=>
ÑÑ  
keys
ÑÑ! %
.
ÑÑ% &
AddRange
ÑÑ& .
(
ÑÑ. /

UIServices
ÑÑ/ 9
.
ÑÑ9 :
KB
ÑÑ: <
.
ÑÑ< =
CurrentModel
ÑÑ= I
.
ÑÑI J
Objects
ÑÑJ Q
.
ÑÑQ R
GetAllChildren
ÑÑR `
(
ÑÑ` a
o
ÑÑa b
)
ÑÑb c
.
ÑÑc d
Select
ÑÑd j
(
ÑÑj k
ch
ÑÑk m
=>
ÑÑn p
ch
ÑÑq s
.
ÑÑs t
Key
ÑÑt w
)
ÑÑw x
)
ÑÑx y
)
ÑÑy z
;
ÑÑz {
if
ÜÜ 
(
ÜÜ 
keys
ÜÜ 
.
ÜÜ 
Count
ÜÜ 
==
ÜÜ 
$num
ÜÜ 
)
ÜÜ  
return
áá 
null
áá 
;
áá 
keys
àà 
.
àà 
	RemoveAll
àà 
(
àà 
k
àà 
=>
àà 
k
àà  !
.
àà! "
Type
àà" &
==
àà' )
typeof
àà* 0
(
àà0 1
Folder
àà1 7
)
àà7 8
.
àà8 9
GUID
àà9 =
)
àà= >
;
àà> ?
return
ää 
keys
ää 
;
ää 
}
ãã 	
internal
çç 
static
çç 
void
çç  
ListTableInModules
çç /
(
çç/ 0
)
çç0 1
{
éé 	

IKBService
êê 
kbserv
êê 
=
êê 

UIServices
êê  *
.
êê* +
KB
êê+ -
;
êê- .
KBModel
ëë 
model
ëë 
=
ëë 
kbserv
ëë "
.
ëë" #
CurrentModel
ëë# /
.
ëë/ 0
GetDesignModel
ëë0 >
(
ëë> ?
)
ëë? @
;
ëë@ A
string
ìì 
title
ìì 
=
ìì 
$str
ìì >
;
ìì> ?
IOutputService
îî 
output
îî !
=
îî" #
CommonServices
îî$ 2
.
îî2 3
Output
îî3 9
;
îî9 :
output
ïï 
.
ïï 
StartSection
ïï 
(
ïï  
title
ïï  %
)
ïï% &
;
ïï& '
string
óó 

outputFile
óó 
=
óó 
	Functions
óó  )
.
óó) *
CreateOutputFile
óó* :
(
óó: ;
kbserv
óó; A
,
óóA B
title
óóC H
)
óóH I
;
óóI J
KBDoctorXMLWriter
ôô 
writer
ôô $
=
ôô% &
new
ôô' *
KBDoctorXMLWriter
ôô+ <
(
ôô< =

outputFile
ôô= G
,
ôôG H
Encoding
ôôI Q
.
ôôQ R
UTF8
ôôR V
)
ôôV W
;
ôôW X
writer
öö 
.
öö 
	AddHeader
öö 
(
öö 
title
öö "
)
öö" #
;
öö# $
writer
õõ 
.
õõ 
AddTableHeader
õõ !
(
õõ! "
new
õõ" %
string
õõ& ,
[
õõ, -
]
õõ- .
{
õõ/ 0
$str
úú 
,
úú 
$str
úú %
,
úú% &
$str
úú' 3
,
úú3 4
$str
úú5 ;
,
úú; <
$str
úú= J
,
úúJ K
$str
úúL U
,
úúU V
$str
úúV c
,
úúc d
$str
úúe v
,
úúv w
$strúúx å
,úúç é
$strúúè õ
}úúù û
)úúû ü
;úúü †!
SelectObjectOptions
ûû  
selectObjectOption
ûû  2
=
ûû3 4
new
ûû5 8!
SelectObjectOptions
ûû9 L
(
ûûL M
)
ûûM N
;
ûûN O 
selectObjectOption
üü 
.
üü 
MultipleSelection
üü 0
=
üü1 2
true
üü3 7
;
üü7 8 
selectObjectOption
†† 
.
†† 
ObjectTypes
†† *
.
††* +
Add
††+ .
(
††. / 
KBObjectDescriptor
††/ A
.
††A B
Get
††B E
<
††E F
Module
††F L
>
††L M
(
††M N
)
††N O
)
††O P
;
††P Q
foreach
°° 
(
°° 
KBObject
°° 
module
°° $
in
°°% '

UIServices
°°( 2
.
°°2 3 
SelectObjectDialog
°°3 E
.
°°E F
SelectObjects
°°F S
(
°°S T 
selectObjectOption
°°T f
)
°°f g
)
°°g h
{
¢¢ 
foreach
££ 
(
££ 
Table
££ 
t
££  
in
££! #
Table
££$ )
.
££) *
GetAll
££* 0
(
££0 1
module
££1 7
.
££7 8
Model
££8 =
)
££= >
)
££> ?
{
•• 
if
¶¶ 
(
¶¶ 
TablesHelper
¶¶ $
.
¶¶$ %
TableModule
¶¶% 0
(
¶¶0 1
module
¶¶1 7
.
¶¶7 8
Model
¶¶8 =
,
¶¶= >
t
¶¶? @
)
¶¶@ A
==
¶¶B D
module
¶¶E K
)
¶¶K L
{
ßß 
string
®® 
objNameLink
®® *
=
®®+ ,
	Functions
®®- 6
.
®®6 7

linkObject
®®7 A
(
®®A B
t
®®B C
)
®®C D
;
®®D E
output
™™ 
.
™™ 
AddLine
™™ &
(
™™& '
$str
™™' 7
+
™™8 9
t
™™: ;
.
™™; <
Name
™™< @
)
™™@ A
;
™™A B
int
¨¨ 
	countAttr
¨¨ %
=
¨¨& '
$num
¨¨( )
;
¨¨) *
int
≠≠ 
countKeyAttr
≠≠ (
=
≠≠) *
$num
≠≠+ ,
;
≠≠, -
int
ÆÆ 
widthKey
ÆÆ $
=
ÆÆ% &
$num
ÆÆ' (
;
ÆÆ( )
int
ØØ 
width
ØØ !
=
ØØ" #
$num
ØØ$ %
;
ØØ% &
int
∞∞ 
widthVariable
∞∞ )
=
∞∞* +
$num
∞∞, -
;
∞∞- .
int
±± 

widthFixed
±± &
=
±±' (
$num
±±) *
;
±±* +
ObjectVisibility
≥≥ (
objVisibility
≥≥) 6
=
≥≥7 8
TableVisibility
≥≥9 H
(
≥≥H I
t
≥≥I J
)
≥≥J K
;
≥≥K L
KBObject
¥¥  
trnBest
¥¥! (
=
¥¥) *
GenexusBLServices
¥¥+ <
.
¥¥< =
Tables
¥¥= C
.
¥¥C D*
GetBestAssociatedTransaction
¥¥D `
(
¥¥` a
model
¥¥a f
,
¥¥f g
t
¥¥h i
.
¥¥i j
Key
¥¥j m
)
¥¥m n
;
¥¥n o
Module
µµ 

mdlTrnBest
µµ )
=
µµ* +
trnBest
µµ, 3
.
µµ3 4
Module
µµ4 :
;
µµ: ;
string
∑∑ 
trnGen
∑∑ %
=
∑∑& '
$str
∑∑( *
;
∑∑* +
string
∏∏ 
trnNoGen
∏∏ '
=
∏∏( )
$str
∏∏* ,
;
∏∏, -
List
ππ 
<
ππ 
string
ππ #
>
ππ# $
mdlList
ππ% ,
=
ππ- .
new
ππ/ 2
List
ππ3 7
<
ππ7 8
string
ππ8 >
>
ππ> ?
(
ππ? @
)
ππ@ A
;
ππA B
foreach
∫∫ 
(
∫∫  !
Transaction
∫∫! ,
trn
∫∫- 0
in
∫∫1 3
t
∫∫4 5
.
∫∫5 6$
AssociatedTransactions
∫∫6 L
)
∫∫L M
{
ºº 
string
ΩΩ "
trnstr
ΩΩ# )
=
ΩΩ* +
	Functions
ΩΩ, 5
.
ΩΩ5 6

linkObject
ΩΩ6 @
(
ΩΩ@ A
trn
ΩΩA D
)
ΩΩD E
+
ΩΩF G
$str
ΩΩH K
+
ΩΩL M
(
ΩΩN O
(
ΩΩO P
trn
ΩΩP S
.
ΩΩS T
IsPublic
ΩΩT \
)
ΩΩ\ ]
?
ΩΩ^ _
$str
ΩΩ` h
:
ΩΩi j
$str
ΩΩk t
)
ΩΩt u
+
ΩΩv w
$strΩΩx Ç
;ΩΩÉ Ñ
if
ææ 
(
ææ  
trn
ææ  #
.
ææ# $
GetPropertyValue
ææ$ 4
<
ææ4 5
bool
ææ5 9
>
ææ9 :
(
ææ: ;

Properties
ææ; E
.
ææE F
TRN
ææF I
.
ææI J
GenerateObject
ææJ X
)
ææX Y
)
ææY Z
trnGen
ææ[ a
+=
ææb d
trnstr
ææe k
;
ææl m
else
øø  
trnNoGen
øø! )
+=
øø* ,
trnstr
øø- 3
;
øø3 4
if
¡¡ 
(
¡¡  
!
¡¡  !
mdlList
¡¡! (
.
¡¡( )
Contains
¡¡) 1
(
¡¡1 2
trn
¡¡2 5
.
¡¡5 6
Module
¡¡6 <
.
¡¡< =
Name
¡¡= A
)
¡¡A B
)
¡¡B C
{
¬¬ 
mdlList
√√  '
.
√√' (
Add
√√( +
(
√√+ ,
trn
√√, /
.
√√/ 0
Module
√√0 6
.
√√6 7
Name
√√7 ;
)
√√; <
;
√√< =
}
ƒƒ 
}
≈≈ 
IList
»» 
<
»» 
KBObject
»» &
>
»»& '
objList
»»( /
=
»»0 1
(
»»2 3
from
»»3 7
r
»»8 9
in
»»: <
model
»»= B
.
»»B C
GetReferencesTo
»»C R
(
»»R S
t
»»S T
.
»»T U
Key
»»U X
,
»»X Y
LinkType
»»Z b
.
»»b c

UsedObject
»»c m
)
»»m n
where
……3 8
r
……9 :
.
……: ;
ReferenceType
……; H
==
……I K
ReferenceType
……L Y
.
……Y Z
WeakExternal
……Z f
select
ÀÀ3 9
model
ÀÀ: ?
.
ÀÀ? @
Objects
ÀÀ@ G
.
ÀÀG H
Get
ÀÀH K
(
ÀÀK L
r
ÀÀL M
.
ÀÀM N
From
ÀÀN R
)
ÀÀR S
)
ÀÀS T
.
ÀÀT U
ToList
ÀÀU [
(
ÀÀ[ \
)
ÀÀ\ ]
;
ÀÀ] ^
IList
ÕÕ 
<
ÕÕ 
KBObject
ÕÕ &
>
ÕÕ& '
objList2
ÕÕ( 0
=
ÕÕ1 2
objList
ÕÕ3 :
.
ÕÕ: ;
Where
ÕÕ; @
(
ÕÕ@ A
r
ÕÕA B
=>
ÕÕC E
r
ÕÕF G
.
ÕÕG H
Module
ÕÕH N
!=
ÕÕO Q

mdlTrnBest
ÕÕR \
)
ÕÕ\ ]
.
ÕÕ] ^
ToList
ÕÕ^ d
(
ÕÕd e
)
ÕÕe f
;
ÕÕf g
string
œœ 
objListQNames
œœ ,
=
œœ- .
null
œœ/ 3
;
œœ3 4
objList2
––  
.
––  !
ToList
––! '
(
––' (
)
––( )
.
––) *
ForEach
––* 1
(
––1 2
v
––2 3
=>
––4 6
objListQNames
––7 D
+=
––E G
$str
––H K
+
––L M
	Functions
––N W
.
––W X

linkObject
––X b
(
––b c
v
––c d
)
––d e
)
––e f
;
––f g
List
““ 
<
““ 
string
““ #
>
““# $
mdlReferencedList
““% 6
=
““7 8
new
““9 <
List
““= A
<
““A B
string
““B H
>
““H I
(
““I J
)
““J K
;
““K L
foreach
”” 
(
””  !
KBObject
””! )
o
””* +
in
””, .
objList
””/ 6
)
””6 7
{
‘‘ 
if
’’ 
(
’’  
!
’’  !
mdlReferencedList
’’! 2
.
’’2 3
Contains
’’3 ;
(
’’; <
o
’’< =
.
’’= >
Module
’’> D
.
’’D E
Name
’’E I
)
’’I J
)
’’J K
{
÷÷ 
mdlReferencedList
◊◊  1
.
◊◊1 2
Add
◊◊2 5
(
◊◊5 6
o
◊◊6 7
.
◊◊7 8
Module
◊◊8 >
.
◊◊> ?
Name
◊◊? C
)
◊◊C D
;
◊◊D E
}
ÿÿ 
}
ŸŸ 
string
€€ 

mdlListstr
€€ )
=
€€* +
String
€€, 2
.
€€2 3
Join
€€3 7
(
€€7 8
$str
€€8 ;
,
€€; <
mdlList
€€= D
.
€€D E
ToArray
€€E L
(
€€L M
)
€€M N
)
€€N O
;
€€O P
string
‹‹ "
mdlReferencedListstr
‹‹ 3
=
‹‹4 5
String
‹‹6 <
.
‹‹< =
Join
‹‹= A
(
‹‹A B
$str
‹‹B E
,
‹‹E F
mdlReferencedList
‹‹G X
.
‹‹X Y
ToArray
‹‹Y `
(
‹‹` a
)
‹‹a b
)
‹‹b c
;
‹‹c d
writer
ﬁﬁ 
.
ﬁﬁ 
AddTableData
ﬁﬁ +
(
ﬁﬁ+ ,
new
ﬁﬁ, /
string
ﬁﬁ0 6
[
ﬁﬁ6 7
]
ﬁﬁ7 8
{
ﬁﬁ9 :
objNameLink
ﬂﬂ '
,
ﬂﬂ' (
t
ﬂﬂ) *
.
ﬂﬂ* +
Description
ﬂﬂ+ 6
,
ﬂﬂ6 7
objVisibility
ﬂﬂ7 D
.
ﬂﬂD E
ToString
ﬂﬂE M
(
ﬂﬂM N
)
ﬂﬂN O
,
ﬂﬂO P
trnBest
ﬂﬂP W
.
ﬂﬂW X
QualifiedName
ﬂﬂX e
.
ﬂﬂe f
ToString
ﬂﬂf n
(
ﬂﬂn o
)
ﬂﬂo p
,
ﬂﬂp q

mdlTrnBest
ﬂﬂq {
.
ﬂﬂ{ |
Nameﬂﬂ| Ä
,ﬂﬂÄ Å

mdlListstr
‡‡! +
,
‡‡+ ,
trnGen
‡‡- 3
,
‡‡3 4
trnNoGen
‡‡5 =
,
‡‡> ?"
mdlReferencedListstr
‡‡? S
,
‡‡S T
objListQNames
‡‡U b
}
‡‡b c
)
‡‡c d
;
‡‡d e
}
‚‚ 
}
„„ 
}
ÂÂ 
writer
ËË 
.
ËË 
	AddFooter
ËË 
(
ËË 
)
ËË 
;
ËË 
writer
ÈÈ 
.
ÈÈ 
Close
ÈÈ 
(
ÈÈ 
)
ÈÈ 
;
ÈÈ 
KBDoctorHelper
ÎÎ 
.
ÎÎ !
ShowKBDoctorResults
ÎÎ .
(
ÎÎ. /

outputFile
ÎÎ/ 9
)
ÎÎ9 :
;
ÎÎ: ;
bool
ÏÏ 
success
ÏÏ 
=
ÏÏ 
true
ÏÏ 
;
ÏÏ  
output
ÌÌ 
.
ÌÌ 

EndSection
ÌÌ 
(
ÌÌ 
title
ÌÌ #
,
ÌÌ# $
success
ÌÌ% ,
)
ÌÌ, -
;
ÌÌ- .
}
ÓÓ 	
internal
 
static
 
void
  
ModuleDependencies
 /
(
/ 0
)
0 1
{
ÚÚ 	

IKBService
ÛÛ 
kbserv
ÛÛ 
=
ÛÛ 

UIServices
ÛÛ  *
.
ÛÛ* +
KB
ÛÛ+ -
;
ÛÛ- .
KBModel
ÙÙ 
kbModel
ÙÙ 
=
ÙÙ 

UIServices
ÙÙ (
.
ÙÙ( )
KB
ÙÙ) +
.
ÙÙ+ ,
CurrentModel
ÙÙ, 8
;
ÙÙ8 9
IOutputService
ıı 
output
ıı !
=
ıı" #
CommonServices
ıı$ 2
.
ıı2 3
Output
ıı3 9
;
ıı9 :
bool
ˆˆ 
success
ˆˆ 
=
ˆˆ 
true
ˆˆ 
;
ˆˆ  
int
˜˜ 
	objInRoot
˜˜ 
=
˜˜ 
$num
˜˜ 
;
˜˜ 
int
¯¯ 

objSinRoot
¯¯ 
=
¯¯ 
$num
¯¯ 
;
¯¯ 
string
˘˘ 
title
˘˘ 
=
˘˘ 
$str
˘˘ 9
;
˘˘9 :
output
˙˙ 
.
˙˙ 
StartSection
˙˙ 
(
˙˙  
title
˙˙  %
)
˙˙% &
;
˙˙& '
string
˚˚ 

outputFile
˚˚ 
=
˚˚ 
	Functions
˚˚  )
.
˚˚) *
CreateOutputFile
˚˚* :
(
˚˚: ;
kbserv
˚˚; A
,
˚˚A B
title
˚˚C H
)
˚˚H I
;
˚˚I J
KBDoctorXMLWriter
¸¸ 
writer
¸¸ $
=
¸¸% &
new
¸¸' *
KBDoctorXMLWriter
¸¸+ <
(
¸¸< =

outputFile
¸¸= G
,
¸¸G H
Encoding
¸¸I Q
.
¸¸Q R
UTF8
¸¸R V
)
¸¸V W
;
¸¸W X
writer
˝˝ 
.
˝˝ 
	AddHeader
˝˝ 
(
˝˝ 
title
˝˝ "
)
˝˝" #
;
˝˝# $
writer
˛˛ 
.
˛˛ 
AddTableHeader
˛˛ !
(
˛˛! "
new
˛˛" %
string
˛˛& ,
[
˛˛, -
]
˛˛- .
{
˛˛/ 0
$str
˛˛1 9
,
˛˛9 :
$str
˛˛; C
,
˛˛C D
$str
˛˛E K
,
˛˛L M
$str
˛˛N `
}
˛˛` a
)
˛˛a b
;
˛˛b c 
KBObjectCollection
ÄÄ 
objRefCollection
ÄÄ /
=
ÄÄ0 1
new
ÄÄ2 5 
KBObjectCollection
ÄÄ6 H
(
ÄÄH I
)
ÄÄI J
;
ÄÄJ K!
SelectObjectOptions
ÇÇ  
selectObjectOption
ÇÇ  2
=
ÇÇ3 4
new
ÇÇ5 8!
SelectObjectOptions
ÇÇ9 L
(
ÇÇL M
)
ÇÇM N
;
ÇÇN O 
selectObjectOption
ÉÉ 
.
ÉÉ 
MultipleSelection
ÉÉ 0
=
ÉÉ1 2
false
ÉÉ3 8
;
ÉÉ8 9 
selectObjectOption
ÑÑ 
.
ÑÑ 
ObjectTypes
ÑÑ *
.
ÑÑ* +
Add
ÑÑ+ .
(
ÑÑ. / 
KBObjectDescriptor
ÑÑ/ A
.
ÑÑA B
Get
ÑÑB E
<
ÑÑE F
Module
ÑÑF L
>
ÑÑL M
(
ÑÑM N
)
ÑÑN O
)
ÑÑO P
;
ÑÑP Q
Module
ÖÖ 
module2
ÖÖ 
=
ÖÖ 
new
ÖÖ  
Module
ÖÖ! '
(
ÖÖ' (
kbModel
ÖÖ( /
)
ÖÖ/ 0
;
ÖÖ0 1
foreach
ÜÜ 
(
ÜÜ 
Module
ÜÜ 
module
ÜÜ "
in
ÜÜ# %

UIServices
ÜÜ& 0
.
ÜÜ0 1 
SelectObjectDialog
ÜÜ1 C
.
ÜÜC D
SelectObjects
ÜÜD Q
(
ÜÜQ R 
selectObjectOption
ÜÜR d
)
ÜÜd e
)
ÜÜe f
{
áá 
module2
àà 
=
àà 
module
àà  
;
àà  !
output
ää 
.
ää 
AddLine
ää "
(
ää" #
$str
ää# /
+
ää0 1
module
ää2 8
.
ää8 9
Name
ää9 =
+
ää> ?
$str
ää@ F
)
ääF G
;
ääG H
foreach
åå 
(
åå 
KBObject
åå %
obj
åå& )
in
åå* ,
ModuleObjects
åå- :
(
åå: ;
module
åå; A
)
ååA B
)
ååB C
{
çç 
foreach
éé 
(
éé  !
EntityReference
éé! 0
	reference
éé1 :
in
éé; =
obj
éé> A
.
ééA B
GetReferences
ééB O
(
ééO P
)
ééP Q
)
ééQ R
{
èè 
KBObject
êê $
objref
êê% +
=
êê, -
KBObject
êê. 6
.
êê6 7
Get
êê7 :
(
êê: ;
obj
êê; >
.
êê> ?
Model
êê? D
,
êêD E
	reference
êêF O
.
êêO P
To
êêP R
)
êêR S
;
êêS T
if
ëë 
(
ëë  
objref
ëë  &
!=
ëë' )
null
ëë* .
&&
ëë/ 1
objref
ëë2 8
.
ëë8 9
TypeDescriptor
ëë9 G
.
ëëG H
Name
ëëH L
!=
ëëM O
$str
ëëP [
&&
ëë] _
objref
ëë` f
.
ëëf g
TypeDescriptor
ëëg u
.
ëëu v
Name
ëëv z
!=
ëë{ }
$strëë~ ä
)ëëä ã
{
íí 
Module
ìì  &
objrefModule
ìì' 3
=
ìì4 5
(
ìì6 7
(
ìì7 8
objref
ìì8 >
is
ìì? A
Table
ììB G
)
ììG H
?
ììI J
TablesHelper
ììK W
.
ììW X
TableModule
ììX c
(
ììc d
objref
ììd j
.
ììj k
Model
ììk p
,
ììp q
(
ììr s
Table
ììs x
)
ììx y
objref
ììy 
)ìì Ä
:ììÅ Ç
objrefììÉ â
.ììâ ä
Moduleììä ê
)ììê ë
;ììë í
if
ïï  "
(
ïï# $
objrefModule
ïï$ 0
!=
ïï1 3
module
ïï4 :
)
ïï: ;
if
ññ$ &
(
ññ' (
!
ññ( )
(
ññ) *
objref
ññ* 0
is
ññ1 3
Domain
ññ4 :
)
ññ: ;
&&
ññ< >
!
ññ? @
(
ññ@ A
objref
ññA G
is
ññH J
Image
ññK P
)
ññP Q
&&
ññR T
!
ññU V
(
ññV W
objref
ññW ]
is
ññ^ `
Theme
ñña f
)
ññf g
&&
ññh j
!
ññk l
(
ññl m
objref
ññm s
is
ññt v

ThemeClassññw Å
)ññÅ Ç
&&
óó( *
!
óó+ ,
(
óó, -
objref
óó- 3
is
óó4 6
GeneratorCategory
óó7 H
)
óóH I
&&
óóJ L
!
óóM N
(
óóN O
objref
óóO U
is
óóV X

KBCategory
óóY c
)
óóc d
&&
óóe g
!
óóh i
(
óói j
objref
óój p
is
óóq s
SDT
óót w
)
óów x
)
óóx y
{
òò$ %
bool
ôô( ,
contain
ôô- 4
=
ôô5 6
objRefCollection
ôô7 G
.
ôôG H
Any
ôôH K
(
ôôK L
p
ôôL M
=>
ôôN P
p
ôôQ R
.
ôôR S
Guid
ôôS W
==
ôôX Z
objref
ôô[ a
.
ôôa b
Guid
ôôb f
)
ôôf g
;
ôôg h
if
öö( *
(
öö+ ,
!
öö, -
contain
öö- 4
)
öö4 5
{
õõ( )
objRefCollection
úú, <
.
úú< =
Add
úú= @
(
úú@ A
objref
úúA G
)
úúG H
;
úúH I
}
ùù( )
}
ûû$ %
}
üü 
}
°° 
}
•• 
}
ßß 
string
®® 
listObj
®® 
=
®® 
$str
®® 
;
®®  
foreach
™™ 
(
™™ 
KBObject
™™ 
o
™™ 
in
™™  "
objRefCollection
™™# 3
)
™™3 4
{
´´ 
listObj
¨¨ 
=
¨¨ 
$str
¨¨ 
;
¨¨ 
foreach
ÆÆ 
(
ÆÆ 
EntityReference
ÆÆ (
refe
ÆÆ) -
in
ÆÆ. 0
o
ÆÆ1 2
.
ÆÆ2 3
GetReferencesTo
ÆÆ3 B
(
ÆÆB C
)
ÆÆC D
)
ÆÆD E
{
ØØ 
KBObject
±± 
objref
±± #
=
±±$ %
KBObject
±±& .
.
±±. /
Get
±±/ 2
(
±±2 3
o
±±3 4
.
±±4 5
Model
±±5 :
,
±±: ;
refe
±±< @
.
±±@ A
From
±±A E
)
±±E F
;
±±F G
if
≤≤ 
(
≤≤ 
objref
≤≤ 
!=
≤≤ !
null
≤≤! %
)
≤≤% &
{
≥≥ 
Module
¥¥ 
objrefModule
¥¥ +
=
¥¥, -
(
¥¥. /
(
¥¥/ 0
objref
¥¥0 6
is
¥¥7 9
Table
¥¥: ?
)
¥¥? @
?
¥¥A B
TablesHelper
¥¥C O
.
¥¥O P
TableModule
¥¥P [
(
¥¥[ \
objref
¥¥\ b
.
¥¥b c
Model
¥¥c h
,
¥¥h i
(
¥¥j k
Table
¥¥k p
)
¥¥p q
objref
¥¥q w
)
¥¥w x
:
¥¥y z
objref¥¥{ Å
.¥¥Å Ç
Module¥¥Ç à
)¥¥à â
;¥¥â ä
if
µµ 
(
µµ 
objrefModule
µµ (
==
µµ) +
module2
µµ, 3
)
µµ3 4
{
∂∂ 
listObj
∑∑ #
+=
∑∑$ &
$str
∑∑' *
+
∑∑+ ,
	Functions
∑∑- 6
.
∑∑6 7

linkObject
∑∑7 A
(
∑∑A B
objref
∑∑B H
)
∑∑H I
;
∑∑I J
}
∏∏ 
}
∫∫ 
}
ºº 
Module
ΩΩ 
oModule
ΩΩ 
=
ΩΩ  
(
ΩΩ! "
(
ΩΩ" #
o
ΩΩ# $
is
ΩΩ% '
Table
ΩΩ( -
)
ΩΩ- .
?
ΩΩ/ 0
TablesHelper
ΩΩ1 =
.
ΩΩ= >
TableModule
ΩΩ> I
(
ΩΩI J
o
ΩΩJ K
.
ΩΩK L
Model
ΩΩL Q
,
ΩΩQ R
(
ΩΩS T
Table
ΩΩT Y
)
ΩΩY Z
o
ΩΩZ [
)
ΩΩ[ \
:
ΩΩ] ^
o
ΩΩ_ `
.
ΩΩ` a
Module
ΩΩa g
)
ΩΩg h
;
ΩΩh i
writer
ææ 
.
ææ 
AddTableData
ææ #
(
ææ# $
new
ææ$ '
string
ææ( .
[
ææ. /
]
ææ/ 0
{
ææ1 2
	Functions
ææ3 <
.
ææ< =

linkObject
ææ= G
(
ææG H
o
ææH I
)
ææI J
,
ææJ K
oModule
ææL S
.
ææS T
Name
ææT X
,
ææX Y
o
ææZ [
.
ææ[ \
TypeDescriptor
ææ\ j
.
ææj k
Name
ææk o
,
ææo p
listObj
ææq x
}
ææz {
)
ææ{ |
;
ææ| }
}
øø 
output
¿¿ 
.
¿¿ 
AddLine
¿¿ 
(
¿¿ 
$str
¿¿ 
)
¿¿ 
;
¿¿ 
output
¡¡ 
.
¡¡ 

EndSection
¡¡ 
(
¡¡ 
title
¡¡ #
,
¡¡# $
success
¡¡% ,
)
¡¡, -
;
¡¡- .
writer
√√ 
.
√√ 
	AddFooter
√√ 
(
√√ 
)
√√ 
;
√√ 
writer
ƒƒ 
.
ƒƒ 
Close
ƒƒ 
(
ƒƒ 
)
ƒƒ 
;
ƒƒ 
KBDoctorHelper
≈≈ 
.
≈≈ !
ShowKBDoctorResults
≈≈ .
(
≈≈. /

outputFile
≈≈/ 9
)
≈≈9 :
;
≈≈: ;
}
»» 	
internal
   
static
   
void
   
ObjectsToDivide
   ,
(
  , -
)
  - .
{
ÃÃ 	

IKBService
ÕÕ 
kbserv
ÕÕ 
=
ÕÕ 

UIServices
ÕÕ  *
.
ÕÕ* +
KB
ÕÕ+ -
;
ÕÕ- .
KBModel
ŒŒ 
kbModel
ŒŒ 
=
ŒŒ 

UIServices
ŒŒ (
.
ŒŒ( )
KB
ŒŒ) +
.
ŒŒ+ ,
CurrentModel
ŒŒ, 8
;
ŒŒ8 9
IOutputService
œœ 
output
œœ !
=
œœ" #
CommonServices
œœ$ 2
.
œœ2 3
Output
œœ3 9
;
œœ9 :
bool
–– 
success
–– 
=
–– 
true
–– 
;
––  
int
—— 
	objInRoot
—— 
=
—— 
$num
—— 
;
—— 
int
““ 

objSinRoot
““ 
=
““ 
$num
““ 
;
““ 
string
”” 
title
”” 
=
”” 
$str
”” 9
;
””9 :
output
‘‘ 
.
‘‘ 
StartSection
‘‘ 
(
‘‘  
title
‘‘  %
)
‘‘% &
;
‘‘& '
string
’’ 

outputFile
’’ 
=
’’ 
	Functions
’’  )
.
’’) *
CreateOutputFile
’’* :
(
’’: ;
kbserv
’’; A
,
’’A B
title
’’C H
)
’’H I
;
’’I J
KBDoctorXMLWriter
÷÷ 
writer
÷÷ $
=
÷÷% &
new
÷÷' *
KBDoctorXMLWriter
÷÷+ <
(
÷÷< =

outputFile
÷÷= G
,
÷÷G H
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
)
÷÷V W
;
÷÷W X
writer
◊◊ 
.
◊◊ 
	AddHeader
◊◊ 
(
◊◊ 
title
◊◊ "
)
◊◊" #
;
◊◊# $
writer
ÿÿ 
.
ÿÿ 
AddTableHeader
ÿÿ !
(
ÿÿ! "
new
ÿÿ" %
string
ÿÿ& ,
[
ÿÿ, -
]
ÿÿ- .
{
ÿÿ/ 0
$str
ÿÿ1 9
,
ÿÿ9 :
$str
ÿÿ; C
,
ÿÿC D
$str
ÿÿE K
,
ÿÿK L
$str
ÿÿM _
}
ÿÿ` a
)
ÿÿa b
;
ÿÿb c 
KBObjectCollection
⁄⁄ 
objRefCollection
⁄⁄ /
=
⁄⁄0 1
new
⁄⁄2 5 
KBObjectCollection
⁄⁄6 H
(
⁄⁄H I
)
⁄⁄I J
;
⁄⁄J K!
SelectObjectOptions
‹‹  
selectObjectOption
‹‹  2
=
‹‹3 4
new
‹‹5 8!
SelectObjectOptions
‹‹9 L
(
‹‹L M
)
‹‹M N
;
‹‹N O 
selectObjectOption
›› 
.
›› 
MultipleSelection
›› 0
=
››1 2
false
››3 8
;
››8 9 
selectObjectOption
ﬁﬁ 
.
ﬁﬁ 
ObjectTypes
ﬁﬁ *
.
ﬁﬁ* +
Add
ﬁﬁ+ .
(
ﬁﬁ. / 
KBObjectDescriptor
ﬁﬁ/ A
.
ﬁﬁA B
Get
ﬁﬁB E
<
ﬁﬁE F
Module
ﬁﬁF L
>
ﬁﬁL M
(
ﬁﬁM N
)
ﬁﬁN O
)
ﬁﬁO P
;
ﬁﬁP Q
Module
ﬂﬂ 
module2
ﬂﬂ 
=
ﬂﬂ 
new
ﬂﬂ  
Module
ﬂﬂ! '
(
ﬂﬂ' (
kbModel
ﬂﬂ( /
)
ﬂﬂ/ 0
;
ﬂﬂ0 1
foreach
‡‡ 
(
‡‡ 
Module
‡‡ 
module
‡‡ "
in
‡‡# %

UIServices
‡‡& 0
.
‡‡0 1 
SelectObjectDialog
‡‡1 C
.
‡‡C D
SelectObjects
‡‡D Q
(
‡‡Q R 
selectObjectOption
‡‡R d
)
‡‡d e
)
‡‡e f
{
·· 
module2
‚‚ 
=
‚‚ 
module
‚‚  
;
‚‚  !
output
‰‰ 
.
‰‰ 
AddLine
‰‰ 
(
‰‰ 
$str
‰‰ +
+
‰‰, -
module
‰‰. 4
.
‰‰4 5
Name
‰‰5 9
+
‰‰: ;
$str
‰‰< B
)
‰‰B C
;
‰‰C D
foreach
ÊÊ 
(
ÊÊ 
KBObject
ÊÊ !
obj
ÊÊ" %
in
ÊÊ& (
ModuleObjects
ÊÊ) 6
(
ÊÊ6 7
module
ÊÊ7 =
)
ÊÊ= >
)
ÊÊ> ?
{
ÁÁ 
foreach
ËË 
(
ËË 
EntityReference
ËË ,
	reference
ËË- 6
in
ËË7 9
obj
ËË: =
.
ËË= >
GetReferences
ËË> K
(
ËËK L
)
ËËL M
)
ËËM N
{
ÈÈ 
KBObject
ÍÍ  
objref
ÍÍ! '
=
ÍÍ( )
KBObject
ÍÍ* 2
.
ÍÍ2 3
Get
ÍÍ3 6
(
ÍÍ6 7
obj
ÍÍ7 :
.
ÍÍ: ;
Model
ÍÍ; @
,
ÍÍ@ A
	reference
ÍÍB K
.
ÍÍK L
To
ÍÍL N
)
ÍÍN O
;
ÍÍO P
if
ÎÎ 
(
ÎÎ 
objref
ÎÎ "
!=
ÎÎ# %
null
ÎÎ& *
&&
ÎÎ+ -
objref
ÎÎ. 4
.
ÎÎ4 5
TypeDescriptor
ÎÎ5 C
.
ÎÎC D
Name
ÎÎD H
!=
ÎÎI K
$str
ÎÎL W
&&
ÎÎX Z
objref
ÎÎ[ a
.
ÎÎa b
TypeDescriptor
ÎÎb p
.
ÎÎp q
Name
ÎÎq u
!=
ÎÎv x
$strÎÎy Ö
)ÎÎÖ Ü
{
ÏÏ 
Module
ÌÌ "
objrefModule
ÌÌ# /
=
ÌÌ0 1
(
ÌÌ2 3
(
ÌÌ3 4
objref
ÌÌ4 :
is
ÌÌ; =
Table
ÌÌ> C
)
ÌÌC D
?
ÌÌE F
TablesHelper
ÌÌG S
.
ÌÌS T
TableModule
ÌÌT _
(
ÌÌ_ `
objref
ÌÌ` f
.
ÌÌf g
Model
ÌÌg l
,
ÌÌl m
(
ÌÌn o
Table
ÌÌo t
)
ÌÌt u
objref
ÌÌu {
)
ÌÌ{ |
:
ÌÌ} ~
objrefÌÌ Ö
.ÌÌÖ Ü
ModuleÌÌÜ å
)ÌÌå ç
;ÌÌç é
if
ÔÔ 
(
ÔÔ  
objrefModule
ÔÔ  ,
!=
ÔÔ- /
module
ÔÔ0 6
)
ÔÔ6 7
if
  "
(
# $
!
$ %
(
% &
objref
& ,
is
- /
Domain
0 6
)
6 7
&&
8 :
!
; <
(
< =
objref
= C
is
D F
Image
G L
)
L M
&&
N P
!
Q R
(
R S
objref
S Y
is
Z \
Theme
] b
)
b c
&&
d f
!
g h
(
h i
objref
i o
is
p r

ThemeClass
s }
)
} ~
&&
ÒÒ$ &
!
ÒÒ' (
(
ÒÒ( )
objref
ÒÒ) /
is
ÒÒ0 2
GeneratorCategory
ÒÒ3 D
)
ÒÒD E
&&
ÒÒF H
!
ÒÒI J
(
ÒÒJ K
objref
ÒÒK Q
is
ÒÒR T

KBCategory
ÒÒU _
)
ÒÒ_ `
&&
ÒÒa c
!
ÒÒd e
(
ÒÒe f
objref
ÒÒf l
is
ÒÒm o
SDT
ÒÒp s
)
ÒÒs t
)
ÒÒt u
{
ÚÚ  !
bool
ÛÛ$ (
contain
ÛÛ) 0
=
ÛÛ1 2
objRefCollection
ÛÛ3 C
.
ÛÛC D
Any
ÛÛD G
(
ÛÛG H
p
ÛÛH I
=>
ÛÛJ L
p
ÛÛM N
.
ÛÛN O
Guid
ÛÛO S
==
ÛÛT V
objref
ÛÛW ]
.
ÛÛ] ^
Guid
ÛÛ^ b
)
ÛÛb c
;
ÛÛc d
if
ÙÙ$ &
(
ÙÙ' (
!
ÙÙ( )
contain
ÙÙ) 0
)
ÙÙ0 1
{
ıı$ %
objRefCollection
ˆˆ( 8
.
ˆˆ8 9
Add
ˆˆ9 <
(
ˆˆ< =
objref
ˆˆ= C
)
ˆˆC D
;
ˆˆD E
}
˜˜$ %
}
¯¯  !
}
˘˘ 
}
˚˚ 
}
ˇˇ 
}
ÅÅ 
string
ÇÇ 
listObj
ÇÇ 
=
ÇÇ 
$str
ÇÇ 
;
ÇÇ  
foreach
ÑÑ 
(
ÑÑ 
KBObject
ÑÑ 
o
ÑÑ 
in
ÑÑ  "
objRefCollection
ÑÑ# 3
)
ÑÑ3 4
{
ÖÖ 
listObj
ÜÜ 
=
ÜÜ 
$str
ÜÜ 
;
ÜÜ 
foreach
àà 
(
àà 
EntityReference
àà (
refe
àà) -
in
àà. 0
o
àà1 2
.
àà2 3
GetReferencesTo
àà3 B
(
ààB C
)
ààC D
)
ààD E
{
ââ 
KBObject
ãã 
objref
ãã #
=
ãã$ %
KBObject
ãã& .
.
ãã. /
Get
ãã/ 2
(
ãã2 3
o
ãã3 4
.
ãã4 5
Model
ãã5 :
,
ãã: ;
refe
ãã< @
.
ãã@ A
From
ããA E
)
ããE F
;
ããF G
if
åå 
(
åå 
objref
åå 
!=
åå !
null
åå" &
)
åå& '
{
çç 
Module
éé 
objrefModule
éé +
=
éé, -
(
éé. /
(
éé/ 0
objref
éé0 6
is
éé7 9
Table
éé: ?
)
éé? @
?
ééA B
TablesHelper
ééC O
.
ééO P
TableModule
ééP [
(
éé[ \
objref
éé\ b
.
ééb c
Model
ééc h
,
ééh i
(
ééj k
Table
éék p
)
éép q
objref
ééq w
)
ééw x
:
ééy z
objreféé{ Å
.ééÅ Ç
ModuleééÇ à
)ééà â
;ééâ ä
if
èè 
(
èè 
objrefModule
èè (
==
èè) +
module2
èè, 3
)
èè3 4
{
êê 
listObj
ëë #
+=
ëë$ &
$str
ëë' *
+
ëë+ ,
	Functions
ëë- 6
.
ëë6 7

linkObject
ëë7 A
(
ëëA B
objref
ëëB H
)
ëëH I
;
ëëI J
}
íí 
}
îî 
}
ññ 
Module
óó 
oModule
óó 
=
óó  
(
óó! "
(
óó" #
o
óó# $
is
óó% '
Table
óó( -
)
óó- .
?
óó/ 0
TablesHelper
óó1 =
.
óó= >
TableModule
óó> I
(
óóI J
o
óóJ K
.
óóK L
Model
óóL Q
,
óóQ R
(
óóS T
Table
óóT Y
)
óóY Z
o
óóZ [
)
óó[ \
:
óó] ^
o
óó_ `
.
óó` a
Module
óóa g
)
óóg h
;
óóh i
writer
òò 
.
òò 
AddTableData
òò #
(
òò# $
new
òò$ '
string
òò( .
[
òò. /
]
òò/ 0
{
òò1 2
	Functions
òò3 <
.
òò< =

linkObject
òò= G
(
òòG H
o
òòH I
)
òòI J
,
òòJ K
oModule
òòL S
.
òòS T
Name
òòT X
,
òòX Y
o
òòZ [
.
òò[ \
TypeDescriptor
òò\ j
.
òòj k
Name
òòk o
,
òòo p
listObj
òòq x
}
òòy z
)
òòz {
;
òò{ |
}
ôô 
output
öö 
.
öö 
AddLine
öö 
(
öö 
$str
öö 
)
öö 
;
öö 
output
õõ 
.
õõ 

EndSection
õõ 
(
õõ 
title
õõ #
,
õõ# $
success
õõ% ,
)
õõ, -
;
õõ- .
writer
ùù 
.
ùù 
	AddFooter
ùù 
(
ùù 
)
ùù 
;
ùù 
writer
ûû 
.
ûû 
Close
ûû 
(
ûû 
)
ûû 
;
ûû 
KBDoctorHelper
üü 
.
üü !
ShowKBDoctorResults
üü .
(
üü. /

outputFile
üü/ 9
)
üü9 :
;
üü: ;
}
¢¢ 	
internal
¶¶ 
static
¶¶  
KBObjectCollection
¶¶ *
ModuleObjects
¶¶+ 8
(
¶¶8 9
Module
¶¶9 ?
module
¶¶@ F
)
¶¶F G
{
ßß 	
{
®®  
KBObjectCollection
©© "
objectsModule
©©# 0
=
©©1 2
new
©©3 6 
KBObjectCollection
©©7 I
(
©©I J
)
©©J K
;
©©K L
foreach
™™ 
(
™™ 
KBObject
™™ !
obj
™™" %
in
™™& (
module
™™) /
.
™™/ 0
GetAllMembers
™™0 =
(
™™= >
)
™™> ?
)
™™? @
{
´´ 
if
¨¨ 
(
¨¨ 
KBObjectHelper
¨¨ &
.
¨¨& '
IsSpecifiable
¨¨' 4
(
¨¨4 5
obj
¨¨5 8
)
¨¨8 9
)
¨¨9 :
{
≠≠ 
if
ÆÆ 
(
ÆÆ 
!
ÆÆ 
objectsModule
ÆÆ *
.
ÆÆ* +
Contains
ÆÆ+ 3
(
ÆÆ3 4
obj
ÆÆ4 7
)
ÆÆ7 8
)
ÆÆ8 9
objectsModule
ØØ$ 1
.
ØØ1 2
Add
ØØ2 5
(
ØØ5 6
obj
ØØ6 9
)
ØØ9 :
;
ØØ: ;
}
±± 
}
≥≥ 
foreach
∂∂ 
(
∂∂ 
Table
∂∂ 
tbl
∂∂ "
in
∂∂# %
Table
∂∂& +
.
∂∂+ ,
GetAll
∂∂, 2
(
∂∂2 3
module
∂∂3 9
.
∂∂9 :
Model
∂∂: ?
)
∂∂? @
)
∂∂@ A
{
∏∏ 
if
ππ 
(
ππ 
TablesHelper
ππ $
.
ππ$ %
TableModule
ππ% 0
(
ππ0 1
module
ππ1 7
.
ππ7 8
Model
ππ8 =
,
ππ= >
tbl
ππ? B
)
ππB C
==
ππD F
module
ππG M
)
ππM N
objectsModule
∫∫ %
.
∫∫% &
Add
∫∫& )
(
∫∫) *
tbl
∫∫* -
)
∫∫- .
;
∫∫. /
}
ªª 
return
ºº 
objectsModule
ºº $
;
ºº$ %
}
ΩΩ 
}
ææ 	
public
¿¿ 
static
¿¿ 
void
¿¿ 
RecomendedModule
¿¿ +
(
¿¿+ ,
)
¿¿, -
{
¡¡ 	

IKBService
¬¬ 
kbserv
¬¬ 
=
¬¬ 

UIServices
¬¬  *
.
¬¬* +
KB
¬¬+ -
;
¬¬- .

Dictionary
ƒƒ 
<
ƒƒ 
string
ƒƒ 
,
ƒƒ  
KBObjectCollection
ƒƒ 1
>
ƒƒ1 2
dic
ƒƒ3 6
=
ƒƒ7 8
new
ƒƒ9 <

Dictionary
ƒƒ= G
<
ƒƒG H
string
ƒƒH N
,
ƒƒN O 
KBObjectCollection
ƒƒP b
>
ƒƒb c
(
ƒƒc d
)
ƒƒd e
;
ƒƒe f
string
∆∆ 
title
∆∆ 
=
∆∆ 
$str
∆∆ 9
;
∆∆9 :
string
«« 

outputFile
«« 
=
«« 
	Functions
««  )
.
««) *
CreateOutputFile
««* :
(
««: ;
kbserv
««; A
,
««A B
title
««C H
)
««H I
;
««I J
IOutputService
…… 
output
…… !
=
……" #
CommonServices
……$ 2
.
……2 3
Output
……3 9
;
……9 :
output
   
.
   
StartSection
   
(
    
title
    %
)
  % &
;
  & '
string
ÃÃ 
sw
ÃÃ 
=
ÃÃ 
$str
ÃÃ 
;
ÃÃ 
KBDoctorXMLWriter
ÕÕ 
writer
ÕÕ $
=
ÕÕ% &
new
ÕÕ' *
KBDoctorXMLWriter
ÕÕ+ <
(
ÕÕ< =

outputFile
ÕÕ= G
,
ÕÕG H
Encoding
ÕÕI Q
.
ÕÕQ R
UTF8
ÕÕR V
)
ÕÕV W
;
ÕÕW X
writer
ŒŒ 
.
ŒŒ 
	AddHeader
ŒŒ 
(
ŒŒ 
title
ŒŒ "
)
ŒŒ" #
;
ŒŒ# $
int
œœ 
numObj
œœ 
=
œœ 
$num
œœ 
;
œœ 
writer
—— 
.
—— 
AddTableHeader
—— !
(
——! "
new
——" %
string
——& ,
[
——, -
]
——- .
{
——/ 0
$str
——1 7
,
——7 8
$str
——9 A
,
——A B
$str
——C K
,
——K L
$str
——M ^
}
——_ `
)
——` a
;
——a b!
SelectObjectOptions
‘‘  
selectObjectOption
‘‘  2
=
‘‘3 4
new
‘‘5 8!
SelectObjectOptions
‘‘9 L
(
‘‘L M
)
‘‘M N
;
‘‘N O 
selectObjectOption
’’ 
.
’’ 
MultipleSelection
’’ 0
=
’’1 2
false
’’3 8
;
’’8 9 
selectObjectOption
÷÷ 
.
÷÷ 
ObjectTypes
÷÷ *
.
÷÷* +
Add
÷÷+ .
(
÷÷. / 
KBObjectDescriptor
÷÷/ A
.
÷÷A B
Get
÷÷B E
<
÷÷E F
Module
÷÷F L
>
÷÷L M
(
÷÷M N
)
÷÷N O
)
÷÷O P
;
÷÷P Q
foreach
ÿÿ 
(
ÿÿ 
Module
ÿÿ 
module
ÿÿ "
in
ÿÿ# %

UIServices
ÿÿ& 0
.
ÿÿ0 1 
SelectObjectDialog
ÿÿ1 C
.
ÿÿC D
SelectObjects
ÿÿD Q
(
ÿÿQ R 
selectObjectOption
ÿÿR d
)
ÿÿd e
)
ÿÿe f
{
ŸŸ 
foreach
⁄⁄ 
(
⁄⁄ 
KBObject
⁄⁄ !
obj
⁄⁄" %
in
⁄⁄& (
module
⁄⁄) /
.
⁄⁄/ 0
GetAllMembers
⁄⁄0 =
(
⁄⁄= >
)
⁄⁄> ?
)
⁄⁄? @
{
€€ 
if
‹‹ 
(
‹‹ 
obj
‹‹ 
!=
‹‹ 
null
‹‹ #
&&
‹‹$ &
ObjectsHelper
‹‹' 4
.
‹‹4 5
isGenerated
‹‹5 @
(
‹‹@ A
obj
‹‹A D
)
‹‹D E
&&
‹‹F H
	Functions
‹‹I R
.
‹‹R S
	isRunable
‹‹S \
(
‹‹\ ]
obj
‹‹] `
)
‹‹` a
)
‹‹a b
{
›› 
string
ﬂﬂ 
moduleListString
ﬂﬂ /
=
ﬂﬂ0 1
$str
ﬂﬂ2 4
;
ﬂﬂ4 5
foreach
‡‡ 
(
‡‡  !
Module
‡‡! '
mod
‡‡( +
in
‡‡, .+
ListModulesOfReferencedTables
‡‡/ L
(
‡‡L M
obj
‡‡M P
)
‡‡P Q
)
‡‡Q R
moduleListString
·· ,
+=
··- /
mod
··0 3
.
··3 4
Name
··4 8
+
··9 :
$str
··; >
;
··> ?
if
„„ 
(
„„ 
obj
„„ 
.
„„  
Module
„„  &
.
„„& '
Name
„„' +
!=
„„, .
moduleListString
„„/ ?
.
„„? @
Trim
„„@ D
(
„„D E
)
„„E F
&&
„„G I
moduleListString
„„J Z
.
„„Z [
Trim
„„[ _
(
„„_ `
)
„„` a
!=
„„b d
$str
„„e g
)
„„g h
writer
‰‰ "
.
‰‰" #
AddTableData
‰‰# /
(
‰‰/ 0
new
‰‰0 3
string
‰‰4 :
[
‰‰: ;
]
‰‰; <
{
‰‰= >
obj
‰‰? B
.
‰‰B C
TypeDescriptor
‰‰C Q
.
‰‰Q R
Name
‰‰R V
+
‰‰W X
$str
‰‰Y \
,
‰‰\ ]
	Functions
‰‰^ g
.
‰‰g h

linkObject
‰‰h r
(
‰‰r s
obj
‰‰s v
)
‰‰v w
,
‰‰w x
obj
‰‰y |
.
‰‰| }
Module‰‰} É
.‰‰É Ñ
Name‰‰Ñ à
,‰‰à â 
moduleListString‰‰ä ö
}‰‰õ ú
)‰‰ú ù
;‰‰ù û
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 
writer
ËË 
.
ËË 
	AddFooter
ËË 
(
ËË 
)
ËË 
;
ËË 
writer
ÈÈ 
.
ÈÈ 
Close
ÈÈ 
(
ÈÈ 
)
ÈÈ 
;
ÈÈ 
KBDoctorHelper
ÎÎ 
.
ÎÎ !
ShowKBDoctorResults
ÎÎ .
(
ÎÎ. /

outputFile
ÎÎ/ 9
)
ÎÎ9 :
;
ÎÎ: ;
bool
ÏÏ 
success
ÏÏ 
=
ÏÏ 
true
ÏÏ 
;
ÏÏ  
output
ÌÌ 
.
ÌÌ 

EndSection
ÌÌ 
(
ÌÌ 
title
ÌÌ #
,
ÌÌ# $
success
ÌÌ% ,
)
ÌÌ, -
;
ÌÌ- .
}
 	
private
ÚÚ 
static
ÚÚ 
List
ÚÚ 
<
ÚÚ 
Module
ÚÚ "
>
ÚÚ" #+
ListModulesOfReferencedTables
ÚÚ$ A
(
ÚÚA B
KBObject
ÚÚB J
obj
ÚÚK N
)
ÚÚN O
{
ÛÛ 	
List
ÙÙ 
<
ÙÙ 
Module
ÙÙ 
>
ÙÙ 

moduleList
ÙÙ #
=
ÙÙ$ %
new
ÙÙ& )
List
ÙÙ* .
<
ÙÙ. /
Module
ÙÙ/ 5
>
ÙÙ5 6
(
ÙÙ6 7
)
ÙÙ7 8
;
ÙÙ8 9
foreach
ıı 
(
ıı 
EntityReference
ıı $
refe
ıı% )
in
ıı* ,
obj
ıı- 0
.
ıı0 1
GetReferences
ıı1 >
(
ıı> ?
)
ıı? @
)
ıı@ A
{
ˆˆ 
KBObject
˜˜ 
objref
˜˜ 
=
˜˜  !
KBObject
˜˜" *
.
˜˜* +
Get
˜˜+ .
(
˜˜. /
obj
˜˜/ 2
.
˜˜2 3
Model
˜˜3 8
,
˜˜8 9
refe
˜˜: >
.
˜˜> ?
To
˜˜? A
)
˜˜A B
;
˜˜B C
if
¯¯ 
(
¯¯ 
objref
¯¯ 
!=
¯¯ 
null
¯¯ "
&&
¯¯# %
objref
¯¯& ,
is
¯¯- /
Table
¯¯0 5
)
¯¯5 6
{
˘˘ 
Module
˙˙ 
objrefModule
˙˙ '
=
˙˙( )
TablesHelper
˙˙* 6
.
˙˙6 7
TableModule
˙˙7 B
(
˙˙B C
objref
˙˙C I
.
˙˙I J
Model
˙˙J O
,
˙˙O P
(
˙˙Q R
Table
˙˙R W
)
˙˙W X
objref
˙˙X ^
)
˙˙^ _
;
˙˙_ `
if
˚˚ 
(
˚˚ 
!
˚˚ 

moduleList
˚˚ #
.
˚˚# $
Contains
˚˚$ ,
(
˚˚, -
objrefModule
˚˚- 9
)
˚˚9 :
)
˚˚: ;

moduleList
¸¸ "
.
¸¸" #
Add
¸¸# &
(
¸¸& '
objrefModule
¸¸' 3
)
¸¸3 4
;
¸¸4 5
}
˝˝ 
}
˛˛ 
return
ÄÄ 

moduleList
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
}
ÇÇ 
}ää æî
FC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\NavigationHelper.cs
	namespace 	
Concepto
 
. 
Packages 
. 
KBDoctor $
{ 
static 

class 
NavigationHelper !
{ 
public 
static 
void $
ListObjSimilarNavigation 3
(3 4
)4 5
{ 	

IKBService!! 
kbserv!! 
=!! 

UIServices!!  *
.!!* +
KB!!+ -
;!!- .
List"" 
<"" 
string"" 
>"" 

objWarnErr"" #
=""$ %
new""& )
List""* .
<"". /
string""/ 5
>""5 6
(""6 7
)""7 8
;""8 9
string$$ 
title$$ 
=$$ 
$str$$ ;
;$$; <
string%% 

outputFile%% 
=%% 
	Functions%%  )
.%%) *
CreateOutputFile%%* :
(%%: ;
kbserv%%; A
,%%A B
title%%C H
)%%H I
;%%I J
IOutputService(( 
output(( !
=((" #
CommonServices(($ 2
.((2 3
Output((3 9
;((9 :
output)) 
.)) 
StartSection)) 
())  
title))  %
)))% &
;))& '
KBDoctorXMLWriter++ 
writer++ $
=++% &
new++' *
KBDoctorXMLWriter+++ <
(++< =

outputFile++= G
,++G H
Encoding++I Q
.++Q R
UTF8++R V
)++V W
;++W X
string-- 
path2-- 
=-- 
kbserv-- !
.--! "
	CurrentKB--" +
.--+ ,
UserDirectory--, 9
+--: ;
$str--< L
;--L M
try.. 
{// 
File00 
.00 
Delete00 
(00 
path200 !
)00! "
;00" #
}11 
catch11 
(11 
	Exception11 
e11  
)11! "
{11# $
}11$ %
;11% &
Stream33 
stream33 
=33 
File33  
.33  !
Open33! %
(33% &
path233& +
,33+ ,
FileMode33- 5
.335 6
OpenOrCreate336 B
,33B C

FileAccess33D N
.33N O
Write33O T
)33T U
;33U V

TextWriter44 
writer244 
=44  
new44! $
StreamWriter44% 1
(441 2
stream442 8
)448 9
;449 :
writer66 
.66 
	AddHeader66 
(66 
title66 "
)66" #
;66# $
GxModel77 
gxModel77 
=77 
kbserv77 $
.77$ %
	CurrentKB77% .
.77. /
DesignModel77/ :
.77: ;
Environment77; F
.77F G
TargetModel77G R
.77R S
GetAs77S X
<77X Y
GxModel77Y `
>77` a
(77a b
)77b c
;77c d
var99 
fileWildcardsArg99  
=99! "
new99# &
[99& '
]99' (
{99) *
$str99+ 2
}993 4
;994 5
var:: 
directoryArg:: 
=:: 
KBDoctorHelper:: -
.::- .
SpcDirectory::. :
(::: ;
kbserv::; A
)::A B
;::B C
writer<< 
.<< 
AddTableHeader<< !
(<<! "
new<<" %
string<<& ,
[<<, -
]<<- .
{<</ 0
$str<<0 6
,<<6 7
$str<<8 @
,<<@ A
$str<<B N
,<<N O
$str<<P c
}<<d e
)<<e f
;<<f g
foreach>> 
(>> 
string>> 
d>> 
in>>  
	Directory>>! *
.>>* +
GetDirectories>>+ 9
(>>9 :
directoryArg>>: F
,>>F G
$str>>H M
,>>M N
System>>O U
.>>U V
IO>>V X
.>>X Y
SearchOption>>Y e
.>>e f
AllDirectories>>f t
)>>t u
)>>u v
{?? !
ProcesoDirNavigations@@ %
(@@% &
d@@& '
,@@' (
output@@) /
,@@/ 0
writer2@@1 8
)@@8 9
;@@9 :
}AA 
writer2CC 
.CC 
CloseCC 
(CC 
)CC 
;CC 
stringFF 
outFileFF 
=FF 
kbservFF #
.FF# $
	CurrentKBFF$ -
.FF- .
UserDirectoryFF. ;
+FF< =
$strFF> V
;FFV W
varGG 
contentsGG 
=GG 
FileGG 
.GG  
ReadAllLinesGG  ,
(GG, -
path2GG- 2
)GG2 3
;GG3 4
ArrayII 
.II 
SortII 
(II 
contentsII 
)II  
;II  !
FileJJ 
.JJ 
WriteAllLinesJJ 
(JJ 
outFileJJ &
,JJ& '
contentsJJ( 0
)JJ0 1
;JJ1 2
stringLL 
claveLL 
=LL 
$strLL 
;LL 
stringMM 
objetosMM 
=MM 
$strMM 
;MM  
stringNN 
objetoNN 
=NN 
$strNN 
;NN 
stringOO 
objetosAnteriorOO "
=OO" #
$strOO# %
;OO% &
intPP 
numObjPP 
=PP 
$numPP 
;PP 
stringRR 
claveanteriorRR  
=RR! "
$strRR# %
;RR% &
stringSS 
tableanteriorSS  
=SS! "
$strSS# %
;SS& '
stringTT 
attanteriorTT 
=TT  
$strTT! #
;TT# $
stringUU 
LevelTypeanteriorUU $
=UU% &
$strUU' )
;UU) *
TextFieldParserWW 
parserWW "
=WW# $
newWW% (
TextFieldParserWW) 8
(WW8 9
outFileWW9 @
)WW@ A
;WWA B
parserXX 
.XX 
TextFieldTypeXX  
=XX! "
	FieldTypeXX# ,
.XX, -
	DelimitedXX- 6
;XX6 7
parserYY 
.YY 
SetDelimitersYY  
(YY  !
$strYY! $
)YY$ %
;YY% &
whileZZ 
(ZZ 
!ZZ 
parserZZ 
.ZZ 
	EndOfDataZZ $
)ZZ$ %
{[[ 
string]] 
[]] 
]]] 
fields]] 
=]]  !
parser]]" (
.]]( )

ReadFields]]) 3
(]]3 4
)]]4 5
;]]5 6
string^^ 
	LevelType^^  
=^^! "
fields^^# )
[^^) *
$num^^* +
]^^+ ,
.^^, -
Replace^^- 4
(^^4 5
$str^^5 8
,^^8 9
$str^^9 <
)^^< =
;^^= >
string__ 
Tables__ 
=__ 
fields__  &
[__& '
$num__' (
]__( )
;__) *
string`` 
Atts`` 
=`` 
fields`` $
[``$ %
$num``% &
]``& '
;``' (
stringaa 
ObjLinkaa 
=aa  
fieldsaa! '
[aa' (
$numaa( )
]aa) *
;aa* +
stringbb 
ObjEventbb 
=bb  !
fieldsbb" (
[bb( )
$numbb) *
]bb* +
;bb+ ,
stringcc 
ObjLinecc 
=cc  
fieldscc! '
[cc' (
$numcc( )
]cc) *
;cc* +
claveee 
=ee 
	LevelTypeee !
+ee" #
Tablesee$ *
+ee+ ,
Attsee- 1
;ee2 3
objetoff 
=ff 
ObjLinkff  
+ff! "
$strff# (
+ff) *
ObjLineff+ 2
+ff3 4
$strff5 :
+ff; <
ObjEventff= E
+ffF G
$strffH N
;ffN O
ifgg 
(gg 
clavegg 
==gg 
claveanteriorgg *
)gg* +
{hh 
ifii 
(ii 
!ii 
objetosii  
.ii  !
Containsii! )
(ii) *
objetoii* 0
)ii0 1
)ii1 2
{jj 
objetoskk 
+=kk  "
objetokk# )
;kk) *
numObjll 
+=ll !
$numll" #
;ll# $
}mm 
}nn 
elseoo 
{pp 
ifqq 
(qq 
numObjqq 
>qq  
$numqq! "
)qq" #
{rr 
writerss 
.ss 
AddTableDatass +
(ss+ ,
newss, /
stringss0 6
[ss6 7
]ss7 8
{ss9 :
LevelTypeanteriorss; L
,ssL M
tableanteriorssN [
,ss[ \
attanteriorss] h
,ssh i
objetosAnteriorssj y
}ssz {
)ss{ |
;ss| }
}tt 
objetosuu 
=uu 
objetouu $
;uu$ %
numObjvv 
=vv 
$numvv 
;vv 
}ww 
claveanteriorxx 
=xx 
clavexx  %
;xx% &
tableanterioryy 
=yy 
Tablesyy  &
;yy& '
attanteriorzz 
=zz 
Attszz "
;zz" #
LevelTypeanterior{{ !
={{" #
	LevelType{{$ -
;{{- .
objetosAnterior|| 
=||  !
objetos||" )
;||) *
}}} 
parser~~ 
.~~ 
Close~~ 
(~~ 
)~~ 
;~~ 
writer
ÄÄ 
.
ÄÄ 
	AddFooter
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
writer
ÅÅ 
.
ÅÅ 
Close
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
KBDoctorHelper
ÑÑ 
.
ÑÑ !
ShowKBDoctorResults
ÑÑ .
(
ÑÑ. /

outputFile
ÑÑ/ 9
)
ÑÑ9 :
;
ÑÑ: ;
bool
ÖÖ 
success
ÖÖ 
=
ÖÖ 
true
ÖÖ 
;
ÖÖ  
output
ÜÜ 
.
ÜÜ 

EndSection
ÜÜ 
(
ÜÜ 
title
ÜÜ #
,
ÜÜ# $
success
ÜÜ% ,
)
ÜÜ, -
;
ÜÜ- .
}
àà 	
public
ää 
static
ää 
void
ää #
ProcesoDirNavigations
ää 0
(
ää0 1
string
ää1 7
directoryArg
ää8 D
,
ääD E
IOutputService
ääF T
output
ääU [
,
ää[ \

TextWriter
ää] g
writer2
ääh o
)
ääo p
{
ãã 	

IKBService
çç 
kbserv
çç 
=
çç 

UIServices
çç  *
.
çç* +
KB
çç+ -
;
çç- .
string
èè 
fileWildcard
èè 
=
èè  !
$str
èè" *
;
èè* +
var
êê 
searchSubDirsArg
êê  
=
êê! "
System
êê# )
.
êê) *
IO
êê* ,
.
êê, -
SearchOption
êê- 9
.
êê9 :
AllDirectories
êê: H
;
êêH I
string
ëë 
[
ëë 
]
ëë 
xFiles
ëë 
=
ëë 
System
ëë $
.
ëë$ %
IO
ëë% '
.
ëë' (
	Directory
ëë( 1
.
ëë1 2
GetFiles
ëë2 :
(
ëë: ;
directoryArg
ëë; G
,
ëëG H
fileWildcard
ëëI U
,
ëëU V
searchSubDirsArg
ëëW g
)
ëëg h
;
ëëh i
int
íí 
numFiles
íí 
=
íí 
$num
íí 
;
íí 
foreach
îî 
(
îî 
string
îî 
x
îî 
in
îî  
xFiles
îî! '
)
îî' (
{
ïï 
if
óó 
(
óó 
!
óó 
Path
óó 
.
óó )
GetFileNameWithoutExtension
óó 5
(
óó5 6
x
óó6 7
)
óó7 8
.
óó8 9

StartsWith
óó9 C
(
óóC D
$str
óóD I
)
óóI J
)
óóJ K
{
òò 
if
öö 
(
öö 
(
öö 
numFiles
öö !
%
öö" #
$num
öö$ '
)
öö' (
==
öö) +
$num
öö, -
)
öö. /
output
õõ "
.
õõ" #
AddLine
õõ# *
(
õõ* +
x
õõ+ ,
)
õõ, -
;
õõ- .
numFiles
úú 
+=
úú 
$num
úú  !
;
úú! "
string
ûû 
	xmlstring
ûû $
=
ûû% &
AddXMLHeader
ûû' 3
(
ûû3 4
x
ûû4 5
)
ûû5 6
;
ûû6 7
KBObject
†† 
obj
††  
=
††! "
ExtractObject
††# 0
(
††0 1
	xmlstring
††1 :
)
††: ;
;
††; <
if
°° 
(
°° 
!
°° 
ObjectsHelper
°° &
.
°°& '"
isGeneratedbyPattern
°°' ;
(
°°; <
obj
°°< ?
)
°°? @
)
°°@ A
{
¢¢ 
ProcesoNavigation
££ )
(
££) *
	xmlstring
££* 3
,
££3 4
output
££5 ;
,
££; <
writer2
££= D
,
££D E
obj
££F I
)
££I J
;
££J K
}
§§ 
}
•• 
}
¶¶ 
}
ßß 	
private
©© 
static
©© 
KBObject
©© 
ExtractObject
©©  -
(
©©- .
string
©©. 4
	xmlstring
©©5 >
)
©©> ?
{
™™ 	

IKBService
´´ 
kbserv
´´ 
=
´´ 

UIServices
´´  *
.
´´* +
KB
´´+ -
;
´´- .
XmlDocument
¨¨ 
doc
¨¨ 
=
¨¨ 
new
¨¨ !
XmlDocument
¨¨" -
(
¨¨- .
)
¨¨. /
;
¨¨/ 0
String
≠≠ 
ObjName
≠≠ 
=
≠≠ 
$str
≠≠ 
;
≠≠  
try
ÆÆ 
{
ØØ 
doc
∞∞ 
.
∞∞ 
LoadXml
∞∞ 
(
∞∞ 
	xmlstring
∞∞ %
)
∞∞% &
;
∞∞& '
ObjName
±± 
=
±± 
doc
±± 
.
±± 
SelectSingleNode
±± .
(
±±. /
$str
±±/ J
)
±±J K
.
±±K L
	InnerText
±±L U
;
±±U V
if
≤≤ 
(
≤≤ 
ObjName
≤≤ 
.
≤≤ 
EndsWith
≤≤ $
(
≤≤$ %
$str
≤≤% *
)
≤≤* +
)
≤≤+ ,
ObjName
≥≥ 
=
≥≥ 
ObjName
≥≥ %
.
≥≥% &
Replace
≥≥& -
(
≥≥- .
$str
≥≥. 3
,
≥≥3 4
$str
≥≥5 7
)
≥≥7 8
;
≥≥8 9
}
¥¥ 
catch
µµ 
(
µµ 
	Exception
µµ 
e
µµ 
)
µµ 
{
µµ  !
}
µµ" #
;
µµ# $
return
∂∂ 
KbStats
∂∂ 
.
∂∂ 
ObjectPartialName
∂∂ ,
(
∂∂, -
ObjName
∂∂- 4
)
∂∂4 5
;
∂∂5 6
}
∏∏ 	
private
∫∫ 
static
∫∫ 
void
∫∫ 
ProcesoNavigation
∫∫ -
(
∫∫- .
string
∫∫. 4
	xmlstring
∫∫5 >
,
∫∫> ?
IOutputService
∫∫@ N
output
∫∫O U
,
∫∫U V

TextWriter
∫∫W a
writer2
∫∫b i
,
∫∫i j
KBObject
∫∫k s
obj
∫∫t w
)
∫∫w x
{
ªª 	
XmlDocument
ΩΩ 
doc
ΩΩ 
=
ΩΩ 
new
ΩΩ !
XmlDocument
ΩΩ" -
(
ΩΩ- .
)
ΩΩ. /
;
ΩΩ/ 0
doc
ææ 
.
ææ 
LoadXml
ææ 
(
ææ 
	xmlstring
ææ !
)
ææ! "
;
ææ" #
string
¿¿ 
ObjName
¿¿ 
=
¿¿ 
$str
¿¿ 
;
¿¿  
string
¡¡ 
	EventName
¡¡ 
=
¡¡ 
$str
¡¡ !
;
¡¡! "
string
¬¬ 
	LevelType
¬¬ 
=
¬¬ 
$str
¬¬ !
;
¬¬! "
string
√√ 
LevelRow
√√ 
=
√√ 
$str
√√  
;
√√  !
string
ƒƒ 

TableNames
ƒƒ 
=
ƒƒ 
$str
ƒƒ  "
;
ƒƒ" #
string
≈≈ 
AttNames
≈≈ 
=
≈≈ 
$str
≈≈  
;
≈≈  !
using
«« 
(
«« 
	XmlReader
«« 
reader
«« #
=
««$ %
new
««& )
XmlTextReader
««* 7
(
««7 8
new
««8 ;
System
««< B
.
««B C
IO
««C E
.
««E F
StringReader
««F R
(
««R S
	xmlstring
««S \
)
««\ ]
)
««] ^
)
««^ _
{
»» 
while
…… 
(
…… 
reader
…… 
.
…… 
Read
…… "
(
……" #
)
……# $
)
……$ %
{
   
switch
ŒŒ 
(
ŒŒ 
reader
ŒŒ "
.
ŒŒ" #
Name
ŒŒ# '
)
ŒŒ' (
{
œœ 
case
–– 
$str
–– &
:
––& '
if
—— 
(
——  
reader
——  &
.
——& '
NodeType
——' /
==
——0 2
XmlNodeType
——3 >
.
——> ?
Element
——? F
)
——F G
{
““ 
reader
””  &
.
””& '
Read
””' +
(
””+ ,
)
””, -
;
””- .
if
‘‘  "
(
‘‘# $
ObjName
‘‘$ +
==
‘‘, .
$str
‘‘/ 1
)
‘‘1 2
ObjName
’’$ +
=
’’, -
reader
’’. 4
.
’’4 5
Value
’’5 :
;
’’: ;
}
÷÷ 
break
◊◊ !
;
◊◊! "
case
ŸŸ 
$str
ŸŸ (
:
ŸŸ( )
if
⁄⁄ 
(
⁄⁄  
reader
⁄⁄  &
.
⁄⁄& '
NodeType
⁄⁄' /
==
⁄⁄0 2
XmlNodeType
⁄⁄3 >
.
⁄⁄> ?
Element
⁄⁄? F
)
⁄⁄F G
{
€€ 
reader
‹‹  &
.
‹‹& '
Read
‹‹' +
(
‹‹+ ,
)
‹‹, -
;
‹‹- .
	EventName
››  )
=
››* +
reader
››, 2
.
››2 3
Value
››3 8
;
››8 9
}
ﬁﬁ 
break
·· !
;
··! "
case
„„ 
$str
„„ (
:
„„( )
if
‰‰ 
(
‰‰  
reader
‰‰  &
.
‰‰& '
NodeType
‰‰' /
==
‰‰0 2
XmlNodeType
‰‰3 >
.
‰‰> ?
Element
‰‰? F
)
‰‰F G
{
ÂÂ 
reader
ÈÈ  &
.
ÈÈ& '
Read
ÈÈ' +
(
ÈÈ+ ,
)
ÈÈ, -
;
ÈÈ- .
	LevelType
ÍÍ  )
=
ÍÍ* +
reader
ÍÍ, 2
.
ÍÍ2 3
Value
ÍÍ3 8
;
ÍÍ8 9

TableNames
ÏÏ  *
=
ÏÏ+ ,
$str
ÏÏ- /
;
ÏÏ/ 0
AttNames
ÌÌ  (
=
ÌÌ) *
$str
ÌÌ+ -
;
ÌÌ- .
}
ÔÔ 
break
 !
;
! "
case
ÚÚ 
$str
ÚÚ ,
:
ÚÚ, -
if
ÛÛ 
(
ÛÛ  
reader
ÛÛ  &
.
ÛÛ& '
NodeType
ÛÛ' /
==
ÛÛ0 2
XmlNodeType
ÛÛ3 >
.
ÛÛ> ?
Element
ÛÛ? F
)
ÛÛF G
{
ÙÙ 
reader
ıı  &
.
ıı& '
Read
ıı' +
(
ıı+ ,
)
ıı, -
;
ıı- .
LevelRow
ˆˆ  (
=
ˆˆ) *
reader
ˆˆ+ 1
.
ˆˆ1 2
Value
ˆˆ2 7
;
ˆˆ7 8
}
˜˜ 
break
¯¯ !
;
¯¯! "
case
˙˙ 
$str
˙˙ -
:
˙˙- .
while
¸¸ !
(
¸¸" #
reader
¸¸# )
.
¸¸) *
Read
¸¸* .
(
¸¸. /
)
¸¸/ 0
&&
¸¸1 3
!
¸¸4 5
(
¸¸5 6
reader
¸¸6 <
.
¸¸< =
Name
¸¸= A
==
¸¸B D
$str
¸¸E U
&&
¸¸V X
reader
¸¸Y _
.
¸¸_ `
NodeType
¸¸` h
==
¸¸i k
XmlNodeType
¸¸l w
.
¸¸w x

EndElement¸¸x Ç
)¸¸Ç É
)¸¸É Ñ
{
˝˝ 
switch
˛˛  &
(
˛˛' (
reader
˛˛( .
.
˛˛. /
Name
˛˛/ 3
)
˛˛3 4
{
ˇˇ  !
case
ÄÄ$ (
$str
ÄÄ) 4
:
ÄÄ4 5
if
ÅÅ( *
(
ÅÅ+ ,
reader
ÅÅ, 2
.
ÅÅ2 3
NodeType
ÅÅ3 ;
==
ÅÅ< >
XmlNodeType
ÅÅ? J
.
ÅÅJ K
Element
ÅÅK R
)
ÅÅR S
{
ÇÇ( )
reader
ÉÉ, 2
.
ÉÉ2 3
Read
ÉÉ3 7
(
ÉÉ7 8
)
ÉÉ8 9
;
ÉÉ9 :

TableNames
ÑÑ, 6
+=
ÑÑ7 9
reader
ÑÑ: @
.
ÑÑ@ A
Value
ÑÑA F
+
ÑÑG H
$str
ÑÑI L
;
ÑÑL M
}
ÖÖ( )
break
ÜÜ( -
;
ÜÜ- .
case
àà$ (
$str
àà) 4
:
àà4 5
if
ââ( *
(
ââ+ ,
reader
ââ, 2
.
ââ2 3
NodeType
ââ3 ;
==
ââ< >
XmlNodeType
ââ? J
.
ââJ K
Element
ââK R
)
ââR S
{
ää( )
reader
ãã, 2
.
ãã2 3
Read
ãã3 7
(
ãã7 8
)
ãã8 9
;
ãã9 :
AttNames
åå, 4
+=
åå5 7
reader
åå8 >
.
åå> ?
Value
åå? D
+
ååE F
$str
ååG J
;
ååJ K
}
çç( )
break
éé( -
;
éé- .
}
èè  !
}
êê 
if
ëë 
(
ëë  
	LevelType
ëë  )
!=
ëë* ,
$str
ëë- /
)
ëë/ 0
{
íí 
string
ìì  &
aux
ìì' *
=
ìì+ ,
	LevelType
ìì- 6
+
ìì7 8
$str
ìì9 <
+
ìì= >

TableNames
ìì? I
+
ììJ K
$str
ììL R
+
ììS T
AttNames
ììU ]
;
ìì] ^
string
îî  &
hash
îî' +
;
îî+ ,
using
ïï  %
(
ïï& '
System
ïï' -
.
ïï- .
Security
ïï. 6
.
ïï6 7
Cryptography
ïï7 C
.
ïïC D
MD5
ïïD G
md5
ïïH K
=
ïïL M
System
ïïN T
.
ïïT U
Security
ïïU ]
.
ïï] ^
Cryptography
ïï^ j
.
ïïj k
MD5
ïïk n
.
ïïn o
Create
ïïo u
(
ïïu v
)
ïïv w
)
ïïw x
{
ññ  !
hash
óó$ (
=
óó) *
BitConverter
óó+ 7
.
óó7 8
ToString
óó8 @
(
óó@ A
md5
óóA D
.
óóD E
ComputeHash
óóE P
(
óóP Q
Encoding
óóQ Y
.
óóY Z
UTF8
óóZ ^
.
óó^ _
GetBytes
óó_ g
(
óóg h
aux
óóh k
)
óók l
)
óól m
)
òò4 5
.
òò5 6
Replace
òò6 =
(
òò= >
$str
òò> A
,
òòA B
String
òòC I
.
òòI J
Empty
òòJ O
)
òòO P
;
òòP Q
}
ôô  !
hash
õõ  $
=
õõ% &

TableNames
õõ' 1
.
õõ1 2
Count
õõ2 7
(
õõ7 8
Char
õõ8 <
.
õõ< =
IsWhiteSpace
õõ= I
)
õõI J
.
õõJ K
ToString
õõK S
(
õõS T
$str
õõT X
)
õõX Y
+
õõZ [
hash
õõ\ `
;
õõ` a
writer2
üü  '
.
üü' (
	WriteLine
üü( 1
(
üü1 2
	LevelType
üü3 <
+
üü= >
$str
üü@ C
+
üüD E

TableNames
üüF P
+
üüQ R
$str
üüS V
+
üüX Y
AttNames
üüZ b
+
üüc d
$str
üüe h
+
üüi j
	Functions
üül u
.
üüu v

linkObjectüüv Ä
(üüÄ Å
objüüÅ Ñ
)üüÑ Ö
+üüÜ á
$strüüà ã
+üüå ç
	EventNameüüé ó
+üüò ô
$strüüö ù
+üüû ü
LevelRowüü† ®
.üü® ©
PadLeftüü© ∞
(üü∞ ±
$numüü± ≥
,üü≥ ¥
$charüü¥ ∑
)üü∑ ∏
)üü∏ π
;üüπ ∫
	LevelType
††  )
=
††* +
$str
††, .
;
††. /
LevelRow
°°  (
=
°°) *
$str
°°+ -
;
°°- .

TableNames
¢¢  *
=
¢¢+ ,
$str
¢¢- /
;
¢¢/ 0
AttNames
££  (
=
££) *
$str
££+ -
;
££- .
}
§§ 
break
•• !
;
••! "
default
ßß 
:
ßß  
break
®® !
;
®®! "
}
©© 
}
™™ 
}
´´ 
}
¨¨ 	
public
ØØ 
static
ØØ 
void
ØØ '
PrepareComparerNavigation
ØØ 4
(
ØØ4 5
)
ØØ5 6
{
∞∞ 	
string
≥≥ 
title
≥≥ 
=
≥≥ 
$str
≥≥ I
;
≥≥I J
IOutputService
¥¥ 
output
¥¥ !
=
¥¥" #
CommonServices
¥¥$ 2
.
¥¥2 3
Output
¥¥3 9
;
¥¥9 :
output
µµ 
.
µµ 
StartSection
µµ 
(
µµ  
title
µµ  %
)
µµ% &
;
µµ& '
	Stopwatch
∑∑ 
	stopWatch
∑∑ 
=
∑∑  !
new
∑∑" %
	Stopwatch
∑∑& /
(
∑∑/ 0
)
∑∑0 1
;
∑∑1 2
	stopWatch
∏∏ 
.
∏∏ 
Start
∏∏ 
(
∏∏ 
)
∏∏ 
;
∏∏ 

IKBService
∫∫ 
kbserv
∫∫ 
=
∫∫ 

UIServices
∫∫  *
.
∫∫* +
KB
∫∫+ -
;
∫∫- .
string
ªª 
directoryArg
ªª 
=
ªª  !
KBDoctorHelper
ªª" 0
.
ªª0 1"
NvgComparerDirectory
ªª1 E
(
ªªE F
kbserv
ªªF L
)
ªªL M
;
ªªM N
string
ºº 
	fechahora
ºº 
=
ºº 
String
ºº %
.
ºº% &
Format
ºº& ,
(
ºº, -
$str
ºº- B
,
ººB C
DateTime
ººD L
.
ººL M
Now
ººM P
)
ººP Q
;
ººQ R
string
ΩΩ 
newDir
ΩΩ 
=
ΩΩ 
directoryArg
ΩΩ (
+
ΩΩ) *
$str
ΩΩ+ 3
+
ΩΩ4 5
	fechahora
ΩΩ6 ?
+
ΩΩ@ A
$str
ΩΩB F
;
ΩΩF G
	Directory
ææ 
.
ææ 
CreateDirectory
ææ %
(
ææ% &
newDir
ææ& ,
)
ææ, -
;
ææ- .
WriteXSLTtoDir
øø 
(
øø 
)
øø 
;
øø 
foreach
¿¿ 
(
¿¿ 
string
¿¿ 
d
¿¿ 
in
¿¿  
	Directory
¿¿! *
.
¿¿* +
GetDirectories
¿¿+ 9
(
¿¿9 :
KBDoctorHelper
¿¿: H
.
¿¿H I
SpcDirectory
¿¿I U
(
¿¿U V
kbserv
¿¿V \
)
¿¿\ ]
,
¿¿] ^
$str
¿¿_ d
,
¿¿d e
System
¿¿f l
.
¿¿l m
IO
¿¿m o
.
¿¿o p
SearchOption
¿¿p |
.
¿¿| }
AllDirectories¿¿} ã
)¿¿ã å
)¿¿å ç
{
¡¡ 
string
¬¬ 
	generator
¬¬  
=
¬¬! "
d
¬¬# $
.
¬¬$ %
Replace
¬¬% ,
(
¬¬, -
KBDoctorHelper
¬¬- ;
.
¬¬; <
SpcDirectory
¬¬< H
(
¬¬H I
kbserv
¬¬I O
)
¬¬O P
,
¬¬P Q
$str
¬¬R T
)
¬¬T U
;
¬¬U V
	generator
√√ 
=
√√ 
	generator
√√ %
.
√√% &
Replace
√√& -
(
√√- .
$str
√√. 4
,
√√4 5
$str
√√6 8
)
√√8 9
;
√√9 :
	generator
ƒƒ 
=
ƒƒ 
$str
ƒƒ  
+
ƒƒ! "
	generator
ƒƒ# ,
.
ƒƒ, -
Replace
ƒƒ- 4
(
ƒƒ4 5
$str
ƒƒ5 9
,
ƒƒ9 :
$str
ƒƒ; >
)
ƒƒ> ?
+
ƒƒ@ A
$str
ƒƒB E
;
ƒƒE F
	generator
≈≈ 
=
≈≈ 
	generator
≈≈ %
.
≈≈% &
Replace
≈≈& -
(
≈≈- .
$str
≈≈. 4
,
≈≈4 5
$str
≈≈6 8
)
≈≈8 9
;
≈≈9 :

ProcesoDir
«« 
(
«« 
d
«« 
,
«« 
newDir
«« $
,
««$ %
	generator
««& /
,
««/ 0
output
««1 7
)
««7 8
;
««8 9
}
»» 
	stopWatch
ÀÀ 
.
ÀÀ 
Stop
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
TimeSpan
ÕÕ 
ts
ÕÕ 
=
ÕÕ 
	stopWatch
ÕÕ #
.
ÕÕ# $
Elapsed
ÕÕ$ +
;
ÕÕ+ ,
string
–– 
elapsedTime
–– 
=
––  
String
––! '
.
––' (
Format
––( .
(
––. /
$str
––/ L
,
––L M
ts
—— 
.
—— 
Hours
—— 
,
—— 
ts
—— 
.
—— 
Minutes
—— $
,
——$ %
ts
——& (
.
——( )
Seconds
——) 0
,
——0 1
ts
““ 
.
““ 
Milliseconds
““ 
/
““  !
$num
““" $
)
““$ %
;
““% &
output
‘‘ 
.
‘‘ 
AddLine
‘‘ 
(
‘‘ 
title
‘‘  
+
‘‘! "
$str
‘‘# 4
+
‘‘5 6
elapsedTime
‘‘7 B
)
‘‘B C
;
‘‘C D
output
’’ 
.
’’ 

EndSection
’’ 
(
’’ 
title
’’ #
,
’’# $
true
’’% )
)
’’) *
;
’’* +
}
÷÷ 	
private
ÿÿ 
static
ÿÿ 
void
ÿÿ 
WriteXSLTtoDir
ÿÿ *
(
ÿÿ* +
)
ÿÿ+ ,
{
ŸŸ 	

IKBService
⁄⁄ 
kbserv
⁄⁄ 
=
⁄⁄ 

UIServices
⁄⁄  *
.
⁄⁄* +
KB
⁄⁄+ -
;
⁄⁄- .
string
€€ 

outputFile
€€ 
=
€€ 
kbserv
€€  &
.
€€& '
	CurrentKB
€€' 0
.
€€0 1
UserDirectory
€€1 >
+
€€? @
$str
€€A U
;
€€U V
File
‹‹ 
.
‹‹ 
WriteAllText
‹‹ 
(
‹‹ 

outputFile
‹‹ (
,
‹‹( )
StringResources
‹‹* 9
.
‹‹9 :
specXEv2
‹‹: B
)
‹‹B C
;
‹‹C D
}
ﬁﬁ 	
public
‡‡ 
static
‡‡ 
void
‡‡ 

ProcesoDir
‡‡ %
(
‡‡% &
string
‡‡& ,
directoryArg
‡‡- 9
,
‡‡9 :
string
‡‡; A
newDir
‡‡B H
,
‡‡H I
string
‡‡J P
	generator
‡‡Q Z
,
‡‡Z [
IOutputService
‡‡\ j
output
‡‡k q
)
‡‡q r
{
·· 	

IKBService
„„ 
kbserv
„„ 
=
„„ 

UIServices
„„  *
.
„„* +
KB
„„+ -
;
„„- .
string
‰‰ 

outputFile
‰‰ 
=
‰‰ 
kbserv
‰‰  &
.
‰‰& '
	CurrentKB
‰‰' 0
.
‰‰0 1
UserDirectory
‰‰1 >
+
‰‰? @
$str
‰‰A U
;
‰‰U V
XslTransform
ÂÂ 
xslTransform
ÂÂ %
=
ÂÂ& '
new
ÂÂ( +
XslTransform
ÂÂ, 8
(
ÂÂ8 9
)
ÂÂ9 :
;
ÂÂ: ;
xslTransform
ÁÁ 
.
ÁÁ 
Load
ÁÁ 
(
ÁÁ 

outputFile
ÁÁ (
)
ÁÁ( )
;
ÁÁ) *
string
ÈÈ 
fileWildcard
ÈÈ 
=
ÈÈ  !
$str
ÈÈ" *
;
ÈÈ* +
var
ÍÍ 
searchSubDirsArg
ÍÍ  
=
ÍÍ! "
System
ÍÍ# )
.
ÍÍ) *
IO
ÍÍ* ,
.
ÍÍ, -
SearchOption
ÍÍ- 9
.
ÍÍ9 :
AllDirectories
ÍÍ: H
;
ÍÍH I
string
ÎÎ 
[
ÎÎ 
]
ÎÎ 
xFiles
ÎÎ 
=
ÎÎ 
System
ÎÎ $
.
ÎÎ$ %
IO
ÎÎ% '
.
ÎÎ' (
	Directory
ÎÎ( 1
.
ÎÎ1 2
GetFiles
ÎÎ2 :
(
ÎÎ: ;
directoryArg
ÎÎ; G
,
ÎÎG H
fileWildcard
ÎÎI U
,
ÎÎU V
searchSubDirsArg
ÎÎW g
)
ÎÎg h
;
ÎÎh i
foreach
ÌÌ 
(
ÌÌ 
string
ÌÌ 
x
ÌÌ 
in
ÌÌ  
xFiles
ÌÌ! '
)
ÌÌ' (
{
ÓÓ 
if
 
(
 
!
 
Path
 
.
 )
GetFileNameWithoutExtension
 5
(
5 6
x
6 7
)
7 8
.
8 9

StartsWith
9 C
(
C D
$str
D I
)
I J
)
J K
{
ÒÒ 
output
ÚÚ 
.
ÚÚ 
AddLine
ÚÚ "
(
ÚÚ" #
x
ÚÚ# $
)
ÚÚ$ %
;
ÚÚ% &
string
ÛÛ 
xTxt
ÛÛ 
=
ÛÛ  !
newDir
ÛÛ" (
+
ÛÛ) *
	generator
ÛÛ+ 4
+
ÛÛ5 6
Path
ÛÛ7 ;
.
ÛÛ; <)
GetFileNameWithoutExtension
ÛÛ< W
(
ÛÛW X
x
ÛÛX Y
)
ÛÛY Z
+
ÛÛ[ \
$str
ÛÛ] c
;
ÛÛc d
string
ˆˆ 
	xmlstring
ˆˆ $
=
ˆˆ% &
AddXMLHeader
ˆˆ' 3
(
ˆˆ3 4
x
ˆˆ4 5
)
ˆˆ5 6
;
ˆˆ6 7
string
¯¯ 

newXmlFile
¯¯ %
=
¯¯& '
x
¯¯( )
.
¯¯) *
Replace
¯¯* 1
(
¯¯1 2
$str
¯¯2 8
,
¯¯8 9
$str
¯¯: @
)
¯¯@ A
;
¯¯A B
File
˘˘ 
.
˘˘ 
WriteAllText
˘˘ %
(
˘˘% &

newXmlFile
˘˘& 0
,
˘˘0 1
	xmlstring
˘˘2 ;
)
˘˘; <
;
˘˘< =
xslTransform
˚˚  
.
˚˚  !
	Transform
˚˚! *
(
˚˚* +

newXmlFile
˚˚+ 5
,
˚˚5 6
xTxt
˚˚7 ;
)
˚˚; <
;
˚˚< =
File
˛˛ 
.
˛˛ 
Delete
˛˛ 
(
˛˛  

newXmlFile
˛˛  *
)
˛˛* +
;
˛˛+ ,
}
ˇˇ 
}
ÇÇ 
}
ÉÉ 	
public
ÑÑ 
static
ÑÑ 
void
ÑÑ #
ListObjWarningsErrors
ÑÑ 0
(
ÑÑ0 1
)
ÑÑ1 2
{
ÖÖ 	

IKBService
áá 
kbserv
áá 
=
áá 

UIServices
áá  *
.
áá* +
KB
áá+ -
;
áá- .
List
àà 
<
àà 
string
àà 
>
àà 

objWarnErr
àà #
=
àà$ %
new
àà& )
List
àà* .
<
àà. /
string
àà/ 5
>
àà5 6
(
àà6 7
)
àà7 8
;
àà8 9
string
ää 
title
ää 
=
ää 
$str
ää ;
;
ää; <
string
ãã 

outputFile
ãã 
=
ãã 
	Functions
ãã  )
.
ãã) *
CreateOutputFile
ãã* :
(
ãã: ;
kbserv
ãã; A
,
ããA B
title
ããC H
)
ããH I
;
ããI J
IOutputService
çç 
output
çç !
=
çç" #
CommonServices
çç$ 2
.
çç2 3
Output
çç3 9
;
çç9 :
output
éé 
.
éé 
StartSection
éé 
(
éé  
title
éé  %
)
éé% &
;
éé& '
KBDoctorXMLWriter
êê 
writer
êê $
=
êê% &
new
êê' *
KBDoctorXMLWriter
êê+ <
(
êê< =

outputFile
êê= G
,
êêG H
Encoding
êêI Q
.
êêQ R
UTF8
êêR V
)
êêV W
;
êêW X
writer
íí 
.
íí 
	AddHeader
íí 
(
íí 
title
íí "
)
íí" #
;
íí# $
GxModel
ìì 
gxModel
ìì 
=
ìì 
kbserv
ìì $
.
ìì$ %
	CurrentKB
ìì% .
.
ìì. /
DesignModel
ìì/ :
.
ìì: ;
Environment
ìì; F
.
ììF G
TargetModel
ììG R
.
ììR S
GetAs
ììS X
<
ììX Y
GxModel
ììY `
>
ìì` a
(
ììa b
)
ììb c
;
ììc d
var
ïï 
fileWildcardsArg
ïï  
=
ïï! "
new
ïï# &
[
ïï& '
]
ïï' (
{
ïï) *
$str
ïï+ 2
}
ïï3 4
;
ïï4 5
var
ññ 
directoryArg
ññ 
=
ññ 
KBDoctorHelper
ññ -
.
ññ- .
SpcDirectory
ññ. :
(
ññ: ;
kbserv
ññ; A
)
ññA B
;
ññB C
var
óó 
searchSubDirsArg
óó  
=
óó! "
System
óó# )
.
óó) *
IO
óó* ,
.
óó, -
SearchOption
óó- 9
.
óó9 :
AllDirectories
óó: H
;
óóH I
var
òò 
ignoreCaseArg
òò 
=
òò 
true
òò  $
;
òò$ %
writer
öö 
.
öö 
AddTableHeader
öö !
(
öö! "
new
öö" %
string
öö& ,
[
öö, -
]
öö- .
{
öö/ 0
$str
öö1 =
,
öö= >
$str
öö? I
,
ööI J
$str
ööK S
,
ööS T
$str
ööU b
,
ööb c
$str
ööd n
,
öön o
$str
ööp }
}
öö~ 
)öö Ä
;ööÄ Å
SearchNVGFiles
úú 
(
úú 
output
úú !
,
úú! "
writer
úú# )
,
úú) *
fileWildcardsArg
úú+ ;
,
úú; <
directoryArg
úú= I
,
úúI J
searchSubDirsArg
úúK [
,
úú[ \
$str
úú] f
,
úúf g
ignoreCaseArg
úúh u
,
úúu v

objWarnErrúúw Å
)úúÅ Ç
;úúÇ É
SearchNVGFiles
ùù 
(
ùù 
output
ùù !
,
ùù! "
writer
ùù# )
,
ùù) *
fileWildcardsArg
ùù+ ;
,
ùù; <
directoryArg
ùù= I
,
ùùI J
searchSubDirsArg
ùùK [
,
ùù[ \
$str
ùù] i
,
ùùi j
ignoreCaseArg
ùùk x
,
ùùx y

objWarnErrùùz Ñ
)ùùÑ Ö
;ùùÖ Ü
SearchNVGFiles
ûû 
(
ûû 
output
ûû !
,
ûû! "
writer
ûû# )
,
ûû) *
fileWildcardsArg
ûû+ ;
,
ûû; <
directoryArg
ûû= I
,
ûûI J
searchSubDirsArg
ûûK [
,
ûû[ \
$str
ûû] h
,
ûûh i
ignoreCaseArg
ûûj w
,
ûûw x

objWarnErrûûy É
)ûûÉ Ñ
;ûûÑ Ö
SearchNVGFiles
üü 
(
üü 
output
üü !
,
üü! "
writer
üü# )
,
üü) *
fileWildcardsArg
üü+ ;
,
üü; <
directoryArg
üü= I
,
üüI J
searchSubDirsArg
üüK [
,
üü[ \
$str
üü] l
,
üül m
ignoreCaseArg
üün {
,
üü{ |

objWarnErrüü} á
)üüá à
;üüà â
SearchNVGFiles
†† 
(
†† 
output
†† !
,
††! "
writer
††# )
,
††) *
fileWildcardsArg
††+ ;
,
††; <
directoryArg
††= I
,
††I J
searchSubDirsArg
††K [
,
††[ \
$str
††] }
,
††} ~
ignoreCaseArg†† å
,††å ç

objWarnErr††é ò
)††ò ô
;††ô ö
writer
££ 
.
££ 
	AddFooter
££ 
(
££ 
)
££ 
;
££ 
string
•• 

lstObjWarn
•• 
=
•• 
$str
••  "
;
••" #
string
¶¶ 

puntoycoma
¶¶ 
=
¶¶ 
$str
¶¶  "
;
¶¶" #
foreach
ßß 
(
ßß 
string
ßß 
objstr
ßß "
in
ßß# %

objWarnErr
ßß& 0
)
ßß0 1
{
®® 

lstObjWarn
©© 
+=
©© 

puntoycoma
©© (
+
©©) *
Path
©©+ /
.
©©/ 0)
GetFileNameWithoutExtension
©©0 K
(
©©K L
objstr
©©L R
)
©©R S
;
©©S T

puntoycoma
™™ 
=
™™ 
$str
™™  
;
™™  !
}
´´ 
writer
¨¨ 
.
¨¨ 
AddTableData
¨¨ 
(
¨¨  
new
¨¨  #
string
¨¨$ *
[
¨¨* +
]
¨¨+ ,
{
¨¨- .

lstObjWarn
¨¨/ 9
}
¨¨: ;
)
¨¨; <
;
¨¨< =
writer
≠≠ 
.
≠≠ 
AddTableData
≠≠ 
(
≠≠  
new
≠≠  #
string
≠≠$ *
[
≠≠* +
]
≠≠+ ,
{
≠≠- .
$str
≠≠/ 3
+
≠≠4 5

objWarnErr
≠≠6 @
.
≠≠@ A
Count
≠≠A F
.
≠≠F G
ToString
≠≠G O
(
≠≠O P
)
≠≠P Q
}
≠≠R S
)
≠≠S T
;
≠≠T U
writer
ØØ 
.
ØØ 
Close
ØØ 
(
ØØ 
)
ØØ 
;
ØØ 
KBDoctorHelper
≤≤ 
.
≤≤ !
ShowKBDoctorResults
≤≤ .
(
≤≤. /

outputFile
≤≤/ 9
)
≤≤9 :
;
≤≤: ;
bool
≥≥ 
success
≥≥ 
=
≥≥ 
true
≥≥ 
;
≥≥  
output
¥¥ 
.
¥¥ 

EndSection
¥¥ 
(
¥¥ 
title
¥¥ #
,
¥¥# $
success
¥¥% ,
)
¥¥, -
;
¥¥- .
}
∂∂ 	
private
∏∏ 
static
∏∏ 
void
∏∏ 
SearchNVGFiles
∏∏ *
(
∏∏* +
IOutputService
∏∏+ 9
output
∏∏: @
,
∏∏@ A
KBDoctorXMLWriter
∏∏B S
writer
∏∏T Z
,
∏∏Z [
string
∏∏\ b
[
∏∏b c
]
∏∏c d
fileWildcardsArg
∏∏e u
,
∏∏u v
string
∏∏w }
directoryArg∏∏~ ä
,∏∏ä ã
System∏∏å í
.∏∏í ì
IO∏∏ì ï
.∏∏ï ñ
SearchOption∏∏ñ ¢ 
searchSubDirsArg∏∏£ ≥
,∏∏≥ ¥
string∏∏µ ª
containsTextArg∏∏º À
,∏∏À Ã
bool∏∏Õ —
ignoreCaseArg∏∏“ ﬂ
,∏∏ﬂ ‡
List∏∏· Â
<∏∏Â Ê
string∏∏Ê Ï
>∏∏Ï Ì

objWarnErr∏∏Ó ¯
)∏∏¯ ˘
{
ππ 	
output
∫∫ 
.
∫∫ 
AddLine
∫∫ 
(
∫∫ 
$str
∫∫ -
+
∫∫. /
containsTextArg
∫∫0 ?
)
∫∫? @
;
∫∫@ A
foreach
ªª 
(
ªª 
string
ªª 
file
ªª  
in
ªª! #
FindInFiles
ªª$ /
(
ªª/ 0
directoryArg
ªª0 <
,
ªª< =
containsTextArg
ªª> M
,
ªªM N
ignoreCaseArg
ªªO \
,
ªª\ ]
searchSubDirsArg
ªª^ n
,
ªªn o
(
ªªp q
string
ªªq w
[
ªªw x
]
ªªx y
)
ªªy z
fileWildcardsArgªªz ä
)ªªä ã
)ªªã å
{
ºº 
if
ΩΩ 
(
ΩΩ 
!
ΩΩ 

objWarnErr
ΩΩ 
.
ΩΩ  
Contains
ΩΩ  (
(
ΩΩ( )
file
ΩΩ) -
)
ΩΩ- .
)
ΩΩ. /
{
ææ '
AddFileWithWarningsErrors
øø -
(
øø- .
output
øø. 4
,
øø4 5
writer
øø6 <
,
øø< =
containsTextArg
øø> M
,
øøM N
file
øøO S
)
øøS T
;
øøT U

objWarnErr
¿¿ 
.
¿¿ 
Add
¿¿ "
(
¿¿" #
file
¿¿# '
)
¿¿' (
;
¿¿( )
}
¡¡ 
}
√√ 
}
ƒƒ 	
private
∆∆ 
static
∆∆ 
void
∆∆ '
AddFileWithWarningsErrors
∆∆ 5
(
∆∆5 6
IOutputService
∆∆6 D
output
∆∆E K
,
∆∆K L
KBDoctorXMLWriter
∆∆M ^
writer
∆∆_ e
,
∆∆e f
string
∆∆g m
containsTextArg
∆∆n }
,
∆∆} ~
string∆∆ Ö
file∆∆Ü ä
)∆∆ä ã
{
«« 	
output
»» 
.
»» 
AddLine
»» 
(
»» 
file
»» 
)
»»  
;
»»  !
string
…… 
objName
…… 
=
…… 
Path
…… !
.
……! ")
GetFileNameWithoutExtension
……" =
(
……= >
file
……> B
)
……B C
;
……C D
containsTextArg
   
=
   
containsTextArg
   -
.
  - .
Replace
  . 5
(
  5 6
$str
  6 9
,
  9 :
$str
  ; =
)
  = >
;
  > ?
containsTextArg
ÀÀ 
=
ÀÀ 
containsTextArg
ÀÀ -
.
ÀÀ- .
Replace
ÀÀ. 5
(
ÀÀ5 6
$str
ÀÀ6 9
,
ÀÀ9 :
$str
ÀÀ; =
)
ÀÀ= >
;
ÀÀ> ?
containsTextArg
ÃÃ 
=
ÃÃ 
containsTextArg
ÃÃ -
.
ÃÃ- .
Replace
ÃÃ. 5
(
ÃÃ5 6
$str
ÃÃ6 <
,
ÃÃ< =
$str
ÃÃ> @
)
ÃÃ@ A
;
ÃÃA B
string
œœ 
[
œœ 
]
œœ 
ns
œœ 
=
œœ 
new
œœ 
[
œœ 
]
œœ 
{
œœ  !
$str
œœ" +
}
œœ, -
;
œœ- .
bool
—— 
	objExists
—— 
=
—— 
false
—— "
;
——" #
foreach
““ 
(
““ 
KBObject
““ 
obj
““ !
in
““" $

UIServices
““% /
.
““/ 0
KB
““0 2
.
““2 3
CurrentModel
““3 ?
.
““? @
Objects
““@ G
.
““G H
GetByPartialName
““H X
(
““X Y
ns
““Y [
,
““[ \
objName
““] d
)
““d e
)
““e f
{
”” 
	objExists
‘‘ 
=
‘‘ 
true
‘‘  
;
‘‘  !
if
’’ 
(
’’ 
obj
’’ 
.
’’ 
Name
’’ 
==
’’ 
objName
’’  '
)
’’' (
{
÷÷ 
string
◊◊ 
spcTxt
◊◊ !
=
◊◊" #
ExtractSpcInfo
◊◊$ 2
(
◊◊2 3
file
◊◊3 7
,
◊◊7 8
containsTextArg
◊◊9 H
)
◊◊H I
;
◊◊I J
writer
ÿÿ 
.
ÿÿ 
AddTableData
ÿÿ '
(
ÿÿ' (
new
ÿÿ( +
string
ÿÿ, 2
[
ÿÿ2 3
]
ÿÿ3 4
{
ÿÿ5 6
containsTextArg
ÿÿ7 F
,
ÿÿF G
obj
ÿÿH K
.
ÿÿK L
TypeDescriptor
ÿÿL Z
.
ÿÿZ [
Name
ÿÿ[ _
,
ÿÿ_ `
	Functions
ÿÿa j
.
ÿÿj k

linkObject
ÿÿk u
(
ÿÿu v
obj
ÿÿv y
)
ÿÿy z
,
ÿÿz {
obj
ÿÿ| 
.ÿÿ Ä
DescriptionÿÿÄ ã
,ÿÿã å
objÿÿç ê
.ÿÿê ë
UserNameÿÿë ô
,ÿÿô ö
spcTxtÿÿõ °
}ÿÿ¢ £
)ÿÿ£ §
;ÿÿ§ •
}
⁄⁄ 
}
‹‹ 
if
›› 
(
›› 
!
›› 
	objExists
›› 
)
›› 
writer
ﬁﬁ 
.
ﬁﬁ 
AddTableData
ﬁﬁ #
(
ﬁﬁ# $
new
ﬁﬁ$ '
string
ﬁﬁ( .
[
ﬁﬁ. /
]
ﬁﬁ/ 0
{
ﬁﬁ1 2
containsTextArg
ﬁﬁ3 B
,
ﬁﬁB C
$str
ﬁﬁD F
,
ﬁﬁF G
objName
ﬁﬁH O
,
ﬁﬁO P
$str
ﬁﬁQ ^
,
ﬁﬁ^ _
$str
ﬁﬁ` b
,
ﬁﬁb c
file
ﬁﬁd h
}
ﬁﬁi j
)
ﬁﬁj k
;
ﬁﬁk l
}
ﬂﬂ 	
static
ÓÓ 
IEnumerable
ÓÓ 
<
ÓÓ 
string
ÓÓ !
>
ÓÓ! "
FindInFiles
ÓÓ# .
(
ÓÓ. /
string
ÔÔ 
directoryArg
ÔÔ 
,
ÔÔ  
string
 
containsTextArg
 "
,
" #
bool
ÒÒ 
ignoreCaseArg
ÒÒ 
,
ÒÒ 
System
ÚÚ 
.
ÚÚ 
IO
ÚÚ 
.
ÚÚ 
SearchOption
ÚÚ "
searchSubDirsArg
ÚÚ# 3
,
ÚÚ3 4
params
ÛÛ 
string
ÛÛ 
[
ÛÛ 
]
ÛÛ 
fileWildcardsArg
ÛÛ ,
)
ÛÛ, -
{
ÙÙ 	
List
ıı 
<
ıı 
String
ıı 
>
ıı 
files
ıı 
=
ıı  
new
ıı! $
List
ıı% )
<
ıı) *
string
ıı* 0
>
ıı0 1
(
ıı1 2
)
ıı2 3
;
ıı3 4
foreach
˜˜ 
(
˜˜ 
string
˜˜ 
fileWildcard
˜˜ (
in
˜˜) +
fileWildcardsArg
˜˜, <
)
˜˜< =
{
¯¯ 
string
˘˘ 
[
˘˘ 
]
˘˘ 
xFiles
˘˘ 
=
˘˘  !
System
˘˘" (
.
˘˘( )
IO
˘˘) +
.
˘˘+ ,
	Directory
˘˘, 5
.
˘˘5 6
GetFiles
˘˘6 >
(
˘˘> ?
directoryArg
˘˘? K
,
˘˘K L
fileWildcard
˘˘M Y
,
˘˘Y Z
searchSubDirsArg
˘˘[ k
)
˘˘k l
;
˘˘l m
foreach
˚˚ 
(
˚˚ 
string
˚˚ 
x
˚˚  !
in
˚˚" $
xFiles
˚˚% +
)
˚˚+ ,
{
¸¸ 
if
˝˝ 
(
˝˝ 
!
˝˝ 
files
˝˝ 
.
˝˝ 
Contains
˝˝ '
(
˝˝' (
x
˝˝( )
)
˝˝) *
)
˝˝* +
{
˛˛ 
bool
ÇÇ 
containsText
ÇÇ )
=
ÇÇ* +
containsTextArg
ÉÉ +
.
ÉÉ+ ,
Length
ÉÉ, 2
==
ÉÉ3 5
$num
ÉÉ6 7
||
ÉÉ8 :
ignoreCaseArg
ÑÑ )
?
ÑÑ* +
System
ÖÖ "
.
ÖÖ" #
IO
ÖÖ# %
.
ÖÖ% &
File
ÖÖ& *
.
ÖÖ* +
ReadAllText
ÖÖ+ 6
(
ÖÖ6 7
x
ÖÖ7 8
)
ÖÖ8 9
.
ÖÖ9 :
ToLower
ÖÖ: A
(
ÖÖA B
)
ÖÖB C
.
ÖÖC D
Contains
ÖÖD L
(
ÖÖL M
containsTextArg
ÖÖM \
.
ÖÖ\ ]
ToLower
ÖÖ] d
(
ÖÖd e
)
ÖÖe f
)
ÖÖf g
:
ÖÖh i
System
ÜÜ "
.
ÜÜ" #
IO
ÜÜ# %
.
ÜÜ% &
File
ÜÜ& *
.
ÜÜ* +
ReadAllText
ÜÜ+ 6
(
ÜÜ6 7
x
ÜÜ7 8
)
ÜÜ8 9
.
ÜÜ9 :
Contains
ÜÜ: B
(
ÜÜB C
containsTextArg
ÜÜC R
)
ÜÜR S
;
ÜÜS T
if
àà 
(
àà 
containsText
àà (
)
àà( )
{
ââ 
files
ää !
.
ää! "
Add
ää" %
(
ää% &
x
ää& '
)
ää' (
;
ää( )
}
ãã 
}
åå 
}
çç 
}
éé 
return
èè 
files
èè 
;
èè 
}
íí 	
static
îî 
string
îî 
ExtractSpcInfo
îî $
(
îî$ %
string
îî% +
file
îî, 0
,
îî0 1
string
îî2 8
containsTextArg
îî9 H
)
îîH I
{
ïï 	
string
ññ 
sourcestring
ññ 
=
ññ  !
AddXMLHeader
ññ" .
(
ññ. /
file
ññ/ 3
)
ññ3 4
;
ññ4 5
sourcestring
òò 
=
òò 
sourcestring
òò '
.
òò' (
Replace
òò( /
(
òò/ 0
System
òò0 6
.
òò6 7
Environment
òò7 B
.
òòB C
NewLine
òòC J
,
òòJ K
$str
òòL N
)
òòN O
;
òòO P
Regex
öö 
re
öö 
=
öö 
new
öö 
Regex
öö  
(
öö  !
$str
öö! #
)
öö# $
;
öö$ %
RegexOptions
õõ 
myRegexOptions
õõ '
=
õõ( )
RegexOptions
õõ* 6
.
õõ6 7
	Multiline
õõ7 @
;
õõ@ A
string
úú 
mTxt
úú 
=
úú 
$str
úú 
;
úú 
switch
ûû 
(
ûû 
containsTextArg
ûû #
)
ûû# $
{
üü 
case
†† 
$str
†† 
:
†† 
re
°° 
=
°° 
new
°° 
Regex
°° "
(
°°" #
$str
°°# <
,
°°< =
myRegexOptions
°°> L
)
°°L M
;
°°M N
break
¢¢ 
;
¢¢ 
case
££ 
$str
££ 
:
££ 
re
§§ 
=
§§ 
new
§§ 
Regex
§§ "
(
§§" #
$str
§§# @
,
§§@ A
myRegexOptions
§§B P
)
§§P Q
;
§§Q R
break
•• 
;
•• 
case
¶¶ 
$str
¶¶ !
:
¶¶! "
re
ßß 
=
ßß 
new
ßß 
Regex
ßß "
(
ßß" #
$str
ßß# @
,
ßß@ A
myRegexOptions
ßßB P
)
ßßP Q
;
ßßQ R
break
®® 
;
®® 
case
©© 
$str
©© 
:
©© 
XmlDocument
´´ 
xmlDocument
´´  +
=
´´, -
new
´´. 1
XmlDocument
´´2 =
(
´´= >
)
´´> ?
;
´´? @
xmlDocument
¨¨ 
.
¨¨  
LoadXml
¨¨  '
(
¨¨' (
sourcestring
¨¨( 4
)
¨¨4 5
;
¨¨5 6
XmlNode
ÆÆ 
node
ÆÆ  
=
ÆÆ! "
xmlDocument
ÆÆ# .
.
ÆÆ. /
DocumentElement
ÆÆ/ >
.
ÆÆ> ?
SelectSingleNode
ÆÆ? O
(
ÆÆO P
$str
ÆÆP m
)
ÆÆm n
;
ÆÆn o
mTxt
∞∞ 
=
∞∞ 
node
∞∞ 
.
∞∞  
InnerXml
∞∞  (
.
∞∞( )
ToString
∞∞) 1
(
∞∞1 2
)
∞∞2 3
;
∞∞3 4
Regex
±± 
r
±± 
=
±± 
new
±± !
Regex
±±" '
(
±±' (
$str
±±( C
,
±±C D
RegexOptions
±±E Q
.
±±Q R

Singleline
±±R \
)
±±\ ]
;
±±] ^
mTxt
≤≤ 
=
≤≤ 
r
≤≤ 
.
≤≤ 
Replace
≤≤ $
(
≤≤$ %
mTxt
≤≤% )
,
≤≤) *
string
≤≤+ 1
.
≤≤1 2
Empty
≤≤2 7
)
≤≤7 8
;
≤≤8 9
Regex
¥¥ 
r2
¥¥ 
=
¥¥ 
new
¥¥ "
Regex
¥¥# (
(
¥¥( )
$str
¥¥) L
,
¥¥L M
RegexOptions
¥¥N Z
.
¥¥Z [

Singleline
¥¥[ e
)
¥¥e f
;
¥¥f g
mTxt
µµ 
=
µµ 
r2
µµ 
.
µµ 
Replace
µµ %
(
µµ% &
mTxt
µµ& *
,
µµ* +
string
µµ, 2
.
µµ2 3
Empty
µµ3 8
)
µµ8 9
;
µµ9 :
mTxt
∑∑ 
=
∑∑ 
mTxt
∑∑ 
.
∑∑  
Replace
∑∑  '
(
∑∑' (
$str
∑∑( 0
,
∑∑0 1
System
∑∑2 8
.
∑∑8 9
Environment
∑∑9 D
.
∑∑D E
NewLine
∑∑E L
)
∑∑L M
;
∑∑M N
return
ππ 
	StripHTML
ππ $
(
ππ$ %
mTxt
ππ% )
)
ππ) *
;
ππ* +
default
ºº 
:
ºº 
return
øø 
	Functions
øø $
.
øø$ %
linkFile
øø% -
(
øø- .
file
øø. 2
)
øø2 3
;
øø3 4
}
√√ 
MatchCollection
ƒƒ 
mc
ƒƒ 
=
ƒƒ  
re
ƒƒ! #
.
ƒƒ# $
Matches
ƒƒ$ +
(
ƒƒ+ ,
sourcestring
ƒƒ, 8
)
ƒƒ8 9
;
ƒƒ9 :
foreach
∆∆ 
(
∆∆ 
Match
∆∆ 
m
∆∆ 
in
∆∆ 
mc
∆∆  "
)
∆∆" #
{
«« 
for
»» 
(
»» 
int
»» 
gIdx
»» 
=
»» 
$num
»»  !
;
»»! "
gIdx
»»# '
<
»»( )
m
»»* +
.
»»+ ,
Groups
»», 2
.
»»2 3
Count
»»3 8
;
»»8 9
gIdx
»»: >
++
»»> @
)
»»@ A
if
…… 
(
…… 
gIdx
…… 
<=
…… 
$num
……  !
)
……! "
mTxt
   
+=
   
m
    !
.
  ! "
Groups
  " (
[
  ( )
gIdx
  ) -
]
  - .
.
  . /
Value
  / 4
;
  4 5
}
ÀÀ 
mTxt
ÕÕ 
=
ÕÕ 
	StripHTML
ÕÕ 
(
ÕÕ 
mTxt
ÕÕ !
)
ÕÕ! "
;
ÕÕ" #
mTxt
ŒŒ 
=
ŒŒ 
mTxt
ŒŒ 
.
ŒŒ 
Replace
ŒŒ 
(
ŒŒ  
$str
ŒŒ  #
,
ŒŒ# $
$str
ŒŒ% '
)
ŒŒ' (
;
ŒŒ( )
return
œœ 
mTxt
œœ 
;
œœ 
}
–– 	
public
”” 
static
”” 
string
”” 
	StripHTML
”” &
(
””& '
string
””' -
HTMLText
””. 6
)
””6 7
{
‘‘ 	
Regex
’’ 
reg
’’ 
=
’’ 
new
’’ 
Regex
’’ !
(
’’! "
$str
’’" +
,
’’+ ,
RegexOptions
’’- 9
.
’’9 :

IgnoreCase
’’: D
)
’’D E
;
’’E F
return
÷÷ 
reg
÷÷ 
.
÷÷ 
Replace
÷÷ 
(
÷÷ 
HTMLText
÷÷ '
,
÷÷' (
$str
÷÷) ,
)
÷÷, -
;
÷÷- .
}
◊◊ 	
public
ŸŸ 
static
ŸŸ 
void
ŸŸ 

AttUpdated
ŸŸ %
(
ŸŸ% &
)
ŸŸ& '
{
⁄⁄ 	

IKBService
€€ 
kbserv
€€ 
=
€€ 

UIServices
€€  *
.
€€* +
KB
€€+ -
;
€€- .
string
›› 
title
›› 
=
›› 
$str
›› F
;
››F G
string
ﬁﬁ 

outputFile
ﬁﬁ 
=
ﬁﬁ 
	Functions
ﬁﬁ  )
.
ﬁﬁ) *
CreateOutputFile
ﬁﬁ* :
(
ﬁﬁ: ;
kbserv
ﬁﬁ; A
,
ﬁﬁA B
title
ﬁﬁC H
)
ﬁﬁH I
;
ﬁﬁI J
IOutputService
‡‡ 
output
‡‡ !
=
‡‡" #
CommonServices
‡‡$ 2
.
‡‡2 3
Output
‡‡3 9
;
‡‡9 :
output
·· 
.
·· 
StartSection
·· 
(
··  
title
··  %
)
··% &
;
··& '"
AskAttributeandTable
‰‰  
at
‰‰! #
=
‰‰$ %
new
‰‰& )"
AskAttributeandTable
‰‰* >
(
‰‰> ?
)
‰‰? @
;
‰‰@ A
DialogResult
ÂÂ 
dr
ÂÂ 
=
ÂÂ 
new
ÂÂ !
DialogResult
ÂÂ" .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
dr
ÊÊ 
=
ÊÊ 
at
ÊÊ 
.
ÊÊ 

ShowDialog
ÊÊ 
(
ÊÊ 
)
ÊÊ  
;
ÊÊ  !
if
ËË 
(
ËË 
dr
ËË 
==
ËË 
DialogResult
ËË "
.
ËË" #
OK
ËË# %
)
ËË% &
{
ÈÈ 
string
ÍÍ 
tblName
ÍÍ 
=
ÍÍ  
at
ÍÍ! #
.
ÍÍ# $
tblName
ÍÍ$ +
;
ÍÍ+ ,
string
ÎÎ 
attName
ÎÎ 
=
ÎÎ  
at
ÎÎ! #
.
ÎÎ# $
attName
ÎÎ$ +
;
ÎÎ+ ,
List
ÌÌ 
<
ÌÌ 
string
ÌÌ 
>
ÌÌ 
Objlist
ÌÌ $
=
ÌÌ% &
new
ÌÌ' *
List
ÌÌ+ /
<
ÌÌ/ 0
string
ÌÌ0 6
>
ÌÌ6 7
(
ÌÌ7 8
)
ÌÌ8 9
;
ÌÌ9 :
KBDoctorXMLWriter
 !
writer
" (
=
) *
new
+ .
KBDoctorXMLWriter
/ @
(
@ A

outputFile
A K
,
K L
Encoding
M U
.
U V
UTF8
V Z
)
Z [
;
[ \
writer
ÒÒ 
.
ÒÒ 
	AddHeader
ÒÒ  
(
ÒÒ  !
title
ÒÒ! &
+
ÒÒ' (
attName
ÒÒ) 0
+
ÒÒ1 2
$str
ÒÒ3 ?
+
ÒÒ@ A
tblName
ÒÒB I
)
ÒÒI J
;
ÒÒJ K
writer
ÚÚ 
.
ÚÚ 
AddTableHeader
ÚÚ %
(
ÚÚ% &
new
ÚÚ& )
string
ÚÚ* 0
[
ÚÚ0 1
]
ÚÚ1 2
{
ÚÚ3 4
$str
ÚÚ5 =
,
ÚÚ= >
$str
ÚÚ? L
,
ÚÚL M
$str
ÚÚN T
,
ÚÚT U
$str
ÚÚV g
}
ÚÚh i
)
ÚÚi j
;
ÚÚj k
int
ÙÙ 
IndFiles
ÙÙ 
=
ÙÙ 
$num
ÙÙ  
;
ÙÙ  !
string
˜˜ 
directoryArg
˜˜ #
=
˜˜$ %
KBDoctorHelper
˜˜& 4
.
˜˜4 5
SpcDirectory
˜˜5 A
(
˜˜A B
kbserv
˜˜B H
)
˜˜H I
;
˜˜I J
string
¯¯ 
fileWildcard
¯¯ #
=
¯¯$ %
$str
¯¯& .
;
¯¯. /
var
˘˘ 
searchSubDirsArg
˘˘ $
=
˘˘% &
System
˘˘' -
.
˘˘- .
IO
˘˘. 0
.
˘˘0 1
SearchOption
˘˘1 =
.
˘˘= >
AllDirectories
˘˘> L
;
˘˘L M
string
˙˙ 
[
˙˙ 
]
˙˙ 
xFiles
˙˙ 
=
˙˙  !
System
˙˙" (
.
˙˙( )
IO
˙˙) +
.
˙˙+ ,
	Directory
˙˙, 5
.
˙˙5 6
GetFiles
˙˙6 >
(
˙˙> ?
directoryArg
˙˙? K
,
˙˙K L
fileWildcard
˙˙M Y
,
˙˙Y Z
searchSubDirsArg
˙˙[ k
)
˙˙k l
;
˙˙l m
foreach
¸¸ 
(
¸¸ 
string
¸¸ 
x
¸¸  !
in
¸¸" $
xFiles
¸¸% +
)
¸¸+ ,
{
˝˝ 
IndFiles
ˇˇ 
+=
ˇˇ 
$num
ˇˇ  !
;
ˇˇ! "
if
ÄÄ 
(
ÄÄ 
IndFiles
ÄÄ  
%
ÄÄ! "
$num
ÄÄ# &
==
ÄÄ' )
$num
ÄÄ* +
)
ÄÄ+ ,
output
ÅÅ 
.
ÅÅ 
AddLine
ÅÅ &
(
ÅÅ& '
$str
ÅÅ' 4
+
ÅÅ5 6
IndFiles
ÅÅ7 ?
.
ÅÅ? @
ToString
ÅÅ@ H
(
ÅÅH I
)
ÅÅI J
+
ÅÅK L
$str
ÅÅM a
)
ÅÅa b
;
ÅÅb c
string
ÉÉ 
filename
ÉÉ #
=
ÉÉ$ %
Path
ÉÉ& *
.
ÉÉ* +)
GetFileNameWithoutExtension
ÉÉ+ F
(
ÉÉF G
x
ÉÉG H
)
ÉÉH I
;
ÉÉI J
if
ÖÖ 
(
ÖÖ 
!
ÖÖ 
Objlist
ÖÖ  
.
ÖÖ  !
Contains
ÖÖ! )
(
ÖÖ) *
filename
ÖÖ* 2
)
ÖÖ2 3
)
ÖÖ3 4
{
ÜÜ 
Objlist
áá 
.
áá  
Add
áá  #
(
áá# $
filename
áá$ ,
)
áá, -
;
áá- .
if
àà 
(
àà 
!
àà 
Path
àà !
.
àà! ")
GetFileNameWithoutExtension
àà" =
(
àà= >
x
àà> ?
)
àà? @
.
àà@ A

StartsWith
ààA K
(
ààK L
$str
ààL Q
)
ààQ R
)
ààR S
{
ââ 
string
ää "
	xmlstring
ää# ,
=
ää- .
AddXMLHeader
ää/ ;
(
ää; <
x
ää< =
)
ää= >
;
ää> ?
if
åå 
(
åå  
ObjectUpdateTable
åå  1
(
åå1 2
	xmlstring
åå2 ;
,
åå; <
tblName
åå= D
,
ååD E
attName
ååF M
)
ååM N
)
ååN O
{
çç 
KBObject
éé  (
obj
éé) ,
=
éé- .
ExtractObject
éé/ <
(
éé< =
	xmlstring
éé= F
)
ééF G
;
ééG H
if
èè  "
(
èè# $
obj
èè$ '
==
èè( *
null
èè+ /
)
èè/ 0
writer
êê$ *
.
êê* +
AddTableData
êê+ 7
(
êê7 8
new
êê8 ;
string
êê< B
[
êêB C
]
êêC D
{
êêE F
$str
êêG Z
,
êêZ [
$str
êê\ ^
,
êê^ _
$str
êê` b
,
êêb c
x
êêd e
}
êêf g
)
êêg h
;
êêh i
else
ëë  $
if
íí$ &
(
íí' (
ObjectsHelper
íí( 5
.
íí5 6
isGenerated
íí6 A
(
ííA B
obj
ííB E
)
ííE F
||
ííG I
obj
ííJ M
.
ííM N
GetPropertyValue
ííN ^
<
íí^ _
bool
íí_ c
>
ííc d
(
ííd e
$str
ííe |
)
íí| }
)
íí} ~
writer
ìì* 0
.
ìì0 1
AddTableData
ìì1 =
(
ìì= >
new
ìì> A
string
ììB H
[
ììH I
]
ììI J
{
ììK L
	Functions
ììM V
.
ììV W

linkObject
ììW a
(
ììa b
obj
ììb e
)
ììe f
,
ììf g
obj
ììh k
.
ììk l
Description
ììl w
,
ììw x
obj
ììy |
.
ìì| }
TypeDescriptorìì} ã
.ììã å
Nameììå ê
,ììê ë
xììí ì
}ììï ñ
)ììñ ó
;ììó ò
}
îî 
}
ïï 
}
ññ 
}
óó 
writer
ôô 
.
ôô 
	AddFooter
ôô  
(
ôô  !
)
ôô! "
;
ôô" #
writer
öö 
.
öö 
Close
öö 
(
öö 
)
öö 
;
öö 
KBDoctorHelper
úú 
.
úú !
ShowKBDoctorResults
úú 2
(
úú2 3

outputFile
úú3 =
)
úú= >
;
úú> ?
bool
ùù 
success
ùù 
=
ùù 
true
ùù #
;
ùù# $
output
ûû 
.
ûû 

EndSection
ûû !
(
ûû! "
title
ûû" '
,
ûû' (
success
ûû) 0
)
ûû0 1
;
ûû1 2
}
üü 
}
†† 	
private
•• 
static
•• 
string
•• 
AddXMLHeader
•• *
(
••* +
string
••+ 1
fileName
••2 :
)
••: ;
{
¶¶ 	
string
ßß 
	xmlstring
ßß 
=
ßß 
File
ßß #
.
ßß# $
ReadAllText
ßß$ /
(
ßß/ 0
fileName
ßß0 8
)
ßß8 9
;
ßß9 :
	xmlstring
®® 
=
®® 
$str
®® E
+
®®F G
	xmlstring
®®H Q
;
®®Q R
return
©© 
	xmlstring
©© 
;
©© 
}
™™ 	
private
¨¨ 
static
¨¨ 
Boolean
¨¨ 
ObjectUpdateTable
¨¨ 0
(
¨¨0 1
string
¨¨2 8
	xmlstring
¨¨9 B
,
¨¨B C
string
¨¨D J
tblName
¨¨K R
,
¨¨R S
string
¨¨T Z
attName
¨¨[ b
)
¨¨b c
{
≠≠ 	
XmlDocument
ØØ 
doc
ØØ 
=
ØØ 
new
ØØ !
XmlDocument
ØØ" -
(
ØØ- .
)
ØØ. /
;
ØØ/ 0
try
±± 
{
≤≤ 
doc
≥≥ 
.
≥≥ 
LoadXml
≥≥ 
(
≥≥ 
	xmlstring
≥≥ %
)
≥≥% &
;
≥≥& '
string
∂∂ 
xpathstr
∂∂ 
=
∂∂  !
$str
∂∂" E
+
∂∂F G
tblName
∂∂H O
+
∂∂P Q
$str∂∂R ú
+∂∂ù û
attName∂∂ü ¶
+∂∂ß ®
$str∂∂© ≠
;∂∂≠ Æ
XmlNode
∑∑ 
node
∑∑ 
=
∑∑ 
doc
∑∑ "
.
∑∑" #
SelectSingleNode
∑∑# 3
(
∑∑3 4
xpathstr
∑∑4 <
)
∑∑< =
;
∑∑= >
if
∏∏ 
(
∏∏ 
node
∏∏ 
==
∏∏ 
null
∏∏  
)
∏∏  !
return
ππ 
false
ππ  
;
ππ  !
else
∫∫ 
{
ªª 
return
ΩΩ 
true
ΩΩ 
;
ΩΩ  
}
ææ 
}
øø 
catch
¿¿ 
(
¿¿ 
	Exception
¿¿ 
e
¿¿ 
)
¿¿ 
{
¿¿  !
}
¿¿" #
;
¿¿# $
return
ƒƒ 
false
ƒƒ 
;
ƒƒ 
}
∆∆ 	
}
»» 
}…… ¸∆
=C:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\KbStats.cs
	namespace)) 	
Concepto))
 
.)) 
Packages)) 
.)) 
KBDoctor)) $
{** 
static++ 

class++ 
KbStats++ 
{,, 
public-- 
static-- 
void-- #
CountGeneratedByPattern-- 2
(--2 3
)--3 4
{.. 	

IKBService// 
kbserv// 
=// 

UIServices//  *
.//* +
KB//+ -
;//- .
string11 
title11 
=11 
$str11 K
;11K L
string22 

outputFile22 
=22 
	Functions22  )
.22) *
CreateOutputFile22* :
(22: ;
kbserv22; A
,22A B
title22C H
)22H I
;22I J
IOutputService44 
output44 !
=44" #
CommonServices44$ 2
.442 3
Output443 9
;449 :
output55 
.55 
StartSection55 
(55  
title55  %
)55% &
;55& '
KBDoctorXMLWriter88 
writer88 $
=88% &
new88' *
KBDoctorXMLWriter88+ <
(88< =

outputFile88= G
,88G H
Encoding88I Q
.88Q R
UTF888R V
)88V W
;88W X
writer99 
.99 
	AddHeader99 
(99 
title99 "
)99" #
;99# $
writer:: 
.:: 
AddTableHeader:: !
(::! "
new::" %
string::& ,
[::, -
]::- .
{::/ 0
$str::1 7
,::7 8
$str::9 ?
,::? @
$str::A N
}::O P
)::P Q
;::Q R
Int32== 
Objcount== 
=== 
$num== 
;== 
Int32>> 
ObjNoPattern>> 
=>>  
$num>>! "
;>>" #
Int32?? 
ObjOther?? 
=?? 
$num?? 
;?? 
Int32@@ 
ObjNoGenerate@@ 
=@@  !
$num@@" #
;@@# $
foreachBB 
(BB 
KBObjectBB 
objBB !
inBB" $
kbservBB% +
.BB+ ,
CurrentModelBB, 8
.BB8 9
ObjectsBB9 @
.BB@ A
GetAllBBA G
(BBG H
)BBH I
)BBI J
{CC 
ObjcountDD 
+=DD 
$numDD 
;DD 
ifEE 
(EE 
ObjectsHelperEE !
.EE! "
isGeneratedEE" -
(EE- .
objEE. 1
)EE1 2
&&EE3 5
(EE6 7
objEE8 ;
isEE< >
WebPanelEE? G
||EEH J
objEEK N
isEEO Q
TransactionEER ]
||EE^ `
objEEa d
isEEe g
	WorkPanelEEh q
||EEr t
objEEv y
isEEz |
DataSelector	EE} â
)
EEâ ä
)
EEä ã
{FF 
BooleanHH "
isGeneratedWithPatternHH 2
=HH3 4
falseHH5 :
;HH: ;
PatternDefinitionII %
patternII& -
;II- .
ifJJ 
(JJ 
InstanceManagerJJ '
.JJ' (
IsInstanceObjectJJ( 8
(JJ8 9
objJJ9 <
,JJ< =
outJJ> A
patternJJB I
)JJI J
)JJJ K"
isGeneratedWithPatternKK .
=KK/ 0
trueKK1 5
;KK5 6
boolNN 
isParentPatternNN (
=NN) *
falseNN+ 0
;NN0 1
foreachOO 
(OO 
PatternDefinitionOO .
pOO/ 0
inOO1 3
PatternEngineOO4 A
.OOA B
PatternsOOB J
)OOJ K
{PP 
ifQQ  "
(QQ# $
PatternInstanceQQ$ 3
.QQ3 4
GetQQ4 7
(QQ7 8
objQQ8 ;
,QQ; <
pQQ= >
.QQ> ?
IdQQ? A
)QQA B
!=QQC E
nullQQF J
)QQJ K
isParentPatternRRD S
=RRT U
trueRRV Z
;RRZ [
}SS 
ifUU 
(UU 
!UU "
isGeneratedWithPatternUU /
&&UU0 2
!UU3 4
isParentPatternUU4 C
)UUC D
{VV 
ObjNoPatternWW $
+=WW% '
$numWW( )
;WW) *
writerXX 
.XX 
AddTableDataXX +
(XX+ ,
newXX, /
stringXX0 6
[XX6 7
]XX7 8
{XX9 :
	FunctionsXX; D
.XXD E

linkObjectXXE O
(XXO P
objXXP S
)XXS T
,XXT U
objXXV Y
.XXY Z
TypeDescriptorXXZ h
.XXh i
NameXXi m
,XXm n
objXXo r
.XXr s
DescriptionXXs ~
}	XX Ä
)
XXÄ Å
;
XXÅ Ç
}YY 
}[[ 
}^^ 
writer`` 
.`` 
AddTableData`` 
(``  
new``  #
string``$ *
[``* +
]``+ ,
{``- .
$str``/ 2
,``2 3
$str``4 7
,``7 8
$str``9 <
}``= >
)``> ?
;``? @
Int32aa 
IndexPaa 
=aa 
Objcountaa #
==aa$ &
$numaa' (
?aa) *
$numaa+ ,
:aa- .
(aa/ 0
ObjNoPatternaa0 <
*aa= >
$numaa? B
/aaC D
ObjcountaaE M
)aaM N
;aaN O
writerbb 
.bb 
AddTableDatabb 
(bb  
newbb  #
stringbb$ *
[bb* +
]bb+ ,
{bb- .
$strbb/ c
,bbc d
IndexPbbe k
.bbk l
ToStringbbl t
(bbt u
)bbu v
+bbw x
$strbby }
,bb} ~
$str	bb ë
+
bbí ì
ObjNoPattern
bbî †
.
bb† °
ToString
bb° ©
(
bb© ™
)
bb™ ´
+
bb¨ ≠
$str
bbÆ ø
+
bb¿ ¡
Objcount
bb¬  
.
bb  À
ToString
bbÀ ”
(
bb” ‘
)
bb‘ ’
}
bb÷ ◊
)
bb◊ ÿ
;
bbÿ Ÿ
stringdd 
textodd 
=dd 
$strdd R
+ddS T
IndexPddU [
.dd[ \
ToStringdd\ d
(ddd e
)dde f
+ddg h
$strddi m
+ddn o
$str	ddq è
+
ddê ë
ObjNoPattern
ddí û
.
ddû ü
ToString
ddü ß
(
ddß ®
)
dd® ©
+
dd™ ´
$str
dd¨ æ
+
ddø ¿
Objcount
dd¡ …
.
dd…  
ToString
dd  “
(
dd“ ”
)
dd” ‘
;
dd‘ ’
	Functionsff 
.ff 
AddLineSummaryff $
(ff$ %
$strff% C
,ffC D
textoffE J
)ffJ K
;ffK L
writerii 
.ii 
	AddFooterii 
(ii 
)ii 
;ii 
writerjj 
.jj 
Closejj 
(jj 
)jj 
;jj 
KBDoctorHelperll 
.ll 
ShowKBDoctorResultsll .
(ll. /

outputFilell/ 9
)ll9 :
;ll: ;
boolmm 
successmm 
=mm 
truemm 
;mm  
outputnn 
.nn 

EndSectionnn 
(nn 
titlenn #
,nn# $
successnn% ,
)nn, -
;nn- .
}qq 	
publicuu 
staticuu 
voiduu "
ListObjDiffMasterPage2uu 1
(uu1 2
)uu2 3
{vv 	

IKBServiceww 
kbservww 
=ww 

UIServicesww  *
.ww* +
KBww+ -
;ww- .

Dictionaryyy 
<yy 
stringyy 
,yy 
KBObjectCollectionyy 1
>yy1 2
dicyy3 6
=yy7 8
newyy9 <

Dictionaryyy= G
<yyG H
stringyyH N
,yyN O
KBObjectCollectionyyP b
>yyb c
(yyc d
)yyd e
;yye f
string{{ 
title{{ 
={{ 
$str{{ /
;{{/ 0
string|| 

outputFile|| 
=|| 
	Functions||  )
.||) *
CreateOutputFile||* :
(||: ;
kbserv||; A
,||A B
title||C H
)||H I
;||I J
IOutputService 
output !
=" #
CommonServices$ 2
.2 3
Output3 9
;9 :
output
ÄÄ 
.
ÄÄ 
StartSection
ÄÄ 
(
ÄÄ  
title
ÄÄ  %
)
ÄÄ% &
;
ÄÄ& '
KBDoctorXMLWriter
ÇÇ 
writer
ÇÇ $
=
ÇÇ% &
new
ÇÇ' *
KBDoctorXMLWriter
ÇÇ+ <
(
ÇÇ< =

outputFile
ÇÇ= G
,
ÇÇG H
Encoding
ÇÇI Q
.
ÇÇQ R
UTF8
ÇÇR V
)
ÇÇV W
;
ÇÇW X
writer
ÉÉ 
.
ÉÉ 
	AddHeader
ÉÉ 
(
ÉÉ 
title
ÉÉ "
)
ÉÉ" #
;
ÉÉ# $
output
ÖÖ 
.
ÖÖ 
AddLine
ÖÖ 
(
ÖÖ 
$str
ÖÖ /
)
ÖÖ/ 0
;
ÖÖ0 1
writer
ÜÜ 
.
ÜÜ 
AddTableHeader
ÜÜ !
(
ÜÜ! "
new
ÜÜ" %
string
ÜÜ& ,
[
ÜÜ, -
]
ÜÜ- .
{
ÜÜ/ 0
$str
ÜÜ1 7
,
ÜÜ7 8
$str
ÜÜ9 A
,
ÜÜA B
$str
ÜÜC P
,
ÜÜP Q
$str
ÜÜR _
,
ÜÜ_ `
$str
ÜÜa l
}
ÜÜm n
)
ÜÜn o
;
ÜÜo p
foreach
áá 
(
áá 
KBObject
áá 
obj
áá !
in
áá" $
kbserv
áá% +
.
áá+ ,
CurrentModel
áá, 8
.
áá8 9
Objects
áá9 @
.
áá@ A
GetAll
ááA G
(
ááG H
)
ááH I
)
ááI J
{
àà 
writer
ââ 
.
ââ 
AddTableData
ââ #
(
ââ# $
new
ââ$ '
string
ââ( .
[
ââ. /
]
ââ/ 0
{
ââ1 2
obj
ââ3 6
.
ââ6 7
TypeDescriptor
ââ7 E
.
ââE F
Name
ââF J
,
ââJ K
obj
ââL O
.
ââO P
Name
ââP T
,
ââT U
obj
ââV Y
.
ââY Z
Description
ââZ e
,
ââe f
obj
ââg j
.
ââj k

LastUpdate
ââk u
.
ââu v
ToString
ââv ~
(
ââ~ 
)ââ Ä
,ââÄ Å
objââÇ Ö
.ââÖ Ü
	TimestampââÜ è
.ââè ê
ToStringââê ò
(ââò ô
)ââô ö
}ââõ ú
)ââú ù
;ââù û
}
ää 
writer
ãã 
.
ãã 
	AddFooter
ãã 
(
ãã 
)
ãã 
;
ãã 
writer
åå 
.
åå 
Close
åå 
(
åå 
)
åå 
;
åå 
KBDoctorHelper
éé 
.
éé !
ShowKBDoctorResults
éé .
(
éé. /

outputFile
éé/ 9
)
éé9 :
;
éé: ;
bool
èè 
success
èè 
=
èè 
true
èè 
;
èè  
output
êê 
.
êê 

EndSection
êê 
(
êê 
title
êê #
,
êê# $
success
êê% ,
)
êê, -
;
êê- .
}
íí 	
public
îî 
static
îî 
void
îî 
ListLastReports
îî *
(
îî* +
)
îî+ ,
{
ïï 	

IKBService
ññ 
kbserv
ññ 
=
ññ 

UIServices
ññ  *
.
ññ* +
KB
ññ+ -
;
ññ- .

Dictionary
òò 
<
òò 
string
òò 
,
òò  
KBObjectCollection
òò 1
>
òò1 2
dic
òò3 6
=
òò7 8
new
òò9 <

Dictionary
òò= G
<
òòG H
string
òòH N
,
òòN O 
KBObjectCollection
òòP b
>
òòb c
(
òòc d
)
òòd e
;
òòe f
string
öö 
title
öö 
=
öö 
$str
öö 9
;
öö9 :
string
õõ 

outputFile
õõ 
=
õõ 
	Functions
õõ  )
.
õõ) *
CreateOutputFile
õõ* :
(
õõ: ;
kbserv
õõ; A
,
õõA B
title
õõC H
)
õõH I
;
õõI J
IOutputService
ùù 
output
ùù !
=
ùù" #
CommonServices
ùù$ 2
.
ùù2 3
Output
ùù3 9
;
ùù9 :
output
ûû 
.
ûû 
StartSection
ûû 
(
ûû  
title
ûû  %
)
ûû% &
;
ûû& '
KBDoctorXMLWriter
†† 
writer
†† $
=
††% &
new
††' *
KBDoctorXMLWriter
††+ <
(
††< =

outputFile
††= G
,
††G H
Encoding
††I Q
.
††Q R
UTF8
††R V
)
††V W
;
††W X
writer
°° 
.
°° 
	AddHeader
°° 
(
°° 
title
°° "
)
°°" #
;
°°# $
writer
££ 
.
££ 
AddTableHeader
££ !
(
££! "
new
££" %
string
££& ,
[
££, -
]
££- .
{
££/ 0
$str
££1 9
,
££9 :
$str
££; =
,
££= >
$str
££? O
}
££P Q
)
££Q R
;
££R S
string
•• 
[
•• 
]
•• 
fileEntries
••  
=
••! "
	Directory
••# ,
.
••, -
GetFiles
••- 5
(
••5 6
kbserv
••6 <
.
••< =
	CurrentKB
••= F
.
••F G
UserDirectory
••G T
,
••T U
$str
••V f
)
••f g
;
••g h
foreach
ßß 
(
ßß 
string
ßß 
fileName
ßß $
in
ßß% '
fileEntries
ßß( 3
)
ßß3 4
{
®® 
string
™™ 
dateFilename
™™ #
=
™™$ %
$str
™™& (
;
™™( )
int
´´ 
days
´´ 
=
´´ 
(
´´ 
int
´´ 
)
´´  
(
´´  !
DateTime
´´! )
.
´´) *
Now
´´* -
-
´´. /
File
´´0 4
.
´´4 5
GetLastWriteTime
´´5 E
(
´´E F
fileName
´´F N
)
´´N O
)
´´O P
.
´´P Q
	TotalDays
´´Q Z
;
´´Z [
int
¨¨ 
hours
¨¨ 
=
¨¨ 
(
¨¨ 
int
¨¨  
)
¨¨  !
(
¨¨! "
DateTime
¨¨" *
.
¨¨* +
Now
¨¨+ .
-
¨¨/ 0
File
¨¨1 5
.
¨¨5 6
GetLastWriteTime
¨¨6 F
(
¨¨F G
fileName
¨¨G O
)
¨¨O P
)
¨¨P Q
.
¨¨Q R

TotalHours
¨¨R \
;
¨¨\ ]
int
≠≠ 
mins
≠≠ 
=
≠≠ 
(
≠≠ 
int
≠≠ 
)
≠≠  
(
≠≠  !
DateTime
≠≠! )
.
≠≠) *
Now
≠≠* -
-
≠≠. /
File
≠≠0 4
.
≠≠4 5
GetLastWriteTime
≠≠5 E
(
≠≠E F
fileName
≠≠F N
)
≠≠N O
)
≠≠O P
.
≠≠P Q
TotalMinutes
≠≠Q ]
;
≠≠] ^
if
ØØ 
(
ØØ 
days
ØØ 
>
ØØ 
$num
ØØ 
)
ØØ 
dateFilename
∞∞  
=
∞∞! "
days
∞∞# '
.
∞∞' (
ToString
∞∞( 0
(
∞∞0 1
)
∞∞1 2
+
∞∞3 4
$str
∞∞5 B
;
∞∞B C
else
±± 
if
≤≤ 
(
≤≤ 
hours
≤≤ 
>
≤≤ 
$num
≤≤  !
)
≤≤! "
dateFilename
≥≥ $
=
≥≥% &
hours
≥≥' ,
.
≥≥, -
ToString
≥≥- 5
(
≥≥5 6
)
≥≥6 7
+
≥≥8 9
$str
≥≥: H
;
≥≥H I
else
¥¥ 
dateFilename
µµ $
=
µµ% &
mins
µµ' +
.
µµ+ ,
ToString
µµ, 4
(
µµ4 5
)
µµ5 6
+
µµ7 8
$str
µµ9 J
;
µµJ K
string
∑∑ 
shortFilename
∑∑ $
=
∑∑% &
Path
∑∑' +
.
∑∑+ ,
GetFileName
∑∑, 7
(
∑∑7 8
fileName
∑∑8 @
)
∑∑@ A
;
∑∑A B
shortFilename
∏∏ 
=
∏∏ 
shortFilename
∏∏  -
.
∏∏- .
Replace
∏∏. 5
(
∏∏5 6
$str
∏∏6 A
,
∏∏A B
$str
∏∏C E
)
∏∏E F
;
∏∏F G
shortFilename
ππ 
=
ππ 
shortFilename
ππ  -
.
ππ- .
Replace
ππ. 5
(
ππ5 6
$str
ππ6 =
,
ππ= >
$str
ππ? A
)
ππA B
;
ππB C
shortFilename
∫∫ 
=
∫∫ 
Regex
∫∫  %
.
∫∫% &
Replace
∫∫& -
(
∫∫- .
shortFilename
∫∫. ;
,
∫∫; <
$str
∫∫= I
,
∫∫I J
$str
∫∫K P
)
∫∫P Q
;
∫∫Q R
string
ºº 
fileLink
ºº 
=
ºº  !
$str
ºº" 6
+
ºº7 8
fileName
ºº9 A
+
ººB C
$str
ººD I
+
ººJ K
shortFilename
ººL Y
+
ººZ [
$str
ºº\ b
;
ººb c
writer
ΩΩ 
.
ΩΩ 
AddTableData
ΩΩ #
(
ΩΩ# $
new
ΩΩ$ '
string
ΩΩ( .
[
ΩΩ. /
]
ΩΩ/ 0
{
ΩΩ1 2
fileLink
ΩΩ3 ;
,
ΩΩ; <
dateFilename
ΩΩ= I
,
ΩΩI J
File
ΩΩK O
.
ΩΩO P
GetLastWriteTime
ΩΩP `
(
ΩΩ` a
fileName
ΩΩa i
)
ΩΩi j
.
ΩΩj k
ToString
ΩΩk s
(
ΩΩs t
)
ΩΩt u
}
ΩΩv w
)
ΩΩw x
;
ΩΩx y
}
øø 
writer
¿¿ 
.
¿¿ 
	AddFooter
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
writer
¡¡ 
.
¡¡ 
Close
¡¡ 
(
¡¡ 
)
¡¡ 
;
¡¡ 
KBDoctorHelper
√√ 
.
√√ !
ShowKBDoctorResults
√√ .
(
√√. /

outputFile
√√/ 9
)
√√9 :
;
√√: ;
bool
ƒƒ 
success
ƒƒ 
=
ƒƒ 
true
ƒƒ 
;
ƒƒ  
output
≈≈ 
.
≈≈ 

EndSection
≈≈ 
(
≈≈ 
title
≈≈ #
,
≈≈# $
success
≈≈% ,
)
≈≈, -
;
≈≈- .
}
«« 	
public
…… 
static
…… 
void
…… 
ListObj
…… "
(
……" #
)
……# $
{
   	

IKBService
ÀÀ 
kbserv
ÀÀ 
=
ÀÀ 

UIServices
ÀÀ  *
.
ÀÀ* +
KB
ÀÀ+ -
;
ÀÀ- .

Dictionary
ŒŒ 
<
ŒŒ 
string
ŒŒ 
,
ŒŒ  
KBObjectCollection
ŒŒ 1
>
ŒŒ1 2
dic
ŒŒ3 6
=
ŒŒ7 8
new
ŒŒ9 <

Dictionary
ŒŒ= G
<
ŒŒG H
string
ŒŒH N
,
ŒŒN O 
KBObjectCollection
ŒŒP b
>
ŒŒb c
(
ŒŒc d
)
ŒŒd e
;
ŒŒe f
string
–– 
title
–– 
=
–– 
$str
–– /
;
––/ 0
string
—— 

outputFile
—— 
=
—— 
	Functions
——  )
.
——) *
CreateOutputFile
——* :
(
——: ;
kbserv
——; A
,
——A B
title
——C H
)
——H I
;
——I J
IOutputService
‘‘ 
output
‘‘ !
=
‘‘" #
CommonServices
‘‘$ 2
.
‘‘2 3
Output
‘‘3 9
;
‘‘9 :
output
’’ 
.
’’ 
StartSection
’’ 
(
’’  
title
’’  %
)
’’% &
;
’’& '
KBDoctorXMLWriter
◊◊ 
writer
◊◊ $
=
◊◊% &
new
◊◊' *
KBDoctorXMLWriter
◊◊+ <
(
◊◊< =

outputFile
◊◊= G
,
◊◊G H
Encoding
◊◊I Q
.
◊◊Q R
UTF8
◊◊R V
)
◊◊V W
;
◊◊W X
writer
ÿÿ 
.
ÿÿ 
	AddHeader
ÿÿ 
(
ÿÿ 
title
ÿÿ "
)
ÿÿ" #
;
ÿÿ# $
int
ŸŸ 
numObj
ŸŸ 
=
ŸŸ 
$num
ŸŸ 
;
ŸŸ 
DateTime
€€ 
limite
€€ 
=
€€ 
new
€€ !
DateTime
€€" *
(
€€* +
$num
€€+ /
,
€€/ 0
$num
€€1 3
,
€€3 4
$num
€€5 7
)
€€7 8
;
€€8 9
output
‹‹ 
.
‹‹ 
AddLine
‹‹ 
(
‹‹ 
$str
‹‹ ,
+
‹‹- .
limite
‹‹/ 5
.
‹‹5 6
ToString
‹‹6 >
(
‹‹> ?
)
‹‹? @
)
‹‹@ A
;
‹‹A B
writer
ﬂﬂ 
.
ﬂﬂ 
AddTableHeader
ﬂﬂ !
(
ﬂﬂ! "
new
ﬂﬂ" %
string
ﬂﬂ& ,
[
ﬂﬂ, -
]
ﬂﬂ- .
{
ﬂﬂ/ 0
$str
ﬂﬂ1 7
,
ﬂﬂ7 8
$str
ﬂﬂ9 A
,
ﬂﬂA B
$str
ﬂﬂC P
,
ﬂﬂP Q
$str
ﬂﬂR Z
,
ﬂﬂZ [
$str
ﬂﬂ\ d
,
ﬂﬂd e
$str
ﬂﬂf s
,
ﬂﬂs t
$str
ﬂﬂu ~
,
ﬂﬂ~ 
$strﬂﬂÄ ã
,ﬂﬂã å
$strﬂﬂå ö
,ﬂﬂö õ
$strﬂﬂõ •
,ﬂﬂ• ¶
$strﬂﬂß ¥
}ﬂﬂµ ∂
)ﬂﬂ∂ ∑
;ﬂﬂ∑ ∏
foreach
·· 
(
·· 
KBObject
·· 
obj
·· !
in
··" $
kbserv
··% +
.
··+ ,
CurrentModel
··, 8
.
··8 9
Objects
··9 @
.
··@ A
GetAll
··A G
(
··G H
)
··H I
)
··I J
{
‚‚ 
if
„„ 
(
„„ 
obj
„„ 
!=
„„ 
null
„„ 
)
„„  
if
‰‰ 
(
‰‰ 
	Functions
‰‰ !
.
‰‰! "
	isRunable
‰‰" +
(
‰‰+ ,
obj
‰‰, /
)
‰‰/ 0
&&
‰‰1 3
ObjectsHelper
‰‰4 A
.
‰‰A B
isGenerated
‰‰B M
(
‰‰M N
obj
‰‰N Q
)
‰‰Q R
&&
‰‰S U
(
‰‰V W
obj
‰‰W Z
.
‰‰Z [

LastUpdate
‰‰[ e
>=
‰‰f h
limite
‰‰i o
||
‰‰p r
obj
‰‰s v
.
‰‰v w
	Timestamp‰‰w Ä
>=‰‰Å É
limite‰‰Ñ ä
)‰‰ä ã
)‰‰ã å
{
ÂÂ 
string
ÊÊ 
desc
ÊÊ #
=
ÊÊ$ %
obj
ÊÊ& )
.
ÊÊ) *
Description
ÊÊ* 5
.
ÊÊ5 6
Replace
ÊÊ6 =
(
ÊÊ= >
$str
ÊÊ> A
,
ÊÊA B
$str
ÊÊC F
)
ÊÊF G
;
ÊÊG H
desc
ÁÁ 
=
ÁÁ 
desc
ÁÁ #
.
ÁÁ# $
Replace
ÁÁ$ +
(
ÁÁ+ ,
$str
ÁÁ, /
,
ÁÁ/ 0
$str
ÁÁ1 3
)
ÁÁ3 4
;
ÁÁ4 5
desc
ËË 
=
ËË 
desc
ËË #
.
ËË# $
Replace
ËË$ +
(
ËË+ ,
$str
ËË, /
,
ËË/ 0
$str
ËË1 3
)
ËË3 4
;
ËË4 5
string
ÈÈ 
objAppGenerator
ÈÈ .
=
ÈÈ/ 0
obj
ÈÈ1 4
.
ÈÈ4 5$
GetPropertyValueString
ÈÈ5 K
(
ÈÈK L
$str
ÈÈL Z
)
ÈÈZ [
;
ÈÈ[ \
string
ÍÍ 
objProtocol
ÍÍ *
=
ÍÍ+ ,
obj
ÍÍ- 0
.
ÍÍ0 1$
GetPropertyValueString
ÍÍ1 G
(
ÍÍG H
$str
ÍÍH W
)
ÍÍW X
;
ÍÍX Y
if
ÎÎ 
(
ÎÎ 
objProtocol
ÎÎ '
==
ÎÎ( *
$str
ÎÎ+ 5
)
ÎÎ5 6
objProtocol
ÏÏ '
=
ÏÏ( )
$str
ÏÏ* ,
;
ÏÏ, -
string
ÓÓ 
isMain
ÓÓ !
=
ÓÓ" #
obj
ÓÓ$ '
.
ÓÓ' (
GetPropertyValue
ÓÓ( 8
<
ÓÓ8 9
bool
ÓÓ9 =
>
ÓÓ= >
(
ÓÓ> ?
$str
ÓÓ? G
)
ÓÓG H
?
ÓÓI J
$str
ÓÓK Q
:
ÓÓR S
$str
ÓÓT V
;
ÓÓV W
string
ÔÔ 
isGenerated
ÔÔ &
=
ÔÔ' (
ObjectsHelper
ÔÔ) 6
.
ÔÔ6 7
isGenerated
ÔÔ7 B
(
ÔÔB C
obj
ÔÔC F
)
ÔÔF G
?
ÔÔH I
$str
ÔÔJ O
:
ÔÔP Q
$str
ÔÔR T
;
ÔÔT U
string
ÚÚ 
appLocation
ÚÚ *
=
ÚÚ+ ,
obj
ÚÚ- 0
.
ÚÚ0 1
UserName
ÚÚ1 9
.
ÚÚ9 :
ToString
ÚÚ: B
(
ÚÚB C
)
ÚÚC D
;
ÚÚD E
writer
ÛÛ 
.
ÛÛ 
AddTableData
ÛÛ '
(
ÛÛ' (
new
ÛÛ( +
string
ÛÛ, 2
[
ÛÛ2 3
]
ÛÛ3 4
{
ÛÛ5 6
obj
ÛÛ7 :
.
ÛÛ: ;
TypeDescriptor
ÛÛ; I
.
ÛÛI J
Name
ÛÛJ N
+
ÛÛO P
$str
ÛÛP S
,
ÛÛS T
	Functions
ÛÛU ^
.
ÛÛ^ _

linkObject
ÛÛ_ i
(
ÛÛi j
obj
ÛÛj m
)
ÛÛm n
,
ÛÛn o
desc
ÛÛp t
,
ÛÛt u
obj
ÙÙ 
.
ÙÙ  
Module
ÙÙ  &
.
ÙÙ& '
Name
ÙÙ' +
,
ÙÙ+ ,
obj
ÙÙ- 0
.
ÙÙ0 1
IsPublic
ÙÙ1 9
.
ÙÙ9 :
ToString
ÙÙ: B
(
ÙÙB C
)
ÙÙC D
,
ÙÙD E
obj
ÙÙE H
.
ÙÙH I

LastUpdate
ÙÙI S
.
ÙÙS T
ToString
ÙÙT \
(
ÙÙ\ ]
)
ÙÙ] ^
,
ÙÙ^ _
isMain
ÙÙ_ e
,
ÙÙe f
obj
ÙÙg j
.
ÙÙj k
	Timestamp
ÙÙk t
.
ÙÙt u
ToString
ÙÙu }
(
ÙÙ} ~
)
ÙÙ~ 
,ÙÙ Ä
isGeneratedÙÙÅ å
,ÙÙå ç
objProtocolÙÙé ô
,ÙÙô ö
appLocationÙÙõ ¶
}ÙÙ¶ ß
)ÙÙß ®
;ÙÙ® ©
numObj
ˆˆ 
+=
ˆˆ 
$num
ˆˆ 
;
ˆˆ  
if
˜˜ 
(
˜˜ 
(
˜˜ 
numObj
˜˜ 
%
˜˜  !
$num
˜˜" %
)
˜˜% &
==
˜˜' )
$num
˜˜* +
)
˜˜+ ,
output
¯¯ 
.
¯¯ 
AddLine
¯¯ &
(
¯¯& '
obj
¯¯' *
.
¯¯* +
TypeDescriptor
¯¯+ 9
.
¯¯9 :
Name
¯¯: >
+
¯¯? @
$str
¯¯A D
+
¯¯E F
obj
¯¯G J
.
¯¯J K
Name
¯¯K O
+
¯¯P Q
$str
¯¯R U
+
¯¯V W
obj
¯¯X [
.
¯¯[ \
Description
¯¯\ g
)
¯¯g h
;
¯¯h i
}
˘˘ 
}
˙˙ 
writer
˚˚ 
.
˚˚ 
	AddFooter
˚˚ 
(
˚˚ 
)
˚˚ 
;
˚˚ 
writer
¸¸ 
.
¸¸ 
Close
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
KBDoctorHelper
˛˛ 
.
˛˛ !
ShowKBDoctorResults
˛˛ .
(
˛˛. /

outputFile
˛˛/ 9
)
˛˛9 :
;
˛˛: ;
bool
ˇˇ 
success
ˇˇ 
=
ˇˇ 
true
ˇˇ 
;
ˇˇ  
output
ÄÄ 
.
ÄÄ 

EndSection
ÄÄ 
(
ÄÄ 
title
ÄÄ #
,
ÄÄ# $
success
ÄÄ% ,
)
ÄÄ, -
;
ÄÄ- .
}
ÇÇ 	
public
ÖÖ 
static
ÖÖ 
void
ÖÖ 
ListMainObj
ÖÖ &
(
ÖÖ& '
)
ÖÖ' (
{
ÜÜ 	

IKBService
áá 
kbserv
áá 
=
áá 

UIServices
áá  *
.
áá* +
KB
áá+ -
;
áá- .

Dictionary
ää 
<
ää 
string
ää 
,
ää  
KBObjectCollection
ää 1
>
ää1 2
dic
ää3 6
=
ää7 8
new
ää9 <

Dictionary
ää= G
<
ääG H
string
ääH N
,
ääN O 
KBObjectCollection
ääP b
>
ääb c
(
ääc d
)
ääd e
;
ääe f
string
åå 
title
åå 
=
åå 
$str
åå 4
;
åå4 5
string
çç 

outputFile
çç 
=
çç 
	Functions
çç  )
.
çç) *
CreateOutputFile
çç* :
(
çç: ;
kbserv
çç; A
,
ççA B
title
ççC H
)
ççH I
;
ççI J
IOutputService
êê 
output
êê !
=
êê" #
CommonServices
êê$ 2
.
êê2 3
Output
êê3 9
;
êê9 :
output
ëë 
.
ëë 
StartSection
ëë 
(
ëë  
title
ëë  %
)
ëë% &
;
ëë& '
KBDoctorXMLWriter
ìì 
writer
ìì $
=
ìì% &
new
ìì' *
KBDoctorXMLWriter
ìì+ <
(
ìì< =

outputFile
ìì= G
,
ììG H
Encoding
ììI Q
.
ììQ R
UTF8
ììR V
)
ììV W
;
ììW X
writer
îî 
.
îî 
	AddHeader
îî 
(
îî 
title
îî "
)
îî" #
;
îî# $
writer
ññ 
.
ññ 
AddTableHeader
ññ !
(
ññ! "
new
ññ" %
string
ññ& ,
[
ññ, -
]
ññ- .
{
ññ/ 0
$str
ññ1 7
,
ññ7 8
$str
ññ9 A
,
ññA B
$str
ññC P
,
ññP Q
$str
ññR Z
,
ññZ [
$str
ññ\ d
,
ññd e
$str
ññg r
,
ññr s
$str
ññu 
,ññ Ä
$strññÅ é
}ññè ê
)ññê ë
;ññë í

KBCategory
òò 
mainCategory
òò #
=
òò$ %
	Functions
òò& /
.
òò/ 0
MainCategory
òò0 <
(
òò< =
kbserv
òò= C
.
òòC D
CurrentModel
òòD P
)
òòP Q
;
òòQ R
foreach
ôô 
(
ôô 
KBObject
ôô 
obj
ôô !
in
ôô" $
mainCategory
ôô% 1
.
ôô1 2

AllMembers
ôô2 <
)
ôô< =
{
öö 
if
õõ 
(
õõ 
obj
õõ 
!=
õõ 
null
õõ 
)
õõ  
{
úú 
string
ùù 
desc
ùù 
=
ùù  !
obj
ùù" %
.
ùù% &
Description
ùù& 1
.
ùù1 2
Replace
ùù2 9
(
ùù9 :
$str
ùù: =
,
ùù= >
$str
ùù? B
)
ùùB C
;
ùùC D
desc
ûû 
=
ûû 
desc
ûû 
.
ûû  
Replace
ûû  '
(
ûû' (
$str
ûû( +
,
ûû+ ,
$str
ûû- /
)
ûû/ 0
;
ûû0 1
desc
üü 
=
üü 
desc
üü 
.
üü  
Replace
üü  '
(
üü' (
$str
üü( +
,
üü+ ,
$str
üü- /
)
üü/ 0
;
üü0 1
string
†† 
objAppGenerator
†† *
=
††+ ,
obj
††- 0
.
††0 1$
GetPropertyValueString
††1 G
(
††G H
$str
††H V
)
††V W
;
††W X
string
°° 
objProtocol
°° &
=
°°' (
obj
°°) ,
.
°°, -$
GetPropertyValueString
°°- C
(
°°C D
$str
°°D S
)
°°S T
;
°°T U
string
§§ 
isGenerated
§§ &
=
§§' (
ObjectsHelper
§§) 6
.
§§6 7
isGenerated
§§7 B
(
§§B C
obj
§§C F
)
§§F G
?
§§H I
$str
§§J O
:
§§P Q
$str
§§R T
;
§§T U
writer
ßß 
.
ßß 
AddTableData
ßß +
(
ßß+ ,
new
ßß, /
string
ßß0 6
[
ßß6 7
]
ßß7 8
{
ßß9 :
obj
ßß; >
.
ßß> ?
TypeDescriptor
ßß? M
.
ßßM N
Name
ßßN R
+
ßßS T
$str
ßßT W
,
ßßW X
	Functions
ßßY b
.
ßßb c

linkObject
ßßc m
(
ßßm n
obj
ßßn q
)
ßßq r
,
ßßr s
desc
ßßt x
,
ßßx y
obj
®®  #
.
®®# $
Module
®®$ *
.
®®* +
Name
®®+ /
,
®®/ 0
obj
®®1 4
.
®®4 5
IsPublic
®®5 =
.
®®= >
ToString
®®> F
(
®®F G
)
®®G H
,
®®H I
objAppGenerator
®®J Y
,
®®Y Z
objProtocol
®®[ f
,
®®f g
obj
®®h k
.
®®k l

LastUpdate
®®l v
.
®®v w 
ToShortDateString®®w à
(®®à â
)®®â ä
}®®ä ã
)®®ã å
;®®å ç
output
´´ 
.
´´ 
AddLine
´´ &
(
´´& '
obj
´´' *
.
´´* +
TypeDescriptor
´´+ 9
.
´´9 :
Name
´´: >
+
´´? @
$str
´´A D
+
´´E F
obj
´´G J
.
´´J K
Name
´´K O
+
´´P Q
$str
´´R U
+
´´V W
obj
´´X [
.
´´[ \
Description
´´\ g
)
´´g h
;
´´h i
}
¨¨ 
}
≠≠ 
writer
ÆÆ 
.
ÆÆ 
	AddFooter
ÆÆ 
(
ÆÆ 
)
ÆÆ 
;
ÆÆ 
writer
ØØ 
.
ØØ 
Close
ØØ 
(
ØØ 
)
ØØ 
;
ØØ 
KBDoctorHelper
±± 
.
±± !
ShowKBDoctorResults
±± .
(
±±. /

outputFile
±±/ 9
)
±±9 :
;
±±: ;
bool
≤≤ 
success
≤≤ 
=
≤≤ 
true
≤≤ 
;
≤≤  
output
≥≥ 
.
≥≥ 

EndSection
≥≥ 
(
≥≥ 
title
≥≥ #
,
≥≥# $
success
≥≥% ,
)
≥≥, -
;
≥≥- .
}
µµ 	
public
∏∏ 
static
∏∏ 
void
∏∏ 
ListProc
∏∏ #
(
∏∏# $
)
∏∏$ %
{
ππ 	

IKBService
∫∫ 
kbserv
∫∫ 
=
∫∫ 

UIServices
∫∫  *
.
∫∫* +
KB
∫∫+ -
;
∫∫- .

Dictionary
ΩΩ 
<
ΩΩ 
string
ΩΩ 
,
ΩΩ  
KBObjectCollection
ΩΩ 1
>
ΩΩ1 2
dic
ΩΩ3 6
=
ΩΩ7 8
new
ΩΩ9 <

Dictionary
ΩΩ= G
<
ΩΩG H
string
ΩΩH N
,
ΩΩN O 
KBObjectCollection
ΩΩP b
>
ΩΩb c
(
ΩΩc d
)
ΩΩd e
;
ΩΩe f
string
øø 
title
øø 
=
øø 
$str
øø 1
;
øø1 2
string
¿¿ 

outputFile
¿¿ 
=
¿¿ 
	Functions
¿¿  )
.
¿¿) *
CreateOutputFile
¿¿* :
(
¿¿: ;
kbserv
¿¿; A
,
¿¿A B
title
¿¿C H
)
¿¿H I
;
¿¿I J
KBModel
¡¡ 
kbmodel
¡¡ 
=
¡¡ 
kbserv
¡¡ $
.
¡¡$ %
CurrentModel
¡¡% 1
;
¡¡1 2
IOutputService
ƒƒ 
output
ƒƒ !
=
ƒƒ" #
CommonServices
ƒƒ$ 2
.
ƒƒ2 3
Output
ƒƒ3 9
;
ƒƒ9 :
output
≈≈ 
.
≈≈ 
StartSection
≈≈ 
(
≈≈  
title
≈≈  %
)
≈≈% &
;
≈≈& '
KBDoctorXMLWriter
«« 
writer
«« $
=
««% &
new
««' *
KBDoctorXMLWriter
««+ <
(
««< =

outputFile
««= G
,
««G H
Encoding
««I Q
.
««Q R
UTF8
««R V
)
««V W
;
««W X
writer
»» 
.
»» 
	AddHeader
»» 
(
»» 
title
»» "
)
»»" #
;
»»# $
writer
   
.
   
AddTableHeader
   !
(
  ! "
new
  " %
string
  & ,
[
  , -
]
  - .
{
  / 0
$str
  1 7
,
  7 8
$str
  9 A
,
  A B
$str
  C L
,
  L M
$str
  N V
,
  V W
$str
  X `
,
  ` a
$str
  b m
,
  m n
$str
  o y
,
  y z
$str  { à
}  â ä
)  ä ã
;  ã å
string
ÀÀ 
commitOnExit
ÀÀ 
=
ÀÀ  !
$str
ÀÀ" $
;
ÀÀ$ %
foreach
ÕÕ 
(
ÕÕ 
KBObject
ÕÕ 
obj
ÕÕ !
in
ÕÕ" $
kbmodel
ÕÕ% ,
.
ÕÕ, -
Objects
ÕÕ- 4
.
ÕÕ4 5
GetAll
ÕÕ5 ;
(
ÕÕ; <
)
ÕÕ< =
)
ÕÕ= >
{
ŒŒ 
commitOnExit
œœ 
=
œœ 
$str
œœ !
;
œœ! "
if
–– 
(
–– 
obj
–– 
is
–– 
	Procedure
–– $
)
––$ %
{
—— 
if
““ 
(
““ 
obj
““ 
.
““ 
VersionDate
““ '
>=
““' )
DateTime
““* 2
.
““2 3
Now
““3 6
.
““6 7
AddDays
““7 >
(
““> ?
-
““@ A
$num
““B D
)
““D E
)
““E F
{
”” 
object
‘‘ 
aux
‘‘ "
=
‘‘# $
obj
‘‘% (
.
‘‘( )
GetPropertyValue
‘‘) 9
(
‘‘9 :
$str
‘‘: H
)
‘‘H I
;
‘‘I J
if
’’ 
(
’’ 
aux
’’ 
!=
’’  "
null
’’# '
)
’’' (
{
÷÷ 
commitOnExit
◊◊ (
=
◊◊) *
aux
◊◊+ .
.
◊◊. /
ToString
◊◊/ 7
(
◊◊7 8
)
◊◊8 9
;
◊◊: ;
}
ÿÿ 
}
⁄⁄ 
writer
€€ 
.
€€ 
AddTableData
€€ '
(
€€' (
new
€€( +
string
€€, 2
[
€€2 3
]
€€3 4
{
€€5 6
obj
€€7 :
.
€€: ;
TypeDescriptor
€€; I
.
€€I J
Name
€€J N
+
€€O P
$str
€€P S
,
€€S T
	Functions
€€U ^
.
€€^ _

linkObject
€€_ i
(
€€i j
obj
€€j m
)
€€m n
,
€€n o
commitOnExit
€€p |
,
€€} ~
obj
‹‹  #
.
‹‹# $
Module
‹‹$ *
.
‹‹* +
Name
‹‹+ /
,
‹‹/ 0
obj
‹‹1 4
.
‹‹4 5
IsPublic
‹‹5 =
.
‹‹= >
ToString
‹‹> F
(
‹‹F G
)
‹‹G H
,
‹‹H I
$str
‹‹J L
,
‹‹L M
$str
‹‹N P
,
‹‹P Q
obj
‹‹R U
.
‹‹U V

LastUpdate
‹‹V `
.
‹‹` a
ToShortDateString
‹‹a r
(
‹‹r s
)
‹‹s t
}
‹‹t u
)
‹‹u v
;
‹‹v w
output
ﬂﬂ 
.
ﬂﬂ 
AddLine
ﬂﬂ "
(
ﬂﬂ" #
obj
ﬂﬂ# &
.
ﬂﬂ& '
TypeDescriptor
ﬂﬂ' 5
.
ﬂﬂ5 6
Name
ﬂﬂ6 :
+
ﬂﬂ; <
$str
ﬂﬂ= @
+
ﬂﬂA B
obj
ﬂﬂC F
.
ﬂﬂF G
Name
ﬂﬂG K
+
ﬂﬂL M
$str
ﬂﬂN Q
+
ﬂﬂR S
obj
ﬂﬂT W
.
ﬂﬂW X
Description
ﬂﬂX c
)
ﬂﬂc d
;
ﬂﬂd e
}
‡‡ 
}
·· 
writer
‚‚ 
.
‚‚ 
	AddFooter
‚‚ 
(
‚‚ 
)
‚‚ 
;
‚‚ 
writer
„„ 
.
„„ 
Close
„„ 
(
„„ 
)
„„ 
;
„„ 
KBDoctorHelper
ÂÂ 
.
ÂÂ !
ShowKBDoctorResults
ÂÂ .
(
ÂÂ. /

outputFile
ÂÂ/ 9
)
ÂÂ9 :
;
ÂÂ: ;
bool
ÊÊ 
success
ÊÊ 
=
ÊÊ 
true
ÊÊ 
;
ÊÊ  
output
ÁÁ 
.
ÁÁ 

EndSection
ÁÁ 
(
ÁÁ 
title
ÁÁ #
,
ÁÁ# $
success
ÁÁ% ,
)
ÁÁ, -
;
ÁÁ- .
}
ÈÈ 	
public
ÌÌ 
static
ÌÌ 
void
ÌÌ 
List2
ÌÌ  
(
ÌÌ  !
KBObject
ÌÌ! )
obj
ÌÌ* -
,
ÌÌ- .
string
ÌÌ/ 5
objLocation
ÌÌ6 A
,
ÌÌA B

Dictionary
ÌÌC M
<
ÌÌM N
string
ÌÌN T
,
ÌÌT U 
KBObjectCollection
ÌÌV h
>
ÌÌh i
dic
ÌÌj m
,
ÌÌm n 
KBDoctorXMLWriterÌÌo Ä
writerÌÌÅ á
)ÌÌá à
{
ÓÓ 	
string
ÔÔ 
objMasterPage
ÔÔ  
=
ÔÔ! "
obj
ÔÔ# &
.
ÔÔ& '$
GetPropertyValueString
ÔÔ' =
(
ÔÔ= >
$str
ÔÔ> J
)
ÔÔJ K
;
ÔÔK L
writer
 
.
 
AddTableData
 
(
  
new
  #
string
$ *
[
* +
]
+ ,
{
- .
obj
/ 2
.
2 3
TypeDescriptor
3 A
.
A B
Name
B F
,
F G
	Functions
H Q
.
Q R

linkObject
R \
(
\ ]
obj
] `
)
` a
,
a b
objLocation
c n
,
n o
objMasterPage
p }
}
~ 
) Ä
;Ä Å
if
ÒÒ 
(
ÒÒ 
ObjectsHelper
ÒÒ 
.
ÒÒ 
IsCallalable
ÒÒ *
(
ÒÒ* +
obj
ÒÒ+ .
)
ÒÒ. /
)
ÒÒ/ 0
{
ÚÚ 
foreach
ÛÛ 
(
ÛÛ 
EntityReference
ÛÛ (
	reference
ÛÛ) 2
in
ÛÛ3 5
obj
ÛÛ6 9
.
ÛÛ9 :
GetReferences
ÛÛ: G
(
ÛÛG H
)
ÛÛH I
)
ÛÛI J
{
ÙÙ 
KBObject
ıı 
objRef
ıı #
=
ıı$ %
KBObject
ıı& .
.
ıı. /
Get
ıı/ 2
(
ıı2 3
obj
ıı3 6
.
ıı6 7
Model
ıı7 <
,
ıı< =
	reference
ıı> G
.
ııG H
To
ııH J
)
ııJ K
;
ııK L
string
ˆˆ 
typeDescriptor
ˆˆ )
=
ˆˆ* +
obj
ˆˆ, /
.
ˆˆ/ 0
TypeDescriptor
ˆˆ0 >
.
ˆˆ> ?
Name
ˆˆ? C
;
ˆˆC D
List
˜˜ 
<
˜˜ 
string
˜˜ 
>
˜˜  
list
˜˜! %
=
˜˜& '
new
˜˜( +
List
˜˜, 0
<
˜˜0 1
string
˜˜1 7
>
˜˜7 8
{
˜˜9 :
$str
˜˜; E
,
˜˜E F
$str
˜˜G T
,
˜˜T U
$str
˜˜V a
}
˜˜b c
;
˜˜c d
if
˘˘ 
(
˘˘ 
(
˘˘ 
objRef
˘˘ 
!=
˘˘  "
null
˘˘# '
)
˘˘' (
&&
˘˘) +
list
˘˘, 0
.
˘˘0 1
Contains
˘˘1 9
(
˘˘9 :
typeDescriptor
˘˘: H
)
˘˘H I
&&
˘˘J L
(
˘˘M N
	reference
˘˘N W
.
˘˘W X
ReferenceType
˘˘X e
==
˘˘f h
ReferenceType
˘˘i v
.
˘˘v w
Hard
˘˘w {
)
˘˘{ |
)
˘˘| }
{
˙˙ 
int
˚˚ 
count
˚˚ !
=
˚˚" #
$num
˚˚$ %
;
˚˚% &
string
¸¸ 
	locations
¸¸ (
=
¸¸) *
$str
¸¸+ -
;
¸¸- . 
KBObjectCollection
˝˝ *
objColl
˝˝+ 2
=
˝˝3 4
new
˝˝5 8 
KBObjectCollection
˝˝9 K
(
˝˝K L
)
˝˝L M
;
˝˝M N
foreach
˛˛ 
(
˛˛  !
string
˛˛! '
loc
˛˛( +
in
˛˛, .
dic
˛˛/ 2
.
˛˛2 3
Keys
˛˛3 7
)
˛˛7 8
{
ˇˇ 
if
ÄÄ 
(
ÄÄ  
(
ÄÄ  !
loc
ÄÄ! $
!=
ÄÄ% '
objLocation
ÄÄ( 3
)
ÄÄ3 4
&&
ÄÄ5 7
(
ÄÄ8 9
list
ÄÄ9 =
.
ÄÄ= >
Contains
ÄÄ> F
(
ÄÄF G
objRef
ÄÄG M
.
ÄÄM N
TypeDescriptor
ÄÄN \
.
ÄÄ\ ]
Name
ÄÄ] a
)
ÄÄa b
)
ÄÄb c
)
ÄÄc d
{
ÅÅ 
dic
ÇÇ  #
.
ÇÇ# $
TryGetValue
ÇÇ$ /
(
ÇÇ/ 0
loc
ÇÇ0 3
,
ÇÇ3 4
out
ÇÇ5 8
objColl
ÇÇ9 @
)
ÇÇ@ A
;
ÇÇA B
if
ÉÉ  "
(
ÉÉ# $
objColl
ÉÉ$ +
.
ÉÉ+ ,
Contains
ÉÉ, 4
(
ÉÉ4 5
obj
ÉÉ5 8
)
ÉÉ8 9
)
ÉÉ9 :
{
ÑÑ  !
	locations
ÖÖ$ -
+=
ÖÖ. 0
$str
ÖÖ1 4
+
ÖÖ5 6
loc
ÖÖ7 :
;
ÖÖ: ;
count
ÜÜ$ )
+=
ÜÜ* ,
$num
ÜÜ- .
;
ÜÜ. /
}
áá  !
}
àà 
}
ââ 
if
ää 
(
ää 
count
ää !
>
ää" #
$num
ää$ %
)
ää% &
{
ãã 
string
åå "
objRefMasterPage
åå# 3
=
åå4 5
objRef
åå6 <
.
åå< =$
GetPropertyValueString
åå= S
(
ååS T
$str
ååT `
)
åå` a
;
ååa b
writer
çç "
.
çç" #
AddTableData
çç# /
(
çç/ 0
new
çç0 3
string
çç4 :
[
çç: ;
]
çç; <
{
çç= >
$str
çç? P
+
ççQ R
objRef
ççS Y
.
ççY Z
TypeDescriptor
ççZ h
.
ççh i
Name
ççi m
,
ççm n
	Functions
çço x
.
ççx y

linkObjectççy É
(ççÉ Ñ
objRefççÑ ä
)ççä ã
,ççã å
countççç í
.ççí ì
ToStringççì õ
(ççõ ú
)ççú ù
+ççû ü
$strçç† £
+çç§ •
	locationsçç¶ Ø
,ççØ ∞ 
objRefMasterPageçç± ¡
}çç¬ √
)çç√ ƒ
;ççƒ ≈
}
éé 
}
èè 
}
êê 
}
ëë 
}
ìì 	
private
ññ 
static
ññ  
KBObjectCollection
ññ )%
CreatLocationCollection
ññ* A
(
ññA B
string
ññB H
location
ññI Q
)
ññQ R
{
óó 	 
KBObjectCollection
òò 
objColl
òò &
=
òò' (
new
òò) , 
KBObjectCollection
òò- ?
(
òò? @
)
òò@ A
;
òòA B

IKBService
ôô 
kB
ôô 
=
ôô 

UIServices
ôô &
.
ôô& '
KB
ôô' )
;
ôô) *
IOutputService
öö 
output
öö !
=
öö" #
CommonServices
öö$ 2
.
öö2 3
Output
öö3 9
;
öö9 :

KBCategory
õõ 
mainCategory
õõ #
=
õõ$ %

KBCategory
õõ& 0
.
õõ0 1
Get
õõ1 4
(
õõ4 5
kB
õõ5 7
.
õõ7 8
CurrentModel
õõ8 D
,
õõD E
$str
õõF U
)
õõU V
;
õõV W
foreach
úú 
(
úú 
KBObject
úú 
obj
úú !
in
úú" $
mainCategory
úú% 1
.
úú1 2

AllMembers
úú2 <
)
úú< =
{
ùù 
string
ûû 
objLocation
ûû "
=
ûû# $
(
ûû% &
string
ûû& ,
)
ûû, -
obj
ûû- 0
.
ûû0 1
GetProperty
ûû1 <
(
ûû< =
$str
ûû= J
)
ûûJ K
.
ûûK L
Value
ûûL Q
;
ûûQ R
if
†† 
(
†† 
objLocation
†† 
==
††  "
$str
††# %
)
††% &
obj
°° 
.
°° $
SilentSetPropertyValue
°° .
(
°°. /
$str
°°/ <
,
°°< =
$str
°°> C
)
°°C D
;
°°D E
string
££ 
objAppGenerator
££ &
=
££' (
obj
££) ,
.
££, -$
GetPropertyValueString
££- C
(
££C D
$str
££D R
)
££R S
;
££S T
string
§§ 
Dircopia
§§ 
;
§§  
if
•• 
(
•• 
objAppGenerator
•• #
.
••# $
ToUpper
••$ +
(
••+ ,
)
••, -
.
••- .
Contains
••. 6
(
••6 7
$str
••7 <
)
••< =
)
••= >
Dircopia
¶¶ 
=
¶¶ 
$str
¶¶ +
;
¶¶+ ,
else
ßß 
Dircopia
®® 
=
®® 
$str
®® &
;
®®& '
if
´´ 
(
´´ 
objLocation
´´ 
==
´´  "
null
´´# '
)
´´' (
objLocation
¨¨ 
=
¨¨  !
$str
¨¨" (
;
¨¨( )
string
ÆÆ 
letra
ÆÆ 
=
ÆÆ 
$str
ÆÆ !
;
ÆÆ! "
if
∞∞ 
(
∞∞ 
location
∞∞ 
==
∞∞ 
objLocation
∞∞  +
)
∞∞+ ,
{
±± 
output
≤≤ 
.
≤≤ 
AddLine
≤≤ "
(
≤≤" #
$str
≤≤# 1
+
≤≤2 3
objLocation
≤≤4 ?
)
≤≤? @
;
≤≤@ A
output
≥≥ 
.
≥≥ 
AddLine
≥≥ "
(
≥≥" #
$str
≥≥# +
+
≥≥, -
Dircopia
≥≥. 6
+
≥≥7 8
obj
≥≥9 <
.
≥≥< =
Name
≥≥= A
+
≥≥B C
$str
≥≥D T
)
≥≥T U
;
≥≥U V
if
µµ 
(
µµ 
obj
µµ 
is
µµ 
	Procedure
µµ (
)
µµ( )
letra
∂∂ 
=
∂∂ 
$str
∂∂  #
;
∂∂# $
if
∑∑ 
(
∑∑ 
obj
∑∑ 
is
∑∑ 
	WorkPanel
∑∑ (
)
∑∑( )
letra
∏∏ 
=
∏∏ 
$str
∏∏  #
;
∏∏# $
if
ππ 
(
ππ 
obj
ππ 
is
ππ 
Transaction
ππ *
)
ππ* +
letra
∫∫ 
=
∫∫ 
$str
∫∫  "
;
∫∫" #
output
ºº 
.
ºº 
AddLine
ºº "
(
ºº" #
$str
ºº# +
+
ºº, -
Dircopia
ºº. 6
+
ºº7 8
letra
ºº9 >
+
ºº? @
obj
ººA D
.
ººD E
Name
ººE I
+
ººJ K
$str
ººL \
)
ºº\ ]
;
ºº] ^
AddReferencedObj
ΩΩ $
(
ΩΩ$ %
objColl
ΩΩ% ,
,
ΩΩ, -
obj
ΩΩ. 1
,
ΩΩ1 2
$str
ΩΩ3 5
)
ΩΩ5 6
;
ΩΩ6 7
}
øø 
}
¡¡ 
return
¬¬ 
objColl
¬¬ 
;
¬¬ 
}
√√ 	
private
≈≈ 
static
≈≈ 
void
≈≈ 
AddReferencedObj
≈≈ ,
(
≈≈, - 
KBObjectCollection
≈≈- ?
objColl
≈≈@ G
,
≈≈G H
KBObject
≈≈I Q
obj
≈≈R U
,
≈≈U V
string
≈≈W ]
tabs
≈≈^ b
)
≈≈b c
{
∆∆ 	

IKBService
»» 
kbserv
»» 
=
»» 

UIServices
»»  *
.
»»* +
KB
»»+ -
;
»»- .
IOutputService
…… 
output
…… !
=
……" #
CommonServices
……$ 2
.
……2 3
Output
……3 9
;
……9 :
objColl
   
.
   
Add
   
(
   
obj
   
)
   
;
   
string
ÀÀ 
RefTabs
ÀÀ 
=
ÀÀ 
tabs
ÀÀ !
+
ÀÀ" #
$str
ÀÀ$ *
;
ÀÀ* +
if
ÕÕ 
(
ÕÕ 
ObjectsHelper
ÕÕ 
.
ÕÕ 
IsCallalable
ÕÕ *
(
ÕÕ* +
obj
ÕÕ+ .
)
ÕÕ. /
)
ÕÕ/ 0
{
ŒŒ 
foreach
œœ 
(
œœ 
EntityReference
œœ (
	reference
œœ) 2
in
œœ3 5
obj
œœ6 9
.
œœ9 :
GetReferences
œœ: G
(
œœG H
)
œœH I
)
œœI J
{
–– 
KBObject
—— 
objRef
—— #
=
——$ %
KBObject
——& .
.
——. /
Get
——/ 2
(
——2 3
obj
——3 6
.
——6 7
Model
——7 <
,
——< =
	reference
——> G
.
——G H
To
——H J
)
——J K
;
——K L
if
”” 
(
”” 
(
”” 
objRef
”” 
!=
””  "
null
””# '
)
””' (
&&
””) +
!
””, -
(
””- .
objColl
””. 5
.
””5 6
Contains
””6 >
(
””> ?
objRef
””? E
)
””E F
)
””F G
&&
””H J
(
””K L
	reference
””L U
.
””U V
ReferenceType
””V c
==
””d f
ReferenceType
””g t
.
””t u
Hard
””u y
)
””y z
&&
””{ }
(
””~ 
ObjectsHelper”” å
.””å ç
IsCallalable””ç ô
(””ô ö
objRef””ö †
)””† °
)””° ¢
)””¢ £
{
‘‘ 
if
’’ 
(
’’ 
!
’’ 
(
’’ 
objRef
’’ $
is
’’% '
	Procedure
’’( 1
)
’’1 2
)
’’2 3
output
÷÷ "
.
÷÷" #
AddLine
÷÷# *
(
÷÷* +
tabs
÷÷+ /
+
÷÷0 1
$str
÷÷2 :
+
÷÷; <
objRef
÷÷= C
.
÷÷C D
Name
÷÷D H
+
÷÷I J
$str
÷÷K \
)
÷÷\ ]
;
÷÷] ^
AddReferencedObj
ÿÿ (
(
ÿÿ( )
objColl
ÿÿ) 0
,
ÿÿ0 1
objRef
ÿÿ2 8
,
ÿÿ8 9
RefTabs
ÿÿ: A
)
ÿÿA B
;
ÿÿB C
}
⁄⁄ 
}
€€ 
}
‹‹ 
}
›› 	
public
ﬂﬂ 
static
ﬂﬂ 
KBObject
ﬂﬂ 
ObjectPartialName
ﬂﬂ 0
(
ﬂﬂ0 1
string
ﬂﬂ1 7
objName
ﬂﬂ8 ?
)
ﬂﬂ? @
{
‡‡ 	
string
·· 
[
·· 
]
·· 
ns
·· 
=
·· 
new
·· 
[
·· 
]
·· 
{
··  !
$str
··" +
}
··, -
;
··- .
foreach
„„ 
(
„„ 
KBObject
„„ 
obj
„„ !
in
„„" $

UIServices
„„% /
.
„„/ 0
KB
„„0 2
.
„„2 3
CurrentModel
„„3 ?
.
„„? @
Objects
„„@ G
.
„„G H
GetByPartialName
„„H X
(
„„X Y
ns
„„Y [
,
„„[ \
objName
„„] d
)
„„d e
)
„„e f
{
‰‰ 
if
ÂÂ 
(
ÂÂ 
obj
ÂÂ 
.
ÂÂ 
Name
ÂÂ 
==
ÂÂ 
objName
ÂÂ  '
)
ÂÂ' (
{
ÊÊ 
return
ËË 
obj
ËË 
;
ËË 
}
ÈÈ 
}
ÎÎ 
return
ÏÏ 
null
ÏÏ 
;
ÏÏ 
}
ÌÌ 	
public
ÚÚ 
static
ÚÚ 
void
ÚÚ 
ObjectsWINWEB
ÚÚ (
(
ÚÚ( )
)
ÚÚ) *
{
ÛÛ 	

IKBService
ÙÙ 
kbserv
ÙÙ 
=
ÙÙ 

UIServices
ÙÙ  *
.
ÙÙ* +
KB
ÙÙ+ -
;
ÙÙ- .
KBModel
ıı 
design
ıı 
=
ıı 
kbserv
ıı #
.
ıı# $
CurrentModel
ıı$ 0
;
ıı0 1%
SpecificationListHelper
ˆˆ #
helper
ˆˆ$ *
=
ˆˆ+ ,
new
ˆˆ- 0%
SpecificationListHelper
ˆˆ1 H
(
ˆˆH I
design
ˆˆI O
.
ˆˆO P
Environment
ˆˆP [
.
ˆˆ[ \
TargetModel
ˆˆ\ g
)
ˆˆg h
;
ˆˆh i
string
˘˘ 
title
˘˘ 
=
˘˘ 
$str
˘˘ @
;
˘˘@ A
string
˙˙ 

outputFile
˙˙ 
=
˙˙ 
	Functions
˙˙  )
.
˙˙) *
CreateOutputFile
˙˙* :
(
˙˙: ;
kbserv
˙˙; A
,
˙˙A B
title
˙˙C H
)
˙˙H I
;
˙˙I J
IOutputService
˝˝ 
output
˝˝ !
=
˝˝" #
CommonServices
˝˝$ 2
.
˝˝2 3
Output
˝˝3 9
;
˝˝9 :
output
˛˛ 
.
˛˛ 
StartSection
˛˛ 
(
˛˛  
title
˛˛  %
)
˛˛% &
;
˛˛& '
KBDoctorXMLWriter
ÅÅ 
writer
ÅÅ $
=
ÅÅ% &
new
ÅÅ' *
KBDoctorXMLWriter
ÅÅ+ <
(
ÅÅ< =

outputFile
ÅÅ= G
,
ÅÅG H
Encoding
ÅÅI Q
.
ÅÅQ R
UTF8
ÅÅR V
)
ÅÅV W
;
ÅÅW X
writer
ÇÇ 
.
ÇÇ 
	AddHeader
ÇÇ 
(
ÇÇ 
title
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
writer
ÉÉ 
.
ÉÉ 
AddTableHeader
ÉÉ !
(
ÉÉ! "
new
ÉÉ" %
string
ÉÉ& ,
[
ÉÉ, -
]
ÉÉ- .
{
ÉÉ/ 0
$str
ÉÉ1 7
,
ÉÉ7 8
$str
ÉÉ9 @
,
ÉÉ@ A
$str
ÉÉB O
}
ÉÉP Q
)
ÉÉQ R
;
ÉÉR S
foreach
ÑÑ 
(
ÑÑ 
KBObject
ÑÑ 
obj
ÑÑ !
in
ÑÑ" $
kbserv
ÑÑ% +
.
ÑÑ+ ,
CurrentModel
ÑÑ, 8
.
ÑÑ8 9
Objects
ÑÑ9 @
.
ÑÑ@ A
GetAll
ÑÑA G
(
ÑÑG H
)
ÑÑH I
)
ÑÑI J
{
ÖÖ 
if
áá 
(
áá 
obj
áá 
is
áá 
	Procedure
áá $
||
áá% '
obj
áá( +
is
áá, .
Transaction
áá/ :
)
áá: ;
{
àà 
output
ââ 
.
ââ 
AddLine
ââ "
(
ââ" #
$str
ââ# 2
+
ââ3 4
obj
ââ5 8
.
ââ8 9
Name
ââ9 =
)
ââ= >
;
ââ> ?
IEnumerable
ää 
<
ää  
int
ää  #
>
ää# $
generatorTypes
ää% 3
=
ää4 5!
GetObjectGenerators
ää6 I
(
ääI J
obj
ääJ M
.
ääM N
Key
ääN Q
)
ääQ R
;
ääR S
string
åå 
objNamePrior
åå '
=
åå( )
$str
åå* ,
;
åå, -
int
çç 
count
çç 
=
çç 
$num
çç  !
;
çç! "
foreach
éé 
(
éé 
int
éé  
genType
éé! (
in
éé) +
generatorTypes
éé, :
)
éé: ;
{
èè 
count
êê 
+=
êê  
$num
êê! "
;
êê" #
}
ëë 
if
íí 
(
íí 
count
íí 
>
íí 
$num
íí  !
)
íí! "
{
ìì  
KBObjectCollection
îî *
objColl
îî+ 2
=
îî3 4
new
îî5 8 
KBObjectCollection
îî9 K
(
îîK L
)
îîL M
;
îîM N
string
ïï 
mainss
ïï %
=
ïï& '
$str
ïï( *
;
ïï* +
output
óó 
.
óó 
AddLine
óó &
(
óó& '
$str
óó' 8
+
óó9 :
obj
óó; >
.
óó> ?
Name
óó? C
)
óóC D
;
óóD E
foreach
òò 
(
òò  !
EntityReference
òò! 0
	reference
òò1 :
in
òò; =
obj
òò> A
.
òòA B
GetReferences
òòB O
(
òòO P
)
òòP Q
)
òòQ R
{
ôô 
KBObject
öö $
objRef
öö% +
=
öö, -
KBObject
öö. 6
.
öö6 7
Get
öö7 :
(
öö: ;
obj
öö; >
.
öö> ?
Model
öö? D
,
ööD E
	reference
ööF O
.
ööO P
To
ööP R
)
ööR S
;
ööS T
if
õõ 
(
õõ  
(
õõ  !
objRef
õõ! '
!=
õõ( *
null
õõ+ /
)
õõ/ 0
&&
õõ1 3
(
õõ4 5
objRef
õõ5 ;
is
õõ< >
	WorkPanel
õõ? H
||
õõI K
objRef
õõL R
is
õõS U
WebPanel
õõV ^
)
õõ^ _
&&
õõ` b
(
õõc d
	reference
õõd m
.
õõm n
ReferenceType
õõn {
==
õõ| ~
ReferenceTypeõõ å
.õõå ç
Hardõõç ë
)õõë í
)õõí ì
{
úú 
if
ùù  "
(
ùù# $
objNamePrior
ùù$ 0
!=
ùù1 3
obj
ùù4 7
.
ùù7 8
Name
ùù8 <
)
ùù< =
{
ûû  !
string
üü$ *
callTree
üü+ 3
=
üü4 5
$str
üü6 8
;
üü8 9
mainss
††$ *
=
††+ ,
MainsOf
††- 4
(
††4 5
obj
††5 8
,
††8 9
objColl
††: A
,
††A B
callTree
††C K
)
††K L
;
††L M
}
°°  !
writer
¢¢  &
.
¢¢& '
AddTableData
¢¢' 3
(
¢¢3 4
new
¢¢4 7
string
¢¢8 >
[
¢¢> ?
]
¢¢? @
{
¢¢A B
	Functions
¢¢C L
.
¢¢L M

linkObject
¢¢M W
(
¢¢W X
obj
¢¢X [
)
¢¢[ \
,
¢¢\ ]
	Functions
¢¢^ g
.
¢¢g h

linkObject
¢¢h r
(
¢¢r s
objRef
¢¢s y
)
¢¢y z
,
¢¢z {
mainss¢¢| Ç
}¢¢É Ñ
)¢¢Ñ Ö
;¢¢Ö Ü
objNamePrior
££  ,
=
££- .
obj
££/ 2
.
££2 3
Name
££3 7
;
££7 8
}
§§ 
}
•• 
}
¶¶ 
}
ßß 
}
®® 
writer
™™ 
.
™™ 
	AddFooter
™™ 
(
™™ 
)
™™ 
;
™™ 
writer
´´ 
.
´´ 
Close
´´ 
(
´´ 
)
´´ 
;
´´ 
KBDoctorHelper
≠≠ 
.
≠≠ !
ShowKBDoctorResults
≠≠ .
(
≠≠. /

outputFile
≠≠/ 9
)
≠≠9 :
;
≠≠: ;
bool
ÆÆ 
success
ÆÆ 
=
ÆÆ 
true
ÆÆ 
;
ÆÆ  
output
ØØ 
.
ØØ 

EndSection
ØØ 
(
ØØ 
title
ØØ #
,
ØØ# $
success
ØØ% ,
)
ØØ, -
;
ØØ- .
}
≤≤ 	
private
¥¥ 
static
¥¥ 
IEnumerable
¥¥ "
<
¥¥" #
int
¥¥# &
>
¥¥& '!
GetObjectGenerators
¥¥( ;
(
¥¥; <
	EntityKey
¥¥< E
key
¥¥F I
)
¥¥I J
{
µµ 	
throw
∂∂ 
new
∂∂ %
NotImplementedException
∂∂ -
(
∂∂- .
)
∂∂. /
;
∂∂/ 0
}
∑∑ 	
public
ππ 
static
ππ 
string
ππ 
MainsOf
ππ $
(
ππ$ %
KBObject
ππ% -
obj
ππ. 1
,
ππ1 2 
KBObjectCollection
ππ3 E
objColl
ππF M
,
ππM N
string
ππO U
callTree
ππV ^
)
ππ^ _
{
∫∫ 	
string
ªª 
mains
ªª 
=
ªª 
$str
ªª 
;
ªª 
if
ºº 
(
ºº 
!
ºº 
objColl
ºº 
.
ºº 
Contains
ºº !
(
ºº! "
obj
ºº" %
)
ºº% &
)
ºº& '
{
ΩΩ 
objColl
ææ 
.
ææ 
Add
ææ 
(
ææ 
obj
ææ 
)
ææ  
;
ææ  !
if
¿¿ 
(
¿¿ 
obj
¿¿ 
.
¿¿ 
GetPropertyValue
¿¿ (
<
¿¿( )
bool
¿¿) -
>
¿¿- .
(
¿¿. /
$str
¿¿/ 7
)
¿¿7 8
)
¿¿8 9
{
¡¡ 
string
¬¬ 
objAppGenerator
¬¬ *
=
¬¬+ ,
obj
¬¬- 0
.
¬¬0 1$
GetPropertyValueString
¬¬1 G
(
¬¬G H
$str
¬¬H V
)
¬¬V W
;
¬¬W X
if
√√ 
(
√√ 
objAppGenerator
√√ '
.
√√' (
Contains
√√( 0
(
√√0 1
$str
√√1 ;
)
√√; <
&&
√√= ?
callTree
√√@ H
.
√√H I
Contains
√√I Q
(
√√Q R
$str
√√R [
)
√√[ \
)
√√\ ]
{
ƒƒ 
mains
ƒƒ 
=
ƒƒ 
$str
ƒƒ  
;
ƒƒ  !
}
ƒƒ" #
else
≈≈ 
{
∆∆ 
mains
∆∆ 
=
∆∆ 
callTree
∆∆ &
+
∆∆' (
$str
∆∆) ,
+
∆∆- .
	Functions
∆∆/ 8
.
∆∆8 9

linkObject
∆∆9 C
(
∆∆C D
obj
∆∆D G
)
∆∆G H
+
∆∆I J
$str
∆∆K N
+
∆∆O P
objAppGenerator
∆∆Q `
+
∆∆a b
$str
∆∆c k
;
∆∆k l
}
∆∆m n
}
»» 
else
…… 
{
   
callTree
ÀÀ 
+=
ÀÀ 
obj
ÀÀ  #
.
ÀÀ# $
Name
ÀÀ$ (
+
ÀÀ) *
$str
ÀÀ+ .
;
ÀÀ. /
foreach
ÃÃ 
(
ÃÃ 
EntityReference
ÃÃ ,
	reference
ÃÃ- 6
in
ÃÃ7 9
obj
ÃÃ: =
.
ÃÃ= >
GetReferencesTo
ÃÃ> M
(
ÃÃM N
)
ÃÃN O
)
ÃÃO P
{
ÕÕ 
KBObject
ŒŒ  
objRef
ŒŒ! '
=
ŒŒ( )
KBObject
ŒŒ* 2
.
ŒŒ2 3
Get
ŒŒ3 6
(
ŒŒ6 7
obj
ŒŒ7 :
.
ŒŒ: ;
Model
ŒŒ; @
,
ŒŒ@ A
	reference
ŒŒB K
.
ŒŒK L
From
ŒŒL P
)
ŒŒP Q
;
ŒŒQ R
if
–– 
(
–– 
(
–– 
objRef
–– #
!=
––$ &
null
––' +
)
––+ ,
&&
––- /
(
––0 1
obj
––1 4
.
––4 5
Name
––5 9
!=
––: <
objRef
––= C
.
––C D
Name
––D H
)
––H I
&&
––J L
(
––M N
	reference
––N W
.
––W X
ReferenceType
––X e
==
––f h
ReferenceType
––i v
.
––v w
Hard
––w {
)
––{ |
&&
––} 
	reference––Ä â
.––â ä
LinkType––ä í
==––ì ï
LinkType––ñ û
.––û ü

UsedObject––ü ©
&&––€ ›
!––ﬁ ﬂ
objColl––ﬂ Ê
.––Ê Á
Contains––Á Ô
(––Ô 
objRef–– ˆ
)––ˆ ˜
)––˜ ¯
{
—— 
mains
”” !
+=
””" $
MainsOf
””% ,
(
””, -
objRef
””- 3
,
””3 4
objColl
””5 <
,
””< =
callTree
””> F
)
””F G
;
””G H
}
‘‘ 
}
’’ 
}
÷÷ 
}
◊◊ 
return
ÿÿ 
mains
ÿÿ 
;
ÿÿ 
}
ŸŸ 	
public
€€ 
static
€€ 
void
€€ %
CompareLastNVGDirectory
€€ 2
(
€€2 3
)
€€3 4
{
‹‹ 	"
CompareLastDirectory
ﬁﬁ  
(
ﬁﬁ  !
$str
ﬁﬁ! &
)
ﬁﬁ& '
;
ﬁﬁ' (
}
‡‡ 	
public
‚‚ 
static
‚‚ 
void
‚‚ *
OpenFolderComparerNavigation
‚‚ 7
(
‚‚7 8
)
‚‚8 9
{
„„ 	
Process
ÂÂ 
.
ÂÂ 
Start
ÂÂ 
(
ÂÂ 
KBDoctorHelper
ÂÂ (
.
ÂÂ( )"
NvgComparerDirectory
ÂÂ) =
(
ÂÂ= >

UIServices
ÂÂ> H
.
ÂÂH I
KB
ÂÂI K
)
ÂÂK L
)
ÂÂL M
;
ÂÂM N
}
ËË 	
public
ÍÍ 
static
ÍÍ 
void
ÍÍ %
CompareLastOBJDirectory
ÍÍ 2
(
ÍÍ2 3
)
ÍÍ3 4
{
ÎÎ 	"
CompareLastDirectory
ÓÓ  
(
ÓÓ  !
$str
ÓÓ! &
)
ÓÓ& '
;
ÓÓ' (
}
ÔÔ 	
public
ÚÚ 
static
ÚÚ 
void
ÚÚ -
OpenFolderObjComparerNavigation
ÚÚ :
(
ÚÚ: ;
)
ÚÚ; <
{
ÛÛ 	
Process
ıı 
.
ıı 
Start
ıı 
(
ıı 
KBDoctorHelper
ıı (
.
ıı( )"
ObjComparerDirectory
ıı) =
(
ıı= >

UIServices
ıı> H
.
ııH I
KB
ııI K
)
ııK L
)
ııL M
;
ııM N
}
˜˜ 	
private
˘˘ 
static
˘˘ 
void
˘˘ "
CompareLastDirectory
˘˘ 0
(
˘˘0 1
string
˘˘1 7
tipo
˘˘8 <
)
˘˘< =
{
˙˙ 	
string
¸¸ 

dirAppData
¸¸ 
=
¸¸ 
Path
¸¸  $
.
¸¸$ %
Combine
¸¸% ,
(
¸¸, -
Environment
¸¸- 8
.
¸¸8 9
GetFolderPath
¸¸9 F
(
¸¸F G
Environment
¸¸G R
.
¸¸R S
SpecialFolder
¸¸S `
.
¸¸` a
ApplicationData
¸¸a p
)
¸¸p q
,
¸¸q r
$str
¸¸s 
)¸¸ Ä
;¸¸Ä Å
if
˝˝ 
(
˝˝ 
!
˝˝ 
File
˝˝ 
.
˝˝ 
Exists
˝˝ 
(
˝˝ 
Path
˝˝ !
.
˝˝! "
Combine
˝˝" )
(
˝˝) *

dirAppData
˝˝* 4
,
˝˝4 5
$str
˝˝6 F
)
˝˝F G
)
˝˝G H
)
˝˝H I
{
˛˛ 
	Directory
ˇˇ 
.
ˇˇ 
CreateDirectory
ˇˇ )
(
ˇˇ) *

dirAppData
ˇˇ* 4
)
ˇˇ4 5
;
ˇˇ5 6
File
ÄÄ 
.
ÄÄ 
WriteAllBytes
ÄÄ "
(
ÄÄ" #
Path
ÄÄ# '
.
ÄÄ' (
Combine
ÄÄ( /
(
ÄÄ/ 0

dirAppData
ÄÄ0 :
,
ÄÄ: ;
$str
ÄÄ< Q
)
ÄÄQ R
,
ÄÄR S
Comparer
ÄÄT \
.
ÄÄ\ ]
MeneesDiffUtils
ÄÄ] l
)
ÄÄl m
;
ÄÄm n
File
ÅÅ 
.
ÅÅ 
WriteAllBytes
ÅÅ "
(
ÅÅ" #
Path
ÅÅ# '
.
ÅÅ' (
Combine
ÅÅ( /
(
ÅÅ/ 0

dirAppData
ÅÅ0 :
,
ÅÅ: ;
$str
ÅÅ< H
)
ÅÅH I
,
ÅÅI J
Comparer
ÅÅK S
.
ÅÅS T
Menees
ÅÅT Z
)
ÅÅZ [
;
ÅÅ[ \
File
ÇÇ 
.
ÇÇ 
WriteAllBytes
ÇÇ "
(
ÇÇ" #
Path
ÇÇ# '
.
ÇÇ' (
Combine
ÇÇ( /
(
ÇÇ/ 0

dirAppData
ÇÇ0 :
,
ÇÇ: ;
$str
ÇÇ< L
)
ÇÇL M
,
ÇÇM N
Comparer
ÇÇO W
.
ÇÇW X

DiffDotNet
ÇÇX b
)
ÇÇb c
;
ÇÇc d
}
ÉÉ 
Process
ÜÜ 
p
ÜÜ 
=
ÜÜ 
new
ÜÜ 
Process
ÜÜ #
(
ÜÜ# $
)
ÜÜ$ %
;
ÜÜ% &
p
áá 
.
áá 
	StartInfo
áá 
.
áá 
UseShellExecute
áá '
=
áá( )
false
áá* /
;
áá/ 0
p
ââ 
.
ââ 
	StartInfo
ââ 
.
ââ 
FileName
ââ  
=
ââ! "
Path
ââ# '
.
ââ' (
Combine
ââ( /
(
ââ/ 0

dirAppData
ââ0 :
,
ââ: ;
$str
ââ< L
)
ââL M
;
ââM N

IKBService
åå 
kbserv
åå 
=
åå 

UIServices
åå  *
.
åå* +
KB
åå+ -
;
åå- .
string
çç 
dir
çç 
=
çç 
$str
çç 
;
çç 
if
éé 
(
éé 
tipo
éé 
==
éé 
$str
éé 
)
éé 
{
èè 
dir
èè 
=
èè 
KBDoctorHelper
èè *
.
èè* +"
NvgComparerDirectory
èè+ ?
(
èè? @
kbserv
èè@ F
)
èèF G
;
èèG H
}
èèI J
if
êê 
(
êê 
tipo
êê 
==
êê 
$str
êê 
)
êê 
{
ëë 
dir
ëë 
=
ëë 
KBDoctorHelper
ëë *
.
ëë* +"
ObjComparerDirectory
ëë+ ?
(
ëë? @
kbserv
ëë@ F
)
ëëF G
;
ëëG H
}
ëëI J
string
îî 
d1
îî 
=
îî 
$str
îî 
;
îî 
string
ïï 
d2
ïï 
=
ïï 
$str
ïï 
;
ïï 
foreach
ññ 
(
ññ 
string
ññ 
d
ññ 
in
ññ  
	Directory
ññ! *
.
ññ* +
GetDirectories
ññ+ 9
(
ññ9 :
dir
ññ: =
,
ññ= >
$str
ññ? B
,
ññB C
SearchOption
ññD P
.
ññP Q
TopDirectoryOnly
ññQ a
)
ñña b
)
ññb c
{
óó 
d2
òò 
=
òò 
d1
òò 
;
òò 
d1
ôô 
=
ôô 
d
ôô 
;
ôô 
}
öö 
if
õõ 
(
õõ 
d2
õõ 
==
õõ 
$str
õõ 
||
õõ 
d1
õõ 
==
õõ !
$str
õõ" $
)
õõ$ %
{
úú 
string
ùù 
title
ùù 
=
ùù 
$str
ùù 9
;
ùù9 :
IOutputService
ûû 
output
ûû %
=
ûû& '
CommonServices
ûû( 6
.
ûû6 7
Output
ûû7 =
;
ûû= >
output
üü 
.
üü 
StartSection
üü #
(
üü# $
title
üü$ )
)
üü) *
;
üü* +
output
†† 
.
†† 
AddErrorLine
†† #
(
††# $
$str
††$ N
+
††O P
dir
††Q T
+
††U V
$str††W ä
)††ä ã
;††ã å
output
°° 
.
°° 

EndSection
°° !
(
°°! "
title
°°" '
,
°°' (
true
°°) -
)
°°- .
;
°°. /
}
££ 
else
§§ 
{
•• 
p
¶¶ 
.
¶¶ 
	StartInfo
¶¶ 
.
¶¶ 
	Arguments
¶¶ %
=
¶¶& '
d2
¶¶( *
+
¶¶+ ,
$str
¶¶- 0
+
¶¶1 2
d1
¶¶3 5
;
¶¶5 6
p
ßß 
.
ßß 
Start
ßß 
(
ßß 
)
ßß 
;
ßß 
}
®® 
}
©© 	
public
´´ 
static
´´ 
void
´´ 
KBInterfaces
´´ '
(
´´' (
)
´´( )
{
¨¨ 	

IKBService
≠≠ 
kbserv
≠≠ 
=
≠≠ 

UIServices
≠≠  *
.
≠≠* +
KB
≠≠+ -
;
≠≠- .
KBModel
ÆÆ 
design
ÆÆ 
=
ÆÆ 
kbserv
ÆÆ #
.
ÆÆ# $
CurrentModel
ÆÆ$ 0
;
ÆÆ0 1%
SpecificationListHelper
ØØ #
helper
ØØ$ *
=
ØØ+ ,
new
ØØ- 0%
SpecificationListHelper
ØØ1 H
(
ØØH I
design
ØØI O
.
ØØO P
Environment
ØØP [
.
ØØ[ \
TargetModel
ØØ\ g
)
ØØg h
;
ØØh i
string
±± 

outputFile
±± 
=
±± 
kbserv
±±  &
.
±±& '
	CurrentKB
±±' 0
.
±±0 1
UserDirectory
±±1 >
+
±±? @
$str
±±A _
;
±±_ `
if
≤≤ 
(
≤≤ 
File
≤≤ 
.
≤≤ 
Exists
≤≤ 
(
≤≤ 

outputFile
≤≤ &
)
≤≤& '
)
≤≤' (
{
≥≥ 
File
¥¥ 
.
¥¥ 
Delete
¥¥ 
(
¥¥ 

outputFile
¥¥ &
)
¥¥& '
;
¥¥' (
}
µµ 
string
∑∑ 
titulo
∑∑ 
=
∑∑ 
$str
∑∑ 6
;
∑∑6 7
IOutputService
∏∏ 
output
∏∏ !
=
∏∏" #
CommonServices
∏∏$ 2
.
∏∏2 3
Output
∏∏3 9
;
∏∏9 :
output
ππ 
.
ππ 
StartSection
ππ 
(
ππ  
titulo
ππ  &
)
ππ& '
;
ππ' (
KBDoctorXMLWriter
ºº 
writer
ºº $
=
ºº% &
new
ºº' *
KBDoctorXMLWriter
ºº+ <
(
ºº< =

outputFile
ºº= G
,
ººG H
Encoding
ººI Q
.
ººQ R
UTF8
ººR V
)
ººV W
;
ººW X
writer
ΩΩ 
.
ΩΩ 
	AddHeader
ΩΩ 
(
ΩΩ 
titulo
ΩΩ #
)
ΩΩ# $
;
ΩΩ$ %
writer
ææ 
.
ææ 
AddTableHeader
ææ !
(
ææ! "
new
ææ" %
string
ææ& ,
[
ææ, -
]
ææ- .
{
ææ/ 0
$str
ææ1 9
,
ææ9 :
$str
ææ; E
,
ææE F
$str
ææG M
,
ææM N
$str
ææO V
}
ææW X
)
ææX Y
;
ææY Z
foreach
¿¿ 
(
¿¿ 
KBObject
¿¿ 
obj
¿¿ !
in
¿¿" $
kbserv
¿¿% +
.
¿¿+ ,
CurrentModel
¿¿, 8
.
¿¿8 9
Objects
¿¿9 @
.
¿¿@ A
GetAll
¿¿A G
(
¿¿G H
)
¿¿H I
)
¿¿I J
{
¡¡ 
if
√√ 
(
√√ 
obj
√√ 
!=
√√ 
null
√√ 
)
√√  
{
ƒƒ 
output
≈≈ 
.
≈≈ 
AddLine
≈≈ "
(
≈≈" #
$str
≈≈# 0
+
≈≈1 2
obj
≈≈3 6
.
≈≈6 7
Name
≈≈7 ;
)
≈≈; <
;
≈≈< =
IEnumerable
«« 
<
««  
int
««  #
>
««# $
generatorTypes
««% 3
=
««4 5
KbStats
««6 =
.
««= >!
GetObjectGenerators
««> Q
(
««Q R
obj
««R U
.
««U V
Key
««V Y
)
««Y Z
;
««Z [
string
…… 
objNamePrior
…… '
=
……( )
$str
……* ,
;
……, - 
KBObjectCollection
   &
objColl
  ' .
=
  / 0
new
  1 4 
KBObjectCollection
  5 G
(
  G H
)
  H I
;
  I J
string
ÀÀ 
tipo
ÀÀ 
=
ÀÀ  !
$str
ÀÀ" $
;
ÀÀ$ %
string
ÕÕ 
mainss
ÕÕ !
=
ÕÕ" #
$str
ÕÕ$ &
;
ÕÕ& '
foreach
–– 
(
–– 
EntityReference
–– ,
	reference
––- 6
in
––7 9
obj
––: =
.
––= >
GetReferences
––> K
(
––K L
)
––L M
)
––M N
{
—— 
KBObject
““  
objRef
““! '
=
““( )
KBObject
““* 2
.
““2 3
Get
““3 6
(
““6 7
obj
““7 :
.
““: ;
Model
““; @
,
““@ A
	reference
““B K
.
““K L
To
““L N
)
““N O
;
““O P
if
‘‘ 
(
‘‘ 
objRef
‘‘ "
!=
‘‘# %
null
‘‘& *
)
‘‘* +
{
’’ 
if
÷÷ 
(
÷÷  
objRef
÷÷  &
is
÷÷' )
ExternalObject
÷÷* 8
)
÷÷8 9
{
◊◊ 
tipo
ÿÿ  $
=
ÿÿ% &
$str
ÿÿ' 9
+
ÿÿ: ;
objRef
ÿÿ< B
.
ÿÿB C$
GetPropertyValueString
ÿÿC Y
(
ÿÿY Z
$str
ÿÿZ c
)
ÿÿc d
;
ÿÿd e
writer
ŸŸ  &
.
ŸŸ& '
AddTableData
ŸŸ' 3
(
ŸŸ3 4
new
ŸŸ4 7
string
ŸŸ8 >
[
ŸŸ> ?
]
ŸŸ? @
{
ŸŸA B
	Functions
ŸŸC L
.
ŸŸL M

linkObject
ŸŸM W
(
ŸŸW X
obj
ŸŸX [
)
ŸŸ[ \
,
ŸŸ\ ]
	Functions
ŸŸ^ g
.
ŸŸg h

linkObject
ŸŸh r
(
ŸŸr s
objRef
ŸŸs y
)
ŸŸy z
,
ŸŸz {
tipoŸŸ| Ä
,ŸŸÄ Å
mainssŸŸÇ à
}ŸŸâ ä
)ŸŸä ã
;ŸŸã å
}
⁄⁄ 
else
€€  
{
‹‹ 
if
››  "
(
››# $
objRef
››$ *
is
››+ -
MissingKBObject
››. =
)
››= >
{
ﬁﬁ  !
tipo
ﬂﬂ$ (
=
ﬂﬂ) *
$str
ﬂﬂ+ ;
;
ﬂﬂ; <
writer
‡‡$ *
.
‡‡* +
AddTableData
‡‡+ 7
(
‡‡7 8
new
‡‡8 ;
string
‡‡< B
[
‡‡B C
]
‡‡C D
{
‡‡E F
	Functions
‡‡G P
.
‡‡P Q

linkObject
‡‡Q [
(
‡‡[ \
obj
‡‡\ _
)
‡‡_ `
,
‡‡` a
	Functions
‡‡b k
.
‡‡k l

linkObject
‡‡l v
(
‡‡v w
objRef
‡‡w }
)
‡‡} ~
,
‡‡~ 
tipo‡‡Ä Ñ
,‡‡Ñ Ö
mainss‡‡Ü å
}‡‡ç é
)‡‡é è
;‡‡è ê
}
··  !
}
‚‚ 
}
‰‰ 
}
ÈÈ 
string
ÏÏ 
sourceWOComments
ÏÏ +
=
ÏÏ, -
	Functions
ÏÏ. 7
.
ÏÏ7 8
ExtractComments
ÏÏ8 G
(
ÏÏG H
	Functions
ÏÏH Q
.
ÏÏQ R
ObjectSourceUpper
ÏÏR c
(
ÏÏc d
obj
ÏÏd g
)
ÏÏg h
)
ÏÏh i
;
ÏÏi j
sourceWOComments
ÓÓ $
=
ÓÓ% &
sourceWOComments
ÓÓ' 7
.
ÓÓ7 8
Replace
ÓÓ8 ?
(
ÓÓ? @
$str
ÓÓ@ D
,
ÓÓD E
$str
ÓÓF I
)
ÓÓI J
;
ÓÓJ K%
AddLineKBInterfazSource
 +
(
+ ,
writer
, 2
,
2 3
obj
4 7
,
7 8
$str
9 A
,
A B
$str
C I
,
I J
sourceWOComments
K [
,
[ \
mainss
] c
)
c d
;
d e%
AddLineKBInterfazSource
ÒÒ +
(
ÒÒ+ ,
writer
ÒÒ, 2
,
ÒÒ2 3
obj
ÒÒ4 7
,
ÒÒ7 8
$str
ÒÒ9 @
,
ÒÒ@ A
$str
ÒÒB H
,
ÒÒH I
sourceWOComments
ÒÒJ Z
,
ÒÒZ [
mainss
ÒÒ\ b
)
ÒÒb c
;
ÒÒc d%
AddLineKBInterfazSource
ÚÚ +
(
ÚÚ+ ,
writer
ÚÚ, 2
,
ÚÚ2 3
obj
ÚÚ4 7
,
ÚÚ7 8
$str
ÚÚ9 B
,
ÚÚB C
$str
ÚÚD J
,
ÚÚJ K
sourceWOComments
ÚÚL \
,
ÚÚ\ ]
mainss
ÚÚ^ d
)
ÚÚd e
;
ÚÚe f%
AddLineKBInterfazSource
ÛÛ +
(
ÛÛ+ ,
writer
ÛÛ, 2
,
ÛÛ2 3
obj
ÛÛ4 7
,
ÛÛ7 8
$str
ÛÛ9 ?
,
ÛÛ? @
$str
ÛÛA G
,
ÛÛG H
sourceWOComments
ÛÛI Y
,
ÛÛY Z
mainss
ÛÛ[ a
)
ÛÛa b
;
ÛÛb c&
ObjectsVariablesExternal
ˆˆ ,
(
ˆˆ, -
obj
ˆˆ- 0
,
ˆˆ0 1
writer
ˆˆ2 8
,
ˆˆ8 9
mainss
ˆˆ: @
)
ˆˆ@ A
;
ˆˆA B
if
˜˜ 
(
˜˜ 
obj
˜˜ 
is
˜˜ 
Transaction
˜˜ *
||
˜˜+ -
obj
˜˜. 1
is
˜˜2 4
WebPanel
˜˜5 =
)
˜˜= >#
UserControlUsageCheck
¯¯ -
(
¯¯- .
obj
¯¯. 1
,
¯¯1 2
writer
¯¯3 9
,
¯¯9 :
mainss
¯¯; A
)
¯¯A B
;
¯¯B C
}
˙˙ 
}
˚˚ 
writer
˝˝ 
.
˝˝ 
	AddFooter
˝˝ 
(
˝˝ 
)
˝˝ 
;
˝˝ 
writer
˛˛ 
.
˛˛ 
Close
˛˛ 
(
˛˛ 
)
˛˛ 
;
˛˛ 
KBDoctorHelper
ÄÄ 
.
ÄÄ !
ShowKBDoctorResults
ÄÄ .
(
ÄÄ. /

outputFile
ÄÄ/ 9
)
ÄÄ9 :
;
ÄÄ: ;
bool
ÅÅ 
success
ÅÅ 
=
ÅÅ 
true
ÅÅ 
;
ÅÅ  
output
ÇÇ 
.
ÇÇ 

EndSection
ÇÇ 
(
ÇÇ 
titulo
ÇÇ $
,
ÇÇ$ %
success
ÇÇ& -
)
ÇÇ- .
;
ÇÇ. /
}
ÑÑ 	
private
ÜÜ 
static
ÜÜ 
void
ÜÜ %
AddLineKBInterfazSource
ÜÜ 3
(
ÜÜ3 4
KBDoctorXMLWriter
ÜÜ4 E
writer
ÜÜF L
,
ÜÜL M
KBObject
ÜÜN V
obj
ÜÜW Z
,
ÜÜZ [
string
ÜÜ\ b
texto
ÜÜc h
,
ÜÜh i
string
ÜÜj p
tipo
ÜÜq u
,
ÜÜu v
string
ÜÜw }
sourceWOCommentsÜÜ~ é
,ÜÜé è
stringÜÜê ñ
mainssÜÜó ù
)ÜÜù û
{
áá 	
string
àà 
callTree
àà 
=
àà 
$str
àà  
;
àà  ! 
KBObjectCollection
ââ 
objColl
ââ &
=
ââ' (
new
ââ) , 
KBObjectCollection
ââ- ?
(
ââ? @
)
ââ@ A
;
ââA B
if
ãã 
(
ãã 
sourceWOComments
ãã  
.
ãã  !
Contains
ãã! )
(
ãã) *
texto
ãã* /
)
ãã/ 0
)
ãã0 1
{
åå 
writer
çç 
.
çç 
AddTableData
çç #
(
çç# $
new
çç$ '
string
çç( .
[
çç. /
]
çç/ 0
{
çç1 2
	Functions
çç3 <
.
çç< =

linkObject
çç= G
(
ççG H
obj
ççH K
)
ççK L
,
ççL M
$str
ççN P
,
ççP Q
$str
ççR X
+
ççY Z
texto
çç[ `
,
çç` a
mainss
ççb h
}
ççi j
)
ççj k
;
ççk l
}
éé 
}
êê 	
public
íí 
static
íí 
void
íí &
ObjectsVariablesExternal
íí 3
(
íí3 4
KBObject
íí4 <
obj
íí= @
,
íí@ A
KBDoctorXMLWriter
ííB S
writer
ííT Z
,
ííZ [
string
íí\ b
mainss
ííc i
)
ííi j
{
ìì 	

IKBService
îî 
kbserv
îî 
=
îî 

UIServices
îî  *
.
îî* +
KB
îî+ -
;
îî- .
string
ññ 
type
ññ 
=
ññ 
$str
ññ 
;
ññ 
string
óó 
name
óó 
=
óó 
$str
óó 
;
óó 
string
òò 
	variables
òò 
=
òò 
$str
òò !
;
òò! "
if
õõ 
(
õõ 
ObjectsHelper
õõ 
.
õõ 
isGenerated
õõ )
(
õõ) *
obj
õõ* -
)
õõ- .
)
õõ. /
{
úú 
VariablesPart
ùù 
vp
ùù  
=
ùù! "
obj
ùù# &
.
ùù& '
Parts
ùù' ,
.
ùù, -
Get
ùù- 0
<
ùù0 1
VariablesPart
ùù1 >
>
ùù> ?
(
ùù? @
)
ùù@ A
;
ùùA B
if
ûû 
(
ûû 
vp
ûû 
!=
ûû 
null
ûû 
)
ûû 
{
üü 
foreach
†† 
(
†† 
Variable
†† %
v
††& '
in
††( *
vp
††+ -
.
††- .
	Variables
††. 7
)
††7 8
{
°° 
type
¢¢ 
=
¢¢ 
v
¢¢  
.
¢¢  !
Type
¢¢! %
.
¢¢% &
ToString
¢¢& .
(
¢¢. /
)
¢¢/ 0
;
¢¢0 1
name
££ 
=
££ 
v
££  
.
££  !
Name
££! %
;
££% &
if
•• 
(
•• 
(
•• 
!
•• 
v
•• 
.
••  

IsStandard
••  *
)
••* +
&&
••, .
(
••/ 0
v
••0 1
.
••1 2
AttributeBasedOn
••2 B
==
••C E
null
••F J
)
••J K
&&
••L N
(
••O P
type
••P T
==
••U W
$str
••X f
)
••f g
)
••g h
{
¶¶ 
	variables
ßß %
+=
ßß& (
name
ßß) -
+
ßß. /
$str
ßß0 3
+
ßß4 5
type
ßß6 :
+
ßß; <
$str
ßß= @
;
ßß@ A
string
®® "
txtDimensions
®®# 0
=
®®1 2
v
®®3 4
.
®®4 5
GetPropertyValue
®®5 E
<
®®E F
string
®®F L
>
®®L M
(
®®M N

Properties
®®N X
.
®®X Y
ATT
®®Y \
.
®®\ ]
DataTypeString
®®] k
)
®®k l
;
®®l m
writer
©© "
.
©©" #
AddTableData
©©# /
(
©©/ 0
new
©©0 3
string
©©4 :
[
©©: ;
]
©©; <
{
©©= >
	Functions
©©? H
.
©©H I

linkObject
©©I S
(
©©S T
obj
©©T W
)
©©W X
,
©©X Y
name
©©Z ^
,
©©^ _
$str
©©` l
+
©©m n
txtDimensions
©©o |
,
©©| }
mainss©©~ Ñ
}©©Ö Ü
)©©Ü á
;©©á à
}
´´ 
}
ÆÆ 
}
∞∞ 
}
≤≤ 
}
∑∑ 	
public
∫∫ 
static
∫∫ 
void
∫∫ #
UserControlUsageCheck
∫∫ 0
(
∫∫0 1
KBObject
∫∫1 9
obj
∫∫: =
,
∫∫= >
KBDoctorXMLWriter
∫∫? P
writer
∫∫Q W
,
∫∫W X
string
∫∫Y _
mainss
∫∫` f
)
∫∫f g
{
ªª 	
Artech
ΩΩ 
.
ΩΩ 
Genexus
ΩΩ 
.
ΩΩ 
Common
ΩΩ !
.
ΩΩ! "
Parts
ΩΩ" '
.
ΩΩ' (
WebFormPart
ΩΩ( 3
webpart
ΩΩ4 ;
=
ΩΩ< =
obj
ΩΩ> A
.
ΩΩA B
Parts
ΩΩB G
.
ΩΩG H
Get
ΩΩH K
<
ΩΩK L
Artech
ΩΩL R
.
ΩΩR S
Genexus
ΩΩS Z
.
ΩΩZ [
Common
ΩΩ[ a
.
ΩΩa b
Parts
ΩΩb g
.
ΩΩg h
WebFormPart
ΩΩh s
>
ΩΩs t
(
ΩΩt u
)
ΩΩu v
;
ΩΩv w
if
øø 
(
øø 
webpart
øø 
!=
øø 
null
øø 
)
øø  
{
¿¿ 
foreach
¡¡ 
(
¡¡ 
Artech
¡¡ 
.
¡¡  
Genexus
¡¡  '
.
¡¡' (
Common
¡¡( .
.
¡¡. /
Parts
¡¡/ 4
.
¡¡4 5
WebForm
¡¡5 <
.
¡¡< =
IWebTag
¡¡= D
tag
¡¡E H
in
¡¡I K
Artech
¡¡L R
.
¡¡R S
Genexus
¡¡S Z
.
¡¡Z [
Common
¡¡[ a
.
¡¡a b
Parts
¡¡b g
.
¡¡g h
WebForm
¡¡h o
.
¡¡o p
WebFormHelper
¡¡p }
.
¡¡} ~
EnumerateWebTag¡¡~ ç
(¡¡ç é
webpart¡¡é ï
)¡¡ï ñ
)¡¡ñ ó
{
¬¬ 
if
√√ 
(
√√ 
tag
√√ 
.
√√ 
IsUserControl
√√ )
)
√√) *
{
ƒƒ 
string
≈≈ 
ucType
≈≈ %
=
≈≈& '
tag
≈≈( +
.
≈≈+ ,

Properties
≈≈, 6
.
≈≈6 7$
GetPropertyValueString
≈≈7 M
(
≈≈M N
$str
≈≈N _
)
≈≈_ `
;
≈≈` a
string
∆∆ 
ctrlName
∆∆ '
=
∆∆( )
tag
∆∆* -
.
∆∆- .

Properties
∆∆. 8
.
∆∆8 9$
GetPropertyValueString
∆∆9 O
(
∆∆O P
$str
∆∆P ]
)
∆∆] ^
;
∆∆^ _
writer
«« 
.
«« 
AddTableData
«« +
(
««+ ,
new
««, /
string
««0 6
[
««6 7
]
««7 8
{
««9 :
	Functions
««; D
.
««D E

linkObject
««E O
(
««O P
obj
««P S
)
««S T
,
««T U
ctrlName
««V ^
,
««^ _
$str
««` e
+
««f g
ucType
««h n
,
««n o
mainss
««p v
}
««w x
)
««x y
;
««y z
}
»» 
}
…… 
}
   
}
ÀÀ 	
}
–– 
}—— ä+
CC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\ReplaceDomain.cs
	namespace 	
Concepto
 
. 
Packages 
. 
KBDoctor $
{ 
public 

partial 
class 
ReplaceDomain &
:' (
Form) -
{ 
public 
ReplaceDomain 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "

labelError 
. 
Text 
= 
$str  
;  !
} 	
private 
void 
ReplaceDomain_Load '
(' (
object( .
sender/ 5
,5 6
	EventArgs7 @
eA B
)B C
{ 	
foreach 
( 
Domain 
d 
in  
Domain! '
.' (
GetAll( .
(. /

UIServices/ 9
.9 :
KB: <
.< =
CurrentModel= I
)I J
)J K
{ "
comboBoxOriginalDomain   &
.  & '
Items  ' ,
.  , -
Add  - 0
(  0 1
d  1 2
.  2 3
Name  3 7
)  7 8
;  8 9
comboBoxUnifiy!! 
.!! 
Items!! $
.!!$ %
Add!!% (
(!!( )
d!!) *
.!!* +
Name!!+ /
)!!/ 0
;!!0 1
}"" "
comboBoxOriginalDomain$$ "
.$$" #
Sorted$$# )
=$$* +
true$$, 0
;$$0 1
comboBoxUnifiy%% 
.%% 
Sorted%% !
=%%" #
true%%$ (
;%%( )
}'' 	
private++ 
void++ 
button1_Click++ "
(++" #
object++# )
sender++* 0
,++0 1
	EventArgs++2 ;
e++< =
)++= >
{,, 	
string.. 
originalDomainName.. %
=..& '"
comboBoxOriginalDomain..( >
...> ?
SelectedItem..? K
...K L
ToString..L T
(..T U
)..U V
;..V W
string// 
UnifyDomainName// "
=//# $
comboBoxUnifiy//% 3
.//3 4
SelectedItem//4 @
.//@ A
ToString//A I
(//I J
)//J K
;//K L
if00 
(00 
originalDomainName00 "
==00# %
$str00& (
||00) +
UnifyDomainName00, ;
==00< >
$str00? A
)00A B
{11 

labelError22 
.22 
Text22 
=22  !
$str22" F
;22F G
}33 
else44 
{55 

labelError66 
.66 
Text66 
=66  !
$str66" $
;66$ %
this77 
.77 
Close77 
(77 
)77 
;77 
return88 
;88 
}99 
}<< 	
private@@ 
void@@ 5
)comboBoxOriginalName_SelectedIndexChanged@@ >
(@@> ?
object@@? E
sender@@F L
,@@L M
	EventArgs@@N W
e@@X Y
)@@Y Z
{AA 	
DomainBB 
odBB 
=BB 
	FunctionsBB !
.BB! "
DomainByNameBB" .
(BB. /"
comboBoxOriginalDomainBB/ E
.BBE F
SelectedItemBBF R
.BBR S
ToStringBBS [
(BB[ \
)BB\ ]
)BB] ^
;BB^ _
ifDD 
(DD 
odDD 
!=DD 
nullDD 
)DD 
{EE 
comboBoxUnifiyFF 
.FF 
ItemsFF $
.FF$ %
ClearFF% *
(FF* +
)FF+ ,
;FF, -
foreachGG 
(GG 
DomainGG 
d2GG  "
inGG# %
DomainGG& ,
.GG, -
GetAllGG- 3
(GG3 4

UIServicesGG4 >
.GG> ?
KBGG? A
.GGA B
CurrentModelGGB N
)GGN O
)GGO P
{II 
ifJJ 
(JJ 
(JJ 
odJJ 
!=JJ 
d2JJ !
)JJ! "
&&JJ# %
(JJ& '
odJJ' )
.JJ) *
TypeJJ* .
==JJ/ 1
d2JJ2 4
.JJ4 5
TypeJJ5 9
)JJ9 :
&&JJ; =
(JJ> ?
odJJ? A
.JJA B
LengthJJB H
==JJI K
d2JJL N
.JJN O
LengthJJO U
)JJU V
)JJV W
{KK 
comboBoxUnifiyLL &
.LL& '
ItemsLL' ,
.LL, -
AddLL- 0
(LL0 1
d2LL1 3
.LL3 4
NameLL4 8
)LL8 9
;LL9 :
}MM 
}NN 
}OO 
}PP 	
publicRR 
stringRR 
originalDomainNameRR %
{RR& '
getRR( +
{RR, -
returnRR. 4"
comboBoxOriginalDomainRR5 K
.RRK L
SelectedItemRRL X
.RRX Y
ToStringRRY a
(RRa b
)RRb c
;RRc d
}RRe f
}RRg h
publicSS 
stringSS 
destDomainNameSS !
{SS" #
getSS$ '
{SS( )
returnSS* 0
comboBoxUnifiySS1 ?
.SS? @
SelectedItemSS@ L
.SSL M
ToStringSSM U
(SSU V
)SSV W
;SSW X
}SSY Z
}SS[ \
}TT 
}UU ñ
AC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\ThemeHelper.cs
	namespace 	
Concepto
 
. 
Packages 
. 
KBDoctor $
{ 
class 	
ThemeHelper
 
{ 
public 
static 
void '
ObjectsWithVarNotBasedOnAtt 6
(6 7
)7 8
{ 	

IKBService 
kbserv 
= 

UIServices  *
.* +
KB+ -
;- .
string 
title 
= 
$str [
;[ \
string 

outputFile 
= 
	Functions  )
.) *
CreateOutputFile* :
(: ;
kbserv; A
,A B
titleC H
)H I
;I J
IOutputService 
output !
=" #
CommonServices$ 2
.2 3
Output3 9
;9 :
output   
.   
StartSection   
(    
title    %
)  % &
;  & '
KBDoctorXMLWriter"" 
writer"" $
=""% &
new""' *
KBDoctorXMLWriter""+ <
(""< =

outputFile""= G
,""G H
Encoding""I Q
.""Q R
UTF8""R V
)""V W
;""W X
writer## 
.## 
	AddHeader## 
(## 
title## "
)##" #
;### $
writer$$ 
.$$ 
AddTableHeader$$ !
($$! "
new$$" %
string$$& ,
[$$, -
]$$- .
{$$/ 0
$str$$1 7
,$$7 8
$str$$9 ?
,$$? @
$str$$A K
,$$K L
$str$$M X
,$$X Y
$str$$Z b
}$$c d
)$$d e
;$$e f
foreach(( 
((( 
KBObject(( 
obj(( !
in((" $
kbserv((% +
.((+ ,
CurrentModel((, 8
.((8 9
Objects((9 @
.((@ A
GetAll((A G
(((G H
)((H I
)((I J
{)) 
output++ 
.++ 
AddLine++ 
(++ 
$str++ ,
+++- .
obj++/ 2
.++2 3
Name++3 7
)++7 8
;++8 9
if,, 
(,, 
(,, 
obj,, 
is,, 
Transaction,, '
),,' (
||,,) +
(,,, -
obj,,- 0
is,,1 3
WebPanel,,4 <
),,< =
),,= >
{-- 
WebFormPart.. 
webForm..  '
=..( )
obj..* -
...- .
Parts... 3
...3 4
Get..4 7
<..7 8
WebFormPart..8 C
>..C D
(..D E
)..E F
;..F G
foreach// 
(// 
IWebTag// $
current//% ,
in//- /
WebFormHelper//0 =
.//= >
EnumerateWebTag//> M
(//M N
webForm//N U
)//U V
)//V W
{00 
output11 
.11 
AddLine11 &
(11& '
$str11' 4
+115 6
obj117 :
.11: ;
Name11; ?
+11@ A
$str11B E
)11F G
;11G H
}22 
}44 
}66 
}pp 	
}rr 
}ss û√	
CC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\CleanKBHelper.cs
	namespace## 	
Concepto##
 
.## 
Packages## 
.## 
KBDoctor## $
{$$ 
static%% 

class%% 
CleanKBHelper%% 
{&& 
public(( 
static(( 
void(( #
CleanKBAsMuchAsPossible(( 2
(((2 3
)((3 4
{)) 	

IKBService** 
kbserv** 
=** 

UIServices**  *
.*** +
KB**+ -
;**- .
IOutputService++ 
output++ !
=++" #
CommonServices++$ 2
.++2 3
Output++3 9
;++9 :
string,, 
mensaje,, 
=,, 
$str	,, á
;
,,á à
DialogResult-- 
dr-- 
=-- 

MessageBox-- (
.--( )
Show--) -
(--- .
mensaje--. 5
,--5 6
$str--7 A
,--A B
MessageBoxButtons--C T
.--T U
YesNo--U Z
,--Z [
MessageBoxIcon--\ j
.--j k
Question--k s
)--s t
;--t u
if.. 
(.. 
dr.. 
==.. 
DialogResult.. "
..." #
Yes..# &
)..& '
{// 
ObjectsHelper00 
.00 
CleanVarsNotUsed00 .
(00. /
)00/ 0
;000 1
CleanKBHelper11 
.11 '
RemoveAttributeWithoutTable11 9
(119 :
)11: ;
;11; <
ObjectsHelper22 
.22 
Unreachables22 *
(22* +
)22+ ,
;22, -

KBCategory44 
UnreachableCategory44 .
=44/ 0

KBCategory441 ;
.44; <
Get44< ?
(44? @
kbserv44@ F
.44F G
CurrentModel44G S
,44S T
$str44U k
)44k l
;44l m
foreach55 
(55 
KBObject55 !
obj55" %
in55& (
UnreachableCategory55) <
.55< =

AllMembers55= G
)55G H
{66 
CleanObject77 
(77  
obj77  #
,77# $
output77% +
)77+ ,
;77, -
}88 $
ProcessObjectsInCategory:: (
(::( )
output::) /
,::/ 0
UnreachableCategory::1 D
)::D E
;::E F
output;; 
.;; 
AddLine;; 
(;; 
$str;; '
);;' (
;;;( )
}== 
}>> 	
private@@ 
static@@ 
void@@ $
ProcessObjectsInCategory@@ 4
(@@4 5
IOutputService@@5 C
output@@D J
,@@J K

KBCategory@@L V
Category@@W _
)@@_ `
{AA 	
boolBB 
stayBB 
=BB 
trueBB 
;BB 
intCC 
pasadaCC 
=CC 
$numCC 
;CC 
intDD 
borradosDD 
=DD 
$numDD 
;DD 
doEE 
{FF 
outputGG 
.GG 
AddLineGG 
(GG 
$strGG -
+GG. /
pasadaGG0 6
.GG6 7
ToStringGG7 ?
(GG? @
)GG@ A
+GGB C
$strGGD Y
+GGZ [
borradosGG\ d
.GGd e
ToStringGGe m
(GGm n
)GGn o
)GGo p
;GGp q
stayHH 
=HH 
falseHH 
;HH 
foreachJJ 
(JJ 
KBObjectJJ !
objJJ" %
inJJ& (
CategoryJJ) 1
.JJ1 2

AllMembersJJ2 <
)JJ< =
{KK 
ifLL 
(LL 
(LL 
objLL 
isLL 
TransactionLL  +
)LL+ ,
||LL- /
(LL0 1
objLL1 4
isLL5 7
TableLL8 =
)LL= >
||LL? A
(LLB C
objLLC F
isLLG I
ImageLLJ O
)LLO P
||LLQ S
(LLT U
objLLU X
isLLY [
ArtechLL\ b
.LLb c
GenexusLLc j
.LLj k
CommonLLk q
.LLq r
ObjectsLLr y
.LLy z
GroupLLz 
)	LL Ä
||
LLÅ É
(
LLÑ Ö
obj
LLÖ à
is
LLâ ã
DataView
LLå î
)
LLî ï
)
LLï ñ
{MM 
outputNN 
.NN 
AddLineNN &
(NN& '
$strNN' 2
+NN3 4
objNN5 8
.NN8 9
NameNN9 =
)NN= >
;NN> ?
}PP 
elseQQ 
{RR 
trySS 
{TT 
objUU 
.UU  
DeleteUU  &
(UU& '
)UU' (
;UU( )
outputVV "
.VV" #
AddLineVV# *
(VV* +
$strVV+ 8
+VV9 :
objVV; >
.VV> ?
NameVV? C
)VVC D
;VVD E
stayWW  
=WW! "
trueWW# '
;WW' (
borradosXX $
+=XX% '
$numXX( )
;XX) *
}YY 
catchZZ 
{[[ 
output\\ "
.\\" #
AddLine\\# *
(\\* +
$str\\+ B
+\\C D
obj\\E H
.\\H I
Name\\I M
)\\M N
;\\N O
}^^ 
}`` 
}bb 
pasadaff 
+=ff 
$numff 
;ff 
}gg 
whilegg 
(gg 
staygg 
)gg 
;gg 
}hh 	
publicjj 
staticjj 
voidjj 
CleanObjectjj &
(jj& '
KBObjectjj' /
objjj0 3
,jj3 4
IOutputServicejj5 C
outputjjD J
)jjJ K
{kk 	
intll 
totalvarremovedll 
=ll  !
$numll" #
;ll# $
outputmm 
.mm 
AddLinemm 
(mm 
$strmm -
+mm. /
objmm0 3
.mm3 4
Namemm4 8
)mm8 9
;mm9 :
ifnn 
(nn 
objnn 
isnn 
Transactionnn "
)nn" #
{oo "
CleanKBObjectVariablespp &
(pp& '
objpp' *
)pp* +
;pp+ ,
CleanAllRulesqq 
(qq 
objqq !
)qq! "
;qq" #
CleanAllWebFormrr 
(rr  
objrr  #
)rr# $
;rr$ %
CleanAllWInFormss 
(ss  
objss  #
)ss# $
;ss$ %
CleanAllEventstt 
(tt 
objtt "
)tt" #
;tt# $
CleanAllVarsuu 
(uu 
objuu  
)uu  !
;uu! "
objvv 
.vv 
SetPropertyValuevv $
(vv$ %

Propertiesvv% /
.vv/ 0
TRNvv0 3
.vv3 4

MasterPagevv4 >
,vv> ?
WebPanelReferencevv@ Q
.vvQ R
NoneRefvvR Y
)vvY Z
;vvZ [
}xx 
ifzz 
(zz 
objzz 
iszz 
	Procedurezz  
)zz  !
{{{ 
CleanAllRules|| 
(|| 
obj|| !
)||! "
;||" #!
CleanAllProcedurePart}} %
(}}% &
obj}}& )
)}}) *
;}}* +
CleanAllConditions "
(" #
obj# &
)& '
;' (
CleanAllVars
ÄÄ 
(
ÄÄ 
obj
ÄÄ  
)
ÄÄ  !
;
ÄÄ! "
}
ÅÅ 
if
ÇÇ 
(
ÇÇ 
obj
ÇÇ 
is
ÇÇ 
WebPanel
ÇÇ 
)
ÇÇ  
{
ÉÉ 
CleanAllRules
ÑÑ 
(
ÑÑ 
obj
ÑÑ !
)
ÑÑ! "
;
ÑÑ" #
CleanAllWebForm
ÖÖ 
(
ÖÖ  
obj
ÖÖ  #
)
ÖÖ# $
;
ÖÖ$ %
CleanAllEvents
ÜÜ 
(
ÜÜ 
obj
ÜÜ "
)
ÜÜ" #
;
ÜÜ# $ 
CleanAllConditions
áá "
(
áá" #
obj
áá# &
)
áá& '
;
áá' (
CleanAllVars
àà 
(
àà 
obj
àà  
)
àà  !
;
àà! "
}
ââ 
if
ää 
(
ää 
obj
ää 
is
ää 
	WorkPanel
ää  
)
ää  !
{
ãã 
CleanAllRules
åå 
(
åå 
obj
åå !
)
åå! "
;
åå" #
CleanAllWInForm
çç 
(
çç  
obj
çç  #
)
çç# $
;
çç$ %
CleanAllEvents
éé 
(
éé 
obj
éé "
)
éé" #
;
éé# $ 
CleanAllConditions
èè "
(
èè" #
obj
èè# &
)
èè& '
;
èè' (
CleanAllVars
êê 
(
êê 
obj
êê  
)
êê  !
;
êê! "
}
íí 
try
îî 
{
ïï 
obj
óó 
.
óó 
Save
óó 
(
óó 
)
óó 
;
óó 
}
òò 
catch
ôô 
(
ôô 
	Exception
ôô 
e
ôô 
)
ôô 
{
öö 
output
õõ 
.
õõ 
AddLine
õõ 
(
õõ 
$str
õõ -
+
õõ. /
obj
õõ0 3
.
õõ3 4
Name
õõ4 8
+
õõ9 :
$str
õõ; G
+
õõH I
e
õõJ K
.
õõK L
Message
õõL S
+
õõT U
$str
õõV Z
+
õõ[ \
e
õõ] ^
.
õõ^ _

StackTrace
õõ_ i
)
õõi j
;
õõj k
}
úú 
}
ùù 	
private
üü 
static
üü 
void
üü 
CleanAllWebForm
üü +
(
üü+ ,
KBObject
üü, 4
obj
üü5 8
)
üü8 9
{
†† 	
List
¢¢ 
<
¢¢ 
KBObjectPart
¢¢ 
>
¢¢ 
parts
¢¢ $
=
¢¢% &
new
¢¢' *
List
¢¢+ /
<
¢¢/ 0
KBObjectPart
¢¢0 <
>
¢¢< =
(
¢¢= >
)
¢¢> ?
{
¢¢@ A
obj
¢¢B E
.
¢¢E F
Parts
¢¢F K
[
¢¢K L
typeof
¢¢L R
(
¢¢R S
WebFormPart
¢¢S ^
)
¢¢^ _
.
¢¢_ `
GUID
¢¢` d
]
¢¢d e
}
¢¢f g
;
¢¢g h
parts
££ 
.
££ 
ForEach
££ 
(
££ 
part
££ 
=>
££ !
{
§§ 
if
•• 
(
•• 
part
•• 
.
•• 
Default
••  
.
••  !!
CanCalculateDefault
••! 4
(
••4 5
)
••5 6
)
••6 7
part
¶¶ 
.
¶¶ 
Default
¶¶  
.
¶¶  ! 
SilentSetIsDefault
¶¶! 3
(
¶¶3 4
true
¶¶4 8
)
¶¶8 9
;
¶¶9 :
}
ßß 
)
®® 
;
®® 
}
™™ 	
private
¨¨ 
static
¨¨ 
void
¨¨ 
CleanAllWInForm
¨¨ +
(
¨¨+ ,
KBObject
¨¨, 4
obj
¨¨5 8
)
¨¨8 9
{
≠≠ 	
List
ÆÆ 
<
ÆÆ 
KBObjectPart
ÆÆ 
>
ÆÆ 
parts
ÆÆ $
=
ÆÆ% &
new
ÆÆ' *
List
ÆÆ+ /
<
ÆÆ/ 0
KBObjectPart
ÆÆ0 <
>
ÆÆ< =
(
ÆÆ= >
)
ÆÆ> ?
{
ÆÆ@ A
obj
ÆÆB E
.
ÆÆE F
Parts
ÆÆF K
[
ÆÆK L
typeof
ÆÆL R
(
ÆÆR S
WinFormPart
ÆÆS ^
)
ÆÆ^ _
.
ÆÆ_ `
GUID
ÆÆ` d
]
ÆÆd e
}
ÆÆf g
;
ÆÆg h
parts
ØØ 
.
ØØ 
ForEach
ØØ 
(
ØØ 
part
ØØ 
=>
ØØ !
{
∞∞ 
if
±± 
(
±± 
part
±± 
.
±± 
Default
±±  
.
±±  !!
CanCalculateDefault
±±! 4
(
±±4 5
)
±±5 6
)
±±6 7
part
≤≤ 
.
≤≤ 
Default
≤≤  
.
≤≤  ! 
SilentSetIsDefault
≤≤! 3
(
≤≤3 4
true
≤≤4 8
)
≤≤8 9
;
≤≤9 :
}
≥≥ 
)
¥¥ 
;
¥¥ 
}
∂∂ 	
private
∑∑ 
static
∑∑ 
void
∑∑ 
CleanAllEvents
∑∑ *
(
∑∑* +
KBObject
∑∑+ 3
obj
∑∑4 7
)
∑∑7 8
{
∏∏ 	

EventsPart
ππ 
evPart
ππ 
=
ππ 
obj
ππ  #
.
ππ# $
Parts
ππ$ )
.
ππ) *
Get
ππ* -
<
ππ- .

EventsPart
ππ. 8
>
ππ8 9
(
ππ9 :
)
ππ: ;
;
ππ; <
evPart
∫∫ 
.
∫∫ 
Source
∫∫ 
=
∫∫ 
$str
∫∫ 
;
∫∫ 
}
ªª 	
private
ΩΩ 
static
ΩΩ 
void
ΩΩ #
CleanAllProcedurePart
ΩΩ 1
(
ΩΩ1 2
KBObject
ΩΩ2 :
obj
ΩΩ; >
)
ΩΩ> ?
{
ææ 	
ProcedurePart
øø 
procPart
øø "
=
øø# $
obj
øø% (
.
øø( )
Parts
øø) .
.
øø. /
Get
øø/ 2
<
øø2 3
ProcedurePart
øø3 @
>
øø@ A
(
øøA B
)
øøB C
;
øøC D
procPart
¿¿ 
.
¿¿ 
Source
¿¿ 
=
¿¿ 
$str
¿¿  
;
¿¿  !
}
¡¡ 	
private
√√ 
static
√√ 
void
√√  
CleanAllConditions
√√ .
(
√√. /
KBObject
√√/ 7
obj
√√8 ;
)
√√; <
{
ƒƒ 	
ConditionsPart
≈≈ 
cndPart
≈≈ "
=
≈≈# $
obj
≈≈% (
.
≈≈( )
Parts
≈≈) .
.
≈≈. /
Get
≈≈/ 2
<
≈≈2 3
ConditionsPart
≈≈3 A
>
≈≈A B
(
≈≈B C
)
≈≈C D
;
≈≈D E
cndPart
∆∆ 
.
∆∆ 
Source
∆∆ 
=
∆∆ 
$str
∆∆ 
;
∆∆  
}
«« 	
private
…… 
static
…… 
void
…… 
CleanAllRules
…… )
(
……) *
KBObject
……* 2
obj
……3 6
)
……6 7
{
   	
	RulesPart
ÀÀ 
	rulesPart
ÀÀ 
=
ÀÀ  !
obj
ÀÀ" %
.
ÀÀ% &
Parts
ÀÀ& +
.
ÀÀ+ ,
Get
ÀÀ, /
<
ÀÀ/ 0
	RulesPart
ÀÀ0 9
>
ÀÀ9 :
(
ÀÀ: ;
)
ÀÀ; <
;
ÀÀ< =
	rulesPart
ÃÃ 
.
ÃÃ 
Source
ÃÃ 
=
ÃÃ 
$str
ÃÃ !
;
ÃÃ! "
}
ÕÕ 	
public
ŒŒ 
static
ŒŒ 
void
ŒŒ 
CleanAllVars
ŒŒ '
(
ŒŒ' (
KBObject
ŒŒ( 0
obj
ŒŒ1 4
)
ŒŒ4 5
{
œœ 	
	ArrayList
–– 
idVasrBorrar
–– "
=
––# $
new
––% (
	ArrayList
––) 2
(
––2 3
)
––3 4
;
––4 5
VariablesPart
““ 
vp
““ 
=
““ 
obj
““ "
.
““" #
Parts
““# (
.
““( )
Get
““) ,
<
““, -
VariablesPart
““- :
>
““: ;
(
““; <
)
““< =
;
““= >
	ArrayList
”” 
	variables
”” 
=
””  !
new
””" %
	ArrayList
””& /
(
””/ 0
)
””0 1
;
””1 2
foreach
‘‘ 
(
‘‘ 
Variable
‘‘ 
v
‘‘ 
in
‘‘  "
vp
‘‘# %
.
‘‘% &
	Variables
‘‘& /
)
‘‘/ 0
{
’’ 
if
÷÷ 
(
÷÷ 
!
÷÷ 
v
÷÷ 
.
÷÷ 

IsStandard
÷÷ !
)
÷÷! "
	variables
◊◊ 
.
◊◊ 
Add
◊◊ !
(
◊◊! "
v
◊◊" #
)
◊◊# $
;
◊◊$ %
}
ÿÿ 
foreach
ŸŸ 
(
ŸŸ 
Variable
ŸŸ 
v
ŸŸ 
in
ŸŸ  "
	variables
ŸŸ# ,
)
ŸŸ, -
{
⁄⁄ 
vp
€€ 
.
€€ 
Remove
€€ 
(
€€ 
v
€€ 
)
€€ 
;
€€ 
}
‹‹ 
}
ﬁﬁ 	
public
„„ 
static
„„ 
void
„„ 
CleanObjects
„„ '
(
„„' (
)
„„( )
{
‰‰ 	

IKBService
ÊÊ 
kB
ÊÊ 
=
ÊÊ 

UIServices
ÊÊ &
.
ÊÊ& '
KB
ÊÊ' )
;
ÊÊ) *
if
ÁÁ 
(
ÁÁ 
kB
ÁÁ 
!=
ÁÁ 
null
ÁÁ 
&&
ÁÁ 
kB
ÁÁ  
.
ÁÁ  !
CurrentModel
ÁÁ! -
!=
ÁÁ. 0
null
ÁÁ1 5
)
ÁÁ5 6
{
ËË !
SelectObjectOptions
ÈÈ # 
selectObjectOption
ÈÈ$ 6
=
ÈÈ7 8
new
ÈÈ9 <!
SelectObjectOptions
ÈÈ= P
(
ÈÈP Q
)
ÈÈQ R
;
ÈÈR S 
selectObjectOption
ÍÍ "
.
ÍÍ" #
MultipleSelection
ÍÍ# 4
=
ÍÍ5 6
true
ÍÍ7 ;
;
ÍÍ; <
KBModel
ÎÎ 
kbModel
ÎÎ 
=
ÎÎ  !

UIServices
ÎÎ" ,
.
ÎÎ, -
KB
ÎÎ- /
.
ÎÎ/ 0
CurrentModel
ÎÎ0 <
;
ÎÎ< =
IOutputService
ÏÏ 
output
ÏÏ %
=
ÏÏ& '
CommonServices
ÏÏ( 6
.
ÏÏ6 7
Output
ÏÏ7 =
;
ÏÏ= >
output
ÌÌ 
.
ÌÌ 
StartSection
ÌÌ #
(
ÌÌ# $
$str
ÌÌ$ 6
)
ÌÌ6 7
;
ÌÌ7 8 
selectObjectOption
ÔÔ "
.
ÔÔ" #
ObjectTypes
ÔÔ# .
.
ÔÔ. /
Add
ÔÔ/ 2
(
ÔÔ2 3 
KBObjectDescriptor
ÔÔ3 E
.
ÔÔE F
Get
ÔÔF I
<
ÔÔI J
Transaction
ÔÔJ U
>
ÔÔU V
(
ÔÔV W
)
ÔÔW X
)
ÔÔX Y
;
ÔÔY Z 
selectObjectOption
 "
.
" #
ObjectTypes
# .
.
. /
Add
/ 2
(
2 3 
KBObjectDescriptor
3 E
.
E F
Get
F I
<
I J
	Procedure
J S
>
S T
(
T U
)
U V
)
V W
;
W X 
selectObjectOption
ÒÒ "
.
ÒÒ" #
ObjectTypes
ÒÒ# .
.
ÒÒ. /
Add
ÒÒ/ 2
(
ÒÒ2 3 
KBObjectDescriptor
ÒÒ3 E
.
ÒÒE F
Get
ÒÒF I
<
ÒÒI J
	WorkPanel
ÒÒJ S
>
ÒÒS T
(
ÒÒT U
)
ÒÒU V
)
ÒÒV W
;
ÒÒW X 
selectObjectOption
ÚÚ "
.
ÚÚ" #
ObjectTypes
ÚÚ# .
.
ÚÚ. /
Add
ÚÚ/ 2
(
ÚÚ2 3 
KBObjectDescriptor
ÚÚ3 E
.
ÚÚE F
Get
ÚÚF I
<
ÚÚI J
WebPanel
ÚÚJ R
>
ÚÚR S
(
ÚÚS T
)
ÚÚT U
)
ÚÚU V
;
ÚÚV W
foreach
ÛÛ 
(
ÛÛ 
KBObject
ÛÛ !
obj
ÛÛ" %
in
ÛÛ& (

UIServices
ÛÛ) 3
.
ÛÛ3 4 
SelectObjectDialog
ÛÛ4 F
.
ÛÛF G
SelectObjects
ÛÛG T
(
ÛÛT U 
selectObjectOption
ÛÛU g
)
ÛÛg h
)
ÛÛh i
{
ÙÙ 
CleanObject
ıı 
(
ıı  
obj
ıı  #
,
ıı# $
output
ıı% +
)
ıı+ ,
;
ıı, -
}
ˆˆ 
output
˜˜ 
.
˜˜ 

EndSection
˜˜ !
(
˜˜! "
$str
˜˜" 4
,
˜˜4 5
true
˜˜6 :
)
˜˜: ;
;
˜˜; <
}
¯¯ 
}
˘˘ 	
public
˝˝ 
static
˝˝ 
void
˝˝ 
ClassNotInTheme
˝˝ *
(
˝˝* +
)
˝˝+ ,
{
˛˛ 	

IKBService
ˇˇ 
kbserv
ˇˇ 
=
ˇˇ 

UIServices
ˇˇ  *
.
ˇˇ* +
KB
ˇˇ+ -
;
ˇˇ- .
string
ÅÅ 
title
ÅÅ 
=
ÅÅ 
$str
ÅÅ :
;
ÅÅ: ;
string
ÇÇ 

outputFile
ÇÇ 
=
ÇÇ 
	Functions
ÇÇ  )
.
ÇÇ) *
CreateOutputFile
ÇÇ* :
(
ÇÇ: ;
kbserv
ÇÇ; A
,
ÇÇA B
title
ÇÇC H
)
ÇÇH I
;
ÇÇI J
IOutputService
ÖÖ 
output
ÖÖ !
=
ÖÖ" #
CommonServices
ÖÖ$ 2
.
ÖÖ2 3
Output
ÖÖ3 9
;
ÖÖ9 :
output
ÜÜ 
.
ÜÜ 
StartSection
ÜÜ 
(
ÜÜ  
title
ÜÜ  %
)
ÜÜ% &
;
ÜÜ& '
KBDoctorXMLWriter
àà 
writer
àà $
=
àà% &
new
àà' *
KBDoctorXMLWriter
àà+ <
(
àà< =

outputFile
àà= G
,
ààG H
Encoding
ààI Q
.
ààQ R
UTF8
ààR V
)
ààV W
;
ààW X
writer
ââ 
.
ââ 
	AddHeader
ââ 
(
ââ 
title
ââ "
)
ââ" #
;
ââ# $
writer
ää 
.
ää 
AddTableHeader
ää !
(
ää! "
new
ää" %
string
ää& ,
[
ää, -
]
ää- .
{
ää/ 0
$str
ää1 9
,
ää9 :
$str
ää; B
,
ääB C
$str
ääD K
}
ääL M
)
ääM N
;
ääN O
StringCollection
çç 
ThemeClasses
çç )
=
çç* +
new
çç, /
StringCollection
çç0 @
(
çç@ A
)
ççA B
;
ççB C
LoadThemeClasses
éé 
(
éé 
kbserv
éé #
,
éé# $
output
éé% +
,
éé+ ,
ThemeClasses
éé- 9
)
éé9 :
;
éé: ;
StringCollection
êê 
UsedClasses
êê (
=
êê) *
new
êê+ .
StringCollection
êê/ ?
(
êê? @
)
êê@ A
;
êêA B%
LoadAndCheckUsedClasses
íí #
(
íí# $
kbserv
íí$ *
,
íí* +
output
íí, 2
,
íí2 3
UsedClasses
íí4 ?
,
íí? @
ThemeClasses
ííA M
,
ííM N
writer
ííO U
)
ííU V
;
ííV W
foreach
ïï 
(
ïï 
string
ïï 
sd
ïï 
in
ïï !
UsedClasses
ïï" -
)
ïï- .
{
ññ 
if
óó 
(
óó 
!
óó 
ThemeClasses
óó !
.
óó! "
Contains
óó" *
(
óó* +
sd
óó+ -
)
óó- .
)
óó. /
{
òò 
writer
ôô 
.
ôô 
AddTableData
ôô '
(
ôô' (
new
ôô( +
string
ôô, 2
[
ôô2 3
]
ôô3 4
{
ôô5 6
$str
ôô7 9
,
ôô9 :
sd
ôô; =
,
ôô= >
$str
ôô? _
}
ôô` a
)
ôôa b
;
ôôb c
output
öö 
.
öö 
AddLine
öö "
(
öö" #
$str
öö# D
+
ööE F
sd
ööG I
)
ööI J
;
ööJ K
}
úú 
else
ùù 
{
ûû 
ThemeClasses
üü  
.
üü  !
Remove
üü! '
(
üü' (
sd
üü( *
)
üü* +
;
üü+ ,
}
†† 
}
°° 
writer
§§ 
.
§§ 
AddTableData
§§ 
(
§§  
new
§§  #
string
§§$ *
[
§§* +
]
§§+ ,
{
§§- .
$str
§§/ B
,
§§B C
$str
§§D T
,
§§T U
$str
§§V [
}
§§\ ]
)
§§] ^
;
§§^ _
foreach
•• 
(
•• 
string
•• 
ss
•• 
in
•• !
ThemeClasses
••" .
)
••. /
if
¶¶ 
(
¶¶ 
!
¶¶ 
UsedClasses
¶¶  
.
¶¶  !
Contains
¶¶! )
(
¶¶) *
ss
¶¶* ,
)
¶¶, -
)
¶¶- .
{
ßß 
writer
®® 
.
®® 
AddTableData
®® '
(
®®' (
new
®®( +
string
®®, 2
[
®®2 3
]
®®3 4
{
®®5 6
$str
®®7 9
,
®®9 :
ss
®®; =
,
®®= >
$str
®®? U
}
®®V W
)
®®W X
;
®®X Y
output
©© 
.
©© 
AddLine
©© "
(
©©" #
$str
©©# I
+
©©J K
ss
©©L N
)
©©N O
;
©©O P
}
™™ 
writer
´´ 
.
´´ 
AddTableData
´´ 
(
´´  
new
´´  #
string
´´$ *
[
´´* +
]
´´+ ,
{
´´- .
$str
´´/ 8
,
´´8 9
$str
´´: M
,
´´M N
$str
´´O _
}
´´` a
)
´´a b
;
´´b c
writer
¨¨ 
.
¨¨ 
	AddFooter
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
writer
≠≠ 
.
≠≠ 
Close
≠≠ 
(
≠≠ 
)
≠≠ 
;
≠≠ 
output
ÆÆ 
.
ÆÆ 

EndSection
ÆÆ 
(
ÆÆ 
title
ÆÆ #
,
ÆÆ# $
true
ÆÆ% )
)
ÆÆ) *
;
ÆÆ* +
KBDoctorHelper
∞∞ 
.
∞∞ !
ShowKBDoctorResults
∞∞ .
(
∞∞. /

outputFile
∞∞/ 9
)
∞∞9 :
;
∞∞: ;
}
≤≤ 	
private
µµ 
static
µµ 
bool
µµ :
,VeoSiClassEstaContenidaEnAlgunaClassDelTheme
µµ H
(
µµH I
StringCollection
µµI Y
ThemeClasses
µµZ f
,
µµf g
string
µµh n
miclstr
µµo v
)
µµv w
{
∂∂ 	
bool
∑∑  
classEstaEnElTheme
∑∑ #
=
∑∑$ %
false
∑∑& +
;
∑∑+ ,
try
∏∏ 
{
ππ 
foreach
ªª 
(
ªª 
string
ªª 
thmcls
ªª  &
in
ªª' )
ThemeClasses
ªª* 6
)
ªª6 7
{
ºº 
if
ΩΩ 
(
ΩΩ 
thmcls
ΩΩ 
.
ΩΩ 
Contains
ΩΩ '
(
ΩΩ' (
miclstr
ΩΩ( /
)
ΩΩ/ 0
)
ΩΩ0 1
{
ææ  
classEstaEnElTheme
øø *
=
øø+ ,
true
øø- 1
;
øø1 2
break
¿¿ 
;
¿¿ 
}
¡¡ 
}
¬¬ 
}
√√ 
catch
ƒƒ 
(
ƒƒ 
	Exception
ƒƒ 
e
ƒƒ 
)
ƒƒ 
{
ƒƒ  !
Console
ƒƒ" )
.
ƒƒ) *
	WriteLine
ƒƒ* 3
(
ƒƒ3 4
)
ƒƒ4 5
;
ƒƒ5 6
}
ƒƒ7 8
;
ƒƒ8 9
return
≈≈  
classEstaEnElTheme
≈≈ %
;
≈≈% &
}
∆∆ 	
private
»» 
static
»» 
void
»» 
LoadThemeClasses
»» ,
(
»», -

IKBService
»»- 7
kbserv
»»8 >
,
»»> ?
IOutputService
»»@ N
output
»»O U
,
»»U V
StringCollection
»»W g
ThemeClasses
»»h t
)
»»t u
{
…… 	
foreach
   
(
   
Theme
   
thm
   
in
   !
Theme
  " '
.
  ' (
GetAll
  ( .
(
  . /
kbserv
  / 5
.
  5 6
CurrentModel
  6 B
)
  B C
)
  C D
{
ÀÀ 
output
ÃÃ 
.
ÃÃ 
AddLine
ÃÃ 
(
ÃÃ 
$str
ÃÃ 3
+
ÃÃ4 5
thm
ÃÃ6 9
.
ÃÃ9 :
Name
ÃÃ: >
)
ÃÃ> ?
;
ÃÃ? @
ThemeStylesPart
ÕÕ 
part
ÕÕ  $
=
ÕÕ% &
thm
ÕÕ' *
.
ÕÕ* +
Parts
ÕÕ+ 0
.
ÕÕ0 1
Get
ÕÕ1 4
<
ÕÕ4 5
ThemeStylesPart
ÕÕ5 D
>
ÕÕD E
(
ÕÕE F
)
ÕÕF G
;
ÕÕG H
foreach
ŒŒ 
(
ŒŒ 
Artech
ŒŒ 
.
ŒŒ  
Genexus
ŒŒ  '
.
ŒŒ' (
Common
ŒŒ( .
.
ŒŒ. /
Objects
ŒŒ/ 6
.
ŒŒ6 7
Themes
ŒŒ7 =
.
ŒŒ= >

ThemeStyle
ŒŒ> H
thmclass
ŒŒI Q
in
ŒŒR T
part
ŒŒU Y
.
ŒŒY Z
GetAllStyles
ŒŒZ f
(
ŒŒf g
)
ŒŒg h
)
ŒŒh i
{
œœ 
string
–– 
thmstr
–– !
=
––" #
thmclass
––$ ,
.
––, -
Name
––- 1
;
––1 2
if
—— 
(
—— 
!
—— 
ThemeClasses
—— %
.
——% &
Contains
——& .
(
——. /
thmstr
——/ 5
)
——5 6
&&
——7 9
(
——: ;
!
——; <
(
——< =
thmstr
——= C
.
——C D
Contains
——D L
(
——L M
$str
——M W
)
——W X
||
——Y [
thmstr
——\ b
.
——b c
Contains
——c k
(
——k l
$str
——l x
)
——x y
||
——z |
thmstr——} É
.——É Ñ
Contains——Ñ å
(——å ç
$str——ç õ
)——õ ú
)——ú ù
)——ù û
)——û ü
{
““ 
ThemeClasses
”” (
.
””( )
Add
””) ,
(
””, -
thmstr
””- 3
.
””3 4
ToLower
””4 ;
(
””; <
)
””< =
)
””= >
;
””> ?
}
‘‘ 
}
’’ 
}
÷÷ 
}
◊◊ 	
public
€€ 
static
€€ 
void
€€ 
AddINParmRule
€€ (
(
€€( )
)
€€) *
{
‹‹ 	

IKBService
ﬂﬂ 
kbserv
ﬂﬂ 
=
ﬂﬂ 

UIServices
ﬂﬂ  *
.
ﬂﬂ* +
KB
ﬂﬂ+ -
;
ﬂﬂ- .
IOutputService
‡‡ 
output
‡‡ !
=
‡‡" #
CommonServices
‡‡$ 2
.
‡‡2 3
Output
‡‡3 9
;
‡‡9 :
string
·· 
title
·· 
=
·· 
$str
·· >
;
··> ?
output
„„ 
.
„„ 
StartSection
„„ 
(
„„  
title
„„  %
)
„„% &
;
„„& '
string
‰‰ 

outputFile
‰‰ 
=
‰‰ 
	Functions
‰‰  )
.
‰‰) *
CreateOutputFile
‰‰* :
(
‰‰: ;
kbserv
‰‰; A
,
‰‰A B
title
‰‰C H
)
‰‰H I
;
‰‰I J
KBDoctorXMLWriter
ÁÁ 
writer
ÁÁ $
=
ÁÁ% &
new
ÁÁ' *
KBDoctorXMLWriter
ÁÁ+ <
(
ÁÁ< =

outputFile
ÁÁ= G
,
ÁÁG H
Encoding
ÁÁI Q
.
ÁÁQ R
UTF8
ÁÁR V
)
ÁÁV W
;
ÁÁW X
writer
ËË 
.
ËË 
	AddHeader
ËË 
(
ËË 
title
ËË "
)
ËË" #
;
ËË# $
writer
ÈÈ 
.
ÈÈ 
AddTableHeader
ÈÈ !
(
ÈÈ! "
new
ÈÈ" %
string
ÈÈ& ,
[
ÈÈ, -
]
ÈÈ- .
{
ÈÈ/ 0
$str
ÈÈ1 9
,
ÈÈ9 :
$str
ÈÈ; H
,
ÈÈH I
$str
ÈÈJ V
}
ÈÈX Y
)
ÈÈY Z
;
ÈÈZ [
int
ÍÍ 
cantObjChanged
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #!
SelectObjectOptions
ÏÏ  
selectObjectOption
ÏÏ  2
=
ÏÏ3 4
new
ÏÏ5 8!
SelectObjectOptions
ÏÏ9 L
(
ÏÏL M
)
ÏÏM N
;
ÏÏN O 
selectObjectOption
ÌÌ 
.
ÌÌ 
MultipleSelection
ÌÌ 0
=
ÌÌ1 2
true
ÌÌ3 7
;
ÌÌ7 8 
selectObjectOption
ÓÓ 
.
ÓÓ 
ObjectTypes
ÓÓ *
.
ÓÓ* +
Add
ÓÓ+ .
(
ÓÓ. / 
KBObjectDescriptor
ÓÓ/ A
.
ÓÓA B
Get
ÓÓB E
<
ÓÓE F
	Procedure
ÓÓF O
>
ÓÓO P
(
ÓÓP Q
)
ÓÓQ R
)
ÓÓR S
;
ÓÓS T
foreach
 
(
 
KBObject
 
obj
 !
in
" $

UIServices
% /
.
/ 0 
SelectObjectDialog
0 B
.
B C
SelectObjects
C P
(
P Q 
selectObjectOption
Q c
)
c d
)
d e
{
ÒÒ 
string
ÚÚ 
oldParm
ÚÚ 
=
ÚÚ  
	Functions
ÚÚ! *
.
ÚÚ* +
ExtractRuleParm
ÚÚ+ :
(
ÚÚ: ;
obj
ÚÚ; >
)
ÚÚ> ?
;
ÚÚ? @
string
ÛÛ 
newParm
ÛÛ 
=
ÛÛ  "
ChangeRuleParmWithIN
ÛÛ" 6
(
ÛÛ6 7
obj
ÛÛ7 :
)
ÛÛ: ;
;
ÛÛ; <
if
ÙÙ 
(
ÙÙ 
newParm
ÙÙ 
!=
ÙÙ 
$str
ÙÙ !
)
ÙÙ! "
{
ıı 
cantObjChanged
ˆˆ "
+=
ˆˆ# %
$num
ˆˆ& '
;
ˆˆ' (
PrintNewRuleParm
˜˜ $
(
˜˜$ %
writer
˜˜% +
,
˜˜+ ,
obj
˜˜- 0
,
˜˜0 1
oldParm
˜˜2 9
,
˜˜9 :
newParm
˜˜; B
)
˜˜B C
;
˜˜C D
}
¯¯ 
}
˙˙ 
writer
¸¸ 
.
¸¸ 
	AddFooter
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
writer
˝˝ 
.
˝˝ 
Close
˝˝ 
(
˝˝ 
)
˝˝ 
;
˝˝ 
bool
ˇˇ 
success
ˇˇ 
=
ˇˇ 
true
ˇˇ 
;
ˇˇ  
output
ÄÄ 
.
ÄÄ 

EndSection
ÄÄ 
(
ÄÄ 
title
ÄÄ #
,
ÄÄ# $
success
ÄÄ% ,
)
ÄÄ, -
;
ÄÄ- .
output
ÅÅ 
.
ÅÅ 
AddLine
ÅÅ 
(
ÅÅ 
$str
ÅÅ ,
+
ÅÅ- .
cantObjChanged
ÅÅ/ =
.
ÅÅ= >
ToString
ÅÅ> F
(
ÅÅF G
)
ÅÅG H
)
ÅÅH I
;
ÅÅI J
KBDoctorHelper
ÉÉ 
.
ÉÉ !
ShowKBDoctorResults
ÉÉ .
(
ÉÉ. /

outputFile
ÉÉ/ 9
)
ÉÉ9 :
;
ÉÉ: ;
}
ÖÖ 	
private
áá 
static
áá 
void
áá 
PrintNewRuleParm
áá ,
(
áá, -
KBDoctorXMLWriter
áá- >
writer
áá? E
,
ááE F
KBObject
ááG O
obj
ááP S
,
ááS T
string
ááU [
oldParm
áá\ c
,
áác d
string
ááe k
newParm
áál s
)
áás t
{
àà 	
ICallableObject
ââ 
callableObject
ââ *
=
ââ+ ,
obj
ââ- 0
as
ââ1 3
ICallableObject
ââ4 C
;
ââC D
if
ãã 
(
ãã 
callableObject
ãã 
!=
ãã !
null
ãã" &
)
ãã& '
{
åå 
foreach
çç 
(
çç 
	Signature
çç "
	signature
çç# ,
in
çç- /
callableObject
çç0 >
.
çç> ?
GetSignatures
çç? L
(
ççL M
)
ççM N
)
ççN O
{
éé 
foreach
èè 
(
èè 
	Parameter
èè &
parm
èè' +
in
èè, .
	signature
èè/ 8
.
èè8 9

Parameters
èè9 C
)
èèC D
{
êê 
string
ëë 
nameParm
ëë '
=
ëë( )
parm
ëë* .
.
ëë. /
IsAttribute
ëë/ :
?
ëë; <
parm
ëë= A
.
ëëA B
Name
ëëB F
:
ëëG H
$str
ëëI L
+
ëëM N
parm
ëëO S
.
ëëS T
Name
ëëT X
;
ëëX Y 
ListParmReferences
íí *
(
íí* +
obj
íí+ .
,
íí. /
nameParm
íí0 8
,
íí8 9
writer
íí: @
)
íí@ A
;
ííA B
}
ìì 
}
îî 
}
ïï 
writer
ññ 
.
ññ 
AddTableData
ññ 
(
ññ  
new
ññ  #
string
ññ$ *
[
ññ* +
]
ññ+ ,
{
ññ- .
	Functions
ññ/ 8
.
ññ8 9

linkObject
ññ9 C
(
ññC D
obj
ññD G
)
ññG H
,
ññH I
oldParm
ññJ Q
,
ññQ R
$str
ññS Y
}
ññZ [
)
ññ[ \
;
ññ\ ]
writer
óó 
.
óó 
AddTableData
óó 
(
óó  
new
óó  #
string
óó$ *
[
óó* +
]
óó+ ,
{
óó- .
$str
óó/ 1
,
óó1 2
newParm
óó3 :
,
óó: ;
$str
óó< C
}
óóD E
)
óóE F
;
óóF G
writer
òò 
.
òò 
AddTableData
òò 
(
òò  
new
òò  #
string
òò$ *
[
òò* +
]
òò+ ,
{
òò- .
$str
òò/ 7
,
òò7 8
$str
òò9 A
,
òòA B
$str
òòC L
}
òòM N
)
òòN O
;
òòO P
}
ôô 	
public
õõ 
static
õõ 
void
õõ ,
ListTableAttributesUsingDomain
õõ 9
(
õõ9 :
)
õõ: ;
{
úú 	

IKBService
üü 
kbserv
üü 
=
üü 

UIServices
üü  *
.
üü* +
KB
üü+ -
;
üü- .
IOutputService
†† 
output
†† !
=
††" #
CommonServices
††$ 2
.
††2 3
Output
††3 9
;
††9 :
string
°° 
title
°° 
=
°° 
$str
°° 8
;
°°8 9
output
££ 
.
££ 
StartSection
££ 
(
££  
title
££  %
)
££% &
;
££& '
string
§§ 

outputFile
§§ 
=
§§ 
	Functions
§§  )
.
§§) *
CreateOutputFile
§§* :
(
§§: ;
kbserv
§§; A
,
§§A B
title
§§C H
)
§§H I
;
§§I J
KBDoctorXMLWriter
ßß 
writer
ßß $
=
ßß% &
new
ßß' *
KBDoctorXMLWriter
ßß+ <
(
ßß< =

outputFile
ßß= G
,
ßßG H
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
)
ßßV W
;
ßßW X
writer
®® 
.
®® 
	AddHeader
®® 
(
®® 
title
®® "
)
®®" #
;
®®# $
writer
©© 
.
©© 
AddTableHeader
©© !
(
©©! "
new
©©" %
string
©©& ,
[
©©, -
]
©©- .
{
©©/ 0
$str
©©1 9
,
©©9 :
$str
©©; B
,
©©B C
$str
©©D Q
,
©©Q R
$str
©©S ^
,
©©_ `
$str
©©` m
}
©©n o
)
©©o p
;
©©p q
int
™™ 
cantObjChanged
™™ 
=
™™  
$num
™™! "
;
™™" #!
SelectObjectOptions
¨¨  
selectObjectOption
¨¨  2
=
¨¨3 4
new
¨¨5 8!
SelectObjectOptions
¨¨9 L
(
¨¨L M
)
¨¨M N
;
¨¨N O 
selectObjectOption
≠≠ 
.
≠≠ 
MultipleSelection
≠≠ 0
=
≠≠1 2
true
≠≠3 7
;
≠≠7 8 
selectObjectOption
ÆÆ 
.
ÆÆ 
ObjectTypes
ÆÆ *
.
ÆÆ* +
Add
ÆÆ+ .
(
ÆÆ. / 
KBObjectDescriptor
ÆÆ/ A
.
ÆÆA B
Get
ÆÆB E
<
ÆÆE F
Domain
ÆÆF L
>
ÆÆL M
(
ÆÆM N
)
ÆÆN O
)
ÆÆO P
;
ÆÆP Q
foreach
∞∞ 
(
∞∞ 
KBObject
∞∞ 
dom
∞∞ !
in
∞∞" $

UIServices
∞∞% /
.
∞∞/ 0 
SelectObjectDialog
∞∞0 B
.
∞∞B C
SelectObjects
∞∞C P
(
∞∞P Q 
selectObjectOption
∞∞Q c
)
∞∞c d
)
∞∞d e
{
±± 
foreach
≥≥ 
(
≥≥ 
EntityReference
≥≥ (
	reference
≥≥) 2
in
≥≥3 5
dom
≥≥6 9
.
≥≥9 :
GetReferencesTo
≥≥: I
(
≥≥I J
)
≥≥J K
)
≥≥K L
{
¥¥ 
KBObject
µµ 
att
µµ  
=
µµ! "
KBObject
µµ# +
.
µµ+ ,
Get
µµ, /
(
µµ/ 0
dom
µµ0 3
.
µµ3 4
Model
µµ4 9
,
µµ9 :
	reference
µµ; D
.
µµD E
From
µµE I
)
µµI J
;
µµJ K
if
∑∑ 
(
∑∑ 
(
∑∑ 
att
∑∑ 
!=
∑∑ 
null
∑∑  $
)
∑∑$ %
&&
∑∑& (
(
∑∑) *
att
∑∑* -
is
∑∑. 0
Artech
∑∑1 7
.
∑∑7 8
Genexus
∑∑8 ?
.
∑∑? @
Common
∑∑@ F
.
∑∑F G
Objects
∑∑G N
.
∑∑N O
	Attribute
∑∑O X
)
∑∑X Y
)
∑∑Y Z
{
∏∏ 
foreach
∫∫ 
(
∫∫  !
EntityReference
∫∫! 0

reference2
∫∫1 ;
in
∫∫< >
att
∫∫? B
.
∫∫B C
GetReferencesTo
∫∫C R
(
∫∫R S
)
∫∫S T
)
∫∫T U
{
ªª 
KBObject
ºº $
tbl
ºº% (
=
ºº) *
KBObject
ºº+ 3
.
ºº3 4
Get
ºº4 7
(
ºº7 8
att
ºº8 ;
.
ºº; <
Model
ºº< A
,
ººA B

reference2
ººC M
.
ººM N
From
ººN R
)
ººR S
;
ººS T
if
ææ 
(
ææ  
(
ææ  !
tbl
ææ! $
!=
ææ% '
null
ææ( ,
)
ææ, -
&&
ææ. 0
(
ææ1 2
tbl
ææ2 5
is
ææ6 8
Table
ææ9 >
)
ææ> ?
)
ææ? @
{
øø 
writer
¡¡  &
.
¡¡& '
AddTableData
¡¡' 3
(
¡¡3 4
new
¡¡4 7
string
¡¡8 >
[
¡¡> ?
]
¡¡? @
{
¡¡A B
	Functions
¡¡C L
.
¡¡L M

linkObject
¡¡M W
(
¡¡W X
dom
¡¡X [
)
¡¡[ \
,
¡¡\ ]
	Functions
¡¡^ g
.
¡¡g h

linkObject
¡¡h r
(
¡¡r s
tbl
¡¡s v
)
¡¡v w
,
¡¡w x
tbl
¡¡y |
.
¡¡| }
Description¡¡} à
,¡¡à â
	Functions¡¡ä ì
.¡¡ì î

linkObject¡¡î û
(¡¡û ü
att¡¡ü ¢
)¡¡¢ £
,¡¡£ §
att¡¡• ®
.¡¡® ©
Description¡¡© ¥
}¡¡µ ∂
)¡¡∂ ∑
;¡¡∑ ∏
}
¬¬ 
}
√√ 
}
ƒƒ 
}
«« 
}
ÀÀ 
writer
ÕÕ 
.
ÕÕ 
	AddFooter
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
writer
ŒŒ 
.
ŒŒ 
Close
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
bool
–– 
success
–– 
=
–– 
true
–– 
;
––  
KBDoctorHelper
““ 
.
““ !
ShowKBDoctorResults
““ .
(
““. /

outputFile
““/ 9
)
““9 :
;
““: ;
}
‘‘ 	
private
÷÷ 
static
÷÷ 
void
÷÷  
ListParmReferences
÷÷ .
(
÷÷. /
KBObject
÷÷/ 7
obj
÷÷8 ;
,
÷÷; <
string
÷÷= C
name
÷÷D H
,
÷÷H I
KBDoctorXMLWriter
÷÷J [
writer
÷÷\ b
)
÷÷b c
{
◊◊ 	
string
ÿÿ 
source
ÿÿ 
=
ÿÿ 
ObjectsHelper
ÿÿ )
.
ÿÿ) *
ObjectSource
ÿÿ* 6
(
ÿÿ6 7
obj
ÿÿ7 :
)
ÿÿ: ;
;
ÿÿ; <
source
ŸŸ 
=
ŸŸ 
	Functions
ŸŸ 
.
ŸŸ 
ExtractComments
ŸŸ .
(
ŸŸ. /
source
ŸŸ/ 5
)
ŸŸ5 6
;
ŸŸ6 7
string
⁄⁄ 
linesWithParmName
⁄⁄ $
=
⁄⁄% &
$str
⁄⁄' )
;
⁄⁄) *
using
€€ 
(
€€ 
StringReader
€€ 
reader
€€  &
=
€€' (
new
€€) ,
StringReader
€€- 9
(
€€9 :
source
€€: @
)
€€@ A
)
€€A B
{
‹‹ 
string
›› 
line
›› 
;
›› 
while
ﬁﬁ 
(
ﬁﬁ 
(
ﬁﬁ 
line
ﬁﬁ 
=
ﬁﬁ 
reader
ﬁﬁ %
.
ﬁﬁ% &
ReadLine
ﬁﬁ& .
(
ﬁﬁ. /
)
ﬁﬁ/ 0
)
ﬁﬁ0 1
!=
ﬁﬁ2 4
null
ﬁﬁ5 9
)
ﬁﬁ9 :
{
ﬂﬂ 
if
·· 
(
·· 
line
·· 
.
·· 
ToUpper
·· $
(
··$ %
)
··% &
.
··& '
Contains
··' /
(
··/ 0
name
··0 4
.
··4 5
ToUpper
··5 <
(
··< =
)
··= >
)
··> ?
)
··? @
{
‚‚ 
linesWithParmName
„„ )
+=
„„* ,
line
„„- 1
+
„„2 3
Environment
„„4 ?
.
„„? @
NewLine
„„@ G
+
„„H I
$str
„„J P
;
„„P Q
}
ÂÂ 
}
ÁÁ 
}
ÈÈ 
writer
ÍÍ 
.
ÍÍ 
AddTableData
ÍÍ 
(
ÍÍ  
new
ÍÍ  #
string
ÍÍ$ *
[
ÍÍ* +
]
ÍÍ+ ,
{
ÍÍ- .
	Functions
ÍÍ/ 8
.
ÍÍ8 9

linkObject
ÍÍ9 C
(
ÍÍC D
obj
ÍÍD G
)
ÍÍG H
,
ÍÍH I
name
ÍÍK O
,
ÍÍO P
linesWithParmName
ÍÍQ b
}
ÍÍc d
)
ÍÍd e
;
ÍÍe f
}
ÎÎ 	
public
ÌÌ 
static
ÌÌ 
string
ÌÌ "
ChangeRuleParmWithIN
ÌÌ 1
(
ÌÌ1 2
KBObject
ÌÌ2 :
obj
ÌÌ; >
)
ÌÌ> ?
{
ÓÓ 	
string
ÔÔ 
newParm
ÔÔ 
=
ÔÔ 
$str
ÔÔ 
;
ÔÔ 
string
 
oldRules
 
=
 
$str
  
;
  !
	RulesPart
ÒÒ 
	rulesPart
ÒÒ 
=
ÒÒ  !
obj
ÒÒ" %
.
ÒÒ% &
Parts
ÒÒ& +
.
ÒÒ+ ,
Get
ÒÒ, /
<
ÒÒ/ 0
	RulesPart
ÒÒ0 9
>
ÒÒ9 :
(
ÒÒ: ;
)
ÒÒ; <
;
ÒÒ< =
ICallableObject
ÛÛ 
callableObject
ÛÛ *
=
ÛÛ+ ,
obj
ÛÛ- 0
as
ÛÛ1 3
ICallableObject
ÛÛ4 C
;
ÛÛC D
if
ıı 
(
ıı 
callableObject
ıı 
!=
ıı !
null
ıı" &
)
ıı& '
{
ˆˆ 
foreach
˜˜ 
(
˜˜ 
	Signature
˜˜ "
	signature
˜˜# ,
in
˜˜- /
callableObject
˜˜0 >
.
˜˜> ?
GetSignatures
˜˜? L
(
˜˜L M
)
˜˜M N
)
˜˜N O
{
¯¯ 
Boolean
˘˘ 
	someInOut
˘˘ %
=
˘˘& '
false
˘˘( -
;
˘˘- .
foreach
˙˙ 
(
˙˙ 
	Parameter
˙˙ &
parm
˙˙' +
in
˙˙, .
	signature
˙˙/ 8
.
˙˙8 9

Parameters
˙˙9 C
)
˙˙C D
{
˚˚ 
if
¸¸ 
(
¸¸ 
parm
¸¸  
.
¸¸  !
Accessor
¸¸! )
.
¸¸) *
ToString
¸¸* 2
(
¸¸2 3
)
¸¸3 4
==
¸¸5 7
$str
¸¸8 D
)
¸¸D E
{
˝˝ 
	someInOut
˛˛ %
=
˛˛& '
true
˛˛( ,
;
˛˛, -
break
ˇˇ !
;
ˇˇ! "
}
ÄÄ 
}
ÅÅ 
if
ÇÇ 
(
ÇÇ 
	someInOut
ÇÇ !
&&
ÇÇ" $
(
ÇÇ% &
	rulesPart
ÇÇ& /
!=
ÇÇ0 2
null
ÇÇ3 7
)
ÇÇ7 8
)
ÇÇ8 9
{
ÉÉ 
Regex
ÑÑ 
myReg
ÑÑ #
=
ÑÑ$ %
new
ÑÑ& )
Regex
ÑÑ* /
(
ÑÑ/ 0
$str
ÑÑ0 6
,
ÑÑ6 7
RegexOptions
ÑÑ8 D
.
ÑÑD E
None
ÑÑE I
)
ÑÑI J
;
ÑÑJ K
Regex
ÖÖ 
myReg2
ÖÖ $
=
ÖÖ% &
new
ÖÖ' *
Regex
ÖÖ+ 0
(
ÖÖ0 1
$str
ÖÖ1 <
,
ÖÖ< =
RegexOptions
ÖÖ> J
.
ÖÖJ K

Singleline
ÖÖK U
)
ÖÖU V
;
ÖÖV W
Regex
ÜÜ 
paramReg
ÜÜ &
=
ÜÜ' (
new
ÜÜ) ,
Regex
ÜÜ- 2
(
ÜÜ2 3
$str
ÜÜ3 @
,
ÜÜ@ A
RegexOptions
ÜÜB N
.
ÜÜN O%
IgnorePatternWhitespace
ÜÜO f
|
ÜÜg h
RegexOptions
ÜÜi u
.
ÜÜu v
Compiled
ÜÜv ~
|ÜÜ Ä
RegexOptionsÜÜÅ ç
.ÜÜç é
	MultilineÜÜé ó
|ÜÜò ô
RegexOptionsÜÜö ¶
.ÜÜ¶ ß

IgnoreCaseÜÜß ±
)ÜÜ± ≤
;ÜÜ≤ ≥
string
áá 
reglas
áá %
=
áá& '
	rulesPart
áá( 1
.
áá1 2
Source
áá2 8
;
áá8 9
reglas
àà 
=
àà  
myReg
àà! &
.
àà& '
Replace
àà' .
(
àà. /
reglas
àà/ 5
,
àà5 6
$str
àà7 9
)
àà9 :
;
àà: ;
reglas
ââ 
=
ââ  
myReg2
ââ! '
.
ââ' (
Replace
ââ( /
(
ââ/ 0
reglas
ââ0 6
,
ââ6 7
$str
ââ8 :
)
ââ: ;
;
ââ; <
string
ãã 
reglas2
ãã &
=
ãã' (
reglas
ãã) /
.
ãã/ 0
Replace
ãã0 7
(
ãã7 8
Environment
ãã8 C
.
ããC D
NewLine
ããD K
,
ããK L
$str
ããM P
)
ããP Q
;
ããQ R
Match
çç 
match
çç #
=
çç$ %
paramReg
çç& .
.
çç. /
Match
çç/ 4
(
çç4 5
reglas2
çç5 <
)
çç< =
;
çç= >
if
êê 
(
êê 
match
êê !
!=
êê" $
null
êê% )
)
êê) *
{
ëë 
int
íí 

countparms
íí  *
=
íí+ ,
match
íí- 2
.
íí2 3
ToString
íí3 ;
(
íí; <
)
íí< =
.
íí= >
Split
íí> C
(
ííC D
new
ííD G
char
ííH L
[
ííL M
]
ííM N
{
ííO P
$char
ííQ T
}
ííU V
)
ííV W
.
ííW X
Length
ííX ^
;
íí^ _
int
ìì 
countsemicolon
ìì  .
=
ìì/ 0
match
ìì1 6
.
ìì6 7
ToString
ìì7 ?
(
ìì? @
)
ìì@ A
.
ììA B
Split
ììB G
(
ììG H
new
ììH K
char
ììL P
[
ììP Q
]
ììQ R
{
ììS T
$char
ììU X
}
ììY Z
)
ììZ [
.
ìì[ \
Length
ìì\ b
-
ììc d
$num
ììe f
;
ììf g
if
îî 
(
îî  

countparms
îî  *
!=
îî+ -
countsemicolon
îî. <
)
îî< =
{
ïï 
string
ññ  &
objNameLink
ññ' 2
=
ññ3 4
	Functions
ññ5 >
.
ññ> ?

linkObject
ññ? I
(
ññI J
obj
ññJ M
)
ññM N
;
ññN O
Regex
òò  %
coma
òò& *
=
òò+ ,
new
òò- 0
Regex
òò1 6
(
òò6 7
$str
òò7 :
,
òò: ;
RegexOptions
òò< H
.
òòH I
None
òòI M
)
òòM N
;
òòN O
newParm
ôô  '
=
ôô( )
coma
ôô* .
.
ôô. /
Replace
ôô/ 6
(
ôô6 7
match
ôô7 <
.
ôô< =
ToString
ôô= E
(
ôôE F
)
ôôF G
,
ôôG H
$str
ôôI P
)
ôôP Q
;
ôôQ R
Regex
õõ  %
inreg
õõ& +
=
õõ, -
new
õõ. 1
Regex
õõ2 7
(
õõ7 8
$str
õõ8 =
,
õõ= >
RegexOptions
õõ? K
.
õõK L

IgnoreCase
õõL V
)
õõV W
;
õõW X
newParm
úú  '
=
úú( )
inreg
úú* /
.
úú/ 0
Replace
úú0 7
(
úú7 8
newParm
úú8 ?
,
úú? @
$str
úúA F
)
úúF G
;
úúG H
Regex
ûû  %
outreg
ûû& ,
=
ûû- .
new
ûû/ 2
Regex
ûû3 8
(
ûû8 9
$str
ûû9 ?
,
ûû? @
RegexOptions
ûûA M
.
ûûM N

IgnoreCase
ûûN X
)
ûûX Y
;
ûûY Z
newParm
üü  '
=
üü( )
outreg
üü* 0
.
üü0 1
Replace
üü1 8
(
üü8 9
newParm
üü9 @
,
üü@ A
$str
üüB H
)
üüH I
;
üüI J
Regex
°°  %
IOreg
°°& +
=
°°, -
new
°°. 1
Regex
°°2 7
(
°°7 8
$str
°°8 @
,
°°@ A
RegexOptions
°°B N
.
°°N O

IgnoreCase
°°O Y
)
°°Y Z
;
°°Z [
newParm
¢¢  '
=
¢¢( )
IOreg
¢¢* /
.
¢¢/ 0
Replace
¢¢0 7
(
¢¢7 8
newParm
¢¢8 ?
,
¢¢? @
$str
¢¢A I
)
¢¢I J
;
¢¢J K
newParm
••  '
=
••( )
newParm
••* 1
.
••1 2
Replace
••2 9
(
••9 :
$str
••: =
,
••= >
$str
••? A
)
••A B
;
••B C
newParm
¶¶  '
=
¶¶( )
newParm
¶¶* 1
.
¶¶1 2
Replace
¶¶2 9
(
¶¶9 :
$str
¶¶: @
,
¶¶@ A
$str
¶¶B H
)
¶¶H I
;
¶¶I J
newParm
ßß  '
=
ßß( )
newParm
ßß* 1
.
ßß1 2
Replace
ßß2 9
(
ßß9 :
$str
ßß: @
,
ßß@ A
$str
ßßB H
)
ßßH I
;
ßßI J
newParm
®®  '
=
®®( )
newParm
®®* 1
.
®®1 2
Replace
®®2 9
(
®®9 :
$str
®®: B
,
®®B C
$str
®®D L
)
®®L M
;
®®M N
newParm
©©  '
=
©©( )
newParm
©©* 1
.
©©1 2
Replace
©©2 9
(
©©9 :
$str
©©: B
,
©©B C
$str
©©D L
)
©©L M
;
©©M N
newParm
™™  '
=
™™( )
newParm
™™* 1
.
™™1 2
Replace
™™2 9
(
™™9 :
$str
™™: ?
,
™™? @
$str
™™A F
)
™™F G
;
™™G H
newParm
´´  '
=
´´( )
newParm
´´* 1
.
´´1 2
Replace
´´2 9
(
´´9 :
$str
´´: ?
,
´´? @
$str
´´A F
)
´´F G
;
´´G H
newParm
≠≠  '
=
≠≠( )
newParm
≠≠* 1
.
≠≠1 2
Replace
≠≠2 9
(
≠≠9 :
$str
≠≠: >
,
≠≠> ?
$str
≠≠@ D
)
≠≠D E
;
≠≠E F
newParm
ØØ  '
=
ØØ( )
newParm
ØØ* 1
.
ØØ1 2
Replace
ØØ2 9
(
ØØ9 :
$str
ØØ: =
,
ØØ= >
$str
ØØ? E
)
ØØE F
;
ØØF G
newParm
±±  '
=
±±( )
newParm
±±* 1
.
±±1 2
Replace
±±2 9
(
±±9 :
$str
±±: B
,
±±B C
$str
±±D I
)
±±I J
;
±±J K
newParm
≤≤  '
=
≤≤( )
newParm
≤≤* 1
.
≤≤1 2
Replace
≤≤2 9
(
≤≤9 :
$str
≤≤: C
,
≤≤C D
$str
≤≤E K
)
≤≤K L
;
≤≤L M
newParm
≥≥  '
=
≥≥( )
newParm
≥≥* 1
.
≥≥1 2
Replace
≥≥2 9
(
≥≥9 :
$str
≥≥: E
,
≥≥E F
$str
≥≥G O
)
≥≥O P
;
≥≥P Q
newParm
¥¥  '
=
¥¥( )
newParm
¥¥* 1
.
¥¥1 2
Replace
¥¥2 9
(
¥¥9 :
$str
¥¥: >
,
¥¥> ?
$str
¥¥@ D
)
¥¥D E
;
¥¥E F
newParm
µµ  '
=
µµ( )
newParm
µµ* 1
+
µµ2 3
$str
µµ4 7
;
µµ7 8
}
∂∂ 
}
∑∑ 
}
∏∏ 
}
ππ 
}
∫∫ 
return
ºº 
newParm
ºº 
;
ºº 
}
ΩΩ 	
public
øø 
static
øø 
void
øø 
SaveObjectNewParm
øø ,
(
øø, -
IOutputService
øø- ;
output
øø< B
,
øøB C
KBObject
øøD L
obj
øøM P
,
øøP Q
string
øøR X
oldParm
øøY `
,
øø` a
string
øøb h
newParm
øøi p
)
øøp q
{
¿¿ 	
	RulesPart
¬¬ 
rulPart
¬¬ 
=
¬¬ 
obj
¬¬  #
.
¬¬# $
Parts
¬¬$ )
.
¬¬) *
Get
¬¬* -
<
¬¬- .
	RulesPart
¬¬. 7
>
¬¬7 8
(
¬¬8 9
)
¬¬9 :
;
¬¬: ;
string
ƒƒ 
newRules
ƒƒ 
=
ƒƒ 
$str
ƒƒ  
;
ƒƒ  !
try
≈≈ 
{
≈≈ 
newParm
∆∆ 
=
∆∆ 
newParm
∆∆ !
.
∆∆! "
Replace
∆∆" )
(
∆∆) *
$str
∆∆* -
,
∆∆- .
$str
∆∆/ 2
)
∆∆2 3
;
∆∆3 4
newRules
«« 
=
«« 
rulPart
«« "
.
««" #
Source
««# )
.
««) *
Replace
««* 1
(
««1 2
oldParm
««2 9
,
««9 :
newParm
««; B
)
««B C
;
««C D
rulPart
»» 
.
»» 
Source
»» 
=
»»  
newRules
»»! )
;
»») *
}
   
catch
ÀÀ 
(
ÀÀ 
	Exception
ÀÀ  
e
ÀÀ! "
)
ÀÀ" #
{
ÀÀ$ %
output
ÀÀ& ,
.
ÀÀ, -
AddLine
ÀÀ- 4
(
ÀÀ4 5
e
ÀÀ5 6
.
ÀÀ6 7
Message
ÀÀ7 >
)
ÀÀ> ?
;
ÀÀ? @
}
ÀÀA B
;
ÀÀB C
try
ŒŒ 
{
œœ 
obj
–– 
.
–– 
Save
–– 
(
–– 
)
–– 
;
–– 
}
—— 
catch
““ 
(
““ 
	Exception
““ 
e
““ 
)
““ 
{
”” 
output
‘‘ 
.
‘‘ 
AddLine
‘‘ 
(
‘‘ 
$str
‘‘ .
+
‘‘/ 0
obj
‘‘1 4
.
‘‘4 5
Name
‘‘5 9
+
‘‘: ;
$str
‘‘< M
+
‘‘N O
newParm
‘‘P W
+
‘‘X Y
$str
‘‘Z ]
+
‘‘^ _
e
‘‘` a
.
‘‘a b
Message
‘‘b i
)
‘‘i j
;
‘‘j k
}
’’ 
}
÷÷ 	
internal
ÿÿ 
static
ÿÿ 
void
ÿÿ 
RenameVariables
ÿÿ ,
(
ÿÿ, -
)
ÿÿ- .
{
ŸŸ 	

IKBService
⁄⁄ 
kbserv
⁄⁄ 
=
⁄⁄ 

UIServices
⁄⁄  *
.
⁄⁄* +
KB
⁄⁄+ -
;
⁄⁄- .
string
€€ 
title
€€ 
=
€€ 
$str
€€ [
;
€€[ \
string
‹‹ 

outputFile
‹‹ 
=
‹‹ 
	Functions
‹‹  )
.
‹‹) *
CreateOutputFile
‹‹* :
(
‹‹: ;
kbserv
‹‹; A
,
‹‹A B
title
‹‹C H
)
‹‹H I
;
‹‹I J
IOutputService
ﬂﬂ 
output
ﬂﬂ !
=
ﬂﬂ" #
CommonServices
ﬂﬂ$ 2
.
ﬂﬂ2 3
Output
ﬂﬂ3 9
;
ﬂﬂ9 :
output
‡‡ 
.
‡‡ 
StartSection
‡‡ 
(
‡‡  
title
‡‡  %
)
‡‡% &
;
‡‡& '
KBDoctorXMLWriter
‚‚ 
writer
‚‚ $
=
‚‚% &
new
‚‚' *
KBDoctorXMLWriter
‚‚+ <
(
‚‚< =

outputFile
‚‚= G
,
‚‚G H
Encoding
‚‚I Q
.
‚‚Q R
UTF8
‚‚R V
)
‚‚V W
;
‚‚W X
writer
„„ 
.
„„ 
	AddHeader
„„ 
(
„„ 
title
„„ "
)
„„" #
;
„„# $
writer
‰‰ 
.
‰‰ 
AddTableHeader
‰‰ !
(
‰‰! "
new
‰‰" %
string
‰‰& ,
[
‰‰, -
]
‰‰- .
{
‰‰/ 0
$str
‰‰1 7
,
‰‰7 8
$str
‰‰9 ?
,
‰‰? @
$str
‰‰A K
,
‰‰K L
$str
‰‰M X
,
‰‰X Y
$str
‰‰Z b
}
‰‰c d
)
‰‰d e
;
‰‰e f
Domain
ÊÊ 
dom
ÊÊ 
=
ÊÊ 
	Functions
ÊÊ "
.
ÊÊ" #
DomainByName
ÊÊ# /
(
ÊÊ/ 0
$str
ÊÊ0 7
)
ÊÊ7 8
;
ÊÊ8 9
foreach
ÈÈ 
(
ÈÈ 
KBObject
ÈÈ 
obj
ÈÈ !
in
ÈÈ" $
kbserv
ÈÈ% +
.
ÈÈ+ ,
CurrentModel
ÈÈ, 8
.
ÈÈ8 9
Objects
ÈÈ9 @
.
ÈÈ@ A
GetAll
ÈÈA G
(
ÈÈG H
)
ÈÈH I
)
ÈÈI J
{
ÍÍ 
output
ÎÎ 
.
ÎÎ 
AddLine
ÎÎ 
(
ÎÎ 
$str
ÎÎ /
+
ÎÎ0 1
obj
ÎÎ2 5
.
ÎÎ5 6
Name
ÎÎ6 :
+
ÎÎ; <
$str
ÎÎ= B
+
ÎÎC D
obj
ÎÎE H
.
ÎÎH I
Type
ÎÎI M
.
ÎÎM N
ToString
ÎÎN V
(
ÎÎV W
)
ÎÎW X
)
ÎÎX Y
;
ÎÎY Z
Boolean
ÏÏ 
SaveObj
ÏÏ 
=
ÏÏ  !
false
ÏÏ" '
;
ÏÏ' (
if
ÓÓ 
(
ÓÓ 
ObjectsHelper
ÓÓ !
.
ÓÓ! "
isGenerated
ÓÓ" -
(
ÓÓ- .
obj
ÓÓ. 1
)
ÓÓ1 2
&&
ÓÓ3 5
!
ÓÓ7 8
ObjectsHelper
ÓÓ8 E
.
ÓÓE F"
isGeneratedbyPattern
ÓÓF Z
(
ÓÓZ [
obj
ÓÓ[ ^
)
ÓÓ^ _
&&
ÓÓ` b
(
ÓÓc d
obj
ÓÓd g
is
ÓÓh j
Transaction
ÓÓk v
||
ÓÓw y
obj
ÓÓz }
isÓÓ~ Ä
WebPanelÓÓÅ â
||ÓÓä å
objÓÓç ê
isÓÓë ì
	WorkPanelÓÓî ù
)ÓÓù û
)ÓÓû ü
{
ÔÔ 
	Functions
 
.
 
AddLine
 %
(
% &
$str
& ;
,
; <
$str
= A
+
B C
obj
D G
.
G H
Name
H L
)
L M
;
M N
List
ÒÒ 
<
ÒÒ 
Variable
ÒÒ !
>
ÒÒ! "
lstVariables
ÒÒ# /
=
ÒÒ0 1
VariablesToRename
ÒÒ2 C
(
ÒÒC D
obj
ÒÒD G
)
ÒÒG H
;
ÒÒH I
}
ÚÚ 
}
ÙÙ 
string
ˆˆ 
	inputFile
ˆˆ 
=
ˆˆ 
kbserv
ˆˆ %
.
ˆˆ% &
	CurrentKB
ˆˆ& /
.
ˆˆ/ 0
UserDirectory
ˆˆ0 =
+
ˆˆ> ?
$str
ˆˆ@ W
;
ˆˆW X
List
˘˘ 
<
˘˘ 
String
˘˘ 
>
˘˘ 
data
˘˘ 
=
˘˘ 
File
˘˘  $
.
˘˘$ %
ReadAllLines
˘˘% 1
(
˘˘1 2
	inputFile
˘˘2 ;
)
˘˘; <
.
˘˘< =
Distinct
˘˘= E
(
˘˘E F
StringComparer
˘˘F T
.
˘˘T U&
CurrentCultureIgnoreCase
˘˘U m
)
˘˘m n
.
˘˘n o
ToList
˘˘o u
(
˘˘u v
)
˘˘v w
;
˘˘w x
data
¸¸ 
.
¸¸ 
Sort
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
string
ˇˇ 
outputFile2
ˇˇ 
=
ˇˇ  
kbserv
ˇˇ! '
.
ˇˇ' (
	CurrentKB
ˇˇ( 1
.
ˇˇ1 2
UserDirectory
ˇˇ2 ?
+
ˇˇ@ A
$str
ˇˇB Z
;
ˇˇZ [
File
ÄÄ 
.
ÄÄ 
WriteAllLines
ÄÄ 
(
ÄÄ 
outputFile2
ÄÄ *
,
ÄÄ* +
data
ÄÄ, 0
.
ÄÄ0 1
ToArray
ÄÄ1 8
(
ÄÄ8 9
)
ÄÄ9 :
)
ÄÄ: ;
;
ÄÄ; <
writer
ÉÉ 
.
ÉÉ 
	AddFooter
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
writer
ÑÑ 
.
ÑÑ 
Close
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
KBDoctorHelper
ÜÜ 
.
ÜÜ !
ShowKBDoctorResults
ÜÜ .
(
ÜÜ. /

outputFile
ÜÜ/ 9
)
ÜÜ9 :
;
ÜÜ: ;
bool
áá 
success
áá 
=
áá 
true
áá 
;
áá  
output
àà 
.
àà 

EndSection
àà 
(
àà 
title
àà #
,
àà# $
success
àà% ,
)
àà, -
;
àà- .
}
ââ 	
public
åå 
static
åå 
List
åå 
<
åå 
Variable
åå #
>
åå# $
VariablesToRename
åå& 7
(
åå7 8
KBObject
åå8 @
obj
ååA D
)
ååD E
{
çç 	

IKBService
éé 
kbserv
éé 
=
éé 

UIServices
éé  *
.
éé* +
KB
éé+ -
;
éé- .
KBModel
èè 
kbmod
èè 
=
èè 
kbserv
èè "
.
èè" #
CurrentModel
èè# /
;
èè/ 0
List
ëë 
<
ëë 
Variable
ëë 
>
ëë 
	variables
ëë $
=
ëë% &
new
ëë' *
List
ëë+ /
<
ëë/ 0
Variable
ëë0 8
>
ëë8 9
(
ëë9 :
)
ëë: ;
;
ëë; <
VariablesPart
íí 
vp
íí 
=
íí 
obj
íí "
.
íí" #
Parts
íí# (
.
íí( )
Get
íí) ,
<
íí, -
VariablesPart
íí- :
>
íí: ;
(
íí; <
)
íí< =
;
íí= >
if
ìì 
(
ìì 
vp
ìì 
!=
ìì 
null
ìì 
)
ìì 
{
îî 
foreach
ïï 
(
ïï 
Variable
ïï !
v
ïï" #
in
ïï$ &
vp
ïï' )
.
ïï) *
	Variables
ïï* 3
)
ïï3 4
{
ññ 
if
óó 
(
óó 
(
óó 
!
óó 
v
óó 
.
óó 

IsStandard
óó &
)
óó& '
&&
óó( *
(
óó+ ,
v
óó, -
.
óó- .
Type
óó. 2
!=
óó3 5
eDBType
óó6 =
.
óó= >
GX_USRDEFTYP
óó> J
)
óóJ K
&&
óóL N
(
óóO P
v
óóP Q
.
óóQ R
Type
óóR V
!=
óóW Y
eDBType
óóZ a
.
óóa b
GX_SDT
óób h
)
óóh i
&&
óój l
(
óóm n
v
óón o
.
óóo p
Type
óóp t
!=
óóu w
eDBType
óóx 
.óó Ä"
GX_EXTERNAL_OBJECTóóÄ í
)óóí ì
)óóî ï
{
òò 
if
ôô 
(
ôô 
v
ôô 
.
ôô 
AttributeBasedOn
ôô .
!=
ôô/ 1
null
ôô2 6
&&
ôô7 9
!
ôô: ;
v
ôô; <
.
ôô< =
Name
ôô= A
.
ôôA B
ToLower
ôôB I
(
ôôI J
)
ôôJ K
.
ôôK L
Contains
ôôL T
(
ôôT U
v
ôôU V
.
ôôV W
AttributeBasedOn
ôôW g
.
ôôg h
Name
ôôh l
.
ôôl m
ToLower
ôôm t
(
ôôt u
)
ôôu v
)
ôôv w
)
ôôw x
{
öö 
AddVariableToFile
õõ -
(
õõ- .
v
õõ. /
)
õõ/ 0
;
õõ0 1
	variables
úú %
.
úú% &
Add
úú& )
(
úú) *
v
úú* +
)
úú+ ,
;
úú, -
}
ùù 
else
ûû 
{
üü 
if
†† 
(
††  
v
††  !
.
††! "
DomainBasedOn
††" /
!=
††0 2
null
††3 7
&&
††8 :
!
††; <
v
††< =
.
††= >
Name
††> B
.
††B C
ToLower
††C J
(
††J K
)
††K L
.
††L M
Contains
††M U
(
††U V
v
††V W
.
††W X
DomainBasedOn
††X e
.
††e f
Name
††f j
.
††j k
ToLower
††k r
(
††r s
)
††s t
)
††t u
)
††u v
{
°° 
AddVariableToFile
¢¢  1
(
¢¢1 2
v
¢¢2 3
)
¢¢3 4
;
¢¢4 5
	variables
££  )
.
££) *
Add
££* -
(
££- .
v
££. /
)
££/ 0
;
££0 1
}
§§ 
else
••  
{
¶¶ 
if
ßß  "
(
ßß# $
(
ßß$ %
v
ßß% &
.
ßß& '
AttributeBasedOn
ßß' 7
==
ßß8 :
null
ßß; ?
)
ßß? @
&&
ßßA C
(
ßßD E
v
ßßE F
.
ßßF G
DomainBasedOn
ßßG T
==
ßßU W
null
ßßX \
)
ßß\ ]
)
ßß] ^
{
®®  !
AddVariableToFile
©©$ 5
(
©©5 6
v
©©6 7
)
©©7 8
;
©©8 9
	variables
™™$ -
.
™™- .
Add
™™. 1
(
™™1 2
v
™™2 3
)
™™3 4
;
™™4 5
}
´´  !
}
¨¨ 
}
≠≠ 
}
±± 
}
≤≤ 
}
≥≥ 
return
¥¥ 
	variables
¥¥ 
;
¥¥ 
}
µµ 	
private
∑∑ 
static
∑∑ 
void
∑∑ 
AddVariableToFile
∑∑ -
(
∑∑- .
Variable
∑∑. 6
v
∑∑7 8
)
∑∑8 9
{
∏∏ 	
string
ππ 
attBAux
ππ 
=
ππ 
v
ππ 
.
ππ 
AttributeBasedOn
ππ /
==
ππ0 2
null
ππ3 7
?
ππ8 9
$str
ππ: <
:
ππ= >
v
ππ? @
.
ππ@ A
AttributeBasedOn
ππA Q
.
ππQ R
Name
ππR V
;
ππV W
string
∫∫ 
domBAux
∫∫ 
=
∫∫ 
v
∫∫ 
.
∫∫ 
DomainBasedOn
∫∫ ,
==
∫∫- /
null
∫∫0 4
?
∫∫5 6
$str
∫∫7 9
:
∫∫: ;
v
∫∫< =
.
∫∫= >
DomainBasedOn
∫∫> K
.
∫∫K L
Name
∫∫L P
;
∫∫P Q
string
ªª 
varaux
ªª 
=
ªª 
v
ªª 
.
ªª 
Name
ªª "
+
ªª# $
$str
ªª% (
+
ªª) *
v
ªª+ ,
.
ªª, -
Type
ªª- 1
.
ªª1 2
ToString
ªª2 :
(
ªª: ;
)
ªª; <
+
ªª= >
$str
ªª? B
+
ªªC D
v
ªªE F
.
ªªF G
Length
ªªG M
.
ªªM N
ToString
ªªN V
(
ªªV W
)
ªªW X
+
ªªY Z
$str
ªª[ ^
+
ªª_ `
attBAux
ªªa h
+
ªªi j
$str
ªªk n
+
ªªo p
domBAux
ªªq x
;
ªªx y
varaux
ºº 
=
ºº 
varaux
ºº 
+
ºº 
$str
ºº "
+
ºº# $
varaux
ºº% +
;
ºº+ ,
	Functions
ææ 
.
ææ 
AddLine
ææ 
(
ææ 
$str
ææ 3
,
ææ3 4
varaux
ææ5 ;
)
ææ; <
;
ææ< =
}
øø 	
private
¡¡ 
static
¡¡ 
void
¡¡ 
MarkReachables
¡¡ *
(
¡¡* +
IOutputService
¡¡+ 9
output
¡¡: @
,
¡¡@ A
KBObject
¡¡B J
obj
¡¡K N
,
¡¡N O 
KBObjectCollection
¡¡P b
reachablesObjects
¡¡c t
)
¡¡t u
{
¬¬ 	
reachablesObjects
√√ 
.
√√ 
Add
√√ !
(
√√! "
obj
√√" %
)
√√% &
;
√√& '
foreach
≈≈ 
(
≈≈ 
EntityReference
≈≈ $
	reference
≈≈% .
in
≈≈/ 1
obj
≈≈2 5
.
≈≈5 6
GetReferences
≈≈6 C
(
≈≈C D
LinkType
≈≈D L
.
≈≈L M

UsedObject
≈≈M W
)
≈≈W X
)
≈≈X Y
{
∆∆ 
KBObject
«« 
objRef
«« 
=
««  !
KBObject
««" *
.
««* +
Get
««+ .
(
««. /
obj
««/ 2
.
««2 3
Model
««3 8
,
««8 9
	reference
««: C
.
««C D
To
««D F
)
««F G
;
««G H
if
…… 
(
…… 
(
…… 
objRef
…… 
!=
…… 
null
…… #
)
……# $
&&
……% '
!
……( )
reachablesObjects
……) :
.
……: ;
Contains
……; C
(
……C D
objRef
……D J
)
……J K
)
……K L
{
   
MarkReachables
ÀÀ "
(
ÀÀ" #
output
ÀÀ# )
,
ÀÀ) *
objRef
ÀÀ+ 1
,
ÀÀ1 2
reachablesObjects
ÀÀ3 D
)
ÀÀD E
;
ÀÀE F
}
ÃÃ 
}
ŒŒ 
}
œœ 	
public
‘‘ 
static
‘‘ 
void
‘‘  
CreateProcedureSDT
‘‘ -
(
‘‘- .
)
‘‘. /
{
’’ 	

IKBService
÷÷ 
kB
÷÷ 
=
÷÷ 

UIServices
÷÷ &
.
÷÷& '
KB
÷÷' )
;
÷÷) *
if
◊◊ 
(
◊◊ 
kB
◊◊ 
!=
◊◊ 
null
◊◊ 
&&
◊◊ 
kB
◊◊  
.
◊◊  !
CurrentModel
◊◊! -
!=
◊◊. 0
null
◊◊1 5
)
◊◊5 6
{
ÿÿ !
SelectObjectOptions
ŸŸ # 
selectObjectOption
ŸŸ$ 6
=
ŸŸ7 8
new
ŸŸ9 <!
SelectObjectOptions
ŸŸ= P
(
ŸŸP Q
)
ŸŸQ R
;
ŸŸR S 
selectObjectOption
⁄⁄ "
.
⁄⁄" #
MultipleSelection
⁄⁄# 4
=
⁄⁄5 6
true
⁄⁄7 ;
;
⁄⁄; <
KBModel
€€ 
kbModel
€€ 
=
€€  !

UIServices
€€" ,
.
€€, -
KB
€€- /
.
€€/ 0
CurrentModel
€€0 <
;
€€< =
Artech
›› 
.
›› 
Genexus
›› 
.
›› 
Common
›› %
.
››% &
Objects
››& -
.
››- .
	Procedure
››. 7
proc
››8 <
=
››= >
new
››? B
Artech
››C I
.
››I J
Genexus
››J Q
.
››Q R
Common
››R X
.
››X Y
Objects
››Y `
.
››` a
	Procedure
››a j
(
››j k
kbModel
››k r
)
››r s
;
››s t
string
ﬁﬁ 
procName
ﬁﬁ 
=
ﬁﬁ  !
$str
ﬁﬁ" 4
;
ﬁﬁ4 5
proc
‡‡ 
.
‡‡ 
Name
‡‡ 
=
‡‡ 
procName
‡‡ $
;
‡‡$ %
proc
·· 
.
·· 
ProcedurePart
·· "
.
··" #
Source
··# )
=
··* +
$str
··, ^
;
··^ _
proc
‚‚ 
.
‚‚ 
SetPropertyValue
‚‚ %
(
‚‚% &
$str
‚‚& .
,
‚‚. /
true
‚‚0 4
)
‚‚4 5
;
‚‚5 6
proc
„„ 
.
„„ 
Save
„„ 
(
„„ 
)
„„ 
;
„„  
selectObjectOption
ÊÊ "
.
ÊÊ" #
ObjectTypes
ÊÊ# .
.
ÊÊ. /
Add
ÊÊ/ 2
(
ÊÊ2 3 
KBObjectDescriptor
ÊÊ3 E
.
ÊÊE F
Get
ÊÊF I
<
ÊÊI J
SDT
ÊÊJ M
>
ÊÊM N
(
ÊÊN O
)
ÊÊO P
)
ÊÊP Q
;
ÊÊQ R
foreach
ÁÁ 
(
ÁÁ 
KBObject
ÁÁ !
kBObject
ÁÁ" *
in
ÁÁ+ -

UIServices
ÁÁ. 8
.
ÁÁ8 9 
SelectObjectDialog
ÁÁ9 K
.
ÁÁK L
SelectObjects
ÁÁL Y
(
ÁÁY Z 
selectObjectOption
ÁÁZ l
)
ÁÁl m
)
ÁÁm n
{
ËË 
SDT
ÈÈ 
sdtObj
ÈÈ 
=
ÈÈ  
(
ÈÈ! "
SDT
ÈÈ" %
)
ÈÈ% &
kBObject
ÈÈ& .
;
ÈÈ. /
CodeGeneration
ÍÍ "
.
ÍÍ" #
AddSDTVariable
ÍÍ# 1
(
ÍÍ1 2
kbModel
ÍÍ2 9
,
ÍÍ9 :
proc
ÍÍ; ?
,
ÍÍ? @
sdtObj
ÍÍA G
)
ÍÍG H
;
ÍÍH I
Application
ÎÎ 
.
ÎÎ  
DoEvents
ÎÎ  (
(
ÎÎ( )
)
ÎÎ) *
;
ÎÎ* +
}
ÏÏ 
proc
ÓÓ 
.
ÓÓ 
Save
ÓÓ 
(
ÓÓ 
)
ÓÓ 
;
ÓÓ 
GxModel
ÛÛ 
gm
ÛÛ 
=
ÛÛ 

UIServices
ÛÛ '
.
ÛÛ' (
KB
ÛÛ( *
.
ÛÛ* + 
WorkingEnvironment
ÛÛ+ =
.
ÛÛ= >
TargetModel
ÛÛ> I
.
ÛÛI J
GetAs
ÛÛJ O
<
ÛÛO P
GxModel
ÛÛP W
>
ÛÛW X
(
ÛÛX Y
)
ÛÛY Z
;
ÛÛZ [
foreach
ıı 
(
ıı 
var
ıı 
gen
ıı  
in
ıı! #
gm
ıı$ &
.
ıı& '
Environments
ıı' 3
)
ıı3 4
{
ˆˆ 
int
˜˜ 
	generator
˜˜ !
=
˜˜" #
gen
˜˜$ '
.
˜˜' (
	Generator
˜˜( 1
;
˜˜1 2
KBObject
˘˘ 
copy
˘˘ !
=
˘˘" #

BLServices
˘˘$ .
.
˘˘. /
KnowledgeManager
˘˘/ ?
.
˘˘? @
Clone
˘˘@ E
(
˘˘E F
proc
˘˘F J
)
˘˘J K
;
˘˘K L
copy
˙˙ 
.
˙˙ 
Name
˙˙ 
=
˙˙ 
procName
˙˙  (
+
˙˙) *
$str
˙˙+ .
+
˙˙/ 0
	generator
˙˙1 :
.
˙˙: ;
ToString
˙˙; C
(
˙˙C D
)
˙˙D E
;
˙˙E F
copy
˚˚ 
.
˚˚ 
SetPropertyValue
˚˚ )
(
˚˚) *
Artech
˚˚* 0
.
˚˚0 1
Genexus
˚˚1 8
.
˚˚8 9
Common
˚˚9 ?
.
˚˚? @

Properties
˚˚@ J
.
˚˚J K
TRN
˚˚K N
.
˚˚N O
	Generator
˚˚O X
,
˚˚X Y
new
˚˚Z ]*
EnvironmentCategoryReference
˚˚^ z
{
˚˚{ |

Definition˚˚} á
=˚˚à â
gen˚˚ä ç
}˚˚é è
)˚˚è ê
;˚˚ê ë

UIServices
¸¸ 
.
¸¸ 
Objects
¸¸ &
.
¸¸& '
Save
¸¸' +
(
¸¸+ ,
copy
¸¸, 0
)
¸¸0 1
;
¸¸1 2
GenexusUIServices
˛˛ %
.
˛˛% &
Build
˛˛& +
.
˛˛+ ,
Rebuild
˛˛, 3
(
˛˛3 4
copy
˛˛4 8
.
˛˛8 9
Key
˛˛9 <
)
˛˛< =
;
˛˛= >
do
ÄÄ 
{
ÅÅ 
Application
ÇÇ #
.
ÇÇ# $
DoEvents
ÇÇ$ ,
(
ÇÇ, -
)
ÇÇ- .
;
ÇÇ. /
}
ÑÑ 
while
ÑÑ 
(
ÑÑ 
GenexusUIServices
ÑÑ .
.
ÑÑ. /
Build
ÑÑ/ 4
.
ÑÑ4 5

IsBuilding
ÑÑ5 ?
)
ÑÑ? @
;
ÑÑ@ A
copy
ÖÖ 
.
ÖÖ 
Delete
ÖÖ 
(
ÖÖ  
)
ÖÖ  !
;
ÖÖ! "
}
ÜÜ 
proc
áá 
.
áá 
Delete
áá 
(
áá 
)
áá 
;
áá 
}
ââ 
}
ää 	
public
ëë 
static
ëë 
void
ëë 
SearchAndReplace
ëë +
(
ëë+ ,
)
ëë, -
{
íí 	

IKBService
ìì 
kB
ìì 
=
ìì 

UIServices
ìì &
.
ìì& '
KB
ìì' )
;
ìì) *
IOutputService
îî 
output
îî !
=
îî" #
CommonServices
îî$ 2
.
îî2 3
Output
îî3 9
;
îî9 :
string
ññ 
mensaje
ññ 
=
ññ 
$str
ññ 
;
ññ  
string
óó 
title
óó 
=
óó 
$str
óó /
;
óó/ 0
output
òò 
.
òò 
StartSection
òò 
(
òò  
title
òò  %
)
òò% &
;
òò& '
if
ôô 
(
ôô 
kB
ôô 
!=
ôô 
null
ôô 
&&
ôô 
kB
ôô  
.
ôô  !
CurrentModel
ôô! -
!=
ôô. 0
null
ôô1 5
)
ôô5 6
{
öö 
PromptDescription
úú !
pd
úú" $
;
úú$ %
DialogResult
ùù 
dr
ùù 
;
ùù  
mensaje
ûû 
=
ûû 
$str
ûû  
;
ûû  !
pd
†† 
=
†† 
new
†† 
PromptDescription
†† *
(
††* +
mensaje
††+ 2
)
††2 3
;
††3 4
dr
°° 
=
°° 
pd
°° 
.
°° 

ShowDialog
°° "
(
°°" #
)
°°# $
;
°°$ %
if
¢¢ 
(
¢¢ 
dr
¢¢ 
==
¢¢ 
DialogResult
¢¢ &
.
¢¢& '
OK
¢¢' )
)
¢¢) *
{
££ 
string
§§ 
txtfind
§§ "
=
§§# $
pd
§§% '
.
§§' (
Description
§§( 3
;
§§3 4
mensaje
•• 
=
•• 
$str
•• ,
;
••, -
pd
¶¶ 
=
¶¶ 
new
¶¶ 
PromptDescription
¶¶ .
(
¶¶. /
mensaje
¶¶/ 6
)
¶¶6 7
;
¶¶7 8
dr
ßß 
=
ßß 
pd
ßß 
.
ßß 

ShowDialog
ßß &
(
ßß& '
)
ßß' (
;
ßß( )
if
®® 
(
®® 
dr
®® 
==
®® 
DialogResult
®® *
.
®®* +
OK
®®+ -
)
®®- .
{
©© 
string
™™ 

txtreplace
™™ )
=
™™* +
pd
™™, .
.
™™. /
Description
™™/ :
;
™™: ;!
SelectObjectOptions
´´ + 
selectObjectOption
´´, >
=
´´? @
new
´´A D!
SelectObjectOptions
´´E X
(
´´X Y
)
´´Y Z
;
´´Z [ 
selectObjectOption
¨¨ *
.
¨¨* +
MultipleSelection
¨¨+ <
=
¨¨= >
true
¨¨? C
;
¨¨C D
KBModel
≠≠ 
kbModel
≠≠  '
=
≠≠( )

UIServices
≠≠* 4
.
≠≠4 5
KB
≠≠5 7
.
≠≠7 8
CurrentModel
≠≠8 D
;
≠≠D E
int
ØØ 
objcambiados
ØØ (
=
ØØ) *
$num
ØØ+ ,
;
ØØ, -
int
∞∞ 

objtotales
∞∞ &
=
∞∞' (
$num
∞∞) *
;
∞∞* + 
selectObjectOption
≤≤ *
.
≤≤* +
ObjectTypes
≤≤+ 6
.
≤≤6 7
Add
≤≤7 :
(
≤≤: ; 
KBObjectDescriptor
≤≤; M
.
≤≤M N
Get
≤≤N Q
<
≤≤Q R
	Procedure
≤≤R [
>
≤≤[ \
(
≤≤\ ]
)
≤≤] ^
)
≤≤^ _
;
≤≤_ ` 
selectObjectOption
≥≥ *
.
≥≥* +
ObjectTypes
≥≥+ 6
.
≥≥6 7
Add
≥≥7 :
(
≥≥: ; 
KBObjectDescriptor
≥≥; M
.
≥≥M N
Get
≥≥N Q
<
≥≥Q R
Transaction
≥≥R ]
>
≥≥] ^
(
≥≥^ _
)
≥≥_ `
)
≥≥` a
;
≥≥a b 
selectObjectOption
¥¥ *
.
¥¥* +
ObjectTypes
¥¥+ 6
.
¥¥6 7
Add
¥¥7 :
(
¥¥: ; 
KBObjectDescriptor
¥¥; M
.
¥¥M N
Get
¥¥N Q
<
¥¥Q R
WebPanel
¥¥R Z
>
¥¥Z [
(
¥¥[ \
)
¥¥\ ]
)
¥¥] ^
;
¥¥^ _ 
selectObjectOption
µµ *
.
µµ* +
ObjectTypes
µµ+ 6
.
µµ6 7
Add
µµ7 :
(
µµ: ; 
KBObjectDescriptor
µµ; M
.
µµM N
Get
µµN Q
<
µµQ R
	WorkPanel
µµR [
>
µµ[ \
(
µµ\ ]
)
µµ] ^
)
µµ^ _
;
µµ_ `
foreach
∑∑ 
(
∑∑  !
KBObject
∑∑! )
obj
∑∑* -
in
∑∑. 0

UIServices
∑∑1 ;
.
∑∑; < 
SelectObjectDialog
∑∑< N
.
∑∑N O
SelectObjects
∑∑O \
(
∑∑\ ] 
selectObjectOption
∑∑] o
)
∑∑o p
)
∑∑p q
{
∏∏ 

objtotales
ππ &
+=
ππ' )
$num
ππ* +
;
ππ+ ,
Application
∫∫ '
.
∫∫' (
DoEvents
∫∫( 0
(
∫∫0 1
)
∫∫1 2
;
∫∫2 3
if
ªª 
(
ªª  
(
ªª  !

objtotales
ªª! +
%
ªª, -
$num
ªª. 1
)
ªª1 2
==
ªª3 5
$num
ªª6 7
)
ªª7 8
{
ºº 
output
ææ  &
.
ææ& '
AddLine
ææ' .
(
ææ. /
$str
ææ/ >
+
ææ? @

objtotales
ææA K
+
ææL M
$str
ææN Y
)
ææY Z
;
ææZ [
}
øø 
StringBuilder
¡¡ )
buffer
¡¡* 0
=
¡¡1 2
new
¡¡3 6
StringBuilder
¡¡7 D
(
¡¡D E
)
¡¡E F
;
¡¡F G
using
¬¬ !
(
¬¬" #

TextWriter
¬¬# -
writer
¬¬. 4
=
¬¬5 6
new
¬¬7 :
StringWriter
¬¬; G
(
¬¬G H
buffer
¬¬H N
)
¬¬N O
)
¬¬O P
obj
√√  #
.
√√# $
	Serialize
√√$ -
(
√√- .
writer
√√. 4
)
√√4 5
;
√√5 6
string
≈≈ "
objxml
≈≈# )
=
≈≈* +
buffer
≈≈, 2
.
≈≈2 3
ToString
≈≈3 ;
(
≈≈; <
)
≈≈< =
;
≈≈= >
string
∆∆ "
	newobjxml
∆∆# ,
=
∆∆- .
objxml
∆∆/ 5
.
∆∆5 6
Replace
∆∆6 =
(
∆∆= >
txtfind
∆∆> E
,
∆∆E F

txtreplace
∆∆G Q
,
∆∆Q R
StringComparison
∆∆S c
.
∆∆c d(
InvariantCultureIgnoreCase
∆∆d ~
)
∆∆~ 
;∆∆ Ä
using
»» !
(
»»" #
StringReader
»»# /
	strReader
»»0 9
=
»»: ;
new
»»< ?
StringReader
»»@ L
(
»»L M
	newobjxml
»»M V
)
»»V W
)
»»W X
using
…… !
(
……" #
XmlTextReader
……# 0
reader
……1 7
=
……8 9
new
……: =
XmlTextReader
……> K
(
……K L
	strReader
……L U
)
……U V
)
……V W

BLServices
    *
.
  * +
KnowledgeManager
  + ;
.
  ; <
ImportInObject
  < J
(
  J K
reader
  K Q
,
  Q R
obj
  S V
)
  V W
;
  W X
if
ÀÀ 
(
ÀÀ  
objxml
ÀÀ  &
!=
ÀÀ' )
	newobjxml
ÀÀ* 3
)
ÀÀ3 4
{
ÃÃ 
try
ÕÕ  #
{
ŒŒ  !
obj
œœ$ '
.
œœ' (
Save
œœ( ,
(
œœ, -
)
œœ- .
;
œœ. /
output
––$ *
.
––* +
AddLine
––+ 2
(
––2 3
$str
––3 A
+
––B C
txtfind
––D K
+
––L M
$str
––N V
+
––W X

txtreplace
––Y c
+
––d e
$str
––f t
+
––u v
obj
––w z
.
––z {
Name
––{ 
)–– Ä
;––Ä Å
objcambiados
——$ 0
+=
——1 3
$num
——4 5
;
——5 6
}
““  !
catch
””  %
(
””& '
	Exception
””' 0
e
””1 2
)
””2 3
{
‘‘  !
if
’’$ &
(
’’' (
e
’’( )
.
’’) *
InnerException
’’* 8
==
’’9 ;
null
’’< @
)
’’@ A
output
÷÷( .
.
÷÷. /
AddErrorLine
÷÷/ ;
(
÷÷; <
e
÷÷< =
.
÷÷= >
Message
÷÷> E
)
÷÷E F
;
÷÷F G
else
◊◊$ (
output
ÿÿ( .
.
ÿÿ. /
AddErrorLine
ÿÿ/ ;
(
ÿÿ; <
e
ÿÿ< =
.
ÿÿ= >
Message
ÿÿ> E
+
ÿÿF G
$str
ÿÿH M
+
ÿÿN O
e
ÿÿP Q
.
ÿÿQ R
InnerException
ÿÿR `
)
ÿÿ` a
;
ÿÿa b
}
ŸŸ  !
;
ŸŸ! "
}
⁄⁄ 
}
‹‹ 
title
›› 
=
›› 
$str
››  2
+
››3 4
objcambiados
››5 A
.
››A B
ToString
››B J
(
››J K
)
››K L
;
››L M
output
ﬁﬁ 
.
ﬁﬁ 

EndSection
ﬁﬁ )
(
ﬁﬁ) *
title
ﬁﬁ* /
,
ﬁﬁ/ 0
true
ﬁﬁ1 5
)
ﬁﬁ5 6
;
ﬁﬁ6 7
}
ﬂﬂ 
}
‡‡ 
}
·· 
}
„„ 	
public
ÊÊ 
static
ÊÊ 
string
ÊÊ 
Replace
ÊÊ $
(
ÊÊ$ %
this
ÊÊ% )
string
ÊÊ* 0
str
ÊÊ1 4
,
ÊÊ4 5
string
ÊÊ6 <
old
ÊÊ= @
,
ÊÊ@ A
string
ÊÊB H
@new
ÊÊI M
,
ÊÊM N
StringComparison
ÊÊO _

comparison
ÊÊ` j
)
ÊÊj k
{
ÁÁ 	
@new
ËË 
=
ËË 
@new
ËË 
??
ËË 
$str
ËË 
;
ËË 
if
ÈÈ 
(
ÈÈ 
string
ÈÈ 
.
ÈÈ 
IsNullOrEmpty
ÈÈ $
(
ÈÈ$ %
str
ÈÈ% (
)
ÈÈ( )
||
ÈÈ* ,
string
ÈÈ- 3
.
ÈÈ3 4
IsNullOrEmpty
ÈÈ4 A
(
ÈÈA B
old
ÈÈB E
)
ÈÈE F
)
ÈÈG H
return
ÍÍ 
str
ÍÍ 
;
ÍÍ 
string
ÎÎ 
@aux
ÎÎ 
=
ÎÎ 
$str
ÎÎ 
;
ÎÎ 
for
ÏÏ 
(
ÏÏ 
int
ÏÏ 
i
ÏÏ 
=
ÏÏ 
$num
ÏÏ 
;
ÏÏ 
i
ÏÏ 
<
ÏÏ 
@new
ÏÏ #
.
ÏÏ# $
Length
ÏÏ$ *
;
ÏÏ+ ,
i
ÏÏ, -
++
ÏÏ- /
)
ÏÏ0 1
@aux
ÌÌ 
+=
ÌÌ 
$str
ÌÌ 
;
ÌÌ 
int
ÔÔ 
foundAt
ÔÔ 
;
ÔÔ 
while
 
(
 
(
 
foundAt
 
=
 
str
 !
.
! "
IndexOf
" )
(
) *
old
* -
,
- .
$num
/ 0
,
0 1

comparison
2 <
)
= >
)
> ?
!=
@ B
-
C D
$num
D E
)
E F
str
ÒÒ 
=
ÒÒ 
str
ÒÒ 
.
ÒÒ 
Remove
ÒÒ  
(
ÒÒ  !
foundAt
ÒÒ! (
,
ÒÒ( )
old
ÒÒ* -
.
ÒÒ- .
Length
ÒÒ. 4
)
ÒÒ4 5
.
ÒÒ5 6
Insert
ÒÒ6 <
(
ÒÒ< =
foundAt
ÒÒ= D
,
ÒÒD E
@aux
ÒÒF J
)
ÒÒJ K
;
ÒÒK L
return
ÚÚ 
str
ÚÚ 
.
ÚÚ 
Replace
ÚÚ 
(
ÚÚ 
@aux
ÚÚ #
,
ÚÚ# $
@new
ÚÚ% )
)
ÚÚ) *
;
ÚÚ* +
}
ÛÛ 	
public
ˆˆ 
static
ˆˆ 
void
ˆˆ 
ObjectsReferenced
ˆˆ ,
(
ˆˆ, -
)
ˆˆ- .
{
˜˜ 	

IKBService
˙˙ 
kbserv
˙˙ 
=
˙˙ 

UIServices
˙˙  *
.
˙˙* +
KB
˙˙+ -
;
˙˙- .
IOutputService
˚˚ 
output
˚˚ !
=
˚˚" #
CommonServices
˚˚$ 2
.
˚˚2 3
Output
˚˚3 9
;
˚˚9 :
string
¸¸ 
title
¸¸ 
=
¸¸ 
$str
¸¸ D
;
¸¸D E
output
˛˛ 
.
˛˛ 
StartSection
˛˛ 
(
˛˛  
title
˛˛  %
)
˛˛% &
;
˛˛& '
string
ˇˇ 

outputFile
ˇˇ 
=
ˇˇ 
	Functions
ˇˇ  )
.
ˇˇ) *
CreateOutputFile
ˇˇ* :
(
ˇˇ: ;
kbserv
ˇˇ; A
,
ˇˇA B
title
ˇˇC H
)
ˇˇH I
;
ˇˇI J
KBDoctorXMLWriter
ÅÅ 
writer
ÅÅ $
=
ÅÅ% &
new
ÅÅ' *
KBDoctorXMLWriter
ÅÅ+ <
(
ÅÅ< =

outputFile
ÅÅ= G
,
ÅÅG H
Encoding
ÅÅI Q
.
ÅÅQ R
UTF8
ÅÅR V
)
ÅÅV W
;
ÅÅW X!
SelectObjectOptions
ÑÑ  
selectObjectOption
ÑÑ  2
=
ÑÑ3 4
new
ÑÑ5 8!
SelectObjectOptions
ÑÑ9 L
(
ÑÑL M
)
ÑÑM N
;
ÑÑN O 
selectObjectOption
ÖÖ 
.
ÖÖ 
MultipleSelection
ÖÖ 0
=
ÖÖ1 2
false
ÖÖ3 8
;
ÖÖ8 9
KBModel
ÜÜ 
kbModel
ÜÜ 
=
ÜÜ 

UIServices
ÜÜ (
.
ÜÜ( )
KB
ÜÜ) +
.
ÜÜ+ ,
CurrentModel
ÜÜ, 8
;
ÜÜ8 9 
KBObjectCollection
áá 
objRefCollection
áá /
=
áá0 1
new
áá2 5 
KBObjectCollection
áá6 H
(
ááH I
)
ááI J
;
ááJ K
foreach
ââ 
(
ââ 
KBObject
ââ 
obj
ââ !
in
ââ" $

UIServices
ââ% /
.
ââ/ 0 
SelectObjectDialog
ââ0 B
.
ââB C
SelectObjects
ââC P
(
ââP Q 
selectObjectOption
ââQ c
)
ââc d
)
ââd e
{
ãã 
if
åå 
(
åå 
obj
åå 
!=
åå 
null
åå 
)
åå  
{
çç 
title
éé 
+=
éé 
obj
éé  
.
éé  !
Name
éé! %
+
éé& '
$str
éé( +
+
éé, -
obj
éé. 1
.
éé1 2
Description
éé2 =
;
éé= >
writer
èè 
.
èè 
	AddHeader
èè $
(
èè$ %
title
èè% *
)
èè* +
;
èè+ ,
writer
êê 
.
êê 
AddTableHeader
êê )
(
êê) *
new
êê* -
string
êê. 4
[
êê4 5
]
êê5 6
{
êê7 8
$str
êê9 A
,
êêA B
$str
êêC P
,
êêP Q
$str
êêR b
,
êêb c
$str
êêc o
,
êêp q
$strêêq É
,êêÉ Ñ
$strêêÖ ê
,êêë í
$strêêì û
,êêû ü
$strêê† ≠
}êêÆ Ø
)êêØ ∞
;êê∞ ±
MarkReachables
íí "
(
íí" #
output
íí# )
,
íí) *
obj
íí+ .
,
íí. /
objRefCollection
íí0 @
)
íí@ A
;
ííA B
}
ìì 
}
îî 
string
óó 
commitOnExit
óó 
=
óó  !
$str
óó" $
;
óó$ %
string
òò 
commitInSource
òò !
=
òò" #
$str
òò$ &
;
òò& '
string
ôô  
UpdateInsertDelete
ôô %
=
ôô& '
$str
ôô( *
;
ôô* +
string
öö 
doCommit
öö 
=
öö 
$str
öö  
;
öö  !
foreach
õõ 
(
õõ 
KBObject
õõ 
objRef
õõ $
in
õõ% '
objRefCollection
õõ( 8
)
õõ8 9
{
úú 
if
ùù 
(
ùù 
objRef
ùù 
is
ùù 
	Procedure
ùù '
)
ùù' (
{
ûû 
object
üü 
aux
üü 
=
üü  
objRef
üü! '
.
üü' (
GetPropertyValue
üü( 8
(
üü8 9
$str
üü9 G
)
üüG H
;
üüH I
if
†† 
(
†† 
aux
†† 
!=
†† 
null
†† #
)
††# $
{
°° 
commitOnExit
¢¢ $
=
¢¢% &
aux
¢¢' *
.
¢¢* +
ToString
¢¢+ 3
(
¢¢3 4
)
¢¢4 5
==
¢¢6 8
$str
¢¢9 >
?
¢¢? @
$str
¢¢A F
:
¢¢G H
$str
¢¢I L
;
¢¢L M
}
§§  
UpdateInsertDelete
•• &
=
••' (
ObjectUpdateDB
••) 7
(
••7 8
objRef
••8 >
)
••> ?
?
••? @
$str
••@ E
:
••E F
$str
••F H
;
••H I
	Procedure
ßß 
prc
ßß !
=
ßß" #
(
ßß$ %
	Procedure
ßß% .
)
ßß. /
objRef
ßß/ 5
;
ßß5 6
if
®® 
(
®® 
	Functions
®® !
.
®®! "
ExtractComments
®®" 1
(
®®1 2
prc
®®2 5
.
®®5 6
ProcedurePart
®®6 C
.
®®C D
Source
®®D J
.
®®J K
ToString
®®K S
(
®®S T
)
®®T U
.
®®U V
ToUpper
®®V ]
(
®®] ^
)
®®^ _
)
®®_ `
.
®®` a
Contains
®®a i
(
®®i j
$str
®®j r
)
®®r s
)
®®s t
commitInSource
©© &
=
©©' (
$str
©©) .
;
©©. /
else
™™ 
commitInSource
´´ &
=
´´' (
$str
´´) +
;
´´+ ,
if
≠≠ 
(
≠≠ 
(
≠≠ 
(
≠≠ 
commitOnExit
≠≠ &
==
≠≠' )
$str
≠≠* /
)
≠≠/ 0
&&
≠≠1 3
(
≠≠4 5 
UpdateInsertDelete
≠≠5 G
==
≠≠H J
$str
≠≠K P
)
≠≠P Q
)
≠≠Q R
||
≠≠S U
(
≠≠V W
commitInSource
≠≠W e
==
≠≠f h
$str
≠≠i n
)
≠≠n o
)
≠≠o p
doCommit
ÆÆ  
=
ÆÆ! "
$str
ÆÆ# (
;
ÆÆ( )
else
ØØ 
doCommit
∞∞  
=
∞∞! "
$str
∞∞# %
;
∞∞% &
writer
≤≤ 
.
≤≤ 
AddTableData
≤≤ '
(
≤≤' (
new
≤≤( +
string
≤≤, 2
[
≤≤2 3
]
≤≤3 4
{
≤≤5 6
	Functions
≤≤7 @
.
≤≤@ A

linkObject
≤≤A K
(
≤≤K L
objRef
≤≤L R
)
≤≤R S
,
≤≤S T
objRef
≤≤U [
.
≤≤[ \
Description
≤≤\ g
,
≤≤g h
commitOnExit
≤≤i u
,
≤≤u v!
UpdateInsertDelete≤≤w â
,≤≤â ä
commitInSource≤≤ã ô
,≤≤ô ö
doCommit≤≤õ £
,≤≤£ §
objRef≤≤• ´
.≤≤´ ¨
	Timestamp≤≤¨ µ
.≤≤µ ∂
ToString≤≤∂ æ
(≤≤æ ø
)≤≤ø ¿
,≤≤¿ ¡
objRef≤≤¬ »
.≤≤» …

LastUpdate≤≤… ”
.≤≤” ‘
ToString≤≤‘ ‹
(≤≤‹ ›
)≤≤› ﬁ
}≤≤ﬂ ‡
)≤≤‡ ·
;≤≤· ‚
}
¥¥ 
}
∂∂ 
writer
ππ 
.
ππ 
	AddFooter
ππ 
(
ππ 
)
ππ 
;
ππ 
writer
∫∫ 
.
∫∫ 
Close
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫ 
bool
ºº 
success
ºº 
=
ºº 
true
ºº 
;
ºº  
output
ΩΩ 
.
ΩΩ 

EndSection
ΩΩ 
(
ΩΩ 
title
ΩΩ #
,
ΩΩ# $
success
ΩΩ% ,
)
ΩΩ, -
;
ΩΩ- .
KBDoctorHelper
øø 
.
øø !
ShowKBDoctorResults
øø .
(
øø. /

outputFile
øø/ 9
)
øø9 :
;
øø: ;
}
√√ 	
public
≈≈ 
static
≈≈ 
Boolean
≈≈ 
ObjectUpdateDB
≈≈ ,
(
≈≈, -
KBObject
≈≈- 5
obj
≈≈6 9
)
≈≈9 :
{
∆∆ 	
KBModel
«« 
model
«« 
=
«« 
obj
«« 
.
««  
Model
««  %
;
««% &
IList
»» 
<
»» 
KBObject
»» 
>
»» 
tableUpdInsDel
»» *
=
»»+ ,
(
»»- .
from
»». 2
r
»»3 4
in
»»5 7
model
»»8 =
.
»»= >
GetReferencesFrom
»»> O
(
»»O P
obj
»»P S
.
»»S T
Key
»»T W
,
»»W X
LinkType
»»Y a
.
»»a b

UsedObject
»»b l
)
»»l m
where
……. 3
r
……4 5
.
……5 6
ReferenceType
……6 C
==
……D F
ReferenceType
……G T
.
……T U
WeakExternal
……U a
where
  . 3
(
  4 5
ReferenceTypeInfo
  5 F
.
  F G
HasUpdateAccess
  G V
(
  V W
r
  W X
.
  X Y
LinkTypeInfo
  Y e
)
  e f
||
  g i
ReferenceTypeInfo
  j {
.
  { |
HasDeleteAccess  | ã
(  ã å
r  å ç
.  ç é
LinkTypeInfo  é ö
)  ö õ
||  ú û!
ReferenceTypeInfo  ü ∞
.  ∞ ±
HasInsertAccess  ± ¿
(  ¿ ¡
r  ¡ ¬
.  ¬ √
LinkTypeInfo  √ œ
)  œ –
)  – —
select
ÀÀ. 4
model
ÀÀ5 :
.
ÀÀ: ;
Objects
ÀÀ; B
.
ÀÀB C
Get
ÀÀC F
(
ÀÀF G
r
ÀÀG H
.
ÀÀH I
From
ÀÀI M
)
ÀÀM N
)
ÀÀN O
.
ÀÀO P
ToList
ÀÀP V
(
ÀÀV W
)
ÀÀW X
;
ÀÀX Y
return
ÃÃ 
(
ÃÃ 
tableUpdInsDel
ÃÃ "
.
ÃÃ" #
Count
ÃÃ# (
>
ÃÃ) *
$num
ÃÃ+ ,
)
ÃÃ, -
;
ÃÃ. /
}
ÕÕ 	
public
’’ 
static
’’ 
bool
’’ 
ReplaceEvents
’’ (
(
’’( )
KBObject
’’) 1
obj
’’2 5
,
’’5 6
string
’’7 =
txtfind
’’> E
,
’’E F
string
’’G M

txtreplace
’’N X
)
’’X Y
{
÷÷ 	
bool
◊◊ 
cambio
◊◊ 
=
◊◊ 
false
◊◊ 
;
◊◊  
if
ÿÿ 
(
ÿÿ 
(
ÿÿ 
obj
ÿÿ 
is
ÿÿ 
Transaction
ÿÿ #
)
ÿÿ# $
||
ÿÿ% '
(
ÿÿ( )
obj
ÿÿ) ,
is
ÿÿ- /
WebPanel
ÿÿ0 8
)
ÿÿ8 9
||
ÿÿ: <
(
ÿÿ= >
obj
ÿÿ> A
is
ÿÿB D
	WorkPanel
ÿÿE N
)
ÿÿN O
)
ÿÿO P
{
ŸŸ 

EventsPart
⁄⁄ 
evPart
⁄⁄ !
=
⁄⁄" #
obj
⁄⁄$ '
.
⁄⁄' (
Parts
⁄⁄( -
.
⁄⁄- .
Get
⁄⁄. 1
<
⁄⁄1 2

EventsPart
⁄⁄2 <
>
⁄⁄< =
(
⁄⁄= >
)
⁄⁄> ?
;
⁄⁄? @
if
€€ 
(
€€ 
evPart
€€ 
!=
€€ 
null
€€ "
)
€€" #
{
‹‹ 
string
›› 
evsource
›› #
=
››$ %
evPart
››& ,
.
››, -
Source
››- 3
;
››3 4
string
ﬂﬂ 
source2
ﬂﬂ "
=
ﬂﬂ# $
Regex
ﬂﬂ% *
.
ﬂﬂ* +
Replace
ﬂﬂ+ 2
(
ﬂﬂ2 3
evsource
ﬂﬂ3 ;
,
ﬂﬂ; <
txtfind
ﬂﬂ= D
,
ﬂﬂD E

txtreplace
ﬂﬂF P
,
ﬂﬂP Q
RegexOptions
ﬂﬂR ^
.
ﬂﬂ^ _

IgnoreCase
ﬂﬂ_ i
)
ﬂﬂi j
;
ﬂﬂj k
source2
‡‡ 
=
‡‡ 
source2
‡‡ %
.
‡‡% &
Replace
‡‡& -
(
‡‡- .
txtfind
‡‡. 5
.
‡‡5 6
ToLower
‡‡6 =
(
‡‡= >
)
‡‡> ?
,
‡‡? @

txtreplace
‡‡A K
)
‡‡K L
;
‡‡L M
source2
·· 
=
·· 
source2
·· %
.
··% &
Replace
··& -
(
··- .
txtfind
··. 5
.
··5 6
ToUpper
··6 =
(
··= >
)
··> ?
,
··? @

txtreplace
··A K
)
··K L
;
··L M
if
‚‚ 
(
‚‚ 
evsource
‚‚  
!=
‚‚! #
source2
‚‚$ +
)
‚‚+ ,
{
„„ 
evPart
‰‰ 
.
‰‰ 
Source
‰‰ %
=
‰‰& '
source2
‰‰( /
;
‰‰/ 0
cambio
ÂÂ 
=
ÂÂ  
true
ÂÂ! %
;
ÂÂ% &
}
ÊÊ 
}
ÁÁ 
}
ËË 
return
ÈÈ 
cambio
ÈÈ 
;
ÈÈ 
}
ÍÍ 	
public
ÚÚ 
static
ÚÚ 
bool
ÚÚ 
ReplaceSource
ÚÚ (
(
ÚÚ( )
KBObject
ÚÚ) 1
obj
ÚÚ2 5
,
ÚÚ5 6
string
ÚÚ7 =
txtfind
ÚÚ> E
,
ÚÚE F
string
ÚÚG M

txtreplace
ÚÚN X
)
ÚÚX Y
{
ÛÛ 	
bool
ÙÙ 
cambio
ÙÙ 
=
ÙÙ 
false
ÙÙ 
;
ÙÙ  
if
ıı 
(
ıı 
obj
ıı 
is
ıı 
	Procedure
ıı  
)
ıı  !
{
ˆˆ 
ProcedurePart
˜˜ 
Part
˜˜ "
=
˜˜# $
obj
˜˜% (
.
˜˜( )
Parts
˜˜) .
.
˜˜. /
Get
˜˜/ 2
<
˜˜2 3
ProcedurePart
˜˜3 @
>
˜˜@ A
(
˜˜A B
)
˜˜B C
;
˜˜C D
if
¯¯ 
(
¯¯ 
Part
¯¯ 
!=
¯¯ 
null
¯¯  
)
¯¯  !
{
˘˘ 
string
˙˙ 
source
˙˙ !
=
˙˙" #
Part
˙˙$ (
.
˙˙( )
Source
˙˙) /
;
˙˙/ 0
string
˚˚ 
source2
˚˚ "
=
˚˚# $
source
˚˚% +
.
˚˚+ ,
Replace
˚˚, 3
(
˚˚3 4
txtfind
˚˚4 ;
,
˚˚; <

txtreplace
˚˚= G
)
˚˚G H
;
˚˚H I
source2
¸¸ 
=
¸¸ 
source2
¸¸ %
.
¸¸% &
Replace
¸¸& -
(
¸¸- .
txtfind
¸¸. 5
.
¸¸5 6
ToLower
¸¸6 =
(
¸¸= >
)
¸¸> ?
,
¸¸? @

txtreplace
¸¸A K
)
¸¸K L
;
¸¸L M
source2
˝˝ 
=
˝˝ 
source2
˝˝ %
.
˝˝% &
Replace
˝˝& -
(
˝˝- .
txtfind
˝˝. 5
.
˝˝5 6
ToUpper
˝˝6 =
(
˝˝= >
)
˝˝> ?
,
˝˝? @

txtreplace
˝˝A K
)
˝˝K L
;
˝˝L M
if
ˇˇ 
(
ˇˇ 
source
ˇˇ 
!=
ˇˇ !
source2
ˇˇ" )
)
ˇˇ) *
{
ÄÄ 
Part
ÅÅ 
.
ÅÅ 
Source
ÅÅ #
=
ÅÅ$ %
source2
ÅÅ& -
;
ÅÅ- .
cambio
ÇÇ 
=
ÇÇ  
true
ÇÇ! %
;
ÇÇ% &
}
ÉÉ 
}
ÑÑ 
}
ÖÖ 
return
ÜÜ 
cambio
ÜÜ 
;
ÜÜ 
}
áá 	
public
èè 
static
èè 
bool
èè 
ReplaceWebForm
èè )
(
èè) *
KBObject
èè* 2
obj
èè3 6
,
èè6 7
string
èè8 >
txtfind
èè? F
,
èèF G
string
èèH N

txtreplace
èèO Y
)
èèY Z
{
êê 	
bool
ëë 
cambio
ëë 
=
ëë 
false
ëë 
;
ëë  
if
ìì 
(
ìì 
(
ìì 
obj
ìì 
is
ìì 
Transaction
ìì #
)
ìì# $
||
ìì% '
(
ìì( )
obj
ìì) ,
is
ìì- /
WebPanel
ìì0 8
)
ìì8 9
)
ìì9 :
{
îî 
WebFormPart
ïï 
wfPart
ïï "
=
ïï# $
obj
ïï% (
.
ïï( )
Parts
ïï) .
.
ïï. /
Get
ïï/ 2
<
ïï2 3
WebFormPart
ïï3 >
>
ïï> ?
(
ïï? @
)
ïï@ A
;
ïïA B
if
ññ 
(
ññ 
wfPart
ññ 
!=
ññ 
null
ññ "
)
ññ" #
{
óó 
XmlDocument
òò 
xmldoc
òò  &
=
òò' (
wfPart
òò) /
.
òò/ 0
Document
òò0 8
;
òò8 9
if
öö 
(
öö 
xmldoc
öö 
!=
öö !
null
öö" &
)
öö& '
{
õõ 
string
ùù 
source
ùù %
=
ùù& '
xmldoc
ùù( .
.
ùù. /
OuterXml
ùù/ 7
;
ùù7 8
string
üü 
source2
üü &
=
üü' (
source
üü) /
.
üü/ 0
Replace
üü0 7
(
üü7 8
txtfind
üü8 ?
,
üü? @

txtreplace
üüA K
)
üüK L
;
üüL M
source2
†† 
=
††  !
source2
††" )
.
††) *
Replace
††* 1
(
††1 2
txtfind
††2 9
.
††9 :
ToLower
††: A
(
††A B
)
††B C
,
††C D

txtreplace
††E O
)
††O P
;
††P Q
source2
°° 
=
°°  !
source2
°°" )
.
°°) *
Replace
°°* 1
(
°°1 2
txtfind
°°2 9
.
°°9 :
ToUpper
°°: A
(
°°A B
)
°°B C
,
°°C D

txtreplace
°°E O
)
°°O P
;
°°P Q
if
££ 
(
££ 
source
££ "
!=
££# %
source2
££& -
)
££- .
{
§§ 
XmlDocument
•• '
doc
••( +
=
••, -
new
••. 1
XmlDocument
••2 =
(
••= >
)
••> ?
;
••? @
doc
¶¶ 
.
¶¶  
LoadXml
¶¶  '
(
¶¶' (
source2
¶¶( /
)
¶¶/ 0
;
¶¶0 1
wfPart
ßß "
.
ßß" #
Document
ßß# +
=
ßß, -
doc
ßß. 1
;
ßß1 2
cambio
®® "
=
®®# $
true
®®% )
;
®®) *
}
©© 
}
™™ 
}
´´ 
}
¨¨ 
return
≠≠ 
cambio
≠≠ 
;
≠≠ 
}
ÆÆ 	
public
∞∞ 
static
∞∞ 
void
∞∞ $
CleanKBObjectVariables
∞∞ 1
(
∞∞1 2
KBObject
∞∞2 :
kbObj
∞∞; @
)
∞∞@ A
{
±± 	
try
≤≤ 
{
≥≥ 
VariablesPart
¥¥ 
variablesPart
¥¥ +
=
¥¥, -
null
¥¥. 2
;
¥¥2 3
if
µµ 
(
µµ 
!
µµ 
kbObj
µµ 
.
µµ 
IsCurrentVersion
µµ +
||
µµ, .
kbObj
µµ/ 4
.
µµ4 5
Dirty
µµ5 :
)
µµ: ;
{
∂∂ 
kbObj
∑∑ 
=
∑∑ 
KBObject
∑∑ $
.
∑∑$ %
Get
∑∑% (
(
∑∑( )
kbObj
∑∑) .
.
∑∑. /
Model
∑∑/ 4
,
∑∑4 5
kbObj
∑∑6 ;
.
∑∑; <
Key
∑∑< ?
)
∑∑? @
;
∑∑@ A
}
∏∏ 
List
ππ 
<
ππ 
Variable
ππ 
>
ππ 
list
ππ #
=
ππ$ %
new
ππ& )
List
ππ* .
<
ππ. /
Variable
ππ/ 7
>
ππ7 8
(
ππ8 9
)
ππ9 :
;
ππ: ;
List
∫∫ 
<
∫∫ 
IEnumerable
∫∫  
<
∫∫  !
VariableReference
∫∫! 2
>
∫∫2 3
>
∫∫3 4
list2
∫∫5 :
=
∫∫; <
new
∫∫= @
List
∫∫A E
<
∫∫E F
IEnumerable
∫∫F Q
<
∫∫Q R
VariableReference
∫∫R c
>
∫∫c d
>
∫∫d e
(
∫∫e f
)
∫∫f g
;
∫∫g h
List
ªª 
<
ªª 
VariableReference
ªª &
>
ªª& '
list3
ªª( -
=
ªª. /
new
ªª0 3
List
ªª4 8
<
ªª8 9
VariableReference
ªª9 J
>
ªªJ K
(
ªªK L
)
ªªL M
;
ªªM N
string
ºº 
text
ºº 
=
ºº 
null
ºº "
;
ºº" #
foreach
ΩΩ 
(
ΩΩ 
KBObjectPart
ΩΩ %
current
ΩΩ& -
in
ΩΩ. 0
kbObj
ΩΩ1 6
.
ΩΩ6 7
Parts
ΩΩ7 <
)
ΩΩ< =
{
ææ 
if
øø 
(
øø 
current
øø 
is
øø  "
VariablesPart
øø# 0
)
øø0 1
{
¿¿ 
variablesPart
¡¡ %
=
¡¡& '
(
¡¡( )
VariablesPart
¡¡) 6
)
¡¡6 7
current
¡¡7 >
;
¡¡> ?
}
¬¬ 
else
√√ 
{
ƒƒ 
if
≈≈ 
(
≈≈ 
current
≈≈ #
is
≈≈$ &$
IHasVariableReferences
≈≈' =
)
≈≈= >
{
∆∆ 
list2
«« !
.
««! "
Add
««" %
(
««% &
(
««& '
(
««' ($
IHasVariableReferences
««( >
)
««> ?
current
««? F
)
««F G
.
««G H$
GetReferencedVariables
««H ^
(
««^ _
)
««_ `
)
««` a
;
««a b
}
»» 
}
…… 
if
   
(
   
current
   
is
    "

LayoutPart
  # -
&&
  . 0
(
  1 2
(
  2 3

LayoutPart
  3 =
)
  = >
current
  > E
)
  E F
.
  F G
Layout
  G M
!=
  N P
null
  Q U
)
  U V
{
ÀÀ 
using
ÃÃ 
(
ÃÃ 
IEnumerator
ÃÃ *
<
ÃÃ* +
IReportBand
ÃÃ+ 6
>
ÃÃ6 7
enumerator2
ÃÃ8 C
=
ÃÃD E
(
ÃÃF G
(
ÃÃG H

LayoutPart
ÃÃH R
)
ÃÃR S
current
ÃÃS Z
)
ÃÃZ [
.
ÃÃ[ \
Layout
ÃÃ\ b
.
ÃÃb c
ReportBands
ÃÃc n
.
ÃÃn o
GetEnumerator
ÃÃo |
(
ÃÃ| }
)
ÃÃ} ~
)
ÃÃ~ 
{
ÕÕ 
while
ŒŒ !
(
ŒŒ" #
enumerator2
ŒŒ# .
.
ŒŒ. /
MoveNext
ŒŒ/ 7
(
ŒŒ7 8
)
ŒŒ8 9
)
ŒŒ9 :
{
œœ 
IReportBand
––  +
current2
––, 4
=
––5 6
enumerator2
––7 B
.
––B C
Current
––C J
;
––J K
foreach
——  '
(
——( )
IReportComponent
——) 9
current3
——: B
in
——C E
current2
——F N
.
——N O
Controls
——O W
)
——W X
{
““  !
if
””$ &
(
””' (
current3
””( 0
is
””1 3
ReportAttribute
””4 C
)
””C D
{
‘‘$ %
VariableReference
’’( 9
item
’’: >
=
’’? @
new
’’A D
VariableReference
’’E V
(
’’V W
current3
’’W _
.
’’_ `
Name
’’` d
)
’’d e
;
’’e f
list3
÷÷( -
.
÷÷- .
Add
÷÷. 1
(
÷÷1 2
item
÷÷2 6
)
÷÷6 7
;
÷÷7 8
}
◊◊$ %
}
ÿÿ  !
}
ŸŸ 
continue
⁄⁄ $
;
⁄⁄$ %
}
€€ 
}
‹‹ 
if
›› 
(
›› 
current
›› 
is
››  "
WebFormPart
››# .
&&
››/ 1
(
››2 3
(
››3 4
WebFormPart
››4 ?
)
››? @
current
››@ G
)
››G H
.
››H I
Document
››I Q
!=
››R T
null
››U Y
)
››Y Z
{
ﬁﬁ 
text
ﬂﬂ 
=
ﬂﬂ 
(
ﬂﬂ  
(
ﬂﬂ  !
WebFormPart
ﬂﬂ! ,
)
ﬂﬂ, -
current
ﬂﬂ- 4
)
ﬂﬂ4 5
.
ﬂﬂ5 6
Document
ﬂﬂ6 >
.
ﬂﬂ> ?
OuterXml
ﬂﬂ? G
;
ﬂﬂG H
}
‡‡ 
}
·· 
if
‚‚ 
(
‚‚ 
list3
‚‚ 
.
‚‚ 
Count
‚‚ 
>
‚‚  !
$num
‚‚" #
)
‚‚# $
{
„„ 
list2
‰‰ 
.
‰‰ 
Add
‰‰ 
(
‰‰ 
list3
‰‰ #
)
‰‰# $
;
‰‰$ %
}
ÂÂ 
if
ÊÊ 
(
ÊÊ 
variablesPart
ÊÊ !
!=
ÊÊ" $
null
ÊÊ% )
&&
ÊÊ* ,
!
ÊÊ- .
variablesPart
ÊÊ. ;
.
ÊÊ; <
GetPropertyValue
ÊÊ< L
<
ÊÊL M
bool
ÊÊM Q
>
ÊÊQ R
(
ÊÊR S
$str
ÊÊS ^
)
ÊÊ^ _
)
ÊÊ_ `
{
ÁÁ 
foreach
ËË 
(
ËË 
Variable
ËË %
current4
ËË& .
in
ËË/ 1
variablesPart
ËË2 ?
.
ËË? @
	Variables
ËË@ I
)
ËËI J
{
ÈÈ 
if
ÍÍ 
(
ÍÍ 
!
ÍÍ 
current4
ÍÍ %
.
ÍÍ% &
IsAutoDefined
ÍÍ& 3
&&
ÍÍ4 6
!
ÍÍ7 8
current4
ÍÍ8 @
.
ÍÍ@ A

IsStandard
ÍÍA K
&&
ÍÍL N
(
ÍÍO P

Properties
ÍÍP Z
.
ÍÍZ [
ATT
ÍÍ[ ^
.
ÍÍ^ _
Dimensions_Enum
ÍÍ_ n
)
ÍÍn o
Enum
ÍÍo s
.
ÍÍs t
Parse
ÍÍt y
(
ÍÍy z
typeofÍÍz Ä
(ÍÍÄ Å

PropertiesÍÍÅ ã
.ÍÍã å
ATTÍÍå è
.ÍÍè ê
Dimensions_EnumÍÍê ü
)ÍÍü †
,ÍÍ† °
current4ÍÍ¢ ™
.ÍÍ™ ´ 
GetPropertyValueÍÍ´ ª
<ÍÍª º
stringÍÍº ¬
>ÍÍ¬ √
(ÍÍ√ ƒ
$strÍÍƒ œ
)ÍÍœ –
)ÍÍ– —
==ÍÍ“ ‘

PropertiesÍÍ’ ﬂ
.ÍÍﬂ ‡
ATTÍÍ‡ „
.ÍÍ„ ‰
Dimensions_EnumÍÍ‰ Û
.ÍÍÛ Ù
ScalarÍÍÙ ˙
)ÍÍ˙ ˚
{
ÎÎ 
bool
ÏÏ  
flag
ÏÏ! %
=
ÏÏ& '
false
ÏÏ( -
;
ÏÏ- .
foreach
ÌÌ #
(
ÌÌ$ %
IEnumerable
ÌÌ% 0
<
ÌÌ0 1
VariableReference
ÌÌ1 B
>
ÌÌB C
current5
ÌÌD L
in
ÌÌM O
list2
ÌÌP U
)
ÌÌU V
{
ÓÓ 
foreach
ÔÔ  '
(
ÔÔ( )
VariableReference
ÔÔ) :
current6
ÔÔ; C
in
ÔÔD F
current5
ÔÔG O
)
ÔÔO P
{
  !
if
ÒÒ$ &
(
ÒÒ' (
current6
ÒÒ( 0
.
ÒÒ0 1
Name
ÒÒ1 5
.
ÒÒ5 6
Replace
ÒÒ6 =
(
ÒÒ= >
$str
ÒÒ> A
,
ÒÒA B
$str
ÒÒC E
)
ÒÒE F
.
ÒÒF G
Equals
ÒÒG M
(
ÒÒM N
current4
ÒÒN V
.
ÒÒV W
Name
ÒÒW [
.
ÒÒ[ \
Replace
ÒÒ\ c
(
ÒÒc d
$str
ÒÒd g
,
ÒÒg h
$str
ÒÒi k
)
ÒÒk l
,
ÒÒl m
StringComparison
ÒÒn ~
.
ÒÒ~ )
InvariantCultureIgnoreCaseÒÒ ô
)ÒÒô ö
)ÒÒö õ
{
ÚÚ$ %
flag
ÛÛ( ,
=
ÛÛ- .
true
ÛÛ/ 3
;
ÛÛ3 4
break
ÙÙ( -
;
ÙÙ- .
}
ıı$ %
}
ˆˆ  !
if
˜˜  "
(
˜˜# $
flag
˜˜$ (
)
˜˜( )
{
¯¯  !
break
˘˘$ )
;
˘˘) *
}
˙˙  !
}
˚˚ 
if
¸¸ 
(
¸¸  
!
¸¸  !
flag
¸¸! %
&&
¸¸& (
(
¸¸) *
text
¸¸* .
==
¸¸/ 1
null
¸¸2 6
||
¸¸7 9
!
¸¸: ;
text
¸¸; ?
.
¸¸? @
Contains
¸¸@ H
(
¸¸H I
$str
¸¸I Q
+
¸¸R S
current4
¸¸T \
.
¸¸\ ]
Id
¸¸] _
+
¸¸` a
$str
¸¸b f
)
¸¸f g
)
¸¸g h
)
¸¸h i
{
˝˝ 
list
˛˛  $
.
˛˛$ %
Add
˛˛% (
(
˛˛( )
current4
˛˛) 1
)
˛˛1 2
;
˛˛2 3
}
ˇˇ 
}
Ä	Ä	 
}
Å	Å	 
if
Ç	Ç	 
(
Ç	Ç	 
list
Ç	Ç	 
.
Ç	Ç	 
Count
Ç	Ç	 "
>
Ç	Ç	# $
$num
Ç	Ç	% &
)
Ç	Ç	& '
{
É	É	 
string
Ñ	Ñ	 
text2
Ñ	Ñ	 $
=
Ñ	Ñ	% &
$str
Ñ	Ñ	' )
;
Ñ	Ñ	) *
foreach
Ö	Ö	 
(
Ö	Ö	  !
Variable
Ö	Ö	! )
current7
Ö	Ö	* 2
in
Ö	Ö	3 5
list
Ö	Ö	6 :
)
Ö	Ö	: ;
{
Ü	Ü	 
text2
á	á	 !
=
á	á	" #
text2
á	á	$ )
+
á	á	* +
$str
á	á	, 0
+
á	á	1 2
current7
á	á	3 ;
.
á	á	; <
Name
á	á	< @
;
á	á	@ A
variablesPart
à	à	 )
.
à	à	) *
Remove
à	à	* 0
(
à	à	0 1
current7
à	à	1 9
)
à	à	9 :
;
à	à	: ;
}
â	â	 
OutputMessages
ä	ä	 &
outputMessages
ä	ä	' 5
=
ä	ä	6 7
new
ä	ä	8 ;
OutputMessages
ä	ä	< J
(
ä	ä	J K
)
ä	ä	K L
;
ä	ä	L M
if
ã	ã	 
(
ã	ã	 
kbObj
ã	ã	 !
.
ã	ã	! "
Validate
ã	ã	" *
(
ã	ã	* +
outputMessages
ã	ã	+ 9
)
ã	ã	9 :
)
ã	ã	: ;
{
å	å	 
kbObj
ç	ç	 !
.
ç	ç	! "
Save
ç	ç	" &
(
ç	ç	& '
)
ç	ç	' (
;
ç	ç	( )
CommonServices
è	è	 *
.
è	è	* +
Output
è	è	+ 1
.
è	è	1 2
AddLine
è	è	2 9
(
è	è	9 :
$str
è	è	: l
+
è	è	m n
text2
è	è	o t
.
è	è	t u
	Substring
è	è	u ~
(
è	è	~ 
$numè	è	 Ä
)è	è	Ä Å
)è	è	Å Ç
;è	è	Ç É
}
ë	ë	 
using
í	í	 
(
í	í	 
IEnumerator
í	í	 *
<
í	í	* +
BaseMessage
í	í	+ 6
>
í	í	6 7
enumerator8
í	í	8 C
=
í	í	D E
outputMessages
í	í	F T
.
í	í	T U
GetEnumerator
í	í	U b
(
í	í	b c
)
í	í	c d
)
í	í	d e
{
ì	ì	 
while
î	î	 !
(
î	î	" #
enumerator8
î	î	# .
.
î	î	. /
MoveNext
î	î	/ 7
(
î	î	7 8
)
î	î	8 9
)
î	î	9 :
{
ï	ï	 
BaseMessage
ñ	ñ	  +
current8
ñ	ñ	, 4
=
ñ	ñ	5 6
enumerator8
ñ	ñ	7 B
.
ñ	ñ	B C
Current
ñ	ñ	C J
;
ñ	ñ	J K
if
ó	ó	  "
(
ó	ó	# $
current8
ó	ó	$ ,
.
ó	ó	, -
Level
ó	ó	- 2
==
ó	ó	3 5
MessageLevel
ó	ó	6 B
.
ó	ó	B C
Error
ó	ó	C H
)
ó	ó	H I
{
ò	ò	  !
CommonServices
ô	ô	$ 2
.
ô	ô	2 3
Output
ô	ô	3 9
.
ô	ô	9 :
AddErrorLine
ô	ô	: F
(
ô	ô	F G
current8
ô	ô	G O
.
ô	ô	O P
Text
ô	ô	P T
)
ô	ô	T U
;
ô	ô	U V
}
ö	ö	  !
}
õ	õ	 
}
ù	ù	 
}
û	û	 
}
†	†	 
}
¢	¢	 
catch
£	£	 
(
£	£	 
	Exception
£	£	 
ex
£	£	 
)
£	£	  
{
§	§	 
CommonServices
•	•	 
.
•	•	 
Output
•	•	 %
.
•	•	% &
AddWarningLine
•	•	& 4
(
•	•	4 5
$str
•	•	5 ?
+
•	•	@ A
kbObj
•	•	B G
.
•	•	G H
Name
•	•	H L
+
•	•	M N
$str
•	•	O }
+
•	•	~ 
ex•	•	Ä Ç
.•	•	Ç É
Message•	•	É ä
)•	•	ä ã
;•	•	ã å
}
¶	¶	 
}
®	®	 	
internal
´	´	 
static
´	´	 
void
´	´	 
HistoryGXServer
´	´	 ,
(
´	´	, -
)
´	´	- .
{
¨	¨	 	
}
∞	∞	 	
public
¥	¥	 
static
¥	¥	 
void
¥	¥	 %
LoadAndCheckUsedClasses
¥	¥	 2
(
¥	¥	2 3

IKBService
¥	¥	3 =
kbserv
¥	¥	> D
,
¥	¥	D E
IOutputService
¥	¥	F T
output
¥	¥	U [
,
¥	¥	[ \
StringCollection
¥	¥	] m
UsedClasses
¥	¥	n y
,
¥	¥	y z
StringCollection¥	¥	{ ã
ThemeClasses¥	¥	å ò
,¥	¥	ò ô!
KBDoctorXMLWriter¥	¥	ö ´
writer¥	¥	¨ ≤
)¥	¥	≤ ≥
{
µ	µ	 	
int
∑	∑	 
cant
∑	∑	 
=
∑	∑	 
$num
∑	∑	 
;
∑	∑	 
foreach
π	π	 
(
π	π	 
KBObject
π	π	 
obj
π	π	 !
in
π	π	" $
kbserv
π	π	% +
.
π	π	+ ,
CurrentModel
π	π	, 8
.
π	π	8 9
Objects
π	π	9 @
.
π	π	@ A
GetAll
π	π	A G
(
π	π	G H
)
π	π	H I
)
π	π	I J
{
∫	∫	 
if
ª	ª	 
(
ª	ª	 
(
ª	ª	 
cant
ª	ª	 
%
ª	ª	 
$num
ª	ª	 
)
ª	ª	  
==
ª	ª	! #
$num
ª	ª	$ %
)
ª	ª	% &
{
º	º	 
output
Ω	Ω	 
.
Ω	Ω	 
AddLine
Ω	Ω	 "
(
Ω	Ω	" #
$str
Ω	Ω	# 0
+
Ω	Ω	1 2
cant
Ω	Ω	3 7
.
Ω	Ω	7 8
ToString
Ω	Ω	8 @
(
Ω	Ω	@ A
)
Ω	Ω	A B
+
Ω	Ω	C D
$str
Ω	Ω	E P
)
Ω	Ω	P Q
;
Ω	Ω	Q R
}
æ	æ	 
cant
ø	ø	 
+=
ø	ø	 
$num
ø	ø	 
;
ø	ø	 
if
¿	¿	 
(
¿	¿	 
(
¿	¿	 
(
¿	¿	 
obj
¿	¿	 
is
¿	¿	 
Transaction
¿	¿	 (
)
¿	¿	( )
||
¿	¿	* ,
(
¿	¿	- .
obj
¿	¿	. 1
is
¿	¿	2 4
WebPanel
¿	¿	5 =
)
¿	¿	= >
)
¿	¿	> ?
&&
¿	¿	@ B
(
¿	¿	C D
obj
¿	¿	D G
.
¿	¿	G H
GetPropertyValue
¿	¿	H X
<
¿	¿	X Y
bool
¿	¿	Y ]
>
¿	¿	] ^
(
¿	¿	^ _

Properties
¿	¿	_ i
.
¿	¿	i j
TRN
¿	¿	j m
.
¿	¿	m n
GenerateObject
¿	¿	n |
)
¿	¿	| }
)
¿	¿	} ~
)
¿	¿	~ 
{
¡	¡	 
WebFormPart
¬	¬	 
webForm
¬	¬	  '
=
¬	¬	( )
obj
¬	¬	* -
.
¬	¬	- .
Parts
¬	¬	. 3
.
¬	¬	3 4
Get
¬	¬	4 7
<
¬	¬	7 8
WebFormPart
¬	¬	8 C
>
¬	¬	C D
(
¬	¬	D E
)
¬	¬	E F
;
¬	¬	F G
foreach
√	√	 
(
√	√	 
IWebTag
√	√	 $
tag
√	√	% (
in
√	√	) +
WebFormHelper
√	√	, 9
.
√	√	9 :
EnumerateWebTag
√	√	: I
(
√	√	I J
webForm
√	√	J Q
)
√	√	Q R
)
√	√	R S
{
ƒ	ƒ	 
if
≈	≈	 
(
≈	≈	 
tag
≈	≈	 
.
≈	≈	  

Properties
≈	≈	  *
!=
≈	≈	+ -
null
≈	≈	. 2
)
≈	≈	2 3
{
∆	∆	  
PropertyDescriptor
«	«	 .
prop
«	«	/ 3
=
«	«	4 5
tag
«	«	6 9
.
«	«	9 :

Properties
«	«	: D
.
«	«	D E0
"GetPropertyDescriptorByDisplayName
«	«	E g
(
«	«	g h
$str
«	«	h o
)
«	«	o p
;
«	«	p q
if
»	»	 
(
»	»	  
prop
»	»	  $
!=
»	»	% '
null
»	»	( ,
)
»	»	, -
{
…	…	 %
ThemeClassReferenceList
À	À	  7
miclasslist
À	À	8 C
=
À	À	D E
new
À	À	F I%
ThemeClassReferenceList
À	À	J a
(
À	À	a b
)
À	À	b c
;
À	À	c d
try
Ã	Ã	  #
{
Õ	Õ	  !
miclasslist
Œ	Œ	$ /
=
Œ	Œ	0 1
(
Œ	Œ	2 3%
ThemeClassReferenceList
Œ	Œ	3 J
)
Œ	Œ	J K
prop
Œ	Œ	K O
.
Œ	Œ	O P
GetValue
Œ	Œ	P X
(
Œ	Œ	X Y
new
Œ	Œ	Y \
object
Œ	Œ	] c
(
Œ	Œ	c d
)
Œ	Œ	d e
)
Œ	Œ	e f
;
Œ	Œ	f g
}
œ	œ	  !
catch
–	–	  %
(
–	–	& '
	Exception
–	–	' 0
e
–	–	1 2
)
–	–	2 3
{
–	–	4 5
}
–	–	6 7
;
–	–	7 8
foreach
—	—	  '
(
—	—	( )

ThemeClass
—	—	) 3
miclass
—	—	4 ;
in
—	—	< >
miclasslist
—	—	? J
.
—	—	J K
GetThemeClasses
—	—	K Z
(
—	—	Z [
obj
—	—	[ ^
.
—	—	^ _
Model
—	—	_ d
)
—	—	d e
)
—	—	e f
{
“	“	  !
if
”	”	$ &
(
”	”	' (
miclass
”	”	( /
!=
”	”	0 2
null
”	”	3 7
)
”	”	7 8
{
‘	‘	$ %
string
’	’	( .
miclstr
’	’	/ 6
=
’	’	7 8
miclass
’	’	9 @
.
’	’	@ A
Name
’	’	A E
.
’	’	E F
ToLower
’	’	F M
(
’	’	M N
)
’	’	N O
;
’	’	O P
if
÷	÷	( *
(
÷	÷	+ ,
!
÷	÷	, -
UsedClasses
÷	÷	- 8
.
÷	÷	8 9
Contains
÷	÷	9 A
(
÷	÷	A B
miclstr
÷	÷	B I
)
÷	÷	I J
)
÷	÷	J K
{
◊	◊	( )
UsedClasses
ÿ	ÿ	, 7
.
ÿ	ÿ	7 8
Add
ÿ	ÿ	8 ;
(
ÿ	ÿ	; <
miclstr
ÿ	ÿ	< C
)
ÿ	ÿ	C D
;
ÿ	ÿ	D E
}
Ÿ	Ÿ	( )
if
⁄	⁄	( *
(
⁄	⁄	+ ,
!
⁄	⁄	, -
ThemeClasses
⁄	⁄	- 9
.
⁄	⁄	9 :
Contains
⁄	⁄	: B
(
⁄	⁄	B C
miclstr
⁄	⁄	C J
)
⁄	⁄	J K
)
⁄	⁄	K L
{
€	€	( )
bool
‹	‹	, 0 
classEstaEnElTheme
‹	‹	1 C
=
‹	‹	D E:
,VeoSiClassEstaContenidaEnAlgunaClassDelTheme
‹	‹	F r
(
‹	‹	r s
ThemeClasses
‹	‹	s 
,‹	‹	 Ä
miclstr‹	‹	Å à
)‹	‹	à â
;‹	‹	â ä
if
›	›	, .
(
›	›	/ 0
!
›	›	0 1 
classEstaEnElTheme
›	›	1 C
)
›	›	C D
{
ﬁ	ﬁ	, -
string
ﬂ	ﬂ	0 6
objName
ﬂ	ﬂ	7 >
=
ﬂ	ﬂ	? @
obj
ﬂ	ﬂ	A D
.
ﬂ	ﬂ	D E
Name
ﬂ	ﬂ	E I
;
ﬂ	ﬂ	I J
output
‡	‡	0 6
.
‡	‡	6 7
AddLine
‡	‡	7 >
(
‡	‡	> ?
$str
‡	‡	? K
+
‡	‡	L M
obj
‡	‡	N Q
.
‡	‡	Q R
Name
‡	‡	R V
+
‡	‡	W X
$str
‡	‡	Y l
+
‡	‡	m n
miclstr
‡	‡	o v
+
‡	‡	w x
$str‡	‡	y î
)‡	‡	î ï
;‡	‡	ï ñ
string
·	·	0 6
objNameLink
·	·	7 B
=
·	·	C D
	Functions
·	·	E N
.
·	·	N O

linkObject
·	·	O Y
(
·	·	Y Z
obj
·	·	Z ]
)
·	·	] ^
;
·	·	^ _
writer
‚	‚	0 6
.
‚	‚	6 7
AddTableData
‚	‚	7 C
(
‚	‚	C D
new
‚	‚	D G
string
‚	‚	H N
[
‚	‚	N O
]
‚	‚	O P
{
‚	‚	Q R
objNameLink
‚	‚	S ^
,
‚	‚	^ _
miclstr
‚	‚	` g
,
‚	‚	g h
$str‚	‚	i É
}‚	‚	Ñ Ö
)‚	‚	Ö Ü
;‚	‚	Ü á
}
„	„	, -
}
‰	‰	( )
}
Â	Â	$ %
}
Ê	Ê	  !
}
Á	Á	 
}
Ë	Ë	 
}
È	È	 
}
Í	Í	 
}
Î	Î	 
}
Ï	Ï	 	
public
Ô	Ô	 
static
Ô	Ô	 
void
Ô	Ô	 
LoadUsedClasses
Ô	Ô	 *
(
Ô	Ô	* +

IKBService
Ô	Ô	+ 5
kbserv
Ô	Ô	6 <
,
Ô	Ô	< =
IOutputService
Ô	Ô	> L
output
Ô	Ô	M S
,
Ô	Ô	S T
StringCollection
Ô	Ô	U e
UsedClasses
Ô	Ô	f q
)
Ô	Ô	q r
{
		 	
int
Ú	Ú	 
cant
Ú	Ú	 
=
Ú	Ú	 
$num
Ú	Ú	 
;
Ú	Ú	 
foreach
Ù	Ù	 
(
Ù	Ù	 
KBObject
Ù	Ù	 
obj
Ù	Ù	 !
in
Ù	Ù	" $
kbserv
Ù	Ù	% +
.
Ù	Ù	+ ,
CurrentModel
Ù	Ù	, 8
.
Ù	Ù	8 9
Objects
Ù	Ù	9 @
.
Ù	Ù	@ A
GetAll
Ù	Ù	A G
(
Ù	Ù	G H
)
Ù	Ù	H I
)
Ù	Ù	I J
{
ı	ı	 
if
ˆ	ˆ	 
(
ˆ	ˆ	 
(
ˆ	ˆ	 
cant
ˆ	ˆ	 
%
ˆ	ˆ	 
$num
ˆ	ˆ	 
)
ˆ	ˆ	  
==
ˆ	ˆ	! #
$num
ˆ	ˆ	$ %
)
ˆ	ˆ	% &
{
˜	˜	 
output
¯	¯	 
.
¯	¯	 
AddLine
¯	¯	 "
(
¯	¯	" #
$str
¯	¯	# 0
+
¯	¯	1 2
cant
¯	¯	3 7
.
¯	¯	7 8
ToString
¯	¯	8 @
(
¯	¯	@ A
)
¯	¯	A B
+
¯	¯	C D
$str
¯	¯	E P
)
¯	¯	P Q
;
¯	¯	Q R
}
˙	˙	 
cant
˚	˚	 
+=
˚	˚	 
$num
˚	˚	 
;
˚	˚	 
if
¸	¸	 
(
¸	¸	 
(
¸	¸	 
(
¸	¸	 
obj
¸	¸	 
is
¸	¸	 
Transaction
¸	¸	 (
)
¸	¸	( )
||
¸	¸	* ,
(
¸	¸	- .
obj
¸	¸	. 1
is
¸	¸	2 4
WebPanel
¸	¸	5 =
)
¸	¸	= >
||
¸	¸	? A
obj
¸	¸	B E
is
¸	¸	F H

ThemeClass
¸	¸	I S
)
¸	¸	S T
&&
¸	¸	U W
(
¸	¸	X Y
obj
¸	¸	Y \
.
¸	¸	\ ]
GetPropertyValue
¸	¸	] m
<
¸	¸	m n
bool
¸	¸	n r
>
¸	¸	r s
(
¸	¸	s t

Properties
¸	¸	t ~
.
¸	¸	~ 
TRN¸	¸	 Ç
.¸	¸	Ç É
GenerateObject¸	¸	É ë
)¸	¸	ë í
)¸	¸	í ì
)¸	¸	ì î
{
˝	˝	 
WebFormPart
˛	˛	 
webForm
˛	˛	  '
=
˛	˛	( )
obj
˛	˛	* -
.
˛	˛	- .
Parts
˛	˛	. 3
.
˛	˛	3 4
Get
˛	˛	4 7
<
˛	˛	7 8
WebFormPart
˛	˛	8 C
>
˛	˛	C D
(
˛	˛	D E
)
˛	˛	E F
;
˛	˛	F G
output
Ä
Ä
 
.
Ä
Ä
 
AddLine
Ä
Ä
 "
(
Ä
Ä
" #
$str
Ä
Ä
# /
+
Ä
Ä
0 1
obj
Ä
Ä
2 5
.
Ä
Ä
5 6
Name
Ä
Ä
6 :
)
Ä
Ä
: ;
;
Ä
Ä
; <
foreach
Ç
Ç
 
(
Ç
Ç
 
IWebTag
Ç
Ç
 $
tag
Ç
Ç
% (
in
Ç
Ç
) +
WebFormHelper
Ç
Ç
, 9
.
Ç
Ç
9 :
EnumerateWebTag
Ç
Ç
: I
(
Ç
Ç
I J
webForm
Ç
Ç
J Q
)
Ç
Ç
Q R
)
Ç
Ç
R S
{
É
É
 
if
Ñ
Ñ
 
(
Ñ
Ñ
 
tag
Ñ
Ñ
 
.
Ñ
Ñ
  

Properties
Ñ
Ñ
  *
!=
Ñ
Ñ
+ -
null
Ñ
Ñ
. 2
)
Ñ
Ñ
2 3
{
Ö
Ö
  
PropertyDescriptor
á
á
 .
prop
á
á
/ 3
=
á
á
4 5
tag
á
á
6 9
.
á
á
9 :

Properties
á
á
: D
.
á
á
D E0
"GetPropertyDescriptorByDisplayName
á
á
E g
(
á
á
g h
$str
á
á
h o
)
á
á
o p
;
á
á
p q
if
à
à
 
(
à
à
  
prop
à
à
  $
!=
à
à
% '
null
à
à
( ,
)
à
à
, -
{
â
â
 %
ThemeClassReferenceList
ã
ã
  7
miclasslist
ã
ã
8 C
=
ã
ã
D E
new
ã
ã
F I%
ThemeClassReferenceList
ã
ã
J a
(
ã
ã
a b
)
ã
ã
b c
;
ã
ã
c d
try
å
å
  #
{
ç
ç
  !
miclasslist
é
é
$ /
=
é
é
0 1
(
é
é
2 3%
ThemeClassReferenceList
é
é
3 J
)
é
é
J K
prop
é
é
K O
.
é
é
O P
GetValue
é
é
P X
(
é
é
X Y
new
é
é
Y \
object
é
é
] c
(
é
é
c d
)
é
é
d e
)
é
é
e f
;
é
é
f g
}
è
è
  !
catch
ê
ê
  %
(
ê
ê
& '
	Exception
ê
ê
' 0
e
ê
ê
1 2
)
ê
ê
2 3
{
ê
ê
4 5
Console
ê
ê
6 =
.
ê
ê
= >
	WriteLine
ê
ê
> G
(
ê
ê
G H
e
ê
ê
H I
.
ê
ê
I J
InnerException
ê
ê
J X
)
ê
ê
X Y
;
ê
ê
Y Z
}
ê
ê
[ \
;
ê
ê
\ ]
foreach
í
í
  '
(
í
í
( )

ThemeClass
í
í
) 3
miclass
í
í
4 ;
in
í
í
< >
miclasslist
í
í
? J
.
í
í
J K
GetThemeClasses
í
í
K Z
(
í
í
Z [
obj
í
í
[ ^
.
í
í
^ _
Model
í
í
_ d
)
í
í
d e
)
í
í
e f
{
ì
ì
  !
if
î
î
$ &
(
î
î
' (
miclass
î
î
( /
!=
î
î
0 2
null
î
î
3 7
)
î
î
7 8
{
ï
ï
$ %
string
ñ
ñ
( .
miclstr
ñ
ñ
/ 6
=
ñ
ñ
7 8
miclass
ñ
ñ
9 @
.
ñ
ñ
@ A
Root
ñ
ñ
A E
.
ñ
ñ
E F
Description
ñ
ñ
F Q
+
ñ
ñ
R S
$char
ñ
ñ
T W
+
ñ
ñ
X Y
miclass
ñ
ñ
Z a
.
ñ
ñ
a b
Name
ñ
ñ
b f
.
ñ
ñ
f g
ToLower
ñ
ñ
g n
(
ñ
ñ
n o
)
ñ
ñ
o p
;
ñ
ñ
p q
if
ó
ó
( *
(
ó
ó
+ ,
!
ó
ó
, -
UsedClasses
ó
ó
- 8
.
ó
ó
8 9
Contains
ó
ó
9 A
(
ó
ó
A B
miclstr
ó
ó
B I
)
ó
ó
I J
)
ó
ó
J K
{
ò
ò
( )
UsedClasses
ô
ô
, 7
.
ô
ô
7 8
Add
ô
ô
8 ;
(
ô
ô
; <
miclstr
ô
ô
< C
)
ô
ô
C D
;
ô
ô
D E
}
ö
ö
( )
}
õ
õ
$ %
}
ú
ú
  !
}
ù
ù
 
}
û
û
 
}
ü
ü
 
}
†
†
 
}
°
°
 
}
¢
¢
 	
public
§
§
 
static
§
§
 
void
§
§
 
	ClassUsed
§
§
 $
(
§
§
$ %
)
§
§
% &
{
•
•
 	

IKBService
¶
¶
 
kbserv
¶
¶
 
=
¶
¶
 

UIServices
¶
¶
  *
.
¶
¶
* +
KB
¶
¶
+ -
;
¶
¶
- .
string
®
®
 
title
®
®
 
=
®
®
 
$str
®
®
 4
;
®
®
4 5
string
©
©
 

outputFile
©
©
 
=
©
©
 
	Functions
©
©
  )
.
©
©
) *
CreateOutputFile
©
©
* :
(
©
©
: ;
kbserv
©
©
; A
,
©
©
A B
title
©
©
C H
)
©
©
H I
;
©
©
I J
IOutputService
´
´
 
output
´
´
 !
=
´
´
" #
CommonServices
´
´
$ 2
.
´
´
2 3
Output
´
´
3 9
;
´
´
9 :
output
¨
¨
 
.
¨
¨
 
StartSection
¨
¨
 
(
¨
¨
  
title
¨
¨
  %
)
¨
¨
% &
;
¨
¨
& '
KBDoctorXMLWriter
Æ
Æ
 
writer
Æ
Æ
 $
=
Æ
Æ
% &
new
Æ
Æ
' *
KBDoctorXMLWriter
Æ
Æ
+ <
(
Æ
Æ
< =

outputFile
Æ
Æ
= G
,
Æ
Æ
G H
Encoding
Æ
Æ
I Q
.
Æ
Æ
Q R
UTF8
Æ
Æ
R V
)
Æ
Æ
V W
;
Æ
Æ
W X
writer
Ø
Ø
 
.
Ø
Ø
 
	AddHeader
Ø
Ø
 
(
Ø
Ø
 
title
Ø
Ø
 "
)
Ø
Ø
" #
;
Ø
Ø
# $
writer
∞
∞
 
.
∞
∞
 
AddTableHeader
∞
∞
 !
(
∞
∞
! "
new
∞
∞
" %
string
∞
∞
& ,
[
∞
∞
, -
]
∞
∞
- .
{
∞
∞
/ 0
$str
∞
∞
1 8
,
∞
∞
8 9
$str
∞
∞
: A
}
∞
∞
B C
)
∞
∞
C D
;
∞
∞
D E
StringCollection
≤
≤
 
UsedClasses
≤
≤
 (
=
≤
≤
) *
new
≤
≤
+ .
StringCollection
≤
≤
/ ?
(
≤
≤
? @
)
≤
≤
@ A
;
≤
≤
A B
StringCollection
≥
≥
 
ThemeClasses
≥
≥
 )
=
≥
≥
* +
new
≥
≥
, /
StringCollection
≥
≥
0 @
(
≥
≥
@ A
)
≥
≥
A B
;
≥
≥
B C
LoadUsedClasses
µ
µ
 
(
µ
µ
 
kbserv
µ
µ
 "
,
µ
µ
" #
output
µ
µ
$ *
,
µ
µ
* +
UsedClasses
µ
µ
, 7
)
µ
µ
7 8
;
µ
µ
8 9
foreach
∏
∏
 
(
∏
∏
 
string
∏
∏
 
sd
∏
∏
 
in
∏
∏
 !
UsedClasses
∏
∏
" -
)
∏
∏
- .
{
π
π
 
writer
ª
ª
 
.
ª
ª
 
AddTableData
ª
ª
 #
(
ª
ª
# $
new
ª
ª
$ '
string
ª
ª
( .
[
ª
ª
. /
]
ª
ª
/ 0
{
ª
ª
1 2
sd
ª
ª
3 5
,
ª
ª
5 6
$str
ª
ª
7 9
}
ª
ª
: ;
)
ª
ª
; <
;
ª
ª
< =
output
º
º
 
.
º
º
 
AddLine
º
º
 
(
º
º
 
$str
º
º
 8
+
º
º
9 :
sd
º
º
; =
)
º
º
= >
;
º
º
> ?
}
æ
æ
 
writer
¿
¿
 
.
¿
¿
 
AddTableData
¿
¿
 
(
¿
¿
  
new
¿
¿
  #
string
¿
¿
$ *
[
¿
¿
* +
]
¿
¿
+ ,
{
¿
¿
- .
$str
¿
¿
/ B
,
¿
¿
B C
$str
¿
¿
D T
,
¿
¿
T U
$str
¿
¿
V [
}
¿
¿
\ ]
)
¿
¿
] ^
;
¿
¿
^ _
writer
¬
¬
 
.
¬
¬
 
	AddFooter
¬
¬
 
(
¬
¬
 
)
¬
¬
 
;
¬
¬
 
writer
√
√
 
.
√
√
 
Close
√
√
 
(
√
√
 
)
√
√
 
;
√
√
 
output
ƒ
ƒ
 
.
ƒ
ƒ
 

EndSection
ƒ
ƒ
 
(
ƒ
ƒ
 
title
ƒ
ƒ
 #
,
ƒ
ƒ
# $
true
ƒ
ƒ
% )
)
ƒ
ƒ
) *
;
ƒ
ƒ
* +
KBDoctorHelper
∆
∆
 
.
∆
∆
 !
ShowKBDoctorResults
∆
∆
 .
(
∆
∆
. /

outputFile
∆
∆
/ 9
)
∆
∆
9 :
;
∆
∆
: ;
}
»
»
 	
public
 
 
 
static
 
 
 
void
 
 
 '
RenameAttributesAndTables
 
 
 4
(
 
 
4 5
)
 
 
5 6
{
À
À
 	
string
Õ
Õ
 
message
Õ
Õ
 
=
Õ
Õ
 
$str
Õ
Õ
 w
+
Õ
Õ
x y
Environment
Œ
Œ
 
.
Œ
Œ
 
NewLine
Œ
Œ
 #
+
Œ
Œ
$ %
Environment
Œ
Œ
& 1
.
Œ
Œ
1 2
NewLine
Œ
Œ
2 9
+
Œ
Œ
: ;
$str
Œ
Œ
< U
;
Œ
Œ
U V
const
œ
œ
 
string
œ
œ
 
caption
œ
œ
  
=
œ
œ
! "
$str
œ
œ
# 0
;
œ
œ
0 1
var
–
–
 
result
–
–
 
=
–
–
 

MessageBox
–
–
 #
.
–
–
# $
Show
–
–
$ (
(
–
–
( )
message
–
–
) 0
,
–
–
0 1
caption
–
–
2 9
,
–
–
9 :
MessageBoxButtons
—
—
  1
.
—
—
1 2
YesNo
—
—
2 7
,
—
—
7 8
MessageBoxIcon
“
“
  .
.
“
“
. /
Exclamation
“
“
/ :
)
“
“
: ;
;
“
“
; <
if
’
’
 
(
’
’
 
result
’
’
 
==
’
’
 
DialogResult
’
’
 &
.
’
’
& '
Yes
’
’
' *
)
’
’
* +
{
÷
÷
 

IKBService
Ÿ
Ÿ
 
kbserv
Ÿ
Ÿ
 !
=
Ÿ
Ÿ
" #

UIServices
Ÿ
Ÿ
$ .
.
Ÿ
Ÿ
. /
KB
Ÿ
Ÿ
/ 1
;
Ÿ
Ÿ
1 2
KBModel
⁄
⁄
 
model
⁄
⁄
 
=
⁄
⁄
 
kbserv
⁄
⁄
  &
.
⁄
⁄
& '
	CurrentKB
⁄
⁄
' 0
.
⁄
⁄
0 1
DesignModel
⁄
⁄
1 <
;
⁄
⁄
< =
int
‹
‹
 
ATTNAME_LEN
‹
‹
 
=
‹
‹
  !
model
‹
‹
" '
.
‹
‹
' (
GetPropertyValue
‹
‹
( 8
<
‹
‹
8 9
int
‹
‹
9 <
>
‹
‹
< =
(
‹
‹
= >
$str
‹
‹
> K
)
‹
‹
K L
;
‹
‹
L M
int
›
›
 
TBLNAME_LEN
›
›
 
=
›
›
  !
model
›
›
" '
.
›
›
' (
GetPropertyValue
›
›
( 8
<
›
›
8 9
int
›
›
9 <
>
›
›
< =
(
›
›
= >
$str
›
›
> K
)
›
›
K L
;
›
›
L M
int
ﬁ
ﬁ
 
OBJNAME_LEN
ﬁ
ﬁ
 
=
ﬁ
ﬁ
  !
model
ﬁ
ﬁ
" '
.
ﬁ
ﬁ
' (
GetPropertyValue
ﬁ
ﬁ
( 8
<
ﬁ
ﬁ
8 9
int
ﬁ
ﬁ
9 <
>
ﬁ
ﬁ
< =
(
ﬁ
ﬁ
= >
$str
ﬁ
ﬁ
> K
)
ﬁ
ﬁ
K L
;
ﬁ
ﬁ
L M
string
‡
‡
 
title
‡
‡
 
=
‡
‡
 
$str
‡
‡
 U
;
‡
‡
U V
string
·
·
 

outputFile
·
·
 !
=
·
·
" #
	Functions
·
·
$ -
.
·
·
- .
CreateOutputFile
·
·
. >
(
·
·
> ?
kbserv
·
·
? E
,
·
·
E F
title
·
·
G L
)
·
·
L M
;
·
·
M N
KBDoctorXMLWriter
‚
‚
 !
writer
‚
‚
" (
=
‚
‚
) *
new
‚
‚
+ .
KBDoctorXMLWriter
‚
‚
/ @
(
‚
‚
@ A

outputFile
‚
‚
A K
,
‚
‚
K L
Encoding
‚
‚
M U
.
‚
‚
U V
UTF8
‚
‚
V Z
)
‚
‚
Z [
;
‚
‚
[ \
writer
„
„
 
.
„
„
 
	AddHeader
„
„
  
(
„
„
  !
title
„
„
! &
)
„
„
& '
;
„
„
' (
writer
‰
‰
 
.
‰
‰
 
AddTableHeader
‰
‰
 %
(
‰
‰
% &
new
‰
‰
& )
string
‰
‰
* 0
[
‰
‰
0 1
]
‰
‰
1 2
{
‰
‰
3 4
$str
‰
‰
5 ;
,
‰
‰
; <
$str
‰
‰
= E
,
‰
‰
E F
$str
‰
‰
G T
}
‰
‰
U V
)
‰
‰
V W
;
‰
‰
W X
IOutputService
Ê
Ê
 
output
Ê
Ê
 %
=
Ê
Ê
& '
CommonServices
Ê
Ê
( 6
.
Ê
Ê
6 7
Output
Ê
Ê
7 =
;
Ê
Ê
= >
output
Á
Á
 
.
Á
Á
 
StartSection
Á
Á
 #
(
Á
Á
# $
title
Á
Á
$ )
)
Á
Á
) *
;
Á
Á
* +
foreach
È
È
 
(
È
È
 
KBObject
È
È
 !
obj
È
È
" %
in
È
È
& (
kbserv
È
È
) /
.
È
È
/ 0
CurrentModel
È
È
0 <
.
È
È
< =
Objects
È
È
= D
.
È
È
D E
GetAll
È
È
E K
(
È
È
K L
)
È
È
L M
)
È
È
M N
{
Í
Í
 
Boolean
Î
Î
 
SaveObj
Î
Î
 #
=
Î
Î
$ %
false
Î
Î
& +
;
Î
Î
+ ,
if
Ï
Ï
 
(
Ï
Ï
 
(
Ï
Ï
 
obj
Ï
Ï
 
is
Ï
Ï
 
Artech
Ï
Ï
  &
.
Ï
Ï
& '
Genexus
Ï
Ï
' .
.
Ï
Ï
. /
Common
Ï
Ï
/ 5
.
Ï
Ï
5 6
Objects
Ï
Ï
6 =
.
Ï
Ï
= >
	Attribute
Ï
Ï
> G
)
Ï
Ï
G H
&&
Ï
Ï
I K
(
Ï
Ï
L M
obj
Ï
Ï
M P
.
Ï
Ï
P Q
Name
Ï
Ï
Q U
.
Ï
Ï
U V
Length
Ï
Ï
V \
>
Ï
Ï
] ^
ATTNAME_LEN
Ï
Ï
_ j
)
Ï
Ï
j k
)
Ï
Ï
k l
{
Ì
Ì
 
output
Ó
Ó
 
.
Ó
Ó
 
AddLine
Ó
Ó
 &
(
Ó
Ó
& '
$str
Ó
Ó
' <
+
Ó
Ó
= >
obj
Ó
Ó
? B
.
Ó
Ó
B C
Name
Ó
Ó
C G
+
Ó
Ó
H I
$str
Ó
Ó
J P
+
Ó
Ó
Q R
obj
Ó
Ó
S V
.
Ó
Ó
V W
Name
Ó
Ó
W [
.
Ó
Ó
[ \
	Substring
Ó
Ó
\ e
(
Ó
Ó
e f
$num
Ó
Ó
f g
,
Ó
Ó
g h
ATTNAME_LEN
Ó
Ó
i t
)
Ó
Ó
t u
)
Ó
Ó
u v
;
Ó
Ó
v w
obj
Ô
Ô
 
.
Ô
Ô
 
Name
Ô
Ô
  
=
Ô
Ô
! "
obj
Ô
Ô
# &
.
Ô
Ô
& '
Name
Ô
Ô
' +
.
Ô
Ô
+ ,
	Substring
Ô
Ô
, 5
(
Ô
Ô
5 6
$num
Ô
Ô
6 7
,
Ô
Ô
7 8
ATTNAME_LEN
Ô
Ô
9 D
)
Ô
Ô
D E
;
Ô
Ô
E F
SaveObj


 
=


  !
true


" &
;


& '
}
Ò
Ò
 
else
Ú
Ú
 
{
Û
Û
 
if
Ù
Ù
 
(
Ù
Ù
 
(
Ù
Ù
 
(
Ù
Ù
 
obj
Ù
Ù
 !
is
Ù
Ù
" $
Table
Ù
Ù
% *
)
Ù
Ù
* +
||
Ù
Ù
, .
(
Ù
Ù
/ 0
obj
Ù
Ù
0 3
is
Ù
Ù
4 6
Index
Ù
Ù
7 <
)
Ù
Ù
< =
)
Ù
Ù
= >
&&
Ù
Ù
? A
(
Ù
Ù
B C
obj
Ù
Ù
C F
.
Ù
Ù
F G
Name
Ù
Ù
G K
.
Ù
Ù
K L
Length
Ù
Ù
L R
>
Ù
Ù
S T
TBLNAME_LEN
Ù
Ù
U `
)
Ù
Ù
` a
)
Ù
Ù
a b
{
ı
ı
 
output
ˆ
ˆ
 "
.
ˆ
ˆ
" #
AddLine
ˆ
ˆ
# *
(
ˆ
ˆ
* +
$str
ˆ
ˆ
+ B
+
ˆ
ˆ
C D
obj
ˆ
ˆ
E H
.
ˆ
ˆ
H I
Name
ˆ
ˆ
I M
+
ˆ
ˆ
N O
$str
ˆ
ˆ
P V
+
ˆ
ˆ
W X
obj
ˆ
ˆ
Y \
.
ˆ
ˆ
\ ]
Name
ˆ
ˆ
] a
.
ˆ
ˆ
a b
	Substring
ˆ
ˆ
b k
(
ˆ
ˆ
k l
$num
ˆ
ˆ
l m
,
ˆ
ˆ
m n
TBLNAME_LEN
ˆ
ˆ
o z
)
ˆ
ˆ
z {
)
ˆ
ˆ
{ |
;
ˆ
ˆ
| }
obj
˜
˜
 
.
˜
˜
  
Name
˜
˜
  $
=
˜
˜
% &
obj
˜
˜
' *
.
˜
˜
* +
Name
˜
˜
+ /
.
˜
˜
/ 0
	Substring
˜
˜
0 9
(
˜
˜
9 :
$num
˜
˜
: ;
,
˜
˜
; <
TBLNAME_LEN
˜
˜
= H
)
˜
˜
H I
;
˜
˜
I J
SaveObj
¯
¯
 #
=
¯
¯
$ %
true
¯
¯
& *
;
¯
¯
* +
}
˘
˘
 
else
˙
˙
 
{
˚
˚
 
if
¸
¸
 
(
¸
¸
  
(
¸
¸
  !
obj
¸
¸
! $
.
¸
¸
$ %
Name
¸
¸
% )
.
¸
¸
) *
Length
¸
¸
* 0
>
¸
¸
1 2
OBJNAME_LEN
¸
¸
3 >
)
¸
¸
> ?
&&
¸
¸
@ B
ObjectsHelper
¸
¸
C P
.
¸
¸
P Q"
isGeneratedbyPattern
¸
¸
Q e
(
¸
¸
e f
obj
¸
¸
f i
)
¸
¸
i j
)
¸
¸
j k
{
˝
˝
 
output
˛
˛
  &
.
˛
˛
& '
AddLine
˛
˛
' .
(
˛
˛
. /
$str
˛
˛
/ A
+
˛
˛
B C
obj
˛
˛
D G
.
˛
˛
G H
Name
˛
˛
H L
+
˛
˛
M N
$str
˛
˛
O U
+
˛
˛
V W
obj
˛
˛
X [
.
˛
˛
[ \
Name
˛
˛
\ `
.
˛
˛
` a
	Substring
˛
˛
a j
(
˛
˛
j k
$num
˛
˛
k l
,
˛
˛
l m
OBJNAME_LEN
˛
˛
n y
)
˛
˛
y z
)
˛
˛
z {
;
˛
˛
{ |
obj
ˇ
ˇ
  #
.
ˇ
ˇ
# $
Name
ˇ
ˇ
$ (
=
ˇ
ˇ
) *
obj
ˇ
ˇ
+ .
.
ˇ
ˇ
. /
Name
ˇ
ˇ
/ 3
.
ˇ
ˇ
3 4
	Substring
ˇ
ˇ
4 =
(
ˇ
ˇ
= >
$num
ˇ
ˇ
> ?
,
ˇ
ˇ
? @
OBJNAME_LEN
ˇ
ˇ
A L
)
ˇ
ˇ
L M
;
ˇ
ˇ
M N
SaveObj
ÄÄ  '
=
ÄÄ( )
true
ÄÄ* .
;
ÄÄ. /
}
ÅÅ 
}
ÇÇ 
}
ÉÉ 
if
ÑÑ 
(
ÑÑ 
SaveObj
ÑÑ 
)
ÑÑ  
{
ÖÖ 
string
ÜÜ 
attNameLink
ÜÜ *
=
ÜÜ+ ,
	Functions
ÜÜ- 6
.
ÜÜ6 7

linkObject
ÜÜ7 A
(
ÜÜA B
obj
ÜÜB E
)
ÜÜE F
;
ÜÜF G
writer
áá 
.
áá 
AddTableData
áá +
(
áá+ ,
new
áá, /
string
áá0 6
[
áá6 7
]
áá7 8
{
áá9 :
attNameLink
áá; F
,
ááF G
obj
ááH K
.
ááK L
Description
ááL W
,
ááW X
obj
ááY \
.
áá\ ]
TypeDescriptor
áá] k
.
áák l
Name
áál p
}
ááq r
)
áár s
;
áás t
try
àà 
{
ââ 
obj
ää 
.
ää  
Save
ää  $
(
ää$ %
)
ää% &
;
ää& '
}
ãã 
catch
åå 
(
åå 
	Exception
åå (
e
åå) *
)
åå* +
{
çç 
output
éé "
.
éé" #
AddLine
éé# *
(
éé* +
$str
éé+ >
+
éé? @
obj
ééA D
.
ééD E
Name
ééE I
+
ééJ K
$str
ééL Q
+
ééR S
e
ééT U
.
ééU V
Message
ééV ]
)
éé] ^
;
éé^ _
}
èè 
}
êê 
}
ëë 
writer
íí 
.
íí 
	AddFooter
íí  
(
íí  !
)
íí! "
;
íí" #
writer
ìì 
.
ìì 
Close
ìì 
(
ìì 
)
ìì 
;
ìì 
KBDoctorHelper
ïï 
.
ïï !
ShowKBDoctorResults
ïï 2
(
ïï2 3

outputFile
ïï3 =
)
ïï= >
;
ïï> ?
bool
ññ 
success
ññ 
=
ññ 
true
ññ #
;
ññ# $
output
óó 
.
óó 

EndSection
óó !
(
óó! "
title
óó" '
,
óó' (
success
óó) 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 	
public
õõ 
static
õõ 
void
õõ )
RemoveAttributeWithoutTable
õõ 6
(
õõ6 7
)
õõ7 8
{
úú 	

IKBService
ùù 
kbserv
ùù 
=
ùù 

UIServices
ùù  *
.
ùù* +
KB
ùù+ -
;
ùù- .
string
üü 
title
üü 
=
üü 
$str
üü G
;
üüG H
string
†† 

outputFile
†† 
=
†† 
	Functions
††  )
.
††) *
CreateOutputFile
††* :
(
††: ;
kbserv
††; A
,
††A B
title
††C H
)
††H I
;
††I J
IOutputService
¢¢ 
output
¢¢ !
=
¢¢" #
CommonServices
¢¢$ 2
.
¢¢2 3
Output
¢¢3 9
;
¢¢9 :
output
££ 
.
££ 
StartSection
££ 
(
££  
title
££  %
)
££% &
;
££& '
KBDoctorXMLWriter
•• 
writer
•• $
=
••% &
new
••' *
KBDoctorXMLWriter
••+ <
(
••< =

outputFile
••= G
,
••G H
Encoding
••I Q
.
••Q R
UTF8
••R V
)
••V W
;
••W X
writer
¶¶ 
.
¶¶ 
	AddHeader
¶¶ 
(
¶¶ 
title
¶¶ "
)
¶¶" #
;
¶¶# $
writer
ßß 
.
ßß 
AddTableHeader
ßß !
(
ßß! "
new
ßß" %
string
ßß& ,
[
ßß, -
]
ßß- .
{
ßß/ 0
$str
ßß1 3
,
ßß3 4
$str
ßß5 @
,
ßß@ A
$str
ßßB O
,
ßßO P
$str
ßßQ \
}
ßß] ^
)
ßß^ _
;
ßß_ `
List
™™ 
<
™™ 
Artech
™™ 
.
™™ 
Genexus
™™ 
.
™™  
Common
™™  &
.
™™& '
Objects
™™' .
.
™™. /
	Attribute
™™/ 8
>
™™8 9
attTodos
™™: B
=
™™C D
new
™™E H
List
™™I M
<
™™M N
Artech
™™N T
.
™™T U
Genexus
™™U \
.
™™\ ]
Common
™™] c
.
™™c d
Objects
™™d k
.
™™k l
	Attribute
™™l u
>
™™u v
(
™™v w
)
™™w x
;
™™x y
foreach
´´ 
(
´´ 
Artech
´´ 
.
´´ 
Genexus
´´ #
.
´´# $
Common
´´$ *
.
´´* +
Objects
´´+ 2
.
´´2 3
	Attribute
´´3 <
a
´´= >
in
´´? A
Artech
´´B H
.
´´H I
Genexus
´´I P
.
´´P Q
Common
´´Q W
.
´´W X
Objects
´´X _
.
´´_ `
	Attribute
´´` i
.
´´i j
GetAll
´´j p
(
´´p q
kbserv
´´q w
.
´´w x
CurrentModel´´x Ñ
)´´Ñ Ö
)´´Ö Ü
{
¨¨ 
attTodos
≠≠ 
.
≠≠ 
Add
≠≠ 
(
≠≠ 
a
≠≠ 
)
≠≠ 
;
≠≠  
}
ÆÆ 
foreach
±± 
(
±± 
Table
±± 
t
±± 
in
±± 
Table
±±  %
.
±±% &
GetAll
±±& ,
(
±±, -
kbserv
±±- 3
.
±±3 4
CurrentModel
±±4 @
)
±±@ A
)
±±A B
{
≤≤ 
foreach
≥≥ 
(
≥≥ 
EntityReference
≥≥ (
	reference
≥≥) 2
in
≥≥3 5
t
≥≥6 7
.
≥≥7 8
GetReferences
≥≥8 E
(
≥≥E F
LinkType
≥≥F N
.
≥≥N O

UsedObject
≥≥O Y
)
≥≥Y Z
)
≥≥Z [
{
¥¥ 
KBObject
µµ 
objRef
µµ #
=
µµ$ %
KBObject
µµ& .
.
µµ. /
Get
µµ/ 2
(
µµ2 3
kbserv
µµ3 9
.
µµ9 :
CurrentModel
µµ: F
,
µµF G
	reference
µµH Q
.
µµQ R
To
µµR T
)
µµT U
;
µµU V
if
∂∂ 
(
∂∂ 
objRef
∂∂ 
is
∂∂ !
Artech
∂∂" (
.
∂∂( )
Genexus
∂∂) 0
.
∂∂0 1
Common
∂∂1 7
.
∂∂7 8
Objects
∂∂8 ?
.
∂∂? @
	Attribute
∂∂@ I
)
∂∂I J
{
∑∑ 
Artech
∏∏ 
.
∏∏ 
Genexus
∏∏ &
.
∏∏& '
Common
∏∏' -
.
∏∏- .
Objects
∏∏. 5
.
∏∏5 6
	Attribute
∏∏6 ?
a
∏∏@ A
=
∏∏B C
(
∏∏D E
Artech
∏∏E K
.
∏∏K L
Genexus
∏∏L S
.
∏∏S T
Common
∏∏T Z
.
∏∏Z [
Objects
∏∏[ b
.
∏∏b c
	Attribute
∏∏c l
)
∏∏l m
objRef
∏∏m s
;
∏∏s t
attTodos
ππ  
.
ππ  !
Remove
ππ! '
(
ππ' (
a
ππ( )
)
ππ) *
;
ππ* +
}
∫∫ 
}
ªª 
}
ºº 
foreach
øø 
(
øø 
Artech
øø 
.
øø 
Genexus
øø #
.
øø# $
Common
øø$ *
.
øø* +
Objects
øø+ 2
.
øø2 3
	Attribute
øø3 <
a
øø= >
in
øø? A
attTodos
øøB J
)
øøJ K
{
¿¿ 
if
¡¡ 
(
¡¡ 
!
¡¡ 
	Functions
¡¡ 
.
¡¡ 
AttIsSubtype
¡¡ +
(
¡¡+ ,
a
¡¡, -
)
¡¡- .
)
¡¡. /
{
¬¬ 
	Functions
√√ 
.
√√ 
KillAttribute
√√ +
(
√√+ ,
a
√√, -
)
√√- .
;
√√. /
string
ƒƒ 

strRemoved
ƒƒ %
=
ƒƒ& '
$str
ƒƒ( *
;
ƒƒ* +
try
≈≈ 
{
∆∆ 
a
«« 
.
«« 
Delete
««  
(
««  !
)
««! "
;
««" #
output
»» 
.
»» 
AddLine
»» &
(
»»& '
$str
»»' ;
+
»»< =
a
»»> ?
.
»»? @
Name
»»@ D
)
»»D E
;
»»E F

strRemoved
…… "
=
……# $
$str
……% .
;
……. /
}
   
catch
ÀÀ 
(
ÀÀ 
	Exception
ÀÀ $
e
ÀÀ% &
)
ÀÀ& '
{
ÃÃ 
output
ÕÕ 
.
ÕÕ 
AddErrorLine
ÕÕ +
(
ÕÕ+ ,
$str
ÕÕ, ;
+
ÕÕ< =
a
ÕÕ> ?
.
ÕÕ? @
Name
ÕÕ@ D
+
ÕÕE F
$str
ÕÕG O
+
ÕÕP Q
e
ÕÕR S
.
ÕÕS T
Message
ÕÕT [
)
ÕÕ[ \
;
ÕÕ\ ]
}
œœ 
string
–– 
attNameLink
–– &
=
––' (
	Functions
––) 2
.
––2 3

linkObject
––3 =
(
––= >
a
––> ?
)
––? @
;
––@ A

strRemoved
—— 
=
——  
$str
——! r
+
——s t
a
——u v
.
——v w
Guid
——w {
.
——{ |
ToString——| Ñ
(——Ñ Ö
)——Ö Ü
+——á à
$str——â ò
;——ò ô
string
““ 
Picture
““ "
=
““# $
	Functions
““% .
.
““. /
ReturnPicture
““/ <
(
““< =
a
““= >
)
““> ?
;
““? @
writer
”” 
.
”” 
AddTableData
”” '
(
””' (
new
””( +
string
””, 2
[
””2 3
]
””3 4
{
””5 6

strRemoved
””7 A
,
””A B
attNameLink
””C N
,
””N O
a
””P Q
.
””Q R
Description
””R ]
,
””] ^
Picture
””_ f
}
””g h
)
””h i
;
””i j
}
‘‘ 
}
’’ 
writer
◊◊ 
.
◊◊ 
	AddFooter
◊◊ 
(
◊◊ 
)
◊◊ 
;
◊◊ 
writer
ÿÿ 
.
ÿÿ 
Close
ÿÿ 
(
ÿÿ 
)
ÿÿ 
;
ÿÿ 
KBDoctorHelper
⁄⁄ 
.
⁄⁄ !
ShowKBDoctorResults
⁄⁄ .
(
⁄⁄. /

outputFile
⁄⁄/ 9
)
⁄⁄9 :
;
⁄⁄: ;
bool
€€ 
success
€€ 
=
€€ 
true
€€ 
;
€€  
output
‹‹ 
.
‹‹ 

EndSection
‹‹ 
(
‹‹ 
title
‹‹ #
,
‹‹# $
success
‹‹% ,
)
‹‹, -
;
‹‹- .
}
ﬁﬁ 	
}
‡‡ 
}·· …∆
AC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\CommandKeys.cs
	namespace 	
Concepto
 
. 
Packages 
. 
KBDoctor $
{ 
static 

class 
CommandKeys 
{		 
private 
static 

CommandKey !
attWithNoDomain" 1
=2 3
new4 7

CommandKey8 B
(B C
PackageC J
.J K
guidK O
,O P
$strQ b
)b c
;c d
private 
static 

CommandKey !
listAttributes" 0
=1 2
new3 6

CommandKey7 A
(A B
PackageB I
.I J
guidJ N
,N O
$strP `
)` a
;a b
private 
static 

CommandKey !!
attWithoutDescription" 7
=8 9
new: =

CommandKey> H
(H I
PackageI P
.P Q
guidQ U
,U V
$strW n
)n o
;o p
private 
static 

CommandKey !
attCharToVarchar" 2
=3 4
new5 8

CommandKey9 C
(C D
PackageD K
.K L
guidL P
,P Q
$strR d
)d e
;e f
private 
static 

CommandKey !
attVarcharToChar" 2
=3 4
new5 8

CommandKey9 C
(C D
PackageD K
.K L
guidL P
,P Q
$strR d
)d e
;e f
private 
static 

CommandKey !
attKeyVarchar" /
=0 1
new2 5

CommandKey6 @
(@ A
PackageA H
.H I
guidI M
,M N
$strO ^
)^ _
;_ `
private 
static 

CommandKey !%
attDescWithoutUniqueIndex" ;
=< =
new> A

CommandKeyB L
(L M
PackageM T
.T U
guidU Y
,Y Z
$str[ v
)v w
;w x
private 
static 

CommandKey !
attNotReferenced" 2
=3 4
new5 8

CommandKey9 C
(C D
PackageD K
.K L
guidL P
,P Q
$strR d
)d e
;e f
private 
static 

CommandKey !
attWithoutBaseTable" 5
=6 7
new8 ;

CommandKey< F
(F G
PackageG N
.N O
guidO S
,S T
$strU j
)j k
;k l
private 
static 

CommandKey !
attInOneTrnOnly" 1
=2 3
new4 7

CommandKey8 B
(B C
PackageC J
.J K
guidK O
,O P
$strQ b
)b c
;c d
private 
static 

CommandKey !

attFormula" ,
=- .
new/ 2

CommandKey3 =
(= >
Package> E
.E F
guidF J
,J K
$strL X
)X Y
;Y Z
private 
static 

CommandKey !
replaceDomain" /
=0 1
new2 5

CommandKey6 @
(@ A
PackageA H
.H I
guidI M
,M N
$strO ^
)^ _
;_ `
private 
static 

CommandKey !

listDomain" ,
=- .
new/ 2

CommandKey3 =
(= >
Package> E
.E F
guidF J
,J K
$strL X
)X Y
;Y Z
private 
static 

CommandKey !

attUpdated" ,
=- .
new/ 2

CommandKey3 =
(= >
Package> E
.E F
guidF J
,J K
$strL X
)X Y
;Y Z
public 
static 

CommandKey  
AttWithNoDomain! 0
{1 2
get3 6
{7 8
return9 ?
attWithNoDomain@ O
;O P
}Q R
}S T
public 
static 

CommandKey  
ListAttributes! /
{0 1
get2 5
{6 7
return8 >
listAttributes? M
;M N
}O P
}Q R
public 
static 

CommandKey  !
AttWithoutDescription! 6
{7 8
get9 <
{= >
return? E!
attWithoutDescriptionF [
;[ \
}] ^
}_ `
public 
static 

CommandKey  
AttCharToVarchar! 1
{2 3
get4 7
{8 9
return: @
attCharToVarcharA Q
;Q R
}S T
}U V
public 
static 

CommandKey  
AttVarcharToChar! 1
{2 3
get4 7
{8 9
return: @
attVarcharToCharA Q
;Q R
}S T
}U V
public 
static 

CommandKey  
AttKeyVarchar! .
{/ 0
get1 4
{5 6
return7 =
attKeyVarchar> K
;K L
}M N
}O P
public   
static   

CommandKey    %
AttDescWithoutUniqueIndex  ! :
{  ; <
get  = @
{  A B
return  C I%
attDescWithoutUniqueIndex  J c
;  c d
}  e f
}  g h
public!! 
static!! 

CommandKey!!  
AttNotReferenced!!! 1
{!!2 3
get!!4 7
{!!8 9
return!!: @
attNotReferenced!!A Q
;!!Q R
}!!S T
}!!U V
public"" 
static"" 

CommandKey""  
AttWithoutBaseTable""! 4
{""5 6
get""7 :
{""; <
return""= C
attWithoutBaseTable""D W
;""W X
}""Y Z
}""[ \
public## 
static## 

CommandKey##  
AttInOneTrnOnly##! 0
{##1 2
get##3 6
{##7 8
return##9 ?
attInOneTrnOnly##@ O
;##O P
}##Q R
}##S T
public$$ 
static$$ 

CommandKey$$  

AttFormula$$! +
{$$, -
get$$. 1
{$$2 3
return$$4 :

attFormula$$; E
;$$E F
}$$G H
}$$I J
public%% 
static%% 

CommandKey%%  
ReplaceDomain%%! .
{%%/ 0
get%%1 4
{%%5 6
return%%7 =
replaceDomain%%> K
;%%K L
}%%M N
}%%O P
public&& 
static&& 

CommandKey&&  

ListDomain&&! +
{&&, -
get&&. 1
{&&2 3
return&&4 :

listDomain&&; E
;&&E F
}&&G H
}&&I J
public'' 
static'' 

CommandKey''  

AttUpdated''! +
{'', -
get''. 1
{''2 3
return''4 :

attUpdated''; E
;''E F
}''G H
}''I J
private++ 
static++ 

CommandKey++ !#
assignDomainToAttribute++" 9
=++: ;
new++< ?

CommandKey++@ J
(++J K
Package++K R
.++R S
guid++S W
,++W X
$str++Y r
)++r s
;++s t
private,, 
static,, 

CommandKey,, !(
assignDescriptionToAttribute,," >
=,,? @
new,,A D

CommandKey,,E O
(,,O P
Package,,P W
.,,W X
guid,,X \
,,,\ ]
$str,,^ |
),,| }
;,,} ~
private-- 
static-- 

CommandKey-- !"
assignTitleToAttribute--" 8
=--9 :
new--; >

CommandKey--? I
(--I J
Package--J Q
.--Q R
guid--R V
,--V W
$str--X p
)--p q
;--q r
private.. 
static.. 

CommandKey.. !(
assignColumnTitleToAttribute.." >
=..? @
new..A D

CommandKey..E O
(..O P
Package..P W
...W X
guid..X \
,..\ ]
$str..^ |
)..| }
;..} ~
private// 
static// 

CommandKey// !
listAttribute//" /
=//0 1
new//2 5

CommandKey//6 @
(//@ A
Package//A H
.//H I
guid//I M
,//M N
$str//O ^
)//^ _
;//_ `
private00 
static00 

CommandKey00 !
addDescriptorIndex00" 4
=005 6
new007 :

CommandKey00; E
(00E F
Package00F M
.00M N
guid00N R
,00R S
$str00T h
)00h i
;00i j
public22 
static22 

CommandKey22  #
AssignDomainToAttribute22! 8
{229 :
get22; >
{22? @
return22A G#
assignDomainToAttribute22H _
;22_ `
}22a b
}22c d
public33 
static33 

CommandKey33  (
AssignDescriptionToAttribute33! =
{33> ?
get33@ C
{33D E
return33F L(
assignDescriptionToAttribute33M i
;33i j
}33k l
}33m n
public44 
static44 

CommandKey44  "
AssignTitleToAttribute44! 7
{448 9
get44: =
{44> ?
return44@ F"
assignTitleToAttribute44G ]
;44] ^
}44_ `
}44a b
public55 
static55 

CommandKey55  (
AssignColumnTitleToAttribute55! =
{55> ?
get55@ C
{55D E
return55F L(
assignColumnTitleToAttribute55M i
;55i j
}55k l
}55m n
public66 
static66 

CommandKey66  
ListAttribute66! .
{66/ 0
get661 4
{665 6
return667 =
listAttribute66> K
;66K L
}66M N
}66O P
public77 
static77 

CommandKey77  
AddDescriptorIndex77! 3
{774 5
get776 9
{77: ;
return77< B
addDescriptorIndex77C U
;77U V
}77W X
}77Y Z
private;; 
static;; 

CommandKey;; !
tblWihNoDescription;;" 5
=;;6 7
new;;8 ;

CommandKey;;< F
(;;F G
Package;;G N
.;;N O
guid;;O S
,;;S T
$str;;U n
);;n o
;;;o p
public<< 
static<< 

CommandKey<<  
TblWihNoDescription<<! 4
{<<5 6
get<<7 :
{<<; <
return<<= C
tblWihNoDescription<<D W
;<<W X
}<<Y Z
}<<[ \
private>> 
static>> 

CommandKey>> !
grpWihNoDescription>>" 5
=>>6 7
new>>8 ;

CommandKey>>< F
(>>F G
Package>>G N
.>>N O
guid>>O S
,>>S T
$str>>U m
)>>m n
;>>n o
public?? 
static?? 

CommandKey??  
GrpWihNoDescription??! 4
{??5 6
get??7 :
{??; <
return??= C
grpWihNoDescription??D W
;??W X
}??Y Z
}??[ \
privateAA 
staticAA 

CommandKeyAA !
tblWidthAA" *
=AA6 7
newAA8 ;

CommandKeyAA< F
(AAF G
PackageAAG N
.AAN O
guidAAO S
,AAS T
$strAAU b
)AAb c
;AAc d
publicBB 
staticBB 

CommandKeyBB  
TblWidthBB! )
{BB* +
getBB, /
{BB0 1
returnBB2 8
tblWidthBB9 A
;BBA B
}BBC D
}BBE F
privateDD 
staticDD 

CommandKeyDD !

listTablesDD" ,
=DD- .
newDD/ 2

CommandKeyDD3 =
(DD= >
PackageDD> E
.DDE F
guidDDF J
,DDJ K
$strDDL X
)DDX Y
;DDY Z
publicEE 
staticEE 

CommandKeyEE  

ListTablesEE! +
{EE, -
getEE. 1
{EE2 3
returnEE4 :

listTablesEE; E
;EEE F
}EEG H
}EEI J
privateGG 
staticGG 

CommandKeyGG !
tblTableTransactionGG" 5
=GG6 7
newGG8 ;

CommandKeyGG< F
(GGF G
PackageGGG N
.GGN O
guidGGO S
,GGS T
$strGGU g
)GGg h
;GGh i
publicHH 
staticHH 

CommandKeyHH  
TblTableTransactionHH! 4
{HH5 6
getHH7 :
{HH; <
returnHH= C
tblTableTransactionHHD W
;HHW X
}HHY Z
}HH[ \
privateJJ 
staticJJ 

CommandKeyJJ !D
8tblGenerateSimpleTransactionFromNotGeneratedTransactionsJJ" Z
=JJ[ \
newJJ] `

CommandKeyJJa k
(JJk l
PackageJJl s
.JJs t
guidJJt x
,JJx y
$str	JJz ±
)
JJ± ≤
;
JJ≤ ≥
publicKK 
staticKK 

CommandKeyKK  D
8TblGenerateSimpleTransactionFromNotGeneratedTransactionsKK! Y
{KKZ [
getKK\ _
{KK` a
returnKKb hE
8tblGenerateSimpleTransactionFromNotGeneratedTransactions	KKi °
;
KK° ¢
}
KK£ §
}
KK• ¶
privateMM 
staticMM 

CommandKeyMM !
tblTableUpdateMM" 0
=MM6 7
newMM8 ;

CommandKeyMM< F
(MMF G
PackageMMG N
.MMN O
guidMMO S
,MMS T
$strMMU b
)MMb c
;MMc d
publicNN 
staticNN 

CommandKeyNN  
TblTableUpdateNN! /
{NN0 1
getNN2 5
{NN6 7
returnNN8 >
tblTableUpdateNN? M
;NNM N
}NNO P
}NNQ R
privatePP 
staticPP 

CommandKeyPP !
tblTableInsertNewPP" 3
=PP4 5
newPP6 9

CommandKeyPP: D
(PPD E
PackagePPE L
.PPL M
guidPPM Q
,PPQ R
$strPPS c
)PPc d
;PPd e
publicQQ 
staticQQ 

CommandKeyQQ  
TblTableInsertNewQQ! 2
{QQ3 4
getQQ5 8
{QQ9 :
returnQQ; A
tblTableInsertNewQQB S
;QQS T
}QQU V
}QQW X
privateSS 
staticSS 

CommandKeySS !$
tblGenerateTrnFromTablesSS" :
=SS; <
newSS= @

CommandKeySSA K
(SSK L
PackageSSL S
.SSS T
guidSST X
,SSX Y
$strSSZ q
)SSq r
;SSr s
publicTT 
staticTT 

CommandKeyTT  !
GenerateTrnFromTablesTT! 6
{TT7 8
getTT9 <
{TT= >
returnTT? E$
tblGenerateTrnFromTablesTTF ^
;TT^ _
}TT` a
}TTb c
privateVV 
staticVV 

CommandKeyVV !%
tblGenerateTrnFromTables2VV" ;
=VV< =
newVV> A

CommandKeyVVB L
(VVL M
PackageVVM T
.VVT U
guidVVU Y
,VVY Z
$strVV[ s
)VVs t
;VVt u
publicWW 
staticWW 

CommandKeyWW  "
GenerateTrnFromTables2WW! 7
{WW8 9
getWW: =
{WW> ?
returnWW@ F%
tblGenerateTrnFromTables2WWG `
;WW` a
}WWb c
}WWd e
privateYY 
staticYY 

CommandKeyYY !"
tblListTablesInModulesYY" 8
=YY9 :
newYY; >

CommandKeyYY? I
(YYI J
PackageYYJ Q
.YYQ R
guidYYR V
,YYV W
$strYYX m
)YYm n
;YYn o
publicZZ 
staticZZ 

CommandKeyZZ  
ListTablesInModulesZZ! 4
{ZZ5 6
getZZ7 :
{ZZ; <
returnZZ= C"
tblListTablesInModulesZZD Z
;ZZZ [
}ZZ\ ]
}ZZ^ _
private]] 
static]] 

CommandKey]] !$
assignDescriptionToTable]]" :
=]]; <
new]]= @

CommandKey]]A K
(]]K L
Package]]L S
.]]S T
guid]]T X
,]]X Y
$str]]Z t
)]]t u
;]]u v
public__ 
static__ 

CommandKey__  $
AssignDescriptionToTable__! 9
{__: ;
get__< ?
{__@ A
return__B H$
assignDescriptionToTable__I a
;__a b
}__c d
}__e f
privatebb 
staticbb 

CommandKeybb !
indexWithNotRefAttbb" 4
=bb5 6
newbb7 :

CommandKeybb; E
(bbE F
PackagebbF M
.bbM N
guidbbN R
,bbR S
$strbbT h
)bbh i
;bbi j
privatecc 
staticcc 

CommandKeycc ! 
removeIndexAttributecc" 6
=cc7 8
newcc9 <

CommandKeycc= G
(ccG H
PackageccH O
.ccO P
guidccP T
,ccT U
$strccV l
)ccl m
;ccm n
publicee 
staticee 

CommandKeyee  
IndexWithNotRefAttee! 3
{ee4 5
getee6 9
{ee: ;
returnee< B
indexWithNotRefAtteeC U
;eeU V
}eeW X
}eeY Z
publicff 
staticff 

CommandKeyff   
RemoveIndexAttributeff! 5
{ff6 7
getff8 ;
{ff< =
returnff> D 
removeIndexAttributeffE Y
;ffY Z
}ff[ \
}ff] ^
privatejj 
staticjj 

CommandKeyjj !
objNotReacheablejj" 2
=jj3 4
newjj5 8

CommandKeyjj9 C
(jjC D
PackagejjD K
.jjK L
guidjjL P
,jjP Q
$strjjR h
)jjh i
;jji j
privatekk 
statickk 

CommandKeykk !
objectsWithoutInOutkk" 5
=kk6 7
newkk8 ;

CommandKeykk< F
(kkF G
PackagekkG N
.kkN O
guidkkO S
,kkS T
$strkkU j
)kkj k
;kkk l
privatell 
staticll 

CommandKeyll !
objectsMainCalledll" 3
=ll4 5
newll6 9

CommandKeyll: D
(llD E
PackagellE L
.llL M
guidllM Q
,llQ R
$strllS f
)llf g
;llg h
privatemm 
staticmm 

CommandKeymm !
objectsReferencedmm" 3
=mm4 5
newmm6 9

CommandKeymm: D
(mmD E
PackagemmE L
.mmL M
guidmmM Q
,mmQ R
$strmmS f
)mmf g
;mmg h
privatenn 
staticnn 

CommandKeynn !'
objectsWithVarNotBasedOnAttnn" =
=nn> ?
newnn@ C

CommandKeynnD N
(nnN O
PackagennO V
.nnV W
guidnnW [
,nn[ \
$strnn] z
)nnz {
;nn{ |
privateoo 
staticoo 

CommandKeyoo !
renameVariablesoo" 1
=oo2 3
newoo4 7

CommandKeyoo8 B
(ooB C
PackageooC J
.ooJ K
guidooK O
,ooO P
$strooQ b
)oob c
;ooc d
privatepp 
staticpp 

CommandKeypp !
buildModulepp" -
=pp. /
newpp0 3

CommandKeypp4 >
(pp> ?
Packagepp? F
.ppF G
guidppG K
,ppK L
$strppM Z
)ppZ [
;pp[ \
privateqq 
staticqq 

CommandKeyqq !
buildModuleContextqq" 4
=qq5 6
newqq7 :

CommandKeyqq; E
(qqE F
PackageqqF M
.qqM N
guidqqN R
,qqR S
$strqqT h
)qqh i
;qqi j
privaterr 
staticrr 

CommandKeyrr !$
buildObjectAndReferencesrr" :
=rr; <
newrr= @

CommandKeyrrA K
(rrK L
PackagerrL S
.rrS T
guidrrT X
,rrX Y
$strrrZ t
)rrt u
;rru v
privatess 
staticss 

CommandKeyss !
objectsNotCalledss" 2
=ss3 4
newss5 8

CommandKeyss9 C
(ssC D
PackagessD K
.ssK L
guidssL P
,ssP Q
$strssR d
)ssd e
;sse f
privatett 
statictt 

CommandKeytt !#
objectsWithCommitOnExittt" 9
=tt: ;
newtt< ?

CommandKeytt@ J
(ttJ K
PackagettK R
.ttR S
guidttS W
,ttW X
$strttY r
)ttr s
;tts t
privateuu 
staticuu 

CommandKeyuu !"
objectsWithVarsNotUseduu" 8
=uu9 :
newuu; >

CommandKeyuu? I
(uuI J
PackageuuJ Q
.uuQ R
guiduuR V
,uuV W
$struuX p
)uup q
;uuq r
privateww 
staticww 

CommandKeyww !
cleanVarsNotUsedww" 2
=ww3 4
newww5 8

CommandKeyww9 C
(wwC D
PackagewwD K
.wwK L
guidwwL P
,wwP Q
$strwwR d
)wwd e
;wwe f
privatexx 
staticxx 

CommandKeyxx !
objectsComplexxx" 0
=xx1 2
newxx3 6

CommandKeyxx7 A
(xxA B
PackagexxB I
.xxI J
guidxxJ N
,xxN O
$strxxP `
)xx` a
;xxa b
privateyy 
staticyy 

CommandKeyyy !
objectsLegacyCodeyy" 3
=yy4 5
newyy6 9

CommandKeyyy: D
(yyD E
PackageyyE L
.yyL M
guidyyM Q
,yyQ R
$stryyS f
)yyf g
;yyg h
privatezz 
staticzz 

CommandKeyzz !
changeLegacyCodezz" 2
=zz3 4
newzz5 8

CommandKeyzz9 C
(zzC D
PackagezzD K
.zzK L
guidzzL P
,zzP Q
$strzzR d
)zzd e
;zze f
private|| 
static|| 

CommandKey|| !
changeCommitOnExit||" 4
=||5 6
new||7 :

CommandKey||; E
(||E F
Package||F M
.||M N
guid||N R
,||R S
$str||T h
)||h i
;||i j
private}} 
static}} 

CommandKey}} !

treeCommit}}" ,
=}}- .
new}}/ 2

CommandKey}}3 =
(}}= >
Package}}> E
.}}E F
guid}}F J
,}}J K
$str}}L X
)}}X Y
;}}Y Z
private~~ 
static~~ 

CommandKey~~ !#
editLegacyCodeToReplace~~" 9
=~~: ;
new~~< ?

CommandKey~~@ J
(~~J K
Package~~K R
.~~R S
guid~~S W
,~~W X
$str~~Y r
)~~r s
;~~s t
private
ÄÄ 
static
ÄÄ 

CommandKey
ÄÄ !*
objectsRefactoringCandidates
ÄÄ" >
=
ÄÄ? @
new
ÄÄA D

CommandKey
ÄÄE O
(
ÄÄO P
Package
ÄÄP W
.
ÄÄW X
guid
ÄÄX \
,
ÄÄ\ ]
$str
ÄÄ^ |
)
ÄÄ| }
;
ÄÄ} ~
private
ÅÅ 
static
ÅÅ 

CommandKey
ÅÅ ! 
objectsDiagnostics
ÅÅ" 4
=
ÅÅ5 6
new
ÅÅ7 :

CommandKey
ÅÅ; E
(
ÅÅE F
Package
ÅÅF M
.
ÅÅM N
guid
ÅÅN R
,
ÅÅR S
$str
ÅÅT h
)
ÅÅh i
;
ÅÅi j
private
ÉÉ 
static
ÉÉ 

CommandKey
ÉÉ !
objectsWIWEB
ÉÉ" .
=
ÉÉ/ 0
new
ÉÉ1 4

CommandKey
ÉÉ5 ?
(
ÉÉ? @
Package
ÉÉ@ G
.
ÉÉG H
guid
ÉÉH L
,
ÉÉL M
$str
ÉÉN ]
)
ÉÉ] ^
;
ÉÉ^ _
private
ÑÑ 
static
ÑÑ 

CommandKey
ÑÑ !2
$listProcedureCallWebpanelTransaction
ÑÑ" F
=
ÑÑG H
new
ÑÑI L

CommandKey
ÑÑM W
(
ÑÑW X
Package
ÑÑX _
.
ÑÑ_ `
guid
ÑÑ` d
,
ÑÑd e
$strÑÑf å
)ÑÑå ç
;ÑÑç é
private
ÜÜ 
static
ÜÜ 

CommandKey
ÜÜ !
mainTableUsed
ÜÜ" /
=
ÜÜ0 1
new
ÜÜ2 5

CommandKey
ÜÜ6 @
(
ÜÜ@ A
Package
ÜÜA H
.
ÜÜH I
guid
ÜÜI M
,
ÜÜM N
$str
ÜÜO ^
)
ÜÜ^ _
;
ÜÜ_ `
private
áá 
static
áá 

CommandKey
áá !#
removableTransactions
áá" 7
=
áá8 9
new
áá: =

CommandKey
áá> H
(
ááH I
Package
ááI P
.
ááP Q
guid
ááQ U
,
ááU V
$str
ááW n
)
áán o
;
ááo p
private
àà 
static
àà 

CommandKey
àà ! 
generateSQLScripts
àà" 4
=
àà6 7
new
àà8 ;

CommandKey
àà< F
(
ààF G
Package
ààG N
.
ààN O
guid
ààO S
,
ààS T
$str
ààU i
)
àài j
;
ààj k
private
ââ 
static
ââ 

CommandKey
ââ !
generateGraph
ââ" /
=
ââ0 1
new
ââ2 5

CommandKey
ââ6 @
(
ââ@ A
Package
ââA H
.
ââH I
guid
ââI M
,
ââM N
$str
ââO ^
)
ââ^ _
;
ââ_ `
public
åå 
static
åå 

CommandKey
åå  
ObjNotReacheable
åå! 1
{
åå2 3
get
åå4 7
{
åå8 9
return
åå: @
objNotReacheable
ååA Q
;
ååQ R
}
ååS T
}
ååU V
public
çç 
static
çç 

CommandKey
çç  !
ObjectsWithoutInOut
çç! 4
{
çç5 6
get
çç7 :
{
çç; <
return
çç= C!
objectsWithoutInOut
ççD W
;
ççW X
}
ççY Z
}
çç[ \
public
éé 
static
éé 

CommandKey
éé  
ObjectsMainCalled
éé! 2
{
éé3 4
get
éé5 8
{
éé9 :
return
éé; A
objectsMainCalled
ééB S
;
ééS T
}
ééU V
}
ééW X
public
èè 
static
èè 

CommandKey
èè  
ObjectsReferenced
èè! 2
{
èè3 4
get
èè5 8
{
èè9 :
return
èè; A
objectsReferenced
èèB S
;
èèS T
}
èèU V
}
èèW X
public
êê 
static
êê 

CommandKey
êê  )
ObjectsWithVarNotBasedOnAtt
êê! <
{
êê= >
get
êê? B
{
êêC D
return
êêE K)
objectsWithVarNotBasedOnAtt
êêL g
;
êêg h
}
êêi j
}
êêk l
public
ëë 
static
ëë 

CommandKey
ëë  
RenameVariables
ëë! 0
{
ëë1 2
get
ëë3 6
{
ëë7 8
return
ëë9 ?
renameVariables
ëë@ O
;
ëëO P
}
ëëQ R
}
ëëS T
public
íí 
static
íí 

CommandKey
íí  
BuildModule
íí! ,
{
íí- .
get
íí/ 2
{
íí3 4
return
íí5 ;
buildModule
íí< G
;
ííG H
}
ííI J
}
ííK L
public
îî 
static
îî 

CommandKey
îî   
BuildModuleContext
îî! 3
{
îî4 5
get
îî6 9
{
îî: ;
return
îî< B 
buildModuleContext
îîC U
;
îîU V
}
îîW X
}
îîY Z
public
ïï 
static
ïï 

CommandKey
ïï  &
BuildObjectAndReferences
ïï! 9
{
ïï: ;
get
ïï< ?
{
ïï@ A
return
ïïB H&
buildObjectAndReferences
ïïI a
;
ïïa b
}
ïïc d
}
ïïe f
public
ññ 
static
ññ 

CommandKey
ññ  
ObjectsNotCalled
ññ! 1
{
ññ2 3
get
ññ4 7
{
ññ8 9
return
ññ: @
objectsNotCalled
ññA Q
;
ññQ R
}
ññS T
}
ññU V
public
óó 
static
óó 

CommandKey
óó  %
ObjectsWithCommitOnExit
óó! 8
{
óó9 :
get
óó; >
{
óó? @
return
óóA G%
objectsWithCommitOnExit
óóH _
;
óó_ `
}
óóa b
}
óóc d
public
òò 
static
òò 

CommandKey
òò  $
ObjectsWithVarsNotUsed
òò! 7
{
òò8 9
get
òò: =
{
òò> ?
return
òò@ F$
objectsWithVarsNotUsed
òòG ]
;
òò] ^
}
òò_ `
}
òòa b
public
öö 
static
öö 

CommandKey
öö  
CleanVarsNotUsed
öö! 1
{
öö2 3
get
öö4 7
{
öö8 9
return
öö: @
cleanVarsNotUsed
ööA Q
;
ööQ R
}
ööS T
}
ööU V
public
õõ 
static
õõ 

CommandKey
õõ  
ObjectsComplex
õõ! /
{
õõ0 1
get
õõ2 5
{
õõ6 7
return
õõ8 >
objectsComplex
õõ? M
;
õõM N
}
õõO P
}
õõQ R
public
úú 
static
úú 

CommandKey
úú  
ObjectsLegacyCode
úú! 2
{
úú3 4
get
úú5 8
{
úú9 :
return
úú; A
objectsLegacyCode
úúB S
;
úúS T
}
úúU V
}
úúW X
public
ùù 
static
ùù 

CommandKey
ùù  
ChangeLegacyCode
ùù! 1
{
ùù2 3
get
ùù4 7
{
ùù8 9
return
ùù: @
changeLegacyCode
ùùA Q
;
ùùQ R
}
ùùS T
}
ùùU V
public
ûû 
static
ûû 

CommandKey
ûû   
ChangeCommitOnExit
ûû! 3
{
ûû4 5
get
ûû6 9
{
ûû: ;
return
ûû< B 
changeCommitOnExit
ûûC U
;
ûûU V
}
ûûW X
}
ûûY Z
public
üü 
static
üü 

CommandKey
üü  

TreeCommit
üü! +
{
üü, -
get
üü. 1
{
üü2 3
return
üü4 :

treeCommit
üü; E
;
üüE F
}
üüG H
}
üüI J
public
†† 
static
†† 

CommandKey
††  %
EditLegacyCodeToReplace
††! 8
{
††9 :
get
††; >
{
††? @
return
††A G%
editLegacyCodeToReplace
††H _
;
††_ `
}
††a b
}
††c d
public
°° 
static
°° 

CommandKey
°°  *
ObjectsRefactoringCandidates
°°! =
{
°°> ?
get
°°@ C
{
°°D E
return
°°F L*
objectsRefactoringCandidates
°°M i
;
°°i j
}
°°k l
}
°°m n
public
¢¢ 
static
¢¢ 

CommandKey
¢¢   
ObjectsDiagnostics
¢¢! 3
{
¢¢4 5
get
¢¢6 9
{
¢¢: ;
return
¢¢< B 
objectsDiagnostics
¢¢C U
;
¢¢U V
}
¢¢W X
}
¢¢Y Z
public
££ 
static
££ 

CommandKey
££  
ObjectsWINWEB
££! .
{
££/ 0
get
££1 4
{
££5 6
return
££7 =
objectsWIWEB
££> J
;
££J K
}
££L M
}
££N O
public
§§ 
static
§§ 

CommandKey
§§  2
$ListProcedureCallWebpanelTransaction
§§! E
{
§§F G
get
§§H K
{
§§L M
return
§§N T2
$listProcedureCallWebpanelTransaction
§§U y
;
§§y z
}
§§{ |
}
§§} ~
public
•• 
static
•• 

CommandKey
••  
MainTableUsed
••! .
{
••/ 0
get
••1 4
{
••5 6
return
••7 =
mainTableUsed
••> K
;
••K L
}
••M N
}
••O P
public
¶¶ 
static
¶¶ 

CommandKey
¶¶  #
RemovableTransactions
¶¶! 6
{
¶¶7 8
get
¶¶9 <
{
¶¶= >
return
¶¶? E#
removableTransactions
¶¶F [
;
¶¶[ \
}
¶¶] ^
}
¶¶_ `
public
ßß 
static
ßß 

CommandKey
ßß   
GenerateSQLScripts
ßß! 3
{
ßß4 5
get
ßß6 9
{
ßß: ;
return
ßß< B 
generateSQLScripts
ßßC U
;
ßßU V
}
ßßW X
}
ßßY Z
public
®® 
static
®® 

CommandKey
®®  
GenerateGraph
®®! .
{
®®/ 0
get
®®1 4
{
®®5 6
return
®®7 =
generateGraph
®®> K
;
®®K L
}
®®M N
}
®®O P
private
¨¨ 
static
¨¨ 

CommandKey
¨¨ !
removeObject
¨¨" .
=
¨¨/ 0
new
¨¨1 4

CommandKey
¨¨5 ?
(
¨¨? @
Package
¨¨@ G
.
¨¨G H
guid
¨¨H L
,
¨¨L M
$str
¨¨N \
)
¨¨\ ]
;
¨¨] ^
private
≠≠ 
static
≠≠ 

CommandKey
≠≠ !

openObject
≠≠" ,
=
≠≠- .
new
≠≠/ 2

CommandKey
≠≠3 =
(
≠≠= >
Package
≠≠> E
.
≠≠E F
guid
≠≠F J
,
≠≠J K
$str
≠≠L X
)
≠≠X Y
;
≠≠Y Z
private
ÆÆ 
static
ÆÆ 

CommandKey
ÆÆ !$
assignDomainToVariable
ÆÆ" 8
=
ÆÆ9 :
new
ÆÆ; >

CommandKey
ÆÆ? I
(
ÆÆI J
Package
ÆÆJ Q
.
ÆÆQ R
guid
ÆÆR V
,
ÆÆV W
$str
ÆÆX p
)
ÆÆp q
;
ÆÆq r
private
ØØ 
static
ØØ 

CommandKey
ØØ !'
assignAttributeToVariable
ØØ" ;
=
ØØ< =
new
ØØ> A

CommandKey
ØØB L
(
ØØL M
Package
ØØM T
.
ØØT U
guid
ØØU Y
,
ØØY Z
$str
ØØ[ v
)
ØØv w
;
ØØw x
private
∞∞ 
static
∞∞ 

CommandKey
∞∞ !'
renameAttributesAndTables
∞∞" ;
=
∞∞< =
new
∞∞? B

CommandKey
∞∞C M
(
∞∞M N
Package
∞∞N U
.
∞∞U V
guid
∞∞V Z
,
∞∞Z [
$str
∞∞\ w
)
∞∞w x
;
∞∞x y
public
≤≤ 
static
≤≤ 

CommandKey
≤≤  
RemoveObject
≤≤! -
{
≤≤. /
get
≤≤0 3
{
≤≤4 5
return
≤≤6 <
removeObject
≤≤= I
;
≤≤I J
}
≤≤K L
}
≤≤M N
public
≥≥ 
static
≥≥ 

CommandKey
≥≥  

OpenObject
≥≥! +
{
≥≥, -
get
≥≥. 1
{
≥≥2 3
return
≥≥4 :

openObject
≥≥; E
;
≥≥E F
}
≥≥G H
}
≥≥I J
public
¥¥ 
static
¥¥ 

CommandKey
¥¥  $
AssignDomainToVariable
¥¥! 7
{
¥¥8 9
get
¥¥: =
{
¥¥> ?
return
¥¥@ F$
assignDomainToVariable
¥¥G ]
;
¥¥] ^
}
¥¥_ `
}
¥¥a b
public
µµ 
static
µµ 

CommandKey
µµ  '
AssignAttributeToVariable
µµ! :
{
µµ; <
get
µµ= @
{
µµA B
return
µµC I'
assignAttributeToVariable
µµJ c
;
µµc d
}
µµe f
}
µµg h
public
∑∑ 
static
∑∑ 

CommandKey
∑∑  '
RenameAttributesAndTables
∑∑! :
{
∑∑; <
get
∑∑= @
{
∑∑A B
return
∑∑C I'
renameAttributesAndTables
∑∑J c
;
∑∑c d
}
∑∑e f
}
∑∑g h
private
∫∫ 
static
∫∫ 

CommandKey
∫∫ !
procedureSDT
∫∫" .
=
∫∫/ 0
new
∫∫1 4

CommandKey
∫∫5 ?
(
∫∫? @
Package
∫∫@ G
.
∫∫G H
guid
∫∫H L
,
∫∫L M
$str
∫∫N \
)
∫∫\ ]
;
∫∫] ^
public
ªª 
static
ªª 

CommandKey
ªª  
ProcedureSDT
ªª! -
{
ªª. /
get
ªª0 3
{
ªª4 5
return
ªª6 <
procedureSDT
ªª= I
;
ªªI J
}
ªªK L
}
ªªM N
private
ΩΩ 
static
ΩΩ 

CommandKey
ΩΩ !
procedureGetSet
ΩΩ" 1
=
ΩΩ2 3
new
ΩΩ4 7

CommandKey
ΩΩ8 B
(
ΩΩB C
Package
ΩΩC J
.
ΩΩJ K
guid
ΩΩK O
,
ΩΩO P
$str
ΩΩQ b
)
ΩΩb c
;
ΩΩc d
public
ææ 
static
ææ 

CommandKey
ææ  
ProcedureGetSet
ææ! 0
{
ææ1 2
get
ææ3 6
{
ææ7 8
return
ææ9 ?
procedureGetSet
ææ@ O
;
ææO P
}
ææQ R
}
ææS T
private
¿¿ 
static
¿¿ 

CommandKey
¿¿ !
addINPramRule
¿¿" /
=
¿¿0 1
new
¿¿2 5

CommandKey
¿¿6 @
(
¿¿@ A
Package
¿¿A H
.
¿¿H I
guid
¿¿I M
,
¿¿M N
$str
¿¿O ^
)
¿¿^ _
;
¿¿_ `
public
¡¡ 
static
¡¡ 

CommandKey
¡¡  
AddINParmRule
¡¡! .
{
¡¡/ 0
get
¡¡1 4
{
¡¡5 6
return
¡¡7 =
addINPramRule
¡¡> K
;
¡¡K L
}
¡¡M N
}
¡¡O P
private
√√ 
static
√√ 

CommandKey
√√ !,
listTableAttributesUsingDomain
√√" @
=
√√A B
new
√√C F

CommandKey
√√G Q
(
√√Q R
Package
√√R Y
.
√√Y Z
guid
√√Z ^
,
√√^ _
$str√√` Ä
)√√Ä Å
;√√Å Ç
public
ƒƒ 
static
ƒƒ 

CommandKey
ƒƒ  ,
ListTableAttributesUsingDomain
ƒƒ! ?
{
ƒƒ@ A
get
ƒƒB E
{
ƒƒF G
return
ƒƒH N,
listTableAttributesUsingDomain
ƒƒO m
;
ƒƒm n
}
ƒƒo p
}
ƒƒq r
private
∆∆ 
static
∆∆ 

CommandKey
∆∆ !%
cleanKBAsMuchAsPossible
∆∆" 9
=
∆∆: ;
new
∆∆< ?

CommandKey
∆∆@ J
(
∆∆J K
Package
∆∆K R
.
∆∆R S
guid
∆∆S W
,
∆∆W X
$str
∆∆Y r
)
∆∆r s
;
∆∆s t
public
«« 
static
«« 

CommandKey
««  %
CleanKBAsMuchAsPossible
««! 8
{
««9 :
get
««; >
{
««? @
return
««A G%
cleanKBAsMuchAsPossible
««H _
;
««_ `
}
««a b
}
««c d
private
…… 
static
…… 

CommandKey
…… !
cleanObjects
……" .
=
……/ 0
new
……1 4

CommandKey
……5 ?
(
……? @
Package
……@ G
.
……G H
guid
……H L
,
……L M
$str
……N \
)
……\ ]
;
……] ^
public
   
static
   

CommandKey
    
CleanObjects
  ! -
{
  . /
get
  0 3
{
  4 5
return
  6 <
cleanObjects
  = I
;
  I J
}
  K L
}
  M N
private
ÃÃ 
static
ÃÃ 

CommandKey
ÃÃ !
resetWINForm
ÃÃ" .
=
ÃÃ/ 0
new
ÃÃ1 4

CommandKey
ÃÃ5 ?
(
ÃÃ? @
Package
ÃÃ@ G
.
ÃÃG H
guid
ÃÃH L
,
ÃÃL M
$str
ÃÃN \
)
ÃÃ\ ]
;
ÃÃ] ^
public
ÕÕ 
static
ÕÕ 

CommandKey
ÕÕ  
ResetWINForm
ÕÕ! -
{
ÕÕ. /
get
ÕÕ0 3
{
ÕÕ4 5
return
ÕÕ6 <
resetWINForm
ÕÕ= I
;
ÕÕI J
}
ÕÕK L
}
ÕÕM N
private
œœ 
static
œœ 

CommandKey
œœ !
searchAndReplace
œœ" 2
=
œœ3 4
new
œœ5 8

CommandKey
œœ9 C
(
œœC D
Package
œœD K
.
œœK L
guid
œœL P
,
œœP Q
$str
œœR d
)
œœd e
;
œœe f
public
–– 
static
–– 

CommandKey
––  
SearchAndReplace
––! 1
{
––2 3
get
––4 7
{
––8 9
return
––: @
searchAndReplace
––A Q
;
––Q R
}
––S T
}
––U V
private
““ 
static
““ 

CommandKey
““ !
classNotInTheme
““" 1
=
““2 3
new
““4 7

CommandKey
““8 B
(
““B C
Package
““C J
.
““J K
guid
““K O
,
““O P
$str
““Q b
)
““b c
;
““c d
public
”” 
static
”” 

CommandKey
””  
ClassNotInTheme
””! 0
{
””1 2
get
””3 6
{
””7 8
return
””9 ?
classNotInTheme
””@ O
;
””O P
}
””Q R
}
””S T
private
’’ 
static
’’ 

CommandKey
’’ !
	classUsed
’’" +
=
’’, -
new
’’. 1

CommandKey
’’2 <
(
’’< =
Package
’’= D
.
’’D E
guid
’’E I
,
’’I J
$str
’’K V
)
’’V W
;
’’W X
public
÷÷ 
static
÷÷ 

CommandKey
÷÷  
	ClassUsed
÷÷! *
{
÷÷+ ,
get
÷÷- 0
{
÷÷1 2
return
÷÷3 9
	classUsed
÷÷: C
;
÷÷C D
}
÷÷E F
}
÷÷G H
private
ÿÿ 
static
ÿÿ 

CommandKey
ÿÿ !
listClassUsed
ÿÿ" /
=
ÿÿ0 1
new
ÿÿ2 5

CommandKey
ÿÿ6 @
(
ÿÿ@ A
Package
ÿÿA H
.
ÿÿH I
guid
ÿÿI M
,
ÿÿM N
$str
ÿÿO ^
)
ÿÿ^ _
;
ÿÿ_ `
public
ŸŸ 
static
ŸŸ 

CommandKey
ŸŸ  
ListClassUsed
ŸŸ! .
{
ŸŸ/ 0
get
ŸŸ1 4
{
ŸŸ5 6
return
ŸŸ7 =
listClassUsed
ŸŸ> K
;
ŸŸK L
}
ŸŸM N
}
ŸŸO P
private
€€ 
static
€€ 

CommandKey
€€ !
historyGXServer
€€" 1
=
€€2 3
new
€€4 7

CommandKey
€€8 B
(
€€B C
Package
€€C J
.
€€J K
guid
€€K O
,
€€O P
$str
€€Q b
)
€€b c
;
€€c d
public
‹‹ 
static
‹‹ 

CommandKey
‹‹  
HistoryGXServer
‹‹! 0
{
‹‹1 2
get
‹‹3 6
{
‹‹7 8
return
‹‹9 ?
historyGXServer
‹‹@ O
;
‹‹O P
}
‹‹Q R
}
‹‹S T
private
ﬂﬂ 
static
ﬂﬂ 

CommandKey
ﬂﬂ !%
countGeneratedByPattern
ﬂﬂ" 9
=
ﬂﬂ: ;
new
ﬂﬂ< ?

CommandKey
ﬂﬂ@ J
(
ﬂﬂJ K
Package
ﬂﬂK R
.
ﬂﬂR S
guid
ﬂﬂS W
,
ﬂﬂW X
$str
ﬂﬂY r
)
ﬂﬂr s
;
ﬂﬂs t
public
‡‡ 
static
‡‡ 

CommandKey
‡‡  %
CountGeneratedByPattern
‡‡! 8
{
‡‡9 :
get
‡‡; >
{
‡‡? @
return
‡‡A G%
countGeneratedByPattern
‡‡H _
;
‡‡_ `
}
‡‡a b
}
‡‡c d
private
‚‚ 
static
‚‚ 

CommandKey
‚‚ !#
replaceNullCompatible
‚‚" 7
=
‚‚8 9
new
‚‚: =

CommandKey
‚‚> H
(
‚‚H I
Package
‚‚I P
.
‚‚P Q
guid
‚‚Q U
,
‚‚U V
$str
‚‚W n
)
‚‚n o
;
‚‚o p
public
„„ 
static
„„ 

CommandKey
„„  #
ReplaceNullCompatible
„„! 6
{
„„7 8
get
„„9 <
{
„„= >
return
„„? E#
replaceNullCompatible
„„F [
;
„„[ \
}
„„] ^
}
„„_ `
private
ÂÂ 
static
ÂÂ 

CommandKey
ÂÂ !
listObj
ÂÂ" )
=
ÂÂ* +
new
ÂÂ, /

CommandKey
ÂÂ0 :
(
ÂÂ: ;
Package
ÂÂ; B
.
ÂÂB C
guid
ÂÂC G
,
ÂÂG H
$str
ÂÂI R
)
ÂÂR S
;
ÂÂS T
public
ÊÊ 
static
ÊÊ 

CommandKey
ÊÊ  
ListObj
ÊÊ! (
{
ÊÊ) *
get
ÊÊ+ .
{
ÊÊ/ 0
return
ÊÊ1 7
listObj
ÊÊ8 ?
;
ÊÊ? @
}
ÊÊA B
}
ÊÊC D
private
ËË 
static
ËË 

CommandKey
ËË !
createDeployUnits
ËË" 3
=
ËË4 5
new
ËË6 9

CommandKey
ËË: D
(
ËËD E
Package
ËËE L
.
ËËL M
guid
ËËM Q
,
ËËQ R
$str
ËËS f
)
ËËf g
;
ËËg h
public
ÈÈ 
static
ÈÈ 

CommandKey
ÈÈ  
CreateDeployUnits
ÈÈ! 2
{
ÈÈ3 4
get
ÈÈ5 8
{
ÈÈ9 :
return
ÈÈ; A
createDeployUnits
ÈÈB S
;
ÈÈS T
}
ÈÈU V
}
ÈÈW X
private
ÎÎ 
static
ÎÎ 

CommandKey
ÎÎ !
markPublicObjects
ÎÎ" 3
=
ÎÎ4 5
new
ÎÎ6 9

CommandKey
ÎÎ: D
(
ÎÎD E
Package
ÎÎE L
.
ÎÎL M
guid
ÎÎM Q
,
ÎÎQ R
$str
ÎÎS f
)
ÎÎf g
;
ÎÎg h
public
ÏÏ 
static
ÏÏ 

CommandKey
ÏÏ  
MarkPublicObjects
ÏÏ! 2
{
ÏÏ3 4
get
ÏÏ5 8
{
ÏÏ9 :
return
ÏÏ; A
markPublicObjects
ÏÏB S
;
ÏÏS T
}
ÏÏU V
}
ÏÏW X
private
ÔÔ 
static
ÔÔ 

CommandKey
ÔÔ !
listModules
ÔÔ" -
=
ÔÔ. /
new
ÔÔ0 3

CommandKey
ÔÔ4 >
(
ÔÔ> ?
Package
ÔÔ? F
.
ÔÔF G
guid
ÔÔG K
,
ÔÔK L
$str
ÔÔM Z
)
ÔÔZ [
;
ÔÔ[ \
public
 
static
 

CommandKey
  
ListModules
! ,
{
- .
get
/ 2
{
3 4
return
5 ;
listModules
< G
;
G H
}
I J
}
K L
private
ÚÚ 
static
ÚÚ 

CommandKey
ÚÚ !#
listModulesStatistics
ÚÚ" 7
=
ÚÚ8 9
new
ÚÚ: =

CommandKey
ÚÚ> H
(
ÚÚH I
Package
ÚÚI P
.
ÚÚP Q
guid
ÚÚQ U
,
ÚÚU V
$str
ÚÚW n
)
ÚÚn o
;
ÚÚo p
public
ÛÛ 
static
ÛÛ 

CommandKey
ÛÛ  #
ListModulesStatistics
ÛÛ! 6
{
ÛÛ7 8
get
ÛÛ9 <
{
ÛÛ= >
return
ÛÛ? E#
listModulesStatistics
ÛÛF [
;
ÛÛ[ \
}
ÛÛ] ^
}
ÛÛ_ `
private
ıı 
static
ıı 

CommandKey
ıı !
moveTransactions
ıı" 2
=
ıı3 4
new
ıı5 8

CommandKey
ıı9 C
(
ııC D
Package
ııD K
.
ııK L
guid
ııL P
,
ııP Q
$str
ııR d
)
ııd e
;
ııe f
public
ˆˆ 
static
ˆˆ 

CommandKey
ˆˆ  
MoveTransactions
ˆˆ! 1
{
ˆˆ2 3
get
ˆˆ4 7
{
ˆˆ8 9
return
ˆˆ: @
moveTransactions
ˆˆA Q
;
ˆˆQ R
}
ˆˆS T
}
ˆˆU V
private
¯¯ 
static
¯¯ 

CommandKey
¯¯ ! 
moduleDependencies
¯¯" 4
=
¯¯5 6
new
¯¯7 :

CommandKey
¯¯; E
(
¯¯E F
Package
¯¯F M
.
¯¯M N
guid
¯¯N R
,
¯¯R S
$str
¯¯T h
)
¯¯h i
;
¯¯i j
public
˘˘ 
static
˘˘ 

CommandKey
˘˘   
ModuleDependencies
˘˘! 3
{
˘˘4 5
get
˘˘6 9
{
˘˘: ;
return
˘˘< B 
moduleDependencies
˘˘C U
;
˘˘U V
}
˘˘W X
}
˘˘Y Z
private
˚˚ 
static
˚˚ 

CommandKey
˚˚ !
calculateCheckSum
˚˚" 3
=
˚˚4 5
new
˚˚6 9

CommandKey
˚˚: D
(
˚˚D E
Package
˚˚E L
.
˚˚L M
guid
˚˚M Q
,
˚˚Q R
$str
˚˚S f
)
˚˚f g
;
˚˚g h
public
¸¸ 
static
¸¸ 

CommandKey
¸¸  
CalculateCheckSum
¸¸! 2
{
¸¸3 4
get
¸¸5 8
{
¸¸9 :
return
¸¸; A
calculateCheckSum
¸¸B S
;
¸¸S T
}
¸¸U V
}
¸¸W X
private
˛˛ 
static
˛˛ 

CommandKey
˛˛ !!
generateLocationXML
˛˛" 5
=
˛˛6 7
new
˛˛8 ;

CommandKey
˛˛< F
(
˛˛F G
Package
˛˛G N
.
˛˛N O
guid
˛˛O S
,
˛˛S T
$str
˛˛U j
)
˛˛j k
;
˛˛k l
public
ˇˇ 
static
ˇˇ 

CommandKey
ˇˇ  !
GenerateLocationXML
ˇˇ! 4
{
ˇˇ5 6
get
ˇˇ7 :
{
ˇˇ; <
return
ˇˇ= C!
generateLocationXML
ˇˇD W
;
ˇˇW X
}
ˇˇY Z
}
ˇˇ[ \
private
ÅÅ 
static
ÅÅ 

CommandKey
ÅÅ !#
listObjWarningsErrors
ÅÅ" 7
=
ÅÅ8 9
new
ÅÅ: =

CommandKey
ÅÅ> H
(
ÅÅH I
Package
ÅÅI P
.
ÅÅP Q
guid
ÅÅQ U
,
ÅÅU V
$str
ÅÅW n
)
ÅÅn o
;
ÅÅo p
public
ÇÇ 
static
ÇÇ 

CommandKey
ÇÇ  #
ListObjWarningsErrors
ÇÇ! 6
{
ÇÇ7 8
get
ÇÇ9 <
{
ÇÇ= >
return
ÇÇ? E#
listObjWarningsErrors
ÇÇF [
;
ÇÇ[ \
}
ÇÇ] ^
}
ÇÇ_ `
private
ÑÑ 
static
ÑÑ 

CommandKey
ÑÑ !&
listObjSimilarNavigation
ÑÑ" :
=
ÑÑ; <
new
ÑÑ= @

CommandKey
ÑÑA K
(
ÑÑK L
Package
ÑÑL S
.
ÑÑS T
guid
ÑÑT X
,
ÑÑX Y
$str
ÑÑZ t
)
ÑÑt u
;
ÑÑu v
public
ÖÖ 
static
ÖÖ 

CommandKey
ÖÖ  &
ListObjSimilarNavigation
ÖÖ! 9
{
ÖÖ: ;
get
ÖÖ< ?
{
ÖÖ@ A
return
ÖÖB H&
listObjSimilarNavigation
ÖÖI a
;
ÖÖa b
}
ÖÖc d
}
ÖÖe f
private
áá 
static
áá 

CommandKey
áá !
listAPIObjects
áá" 0
=
áá1 2
new
áá3 6

CommandKey
áá7 A
(
ááA B
Package
ááB I
.
ááI J
guid
ááJ N
,
ááN O
$str
ááP `
)
áá` a
;
ááa b
public
àà 
static
àà 

CommandKey
àà  
ListAPIObjects
àà! /
{
àà0 1
get
àà2 5
{
àà6 7
return
àà8 >
listAPIObjects
àà? M
;
ààM N
}
ààO P
}
ààQ R
private
ää 
static
ää 

CommandKey
ää !
recomendedModule
ää" 2
=
ää3 4
new
ää5 8

CommandKey
ää9 C
(
ääC D
Package
ääD K
.
ääK L
guid
ääL P
,
ääP Q
$str
ääR d
)
ääd e
;
ääe f
public
ãã 
static
ãã 

CommandKey
ãã  
RecomendedModule
ãã! 1
{
ãã2 3
get
ãã4 7
{
ãã8 9
return
ãã: @
recomendedModule
ããA Q
;
ããQ R
}
ããS T
}
ããU V
private
çç 
static
çç 

CommandKey
çç !
splitMainObject
çç" 1
=
çç2 3
new
çç4 7

CommandKey
çç8 B
(
ççB C
Package
ççC J
.
ççJ K
guid
ççK O
,
ççO P
$str
ççQ b
)
ççb c
;
ççc d
public
éé 
static
éé 

CommandKey
éé  
SplitMainObject
éé! 0
{
éé1 2
get
éé3 6
{
éé7 8
return
éé9 ?
splitMainObject
éé@ O
;
ééO P
}
ééQ R
}
ééS T
private
êê 
static
êê 

CommandKey
êê !'
prepareComparerNavigation
êê" ;
=
êê< =
new
êê> A

CommandKey
êêB L
(
êêL M
Package
êêM T
.
êêT U
guid
êêU Y
,
êêY Z
$str
êê[ v
)
êêv w
;
êêw x
public
ëë 
static
ëë 

CommandKey
ëë  '
PrepareComparerNavigation
ëë! :
{
ëë; <
get
ëë= @
{
ëëA B
return
ëëC I'
prepareComparerNavigation
ëëJ c
;
ëëc d
}
ëëe f
}
ëëg h
private
ìì 
static
ìì 

CommandKey
ìì !
kbInterfaces
ìì" .
=
ìì/ 0
new
ìì1 4

CommandKey
ìì5 ?
(
ìì? @
Package
ìì@ G
.
ììG H
guid
ììH L
,
ììL M
$str
ììN \
)
ìì\ ]
;
ìì] ^
public
îî 
static
îî 

CommandKey
îî  
KBInterfaces
îî" .
{
îî1 2
get
îî3 6
{
îî7 8
return
îî9 ?
kbInterfaces
îî@ L
;
îîL M
}
îîN O
}
îîP Q
private
ññ 
static
ññ 

CommandKey
ññ !%
compareLastNVGDirectory
ññ" 9
=
ññ: ;
new
ññ< ?

CommandKey
ññ@ J
(
ññJ K
Package
ññK R
.
ññR S
guid
ññS W
,
ññW X
$str
ññY r
)
ññr s
;
ññs t
public
óó 
static
óó 

CommandKey
óó  %
CompareLastNVGDirectory
óó! 8
{
óó9 :
get
óó; >
{
óó? @
return
óóA G%
compareLastNVGDirectory
óóH _
;
óó_ `
}
óóa b
}
óóc d
private
ôô 
static
ôô 

CommandKey
ôô !*
openFolderComparerNavigation
ôô" >
=
ôô? @
new
ôôA D

CommandKey
ôôE O
(
ôôO P
Package
ôôP W
.
ôôW X
guid
ôôX \
,
ôô\ ]
$str
ôô^ |
)
ôô| }
;
ôô} ~
public
öö 
static
öö 

CommandKey
öö  *
OpenFolderComparerNavigation
öö! =
{
öö> ?
get
öö@ C
{
ööD E
return
ööF L*
openFolderComparerNavigation
ööM i
;
ööi j
}
öök l
}
ööm n
private
úú 
static
úú 

CommandKey
úú !-
openFolderObjComparerNavigation
úú" A
=
úúB C
new
úúD G

CommandKey
úúH R
(
úúR S
Package
úúS Z
.
úúZ [
guid
úú[ _
,
úú_ `
$strúúa Ç
)úúÇ É
;úúÉ Ñ
public
ùù 
static
ùù 

CommandKey
ùù  -
OpenFolderObjComparerNavigation
ùù! @
{
ùùA B
get
ùùC F
{
ùùG H
return
ùùI O-
openFolderObjComparerNavigation
ùùP o
;
ùùo p
}
ùùq r
}
ùùs t
private
üü 
static
üü 

CommandKey
üü !%
compareLastOBJDirectory
üü" 9
=
üü: ;
new
üü< ?

CommandKey
üü@ J
(
üüJ K
Package
üüK R
.
üüR S
guid
üüS W
,
üüW X
$str
üüY r
)
üür s
;
üüs t
public
†† 
static
†† 

CommandKey
††  %
CompareLastOBJDirectory
††! 8
{
††9 :
get
††; >
{
††? @
return
††A G%
compareLastOBJDirectory
††H _
;
††_ `
}
††a b
}
††c d
private
¢¢ 
static
¢¢ 

CommandKey
¢¢ !
listLastReports
¢¢" 1
=
¢¢2 3
new
¢¢4 7

CommandKey
¢¢8 B
(
¢¢B C
Package
¢¢C J
.
¢¢J K
guid
¢¢K O
,
¢¢O P
$str
¢¢Q b
)
¢¢b c
;
¢¢c d
public
££ 
static
££ 

CommandKey
££  
UDPCallables
££! -
{
££. /
get
££0 3
{
££4 5
return
££6 <
udpCallables
££= I
;
££I J
}
££K L
}
££M N
private
•• 
static
•• 

CommandKey
•• !
udpCallables
••" .
=
••/ 0
new
••1 4

CommandKey
••5 ?
(
••? @
Package
••@ G
.
••G H
guid
••H L
,
••L M
$str
••N \
)
••\ ]
;
••] ^
public
¶¶ 
static
¶¶ 

CommandKey
¶¶  
ListLastReports
¶¶! 0
{
¶¶1 2
get
¶¶3 6
{
¶¶7 8
return
¶¶9 ?
listLastReports
¶¶@ O
;
¶¶O P
}
¶¶Q R
}
¶¶S T
private
®® 
static
®® 

CommandKey
®® !
aboutKBDoctor
®®" /
=
®®0 1
new
®®2 5

CommandKey
®®6 @
(
®®@ A
Package
®®A H
.
®®H I
guid
®®I M
,
®®M N
$str
®®O ^
)
®®^ _
;
®®_ `
public
©© 
static
©© 

CommandKey
©©  
AboutKBDoctor
©©! .
{
©©/ 0
get
©©1 4
{
©©5 6
return
©©7 =
aboutKBDoctor
©©> K
;
©©K L
}
©©M N
}
©©O P
private
´´ 
static
´´ 

CommandKey
´´ !
helpKBDoctor
´´" .
=
´´/ 0
new
´´1 4

CommandKey
´´5 ?
(
´´? @
Package
´´@ G
.
´´G H
guid
´´H L
,
´´L M
$str
´´N \
)
´´\ ]
;
´´] ^
public
¨¨ 
static
¨¨ 

CommandKey
¨¨  
HelpKBDoctor
¨¨! -
{
¨¨. /
get
¨¨0 3
{
¨¨4 5
return
¨¨6 <
helpKBDoctor
¨¨= I
;
¨¨I J
}
¨¨K L
}
¨¨M N
}
≠≠ 
}ÆÆ íÔ
DC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\CommandManager.cs
	namespace 	
Concepto
 
. 
Packages 
. 
KBDoctor $
{ 
class 	
CommandManager
 
: 
CommandDelegator +
{ 
public 
CommandManager 
( 
) 
{ 	

AddCommand 
( 
CommandKeys "
." #
AttWithNoDomain# 2
,2 3
new4 7
ExecHandler8 C
(C D
ExecAttWithNoDomainD W
)W X
,X Y
newZ ]
QueryHandler^ j
(j k
QueryKBDoctork x
)x y
)y z
;z {

AddCommand 
( 
CommandKeys "
." #
ListAttributes# 1
,1 2
new3 6
ExecHandler7 B
(B C
ExecListAttributesC U
)U V
,V W
newX [
QueryHandler\ h
(h i
QueryKBDoctori v
)v w
)w x
;x y

AddCommand 
( 
CommandKeys "
." #!
AttWithoutDescription# 8
,8 9
new: =
ExecHandler> I
(I J%
ExecAttWithoutDescriptionJ c
)c d
,d e
newf i
QueryHandlerj v
(v w
QueryKBDoctor	w Ñ
)
Ñ Ö
)
Ö Ü
;
Ü á

AddCommand 
( 
CommandKeys "
." #
AttCharToVarchar# 3
,3 4
new5 8
ExecHandler9 D
(D E 
ExecAttCharToVarcharE Y
)Y Z
,Z [
new\ _
QueryHandler` l
(l m
QueryKBDoctorm z
)z {
){ |
;| }

AddCommand 
( 
CommandKeys "
." #
AttVarcharToChar# 3
,3 4
new5 8
ExecHandler9 D
(D E 
ExecAttVarcharToCharE Y
)Y Z
,Z [
new\ _
QueryHandler` l
(l m
QueryKBDoctorm z
)z {
){ |
;| }

AddCommand 
( 
CommandKeys "
." #
AttKeyVarchar# 0
,0 1
new2 5
ExecHandler6 A
(A B
ExecAttKeyVarcharB S
)S T
,T U
newV Y
QueryHandlerZ f
(f g
QueryKBDoctorg t
)t u
)u v
;v w

AddCommand   
(   
CommandKeys   "
.  " #%
AttDescWithoutUniqueIndex  # <
,  < =
new  > A
ExecHandler  B M
(  M N)
ExecAttDescWithoutUniqueIndex  N k
)  k l
,  l m
new  n q
QueryHandler  r ~
(  ~ 
QueryKBDoctor	   å
)
  å ç
)
  ç é
;
  é è

AddCommand!! 
(!! 
CommandKeys!! "
.!!" #
AttNotReferenced!!# 3
,!!3 4
new!!5 8
ExecHandler!!9 D
(!!D E 
ExecAttNotReferenced!!E Y
)!!Y Z
,!!Z [
new!!\ _
QueryHandler!!` l
(!!l m
QueryKBDoctor!!m z
)!!z {
)!!{ |
;!!| }

AddCommand"" 
("" 
CommandKeys"" "
.""" #
AttWithoutBaseTable""# 6
,""6 7
new""8 ;
ExecHandler""< G
(""G H#
ExecAttWithoutBaseTable""H _
)""_ `
,""` a
new""b e
QueryHandler""f r
(""r s
QueryKBDoctor	""s Ä
)
""Ä Å
)
""Å Ç
;
""Ç É

AddCommand## 
(## 
CommandKeys## "
.##" #
AttInOneTrnOnly### 2
,##2 3
new##4 7
ExecHandler##8 C
(##C D
ExecAttInOneTrnOnly##D W
)##W X
,##X Y
new##Z ]
QueryHandler##^ j
(##j k
QueryKBDoctor##k x
)##x y
)##y z
;##z {

AddCommand$$ 
($$ 
CommandKeys$$ "
.$$" #

AttFormula$$# -
,$$- .
new$$/ 2
ExecHandler$$3 >
($$> ?
ExecAttFormula$$? M
)$$M N
,$$N O
new$$P S
QueryHandler$$T `
($$` a
QueryKBDoctor$$a n
)$$n o
)$$o p
;$$p q

AddCommand%% 
(%% 
CommandKeys%% "
.%%" #
ReplaceDomain%%# 0
,%%0 1
new%%2 5
ExecHandler%%6 A
(%%A B
ExecReplaceDomain%%B S
)%%S T
,%%T U
new%%V Y
QueryHandler%%Z f
(%%f g
QueryKBDoctor%%g t
)%%t u
)%%u v
;%%v w

AddCommand&& 
(&& 
CommandKeys&& "
.&&" #

ListDomain&&# -
,&&- .
new&&/ 2
ExecHandler&&3 >
(&&> ?
ExecListDomain&&? M
)&&M N
,&&N O
new&&P S
QueryHandler&&T `
(&&` a
QueryKBDoctor&&a n
)&&n o
)&&o p
;&&p q

AddCommand'' 
('' 
CommandKeys'' "
.''" #

AttUpdated''# -
,''- .
new''/ 2
ExecHandler''3 >
(''> ?
ExecAttUpdated''? M
)''M N
,''N O
new''P S
QueryHandler''T `
(''` a
QueryKBDoctor''a n
)''n o
)''o p
;''p q

AddCommand)) 
()) 
CommandKeys)) "
.))" ##
AssignDomainToAttribute))# :
,)): ;
new))< ?
ExecHandler))@ K
())K L'
ExecAssignDomainToAttribute))L g
)))g h
,))h i
new))j m
QueryHandler))n z
())z {
QueryKBDoctor	)){ à
)
))à â
)
))â ä
;
))ä ã

AddCommand** 
(** 
CommandKeys** "
.**" #(
AssignDescriptionToAttribute**# ?
,**? @
new**A D
ExecHandler**E P
(**P Q,
 ExecAssignDescriptionToAttribute**Q q
)**q r
,**r s
new**t w
QueryHandler	**x Ñ
(
**Ñ Ö
QueryKBDoctor
**Ö í
)
**í ì
)
**ì î
;
**î ï

AddCommand++ 
(++ 
CommandKeys++ "
.++" #"
AssignTitleToAttribute++# 9
,++9 :
new++; >
ExecHandler++? J
(++J K&
ExecAssignTitleToAttribute++K e
)++e f
,++f g
new++h k
QueryHandler++l x
(++x y
QueryKBDoctor	++y Ü
)
++Ü á
)
++á à
;
++à â

AddCommand,, 
(,, 
CommandKeys,, "
.,," #(
AssignColumnTitleToAttribute,,# ?
,,,? @
new,,A D
ExecHandler,,E P
(,,P Q,
 ExecAssignColumnTitleToAttribute,,Q q
),,q r
,,,r s
new,,t w
QueryHandler	,,x Ñ
(
,,Ñ Ö
QueryKBDoctor
,,Ö í
)
,,í ì
)
,,ì î
;
,,î ï

AddCommand-- 
(-- 
CommandKeys-- "
.--" #
AddDescriptorIndex--# 5
,--5 6
new--7 :
ExecHandler--; F
(--F G"
ExecAddDescriptorIndex--G ]
)--] ^
,--^ _
new--` c
QueryHandler--d p
(--p q
QueryKBDoctor--q ~
)--~ 
)	-- Ä
;
--Ä Å

AddCommand// 
(// 
CommandKeys// "
.//" #
TblWihNoDescription//# 6
,//6 7
new//8 ;
ExecHandler//< G
(//G H#
ExecTblWihNoDescription//H _
)//_ `
,//` a
new//b e
QueryHandler//f r
(//r s
QueryKBDoctor	//s Ä
)
//Ä Å
)
//Å Ç
;
//Ç É

AddCommand00 
(00 
CommandKeys00 "
.00" #
GrpWihNoDescription00# 6
,006 7
new008 ;
ExecHandler00< G
(00G H#
ExecGrpWihNoDescription00H _
)00_ `
,00` a
new00b e
QueryHandler00f r
(00r s
QueryKBDoctor	00s Ä
)
00Ä Å
)
00Å Ç
;
00Ç É

AddCommand11 
(11 
CommandKeys11 "
.11" #
TblWidth11# +
,11+ ,
new11- 0
ExecHandler111 <
(11< =
ExecTblWidth11= I
)11I J
,11J K
new11L O
QueryHandler11P \
(11\ ]
QueryKBDoctor11] j
)11j k
)11k l
;11l m

AddCommand22 
(22 
CommandKeys22 "
.22" #

ListTables22# -
,22- .
new22/ 2
ExecHandler223 >
(22> ?
ExecListTables22? M
)22M N
,22N O
new22P S
QueryHandler22T `
(22` a
QueryKBDoctor22a n
)22n o
)22o p
;22p q

AddCommand33 
(33 
CommandKeys33 "
.33" #
TblTableTransaction33# 6
,336 7
new338 ;
ExecHandler33< G
(33G H#
ExecTblTableTransaction33H _
)33_ `
,33` a
new33b e
QueryHandler33f r
(33r s
QueryKBDoctor	33s Ä
)
33Ä Å
)
33Å Ç
;
33Ç É

AddCommand44 
(44 
CommandKeys44 "
.44" #D
8TblGenerateSimpleTransactionFromNotGeneratedTransactions44# [
,44[ \
new44] `
ExecHandler44a l
(44l mI
<ExecTblGenerateSimpleTransactionFromNotGeneratedTransactions	44m ©
)
44© ™
,
44™ ´
new
44¨ Ø
QueryHandler
44∞ º
(
44º Ω
QueryKBDoctor
44Ω  
)
44  À
)
44À Ã
;
44Ã Õ

AddCommand55 
(55 
CommandKeys55 "
.55" #
TblTableUpdate55# 1
,551 2
new553 6
ExecHandler557 B
(55B C
ExecTblTableUpdate55C U
)55U V
,55V W
new55X [
QueryHandler55\ h
(55h i
QueryKBDoctor55i v
)55v w
)55w x
;55x y

AddCommand66 
(66 
CommandKeys66 "
.66" #
TblTableInsertNew66# 4
,664 5
new666 9
ExecHandler66: E
(66E F!
ExecTblTableInsertNew66F [
)66[ \
,66\ ]
new66^ a
QueryHandler66b n
(66n o
QueryKBDoctor66o |
)66| }
)66} ~
;66~ 

AddCommand77 
(77 
CommandKeys77 "
.77" #!
GenerateTrnFromTables77# 8
,778 9
new77: =
ExecHandler77> I
(77I J%
ExecGenerateTrnFromTables77J c
)77c d
,77d e
new77f i
QueryHandler77j v
(77v w
QueryKBDoctor	77w Ñ
)
77Ñ Ö
)
77Ö Ü
;
77Ü á

AddCommand88 
(88 
CommandKeys88 "
.88" #"
GenerateTrnFromTables288# 9
,889 :
new88; >
ExecHandler88? J
(88J K&
ExecGenerateTrnFromTables288K e
)88e f
,88f g
new88h k
QueryHandler88l x
(88x y
QueryKBDoctor	88y Ü
)
88Ü á
)
88á à
;
88à â

AddCommand99 
(99 
CommandKeys99 "
.99" #
ListTablesInModules99# 6
,996 7
new998 ;
ExecHandler99< G
(99G H#
ExecListTablesInModules99H _
)99_ `
,99` a
new99b e
QueryHandler99f r
(99r s
QueryKBDoctor	99s Ä
)
99Ä Å
)
99Å Ç
;
99Ç É

AddCommand<< 
(<< 
CommandKeys<< "
.<<" #$
AssignDescriptionToTable<<# ;
,<<; <
new<<= @
ExecHandler<<A L
(<<L M(
ExecAssignDescriptionToTable<<M i
)<<i j
,<<j k
new<<l o
QueryHandler<<p |
(<<| }
QueryKBDoctor	<<} ä
)
<<ä ã
)
<<ã å
;
<<å ç

AddCommand>> 
(>> 
CommandKeys>> "
.>>" #
IndexWithNotRefAtt>># 5
,>>5 6
new>>7 :
ExecHandler>>; F
(>>F G"
ExecIndexWithNotRefAtt>>G ]
)>>] ^
,>>^ _
new>>` c
QueryHandler>>d p
(>>p q
QueryKBDoctor>>q ~
)>>~ 
)	>> Ä
;
>>Ä Å

AddCommand?? 
(?? 
CommandKeys?? "
.??" # 
RemoveIndexAttribute??# 7
,??7 8
new??9 <
ExecHandler??= H
(??H I%
ExecRremoveIndexAttribute??I b
)??b c
,??c d
new??e h
QueryHandler??i u
(??u v
QueryKBDoctor	??v É
)
??É Ñ
)
??Ñ Ö
;
??Ö Ü

AddCommandAA 
(AA 
CommandKeysAA "
.AA" #
ObjNotReacheableAA# 3
,AA3 4
newAA5 8
ExecHandlerAA9 D
(AAD E 
ExecObjNotReacheableAAE Y
)AAY Z
,AAZ [
newAA\ _
QueryHandlerAA` l
(AAl m
QueryKBDoctorAAm z
)AAz {
)AA{ |
;AA| }

AddCommandBB 
(BB 
CommandKeysBB "
.BB" #
ObjectsWithoutInOutBB# 6
,BB6 7
newBB8 ;
ExecHandlerBB< G
(BBG H#
ExecObjectsWithoutInOutBBH _
)BB_ `
,BB` a
newBBb e
QueryHandlerBBf r
(BBr s
QueryKBDoctor	BBs Ä
)
BBÄ Å
)
BBÅ Ç
;
BBÇ É

AddCommandCC 
(CC 
CommandKeysCC "
.CC" #
ObjectsMainCalledCC# 4
,CC4 5
newCC6 9
ExecHandlerCC: E
(CCE F"
ExecObjectsMainsCalledCCF \
)CC\ ]
,CC] ^
newCC_ b
QueryHandlerCCc o
(CCo p
QueryKBDoctorCCp }
)CC} ~
)CC~ 
;	CC Ä

AddCommandDD 
(DD 
CommandKeysDD "
.DD" #
ObjectsReferencedDD# 4
,DD4 5
newDD6 9
ExecHandlerDD: E
(DDE F!
ExecObjectsReferencedDDF [
)DD[ \
,DD\ ]
newDD^ a
QueryHandlerDDb n
(DDn o
QueryKBDoctorDDo |
)DD| }
)DD} ~
;DD~ 

AddCommandEE 
(EE 
CommandKeysEE "
.EE" #'
ObjectsWithVarNotBasedOnAttEE# >
,EE> ?
newEE@ C
ExecHandlerEED O
(EEO P+
ExecObjectsWithVarNotBasedOnAttEEP o
)EEo p
,EEp q
newEEr u
QueryHandler	EEv Ç
(
EEÇ É
QueryKBDoctor
EEÉ ê
)
EEê ë
)
EEë í
;
EEí ì

AddCommandFF 
(FF 
CommandKeysFF "
.FF" #
RenameVariablesFF# 2
,FF2 3
newFF4 7
ExecHandlerFF8 C
(FFC D
ExecRenameVariablesFFD W
)FFW X
,FFX Y
newFFZ ]
QueryHandlerFF^ j
(FFj k
QueryKBDoctorFFk x
)FFx y
)FFy z
;FFz {

AddCommandGG 
(GG 
CommandKeysGG "
.GG" #
BuildModuleGG# .
,GG. /
newGG0 3
ExecHandlerGG4 ?
(GG? @
ExecBuildModuleGG@ O
)GGO P
,GGP Q
newGGR U
QueryHandlerGGV b
(GGb c
QueryKBDoctorGGc p
)GGp q
)GGq r
;GGr s

AddCommandHH 
(HH 
CommandKeysHH "
.HH" #
BuildModuleContextHH# 5
,HH5 6
newHH7 :
ExecHandlerHH; F
(HHF G"
ExecBuildModuleContextHHG ]
)HH] ^
,HH^ _
newHH` c
QueryHandlerHHd p
(HHp q
QueryKBDoctorHHq ~
)HH~ 
)	HH Ä
;
HHÄ Å

AddCommandII 
(II 
CommandKeysII "
.II" #$
BuildObjectAndReferencesII# ;
,II; <
newII= @
ExecHandlerIIA L
(IIL M(
ExecBuildObjectAndReferencesIIM i
)IIi j
,IIj k
newIIl o
QueryHandlerIIp |
(II| }
QueryKBDoctor	II} ä
)
IIä ã
)
IIã å
;
IIå ç

AddCommandKK 
(KK 
CommandKeysKK "
.KK" #
ObjectsNotCalledKK# 3
,KK3 4
newKK5 8
ExecHandlerKK9 D
(KKD E 
ExecObjectsNotCalledKKE Y
)KKY Z
,KKZ [
newKK\ _
QueryHandlerKK` l
(KKl m
QueryKBDoctorKKm z
)KKz {
)KK{ |
;KK| }

AddCommandLL 
(LL 
CommandKeysLL "
.LL" ##
ObjectsWithCommitOnExitLL# :
,LL: ;
newLL< ?
ExecHandlerLL@ K
(LLK L'
ExecObjectsWithCommitOnExitLLL g
)LLg h
,LLh i
newLLj m
QueryHandlerLLn z
(LLz {
QueryKBDoctor	LL{ à
)
LLà â
)
LLâ ä
;
LLä ã

AddCommandMM 
(MM 
CommandKeysMM "
.MM" #"
ObjectsWithVarsNotUsedMM# 9
,MM9 :
newMM; >
ExecHandlerMM? J
(MMJ K&
ExecObjectsWithVarsNotUsedMMK e
)MMe f
,MMf g
newMMh k
QueryHandlerMMl x
(MMx y
QueryKBDoctor	MMy Ü
)
MMÜ á
)
MMá à
;
MMà â

AddCommandNN 
(NN 
CommandKeysNN "
.NN" #
ResetWINFormNN# /
,NN/ 0
newNN1 4
ExecHandlerNN5 @
(NN@ A
ExecResetWINFormNNA Q
)NNQ R
,NNR S
newNNT W
QueryHandlerNNX d
(NNd e
QueryKBDoctorNNe r
)NNr s
)NNs t
;NNt u

AddCommandOO 
(OO 
CommandKeysOO "
.OO" #
ObjectsComplexOO# 1
,OO1 2
newOO3 6
ExecHandlerOO7 B
(OOB C
ExecObjectsComplexOOC U
)OOU V
,OOV W
newOOX [
QueryHandlerOO\ h
(OOh i
QueryKBDoctorOOi v
)OOv w
)OOw x
;OOx y

AddCommandQQ 
(QQ 
CommandKeysQQ "
.QQ" #
ChangeCommitOnExitQQ# 5
,QQ5 6
newQQ7 :
ExecHandlerQQ; F
(QQF G"
ExecChangeCommitOnExitQQG ]
)QQ] ^
,QQ^ _
newQQ` c
QueryHandlerQQd p
(QQp q
QueryKBDoctorQQq ~
)QQ~ 
)	QQ Ä
;
QQÄ Å

AddCommandRR 
(RR 
CommandKeysRR "
.RR" #

TreeCommitRR# -
,RR- .
newRR/ 2
ExecHandlerRR3 >
(RR> ?
ExecTreeCommitRR? M
)RRM N
,RRN O
newRRP S
QueryHandlerRRT `
(RR` a
QueryKBDoctorRRa n
)RRn o
)RRo p
;RRp q

AddCommandTT 
(TT 
CommandKeysTT "
.TT" #
ObjectsLegacyCodeTT# 4
,TT4 5
newTT6 9
ExecHandlerTT: E
(TTE F!
ExecObjectsLegacyCodeTTF [
)TT[ \
,TT\ ]
newTT^ a
QueryHandlerTTb n
(TTn o
QueryKBDoctorTTo |
)TT| }
)TT} ~
;TT~ 

AddCommandUU 
(UU 
CommandKeysUU "
.UU" #
ChangeLegacyCodeUU# 3
,UU3 4
newUU5 8
ExecHandlerUU9 D
(UUD E 
ExecChangeLegacyCodeUUE Y
)UUY Z
,UUZ [
newUU\ _
QueryHandlerUU` l
(UUl m
QueryKBDoctorUUm z
)UUz {
)UU{ |
;UU| }

AddCommandVV 
(VV 
CommandKeysVV "
.VV" ##
EditLegacyCodeToReplaceVV# :
,VV: ;
newVV< ?
ExecHandlerVV@ K
(VVK L'
ExecEditLegacyCodeToReplaceVVL g
)VVg h
,VVh i
newVVj m
QueryHandlerVVn z
(VVz {
QueryKBDoctor	VV{ à
)
VVà â
)
VVâ ä
;
VVä ã

AddCommandWW 
(WW 
CommandKeysWW "
.WW" #(
ObjectsRefactoringCandidatesWW# ?
,WW? @
newWWA D
ExecHandlerWWE P
(WWP Q,
 ExecObjectsRefactoringCandidatesWWQ q
)WWq r
,WWr s
newWWt w
QueryHandler	WWx Ñ
(
WWÑ Ö
QueryKBDoctor
WWÖ í
)
WWí ì
)
WWì î
;
WWî ï

AddCommandXX 
(XX 
CommandKeysXX "
.XX" #
ObjectsDiagnosticsXX# 5
,XX5 6
newXX7 :
ExecHandlerXX; F
(XXF G"
ExecObjectsDiagnosticsXXG ]
)XX] ^
,XX^ _
newXX` c
QueryHandlerXXd p
(XXp q
QueryKBDoctorXXq ~
)XX~ 
)	XX Ä
;
XXÄ Å

AddCommandYY 
(YY 
CommandKeysYY "
.YY" #
KBInterfacesYY# /
,YY/ 0
newYY1 4
ExecHandlerYY5 @
(YY@ A
ExecKBInterfacesYYA Q
)YYQ R
,YYR S
newYYT W
QueryHandlerYYX d
(YYd e
QueryKBDoctorYYe r
)YYr s
)YYs t
;YYt u

AddCommandZZ 
(ZZ 
CommandKeysZZ "
.ZZ" #
ObjectsWINWEBZZ# 0
,ZZ0 1
newZZ2 5
ExecHandlerZZ6 A
(ZZA B
ExecObjectsWINWEBZZB S
)ZZS T
,ZZT U
newZZV Y
QueryHandlerZZZ f
(ZZf g
QueryKBDoctorZZg t
)ZZt u
)ZZu v
;ZZv w

AddCommand[[ 
([[ 
CommandKeys[[ "
.[[" #0
$ListProcedureCallWebpanelTransaction[[# G
,[[G H
new[[I L
ExecHandler[[M X
([[X Y5
(ExecListProcedureCallWebpanelTransaction	[[Y Å
)
[[Å Ç
,
[[Ç É
new
[[Ñ á
QueryHandler
[[à î
(
[[î ï
QueryKBDoctor
[[ï ¢
)
[[¢ £
)
[[£ §
;
[[§ •

AddCommand\\ 
(\\ 
CommandKeys\\ "
.\\" #
MainTableUsed\\# 0
,\\0 1
new\\2 5
ExecHandler\\6 A
(\\A B
ExecMainTableUsed\\B S
)\\S T
,\\T U
new\\V Y
QueryHandler\\Z f
(\\f g
QueryKBDoctor\\g t
)\\t u
)\\u v
;\\v w

AddCommand]] 
(]] 
CommandKeys]] "
.]]" #!
RemovableTransactions]]# 8
,]]8 9
new]]: =
ExecHandler]]> I
(]]I J%
ExecRemovableTransactions]]J c
)]]c d
,]]d e
new]]f i
QueryHandler]]j v
(]]v w
QueryKBDoctor	]]w Ñ
)
]]Ñ Ö
)
]]Ö Ü
;
]]Ü á

AddCommand^^ 
(^^ 
CommandKeys^^ "
.^^" #
GenerateSQLScripts^^# 5
,^^5 6
new^^7 :
ExecHandler^^; F
(^^F G"
ExecGenerateSQLScripts^^G ]
)^^] ^
,^^^ _
new^^` c
QueryHandler^^d p
(^^p q
QueryKBDoctor^^q ~
)^^~ 
)	^^ Ä
;
^^Ä Å

AddCommand__ 
(__ 
CommandKeys__ "
.__" #
GenerateGraph__# 0
,__0 1
new__2 5
ExecHandler__6 A
(__A B
ExecGenerateGraph__B S
)__S T
,__T U
new__V Y
QueryHandler__Z f
(__f g
QueryKBDoctor__g t
)__t u
)__u v
;__v w

AddCommandbb 
(bb 
CommandKeysbb "
.bb" #
RemoveObjectbb# /
,bb/ 0
newbb1 4
ExecHandlerbb5 @
(bb@ A
ExecRemoveObjectbbA Q
)bbQ R
,bbR S
newbbT W
QueryHandlerbbX d
(bbd e
QueryKBDoctorbbe r
)bbr s
)bbs t
;bbt u

AddCommandcc 
(cc 
CommandKeyscc "
.cc" #

OpenObjectcc# -
,cc- .
newcc/ 2
ExecHandlercc3 >
(cc> ?
ExecOpenKBObjectcc? O
)ccO P
,ccP Q
newccR U
QueryHandlerccV b
(ccb c
QueryKBDoctorccc p
)ccp q
)ccq r
;ccr s

AddCommanddd 
(dd 
CommandKeysdd "
.dd" #%
AssignAttributeToVariabledd# <
,dd< =
newdd> A
ExecHandlerddB M
(ddM N)
ExecAssignAttributeToVariableddN k
)ddk l
,ddl m
newddn q
QueryHandlerddr ~
(dd~ 
QueryKBDoctor	dd å
)
ddå ç
)
ddç é
;
ddé è

AddCommandee 
(ee 
CommandKeysee "
.ee" #"
AssignDomainToVariableee# 9
,ee9 :
newee; >
ExecHandleree? J
(eeJ K&
ExecAssignDomainToVariableeeK e
)eee f
,eef g
neweeh k
QueryHandlereel x
(eex y
QueryKBDoctor	eey Ü
)
eeÜ á
)
eeá à
;
eeà â

AddCommandff 
(ff 
CommandKeysff "
.ff" #
CleanVarsNotUsedff# 3
,ff3 4
newff5 8
ExecHandlerff9 D
(ffD E 
ExecCleanVarsNotUsedffE Y
)ffY Z
,ffZ [
newff\ _
QueryHandlerff` l
(ffl m
QueryKBDoctorffm z
)ffz {
)ff{ |
;ff| }

AddCommandhh 
(hh 
CommandKeyshh "
.hh" #
AddINParmRulehh# 0
,hh0 1
newhh2 5
ExecHandlerhh6 A
(hhA B
ExecAddINParmRulehhB S
)hhS T
,hhT U
newhhV Y
QueryHandlerhhZ f
(hhf g
QueryKBDoctorhhg t
)hht u
)hhu v
;hhv w

AddCommandii 
(ii 
CommandKeysii "
.ii" #*
ListTableAttributesUsingDomainii# A
,iiA B
newiiC F
ExecHandleriiG R
(iiR S.
"ExecListTableAttributesUsingDomainiiS u
)iiu v
,iiv w
newiix {
QueryHandler	ii| à
(
iià â
QueryKBDoctor
iiâ ñ
)
iiñ ó
)
iió ò
;
iiò ô

AddCommandjj 
(jj 
CommandKeysjj "
.jj" #
CleanObjectsjj# /
,jj/ 0
newjj1 4
ExecHandlerjj5 @
(jj@ A
ExecCleanObjectsjjA Q
)jjQ R
,jjR S
newjjT W
QueryHandlerjjX d
(jjd e
QueryKBDoctorjje r
)jjr s
)jjs t
;jjt u

AddCommandkk 
(kk 
CommandKeyskk "
.kk" ##
CleanKBAsMuchAsPossiblekk# :
,kk: ;
newkk< ?
ExecHandlerkk@ K
(kkK L
ExecCleanKBkkL W
)kkW X
,kkX Y
newkkZ ]
QueryHandlerkk^ j
(kkj k
QueryKBDoctorkkk x
)kkx y
)kky z
;kkz {

AddCommandll 
(ll 
CommandKeysll "
.ll" #
ProcedureSDTll# /
,ll/ 0
newll1 4
ExecHandlerll5 @
(ll@ A
ExecProcedureSDTllA Q
)llQ R
,llR S
newllT W
QueryHandlerllX d
(lld e
QueryKBDoctorlle r
)llr s
)lls t
;llt u

AddCommandmm 
(mm 
CommandKeysmm "
.mm" #
ProcedureGetSetmm# 2
,mm2 3
newmm4 7
ExecHandlermm8 C
(mmC D
ExecProcedureGetSetmmD W
)mmW X
,mmX Y
newmmZ ]
QueryHandlermm^ j
(mmj k
QueryKBDoctormmk x
)mmx y
)mmy z
;mmz {

AddCommandnn 
(nn 
CommandKeysnn "
.nn" #
SearchAndReplacenn# 3
,nn3 4
newnn5 8
ExecHandlernn9 D
(nnD E 
ExecSearchAndReplacennE Y
)nnY Z
,nnZ [
newnn\ _
QueryHandlernn` l
(nnl m
QueryKBDoctornnm z
)nnz {
)nn{ |
;nn| }

AddCommandoo 
(oo 
CommandKeysoo "
.oo" #
ClassNotInThemeoo# 2
,oo2 3
newoo4 7
ExecHandleroo8 C
(ooC D
ExecClassNotInThemeooD W
)ooW X
,ooX Y
newooZ ]
QueryHandleroo^ j
(ooj k
QueryKBDoctorook x
)oox y
)ooy z
;ooz {

AddCommandpp 
(pp 
CommandKeyspp "
.pp" #
	ClassUsedpp# ,
,pp, -
newpp. 1
ExecHandlerpp2 =
(pp= >
ExecClassUsedpp> K
)ppK L
,ppL M
newppN Q
QueryHandlerppR ^
(pp^ _
QueryKBDoctorpp_ l
)ppl m
)ppm n
;ppn o

AddCommandqq 
(qq 
CommandKeysqq "
.qq" #
ListClassUsedqq# 0
,qq0 1
newqq2 5
ExecHandlerqq6 A
(qqA B
ExecClassUsedqqB O
)qqO P
,qqP Q
newqqR U
QueryHandlerqqV b
(qqb c
QueryKBDoctorqqc p
)qqp q
)qqq r
;qqr s

AddCommandrr 
(rr 
CommandKeysrr "
.rr" #%
PrepareComparerNavigationrr# <
,rr< =
newrr> A
ExecHandlerrrB M
(rrM N)
ExecPrepareComparerNavigationrrN k
)rrk l
,rrl m
newrrn q
QueryHandlerrrr ~
(rr~ 
QueryKBDoctor	rr å
)
rrå ç
)
rrç é
;
rré è

AddCommandss 
(ss 
CommandKeysss "
.ss" #(
OpenFolderComparerNavigationss# ?
,ss? @
newssA D
ExecHandlerssE P
(ssP Q,
 ExecOpenFolderComparerNavigationssQ q
)ssq r
,ssr s
newsst w
QueryHandler	ssx Ñ
(
ssÑ Ö
QueryKBDoctor
ssÖ í
)
ssí ì
)
ssì î
;
ssî ï

AddCommandtt 
(tt 
CommandKeystt "
.tt" #+
OpenFolderObjComparerNavigationtt# B
,ttB C
newttD G
ExecHandlerttH S
(ttS T/
#ExecOpenFolderObjComparerNavigationttT w
)ttw x
,ttx y
newttz }
QueryHandler	tt~ ä
(
ttä ã
QueryKBDoctor
ttã ò
)
ttò ô
)
ttô ö
;
ttö õ

AddCommanduu 
(uu 
CommandKeysuu "
.uu" ##
CompareLastNVGDirectoryuu# :
,uu: ;
newuu< ?
ExecHandleruu@ K
(uuK L'
ExecCompareLastNVGDirectoryuuL g
)uug h
,uuh i
newuuj m
QueryHandleruun z
(uuz {
QueryKBDoctor	uu{ à
)
uuà â
)
uuâ ä
;
uuä ã

AddCommandvv 
(vv 
CommandKeysvv "
.vv" ##
CompareLastOBJDirectoryvv# :
,vv: ;
newvv< ?
ExecHandlervv@ K
(vvK L'
ExecCompareLastOBJDirectoryvvL g
)vvg h
,vvh i
newvvj m
QueryHandlervvn z
(vvz {
QueryKBDoctor	vv{ à
)
vvà â
)
vvâ ä
;
vvä ã

AddCommandxx 
(xx 
CommandKeysxx "
.xx" #
ListLastReportsxx# 2
,xx2 3
newxx4 7
ExecHandlerxx8 C
(xxC D
ExecListLastReportsxxD W
)xxW X
,xxX Y
newxxZ ]
QueryHandlerxx^ j
(xxj k
QueryKBDoctorxxk x
)xxx y
)xxy z
;xxz {

AddCommand{{ 
({{ 
CommandKeys{{ "
.{{" #
AboutKBDoctor{{# 0
,{{0 1
new{{2 5
ExecHandler{{6 A
({{A B
ExecAboutKBDoctor{{B S
){{S T
,{{T U
new{{V Y
QueryHandler{{Z f
({{f g
QueryKBDoctorNoKB{{g x
){{x y
){{y z
;{{z {

AddCommand|| 
(|| 
CommandKeys|| "
.||" #
HelpKBDoctor||# /
,||/ 0
new||1 4
ExecHandler||5 @
(||@ A
ExecHelpKBDoctor||A Q
)||Q R
,||R S
new||T W
QueryHandler||X d
(||d e
QueryKBDoctorNoKB||e v
)||v w
)||w x
;||x y

AddCommand~~ 
(~~ 
CommandKeys~~ "
.~~" #%
RenameAttributesAndTables~~# <
,~~< =
new~~> A
ExecHandler~~B M
(~~M N)
ExecRenameAttributesAndTables~~N k
)~~k l
,~~l m
new~~n q
QueryHandler~~r ~
(~~~ 
QueryKBDoctorNoKB	~~ ê
)
~~ê ë
)
~~ë í
;
~~í ì

AddCommand 
( 
CommandKeys "
." ##
CountGeneratedByPattern# :
,: ;
new< ?
ExecHandler@ K
(K L'
ExecCountGeneratedByPatternL g
)g h
,h i
newj m
QueryHandlern z
(z {
QueryKBDoctorNoKB	{ å
)
å ç
)
ç é
;
é è

AddCommand
ÄÄ 
(
ÄÄ 
CommandKeys
ÄÄ "
.
ÄÄ" ##
ReplaceNullCompatible
ÄÄ# 8
,
ÄÄ8 9
new
ÄÄ: =
ExecHandler
ÄÄ> I
(
ÄÄI J'
ExecReplaceNullCompatible
ÄÄJ c
)
ÄÄc d
,
ÄÄd e
new
ÄÄf i
QueryHandler
ÄÄj v
(
ÄÄv w 
QueryKBDoctorNoKBÄÄw à
)ÄÄà â
)ÄÄâ ä
;ÄÄä ã

AddCommand
ÅÅ 
(
ÅÅ 
CommandKeys
ÅÅ "
.
ÅÅ" #
ListObj
ÅÅ# *
,
ÅÅ* +
new
ÅÅ, /
ExecHandler
ÅÅ0 ;
(
ÅÅ; <
ExecListObj
ÅÅ< G
)
ÅÅG H
,
ÅÅH I
new
ÅÅJ M
QueryHandler
ÅÅN Z
(
ÅÅZ [
QueryKBDoctorNoKB
ÅÅ[ l
)
ÅÅl m
)
ÅÅm n
;
ÅÅn o

AddCommand
ÇÇ 
(
ÇÇ 
CommandKeys
ÇÇ "
.
ÇÇ" #
CreateDeployUnits
ÇÇ# 4
,
ÇÇ4 5
new
ÇÇ6 9
ExecHandler
ÇÇ: E
(
ÇÇE F#
ExecCreateDeployUnits
ÇÇF [
)
ÇÇ[ \
,
ÇÇ\ ]
new
ÇÇ^ a
QueryHandler
ÇÇb n
(
ÇÇn o 
QueryKBDoctorNoKBÇÇo Ä
)ÇÇÄ Å
)ÇÇÅ Ç
;ÇÇÇ É

AddCommand
ÑÑ 
(
ÑÑ 
CommandKeys
ÑÑ "
.
ÑÑ" #
MarkPublicObjects
ÑÑ# 4
,
ÑÑ4 5
new
ÑÑ6 9
ExecHandler
ÑÑ: E
(
ÑÑE F#
ExecMarkPublicObjects
ÑÑF [
)
ÑÑ[ \
,
ÑÑ\ ]
new
ÑÑ^ a
QueryHandler
ÑÑb n
(
ÑÑn o 
QueryKBDoctorNoKBÑÑo Ä
)ÑÑÄ Å
)ÑÑÅ Ç
;ÑÑÇ É

AddCommand
ÖÖ 
(
ÖÖ 
CommandKeys
ÖÖ "
.
ÖÖ" #
ListModules
ÖÖ# .
,
ÖÖ. /
new
ÖÖ0 3
ExecHandler
ÖÖ4 ?
(
ÖÖ? @
ExecListModules
ÖÖ@ O
)
ÖÖO P
,
ÖÖP Q
new
ÖÖR U
QueryHandler
ÖÖV b
(
ÖÖb c
QueryKBDoctorNoKB
ÖÖc t
)
ÖÖt u
)
ÖÖu v
;
ÖÖv w

AddCommand
ÜÜ 
(
ÜÜ 
CommandKeys
ÜÜ "
.
ÜÜ" ##
ListModulesStatistics
ÜÜ# 8
,
ÜÜ8 9
new
ÜÜ: =
ExecHandler
ÜÜ> I
(
ÜÜI J'
ExecListModulesStatistics
ÜÜJ c
)
ÜÜc d
,
ÜÜd e
new
ÜÜf i
QueryHandler
ÜÜj v
(
ÜÜv w 
QueryKBDoctorNoKBÜÜw à
)ÜÜà â
)ÜÜâ ä
;ÜÜä ã

AddCommand
áá 
(
áá 
CommandKeys
áá "
.
áá" #
MoveTransactions
áá# 3
,
áá3 4
new
áá5 8
ExecHandler
áá9 D
(
ááD E"
ExecMoveTransactions
ááE Y
)
ááY Z
,
ááZ [
new
áá\ _
QueryHandler
áá` l
(
áál m
QueryKBDoctorNoKB
áám ~
)
áá~ 
)áá Ä
;ááÄ Å

AddCommand
àà 
(
àà 
CommandKeys
àà "
.
àà" # 
ModuleDependencies
àà# 5
,
àà5 6
new
àà7 :
ExecHandler
àà; F
(
ààF G$
ExecModuleDependencies
ààG ]
)
àà] ^
,
àà^ _
new
àà` c
QueryHandler
ààd p
(
ààp q 
QueryKBDoctorNoKBààq Ç
)ààÇ É
)ààÉ Ñ
;ààÑ Ö

AddCommand
ää 
(
ää 
CommandKeys
ää "
.
ää" #
CalculateCheckSum
ää# 4
,
ää4 5
new
ää6 9
ExecHandler
ää: E
(
ääE F#
ExecCalculateCheckSum
ääF [
)
ää[ \
,
ää\ ]
new
ää^ a
QueryHandler
ääb n
(
ään o 
QueryKBDoctorNoKBääo Ä
)ääÄ Å
)ääÅ Ç
;ääÇ É

AddCommand
ãã 
(
ãã 
CommandKeys
ãã "
.
ãã" #!
GenerateLocationXML
ãã# 6
,
ãã6 7
new
ãã8 ;
ExecHandler
ãã< G
(
ããG H%
ExecGenerateLocationXML
ããH _
)
ãã_ `
,
ãã` a
new
ããb e
QueryHandler
ããf r
(
ããr s 
QueryKBDoctorNoKBããs Ñ
)ããÑ Ö
)ããÖ Ü
;ããÜ á

AddCommand
çç 
(
çç 
CommandKeys
çç "
.
çç" ##
ListObjWarningsErrors
çç# 8
,
çç8 9
new
çç: =
ExecHandler
çç> I
(
ççI J'
ExecListObjWarningsErrors
ççJ c
)
ççc d
,
ççd e
new
ççf i
QueryHandler
ççj v
(
ççv w 
QueryKBDoctorNoKBççw à
)ççà â
)ççâ ä
;ççä ã

AddCommand
éé 
(
éé 
CommandKeys
éé "
.
éé" #&
ListObjSimilarNavigation
éé# ;
,
éé; <
new
éé= @
ExecHandler
ééA L
(
ééL M*
ExecListObjSimilarNavigation
ééM i
)
ééi j
,
ééj k
new
éél o
QueryHandler
éép |
(
éé| } 
QueryKBDoctorNoKBéé} é
)ééé è
)ééè ê
;ééê ë

AddCommand
èè 
(
èè 
CommandKeys
èè "
.
èè" #
ListAPIObjects
èè# 1
,
èè1 2
new
èè3 6
ExecHandler
èè7 B
(
èèB C 
ExecListAPIObjects
èèC U
)
èèU V
,
èèV W
new
èèX [
QueryHandler
èè\ h
(
èèh i
QueryKBDoctorNoKB
èèi z
)
èèz {
)
èè{ |
;
èè| }

AddCommand
ëë 
(
ëë 
CommandKeys
ëë "
.
ëë" #
RecomendedModule
ëë# 3
,
ëë3 4
new
ëë5 8
ExecHandler
ëë9 D
(
ëëD E"
ExecRecomendedModule
ëëE Y
)
ëëY Z
,
ëëZ [
new
ëë\ _
QueryHandler
ëë` l
(
ëël m
QueryKBDoctorNoKB
ëëm ~
)
ëë~ 
)ëë Ä
;ëëÄ Å

AddCommand
íí 
(
íí 
CommandKeys
íí "
.
íí" #
SplitMainObject
íí# 2
,
íí2 3
new
íí4 7
ExecHandler
íí8 C
(
ííC D!
ExecSplitMainObject
ííD W
)
ííW X
,
ííX Y
new
ííZ ]
QueryHandler
íí^ j
(
ííj k
QueryKBDoctorNoKB
íík |
)
íí| }
)
íí} ~
;
íí~ 

AddCommand
ìì 
(
ìì 
CommandKeys
ìì "
.
ìì" #
UDPCallables
ìì# /
,
ìì/ 0
new
ìì1 4
ExecHandler
ìì5 @
(
ìì@ A
ExecUDPCallables
ììA Q
)
ììQ R
,
ììR S
new
ììT W
QueryHandler
ììX d
(
ììd e
QueryKBDoctorNoKB
ììe v
)
ììv w
)
ììw x
;
ììx y
}
ïï 	
public
öö 
bool
öö '
ExecAttWithoutDescription
öö -
(
öö- .
CommandData
öö. 9
cmdData
öö: A
)
ööA B
{
õõ 	
Thread
úú 
t
úú 
=
úú 
new
úú 
Thread
úú !
(
úú! "
new
úú" %
ThreadStart
úú& 1
(
úú1 2
AttributesHelper
úú2 B
.
úúB C'
ListAttWithoutDescription
úúC \
)
úú\ ]
)
úú] ^
;
úú^ _
t
ùù 
.
ùù 
Start
ùù 
(
ùù 
)
ùù 
;
ùù 
return
ûû 
true
ûû 
;
ûû 
}
üü 	
public
°° 
bool
°° !
ExecAttWithNoDomain
°° '
(
°°' (
CommandData
°°( 3
cmdData
°°4 ;
)
°°; <
{
¢¢ 	
Thread
££ 
t
££ 
=
££ 
new
££ 
Thread
££ !
(
££! "
new
££" %
ThreadStart
££& 1
(
££1 2
AttributesHelper
££2 B
.
££B C
ListWithoutDomain
££C T
)
££T U
)
££U V
;
££V W
t
§§ 
.
§§ 
Start
§§ 
(
§§ 
)
§§ 
;
§§ 
return
•• 
true
•• 
;
•• 
}
¶¶ 	
public
®® 
bool
®®  
ExecListAttributes
®® &
(
®®& '
CommandData
®®' 2
cmdData
®®3 :
)
®®: ;
{
©© 	
Thread
™™ 
t
™™ 
=
™™ 
new
™™ 
Thread
™™ !
(
™™! "
new
™™" %
ThreadStart
™™& 1
(
™™1 2
AttributesHelper
™™2 B
.
™™B C
ListAttributes
™™C Q
)
™™Q R
)
™™R S
;
™™S T
t
´´ 
.
´´ 
Start
´´ 
(
´´ 
)
´´ 
;
´´ 
return
¨¨ 
true
¨¨ 
;
¨¨ 
}
≠≠ 	
public
ØØ 
bool
ØØ !
ExecAttInOneTrnOnly
ØØ '
(
ØØ' (
CommandData
ØØ( 3
cmdData
ØØ4 ;
)
ØØ; <
{
∞∞ 	
Thread
±± 
t
±± 
=
±± 
new
±± 
Thread
±± !
(
±±! "
new
±±" %
ThreadStart
±±& 1
(
±±1 2
AttributesHelper
±±2 B
.
±±B C
AttInOneTrnOnly
±±C R
)
±±R S
)
±±S T
;
±±T U
t
≤≤ 
.
≤≤ 
Start
≤≤ 
(
≤≤ 
)
≤≤ 
;
≤≤ 
return
≥≥ 
true
≥≥ 
;
≥≥ 
}
¥¥ 	
public
∂∂ 
bool
∂∂ "
ExecAttCharToVarchar
∂∂ (
(
∂∂( )
CommandData
∂∂) 4
cmdData
∂∂5 <
)
∂∂< =
{
∑∑ 	
Thread
∏∏ 
t
∏∏ 
=
∏∏ 
new
∏∏ 
Thread
∏∏ !
(
∏∏! "
new
∏∏" %
ThreadStart
∏∏& 1
(
∏∏1 2
AttributesHelper
∏∏2 B
.
∏∏B C
ListCharToVarchar
∏∏C T
)
∏∏T U
)
∏∏U V
;
∏∏V W
t
ππ 
.
ππ 
Start
ππ 
(
ππ 
)
ππ 
;
ππ 
return
∫∫ 
true
∫∫ 
;
∫∫ 
}
ªª 	
public
ΩΩ 
bool
ΩΩ "
ExecAttVarcharToChar
ΩΩ (
(
ΩΩ( )
CommandData
ΩΩ) 4
cmdData
ΩΩ5 <
)
ΩΩ< =
{
ææ 	
Thread
øø 
t
øø 
=
øø 
new
øø 
Thread
øø !
(
øø! "
new
øø" %
ThreadStart
øø& 1
(
øø1 2
AttributesHelper
øø2 B
.
øøB C
ListVarcharToChar
øøC T
)
øøT U
)
øøU V
;
øøV W
t
¿¿ 
.
¿¿ 
Start
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
return
¡¡ 
true
¡¡ 
;
¡¡ 
}
¬¬ 	
public
ƒƒ 
bool
ƒƒ 
ExecAttKeyVarchar
ƒƒ %
(
ƒƒ% &
CommandData
ƒƒ& 1
cmdData
ƒƒ2 9
)
ƒƒ9 :
{
≈≈ 	
Thread
∆∆ 
t
∆∆ 
=
∆∆ 
new
∆∆ 
Thread
∆∆ !
(
∆∆! "
new
∆∆" %
ThreadStart
∆∆& 1
(
∆∆1 2
AttributesHelper
∆∆2 B
.
∆∆B C
ListKeyVarchar
∆∆C Q
)
∆∆Q R
)
∆∆R S
;
∆∆S T
t
«« 
.
«« 
Start
«« 
(
«« 
)
«« 
;
«« 
return
»» 
true
»» 
;
»» 
}
…… 	
public
ÀÀ 
bool
ÀÀ +
ExecAttDescWithoutUniqueIndex
ÀÀ 1
(
ÀÀ1 2
CommandData
ÀÀ2 =
cmdData
ÀÀ> E
)
ÀÀE F
{
ÃÃ 	
Thread
ÕÕ 
t
ÕÕ 
=
ÕÕ 
new
ÕÕ 
Thread
ÕÕ !
(
ÕÕ! "
new
ÕÕ" %
ThreadStart
ÕÕ& 1
(
ÕÕ1 2
AttributesHelper
ÕÕ2 B
.
ÕÕB C+
ListAttDescWithoutUniqueIndex
ÕÕC `
)
ÕÕ` a
)
ÕÕa b
;
ÕÕb c
t
ŒŒ 
.
ŒŒ 
Start
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
return
œœ 
true
œœ 
;
œœ 
}
–– 	
public
““ 
bool
““ "
ExecAttNotReferenced
““ (
(
““( )
CommandData
““) 4
cmdData
““5 <
)
““< =
{
”” 	

MessageBox
’’ 
.
’’ 
Show
’’ 
(
’’ 
$str
’’ c
)
’’c d
;
’’d e
return
÷÷ 
true
÷÷ 
;
÷÷ 
}
◊◊ 	
public
ŸŸ 
bool
ŸŸ %
ExecAttWithoutBaseTable
ŸŸ +
(
ŸŸ+ ,
CommandData
ŸŸ, 7
cmdData
ŸŸ8 ?
)
ŸŸ? @
{
⁄⁄ 	
Thread
‹‹ 
t
‹‹ 
=
‹‹ 
new
‹‹ 
Thread
‹‹ !
(
‹‹! "
new
‹‹" %
ThreadStart
‹‹& 1
(
‹‹1 2
CleanKBHelper
‹‹2 ?
.
‹‹? @)
RemoveAttributeWithoutTable
‹‹@ [
)
‹‹[ \
)
‹‹\ ]
;
‹‹] ^
t
›› 
.
›› 
Start
›› 
(
›› 
)
›› 
;
›› 
return
ﬁﬁ 
true
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
public
·· 
bool
·· 
ExecAttFormula
·· "
(
··" #
CommandData
··# .
cmdData
··/ 6
)
··6 7
{
‚‚ 	
Thread
„„ 
t
„„ 
=
„„ 
new
„„ 
Thread
„„ !
(
„„! "
new
„„" %
ThreadStart
„„& 1
(
„„1 2
AttributesHelper
„„2 B
.
„„B C

AttFormula
„„C M
)
„„M N
)
„„N O
;
„„O P
t
‰‰ 
.
‰‰ 
Start
‰‰ 
(
‰‰ 
)
‰‰ 
;
‰‰ 
return
ÂÂ 
true
ÂÂ 
;
ÂÂ 
}
ÊÊ 	
public
ËË 
bool
ËË 
ExecReplaceDomain
ËË %
(
ËË% &
CommandData
ËË& 1
cmdData
ËË2 9
)
ËË9 :
{
ÈÈ 	
AttributesHelper
ÍÍ 
.
ÍÍ 
ReplaceDomain
ÍÍ *
(
ÍÍ* +
)
ÍÍ+ ,
;
ÍÍ, -
return
ÎÎ 
true
ÎÎ 
;
ÎÎ 
}
ÏÏ 	
public
ÓÓ 
bool
ÓÓ 
ExecListDomain
ÓÓ "
(
ÓÓ" #
CommandData
ÓÓ# .
cmdData
ÓÓ/ 6
)
ÓÓ6 7
{
ÔÔ 	
AttributesHelper
 
.
 

ListDomain
 '
(
' (
)
( )
;
) *
return
ÒÒ 
true
ÒÒ 
;
ÒÒ 
}
ÚÚ 	
public
ÙÙ 
bool
ÙÙ 
ExecAttUpdated
ÙÙ "
(
ÙÙ" #
CommandData
ÙÙ# .
cmdData
ÙÙ/ 6
)
ÙÙ6 7
{
ıı 	
NavigationHelper
ˆˆ 
.
ˆˆ 

AttUpdated
ˆˆ '
(
ˆˆ' (
)
ˆˆ( )
;
ˆˆ) *
return
˜˜ 
true
˜˜ 
;
˜˜ 
}
¯¯ 	
public
¸¸ 
bool
¸¸ )
ExecAssignDomainToAttribute
¸¸ /
(
¸¸/ 0
CommandData
¸¸0 ;
cmdData
¸¸< C
)
¸¸C D
{
˝˝ 	
AttributesHelper
˛˛ 
.
˛˛ %
AssignDomainToAttribute
˛˛ 4
(
˛˛4 5
cmdData
˛˛5 <
.
˛˛< =

Parameters
˛˛= G
)
˛˛G H
;
˛˛H I
return
ˇˇ 
true
ˇˇ 
;
ˇˇ 
}
ÄÄ 	
public
ÇÇ 
bool
ÇÇ .
 ExecAssignDescriptionToAttribute
ÇÇ 4
(
ÇÇ4 5
CommandData
ÇÇ5 @
cmdData
ÇÇA H
)
ÇÇH I
{
ÉÉ 	
AttributesHelper
ÑÑ 
.
ÑÑ *
AssignDescriptionToAttribute
ÑÑ 9
(
ÑÑ9 :
cmdData
ÑÑ: A
.
ÑÑA B

Parameters
ÑÑB L
,
ÑÑL M
$num
ÑÑN O
)
ÑÑO P
;
ÑÑP Q
return
ÖÖ 
true
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
public
àà 
bool
àà (
ExecAssignTitleToAttribute
àà .
(
àà. /
CommandData
àà/ :
cmdData
àà; B
)
ààB C
{
ââ 	
AttributesHelper
ää 
.
ää *
AssignDescriptionToAttribute
ää 9
(
ää9 :
cmdData
ää: A
.
ääA B

Parameters
ääB L
,
ääL M
$num
ääN O
)
ääO P
;
ääP Q
return
ãã 
true
ãã 
;
ãã 
}
åå 	
public
éé 
bool
éé .
 ExecAssignColumnTitleToAttribute
éé 4
(
éé4 5
CommandData
éé5 @
cmdData
ééA H
)
ééH I
{
èè 	
AttributesHelper
êê 
.
êê *
AssignDescriptionToAttribute
êê 9
(
êê9 :
cmdData
êê: A
.
êêA B

Parameters
êêB L
,
êêL M
$num
êêN O
)
êêO P
;
êêP Q
return
ëë 
true
ëë 
;
ëë 
}
íí 	
public
ññ 
bool
ññ $
ExecAddDescriptorIndex
ññ *
(
ññ* +
CommandData
ññ+ 6
cmdData
ññ7 >
)
ññ> ?
{
óó 	
AttributesHelper
òò 
.
òò  
AddDescriptorIndex
òò /
(
òò/ 0
cmdData
òò0 7
.
òò7 8

Parameters
òò8 B
)
òòB C
;
òòC D
return
ôô 
true
ôô 
;
ôô 
}
öö 	
public
üü 
bool
üü %
ExecTblWihNoDescription
üü +
(
üü+ ,
CommandData
üü, 7
cmdData
üü8 ?
)
üü? @
{
†† 	
Thread
°° 
t
°° 
=
°° 
new
°° 
Thread
°° !
(
°°! "
new
°°" %
ThreadStart
°°& 1
(
°°1 2
TablesHelper
°°2 >
.
°°> ?$
ListWithoutDescription
°°? U
)
°°U V
)
°°V W
;
°°W X
t
¢¢ 
.
¢¢ 
Start
¢¢ 
(
¢¢ 
)
¢¢ 
;
¢¢ 
return
££ 
true
££ 
;
££ 
}
§§ 	
public
¶¶ 
bool
¶¶ %
ExecGrpWihNoDescription
¶¶ +
(
¶¶+ ,
CommandData
¶¶, 7
cmdData
¶¶8 ?
)
¶¶? @
{
ßß 	
Thread
®® 
t
®® 
=
®® 
new
®® 
Thread
®® !
(
®®! "
new
®®" %
ThreadStart
®®& 1
(
®®1 2
TablesHelper
®®2 >
.
®®> ?)
ListGroupWithoutDescription
®®? Z
)
®®Z [
)
®®[ \
;
®®\ ]
t
©© 
.
©© 
Start
©© 
(
©© 
)
©© 
;
©© 
return
™™ 
true
™™ 
;
™™ 
}
´´ 	
public
≠≠ 
bool
≠≠ 
ExecTblWidth
≠≠  
(
≠≠  !
CommandData
≠≠! ,
cmdData
≠≠- 4
)
≠≠4 5
{
ÆÆ 	
Thread
ØØ 
t
ØØ 
=
ØØ 
new
ØØ 
Thread
ØØ !
(
ØØ! "
new
ØØ" %
ThreadStart
ØØ& 1
(
ØØ1 2
TablesHelper
ØØ2 >
.
ØØ> ?
ListTablesWidth
ØØ? N
)
ØØN O
)
ØØO P
;
ØØP Q
t
∞∞ 
.
∞∞ 
Start
∞∞ 
(
∞∞ 
)
∞∞ 
;
∞∞ 
return
±± 
true
±± 
;
±± 
}
≤≤ 	
public
¥¥ 
bool
¥¥ 
ExecListTables
¥¥ "
(
¥¥" #
CommandData
¥¥# .
cmdData
¥¥/ 6
)
¥¥6 7
{
µµ 	
Thread
∂∂ 
t
∂∂ 
=
∂∂ 
new
∂∂ 
Thread
∂∂ !
(
∂∂! "
new
∂∂" %
ThreadStart
∂∂& 1
(
∂∂1 2
TablesHelper
∂∂2 >
.
∂∂> ?

ListTables
∂∂? I
)
∂∂I J
)
∂∂J K
;
∂∂K L
t
∑∑ 
.
∑∑ 
Start
∑∑ 
(
∑∑ 
)
∑∑ 
;
∑∑ 
return
∏∏ 
true
∏∏ 
;
∏∏ 
}
ππ 	
public
ºº 
bool
ºº %
ExecTblTableTransaction
ºº +
(
ºº+ ,
CommandData
ºº, 7
cmdData
ºº8 ?
)
ºº? @
{
ΩΩ 	
Thread
ææ 
t
ææ 
=
ææ 
new
ææ 
Thread
ææ !
(
ææ! "
new
ææ" %
ThreadStart
ææ& 1
(
ææ1 2
TablesHelper
ææ2 >
.
ææ> ?"
ListTableTransaction
ææ? S
)
ææS T
)
ææT U
;
ææU V
t
øø 
.
øø 
Start
øø 
(
øø 
)
øø 
;
øø 
return
¿¿ 
true
¿¿ 
;
¿¿ 
}
¡¡ 	
public
√√ 
bool
√√ J
<ExecTblGenerateSimpleTransactionFromNotGeneratedTransactions
√√ P
(
√√P Q
CommandData
√√Q \
cmdData
√√] d
)
√√d e
{
ƒƒ 	
Thread
≈≈ 
t
≈≈ 
=
≈≈ 
new
≈≈ 
Thread
≈≈ "
(
≈≈" #
new
≈≈# &
ThreadStart
≈≈' 2
(
≈≈2 3
TablesHelper
≈≈3 ?
.
≈≈? @C
5GenterateSimpleTransactionFromNotGeneratedTransaction
≈≈@ u
)
≈≈u v
)
≈≈v w
;
≈≈w x
t
∆∆ 
.
∆∆ 
Start
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆ 
return
«« 
true
«« 
;
«« 
}
»» 	
public
œœ 
bool
œœ  
ExecTblTableUpdate
œœ &
(
œœ& '
CommandData
œœ' 2
cmdData
œœ3 :
)
œœ: ;
{
–– 	
Thread
—— 
t
—— 
=
—— 
new
—— 
Thread
—— !
(
——! "
new
——" %
ThreadStart
——& 1
(
——1 2
TablesHelper
——2 >
.
——> ?
ListTableUpdate
——? N
)
——N O
)
——O P
;
——P Q
t
““ 
.
““ 
Start
““ 
(
““ 
)
““ 
;
““ 
return
”” 
true
”” 
;
”” 
}
‘‘ 	
public
÷÷ 
bool
÷÷ '
ExecGenerateTrnFromTables
÷÷ -
(
÷÷- .
CommandData
÷÷. 9
cmdData
÷÷: A
)
÷÷A B
{
◊◊ 	
TablesHelper
ÿÿ 
.
ÿÿ #
GenerateTrnFromTables
ÿÿ .
(
ÿÿ. /
)
ÿÿ/ 0
;
ÿÿ0 1
return
ŸŸ 
true
ŸŸ 
;
ŸŸ 
}
⁄⁄ 	
public
‹‹ 
bool
‹‹ (
ExecGenerateTrnFromTables2
‹‹ .
(
‹‹. /
CommandData
‹‹/ :
cmdData
‹‹; B
)
‹‹B C
{
›› 	
TablesHelper
ﬁﬁ 
.
ﬁﬁ $
GenerateTrnFromTables2
ﬁﬁ /
(
ﬁﬁ/ 0
)
ﬁﬁ0 1
;
ﬁﬁ1 2
return
ﬂﬂ 
true
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
public
ÁÁ 
bool
ÁÁ %
ExecListTablesInModules
ÁÁ +
(
ÁÁ+ ,
CommandData
ÁÁ, 7
cmdData
ÁÁ8 ?
)
ÁÁ? @
{
ËË 	
ModulesHelper
ÈÈ 
.
ÈÈ  
ListTableInModules
ÈÈ ,
(
ÈÈ, -
)
ÈÈ- .
;
ÈÈ. /
return
ÍÍ 
true
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
public
ÌÌ 
bool
ÌÌ $
ExecModuleDependencies
ÌÌ *
(
ÌÌ* +
CommandData
ÌÌ+ 6
cmdData
ÌÌ7 >
)
ÌÌ> ?
{
ÓÓ 	
ModulesHelper
ÔÔ 
.
ÔÔ  
ModuleDependencies
ÔÔ ,
(
ÔÔ, -
)
ÔÔ- .
;
ÔÔ. /
return
 
true
 
;
 
}
ÒÒ 	
public
ÛÛ 
bool
ÛÛ #
ExecTblTableInsertNew
ÛÛ )
(
ÛÛ) *
CommandData
ÛÛ* 5
cmdData
ÛÛ6 =
)
ÛÛ= >
{
ÙÙ 	
Thread
ıı 
t
ıı 
=
ıı 
new
ıı 
Thread
ıı !
(
ıı! "
new
ıı" %
ThreadStart
ıı& 1
(
ıı1 2
TablesHelper
ıı2 >
.
ıı> ? 
ListTableInsertNew
ıı? Q
)
ııQ R
)
ııR S
;
ııS T
t
ˆˆ 
.
ˆˆ 
Start
ˆˆ 
(
ˆˆ 
)
ˆˆ 
;
ˆˆ 
return
˜˜ 
true
˜˜ 
;
˜˜ 
}
¯¯ 	
public
˚˚ 
bool
˚˚ +
ExecRenameAttributesAndTables
˚˚ 1
(
˚˚1 2
CommandData
˚˚2 =
cmdData
˚˚> E
)
˚˚E F
{
¸¸ 	
Thread
˝˝ 
t
˝˝ 
=
˝˝ 
new
˝˝ 
Thread
˝˝ !
(
˝˝! "
new
˝˝" %
ThreadStart
˝˝& 1
(
˝˝1 2
CleanKBHelper
˝˝2 ?
.
˝˝? @'
RenameAttributesAndTables
˝˝@ Y
)
˝˝Y Z
)
˝˝Z [
;
˝˝[ \
t
˛˛ 
.
˛˛ 
Start
˛˛ 
(
˛˛ 
)
˛˛ 
;
˛˛ 
return
ˇˇ 
true
ˇˇ 
;
ˇˇ 
}
ÄÄ 	
public
ÑÑ 
bool
ÑÑ *
ExecAssignDescriptionToTable
ÑÑ 0
(
ÑÑ0 1
CommandData
ÑÑ1 <
cmdData
ÑÑ= D
)
ÑÑD E
{
ÖÖ 	
TablesHelper
ÜÜ 
.
ÜÜ &
AssignDescriptionToTable
ÜÜ 1
(
ÜÜ1 2
cmdData
ÜÜ2 9
.
ÜÜ9 :

Parameters
ÜÜ: D
)
ÜÜD E
;
ÜÜE F
return
áá 
true
áá 
;
áá 
}
àà 	
public
åå 
bool
åå $
ExecIndexWithNotRefAtt
åå *
(
åå* +
CommandData
åå+ 6
cmdData
åå7 >
)
åå> ?
{
çç 	
Thread
èè 
t
èè 
=
èè 
new
èè 
Thread
èè !
(
èè! "
new
èè" %
ThreadStart
èè& 1
(
èè1 2
ObjectsHelper
èè2 ?
.
èè? @ 
IndexWithNotRefAtt
èè@ R
)
èèR S
)
èèS T
;
èèT U
t
êê 
.
êê 
Start
êê 
(
êê 
)
êê 
;
êê 
return
ëë 
true
ëë 
;
ëë 
}
íí 	
public
îî 
bool
îî '
ExecRremoveIndexAttribute
îî -
(
îî- .
CommandData
îî. 9
cmdData
îî: A
)
îîA B
{
ïï 	
ObjectsHelper
ññ 
.
ññ "
RemoveIndexAttribute
ññ .
(
ññ. /
cmdData
ññ/ 6
.
ññ6 7

Parameters
ññ7 A
)
ññA B
;
ññB C
return
óó 
true
óó 
;
óó 
}
òò 	
public
úú 
bool
úú "
ExecObjNotReacheable
úú (
(
úú( )
CommandData
úú) 4
cmdData
úú5 <
)
úú< =
{
ùù 	
Thread
ûû 
t
ûû 
=
ûû 
new
ûû 
Thread
ûû !
(
ûû! "
new
ûû" %
ThreadStart
ûû& 1
(
ûû1 2
ObjectsHelper
ûû2 ?
.
ûû? @
Unreachables
ûû@ L
)
ûûL M
)
ûûM N
;
ûûN O
t
üü 
.
üü 
Start
üü 
(
üü 
)
üü 
;
üü 
return
†† 
true
†† 
;
†† 
}
°° 	
public
££ 
bool
££ %
ExecObjectsWithoutInOut
££ +
(
££+ ,
CommandData
££, 7
cmdData
££8 ?
)
££? @
{
§§ 	
Thread
•• 
t
•• 
=
•• 
new
•• 
Thread
•• !
(
••! "
new
••" %
ThreadStart
••& 1
(
••1 2
ObjectsHelper
••2 ?
.
••? @
ParmWOInOut
••@ K
)
••K L
)
••L M
;
••M N
t
¶¶ 
.
¶¶ 
Start
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
return
ßß 
true
ßß 
;
ßß 
}
®® 	
public
™™ 
bool
™™ $
ExecObjectsMainsCalled
™™ *
(
™™* +
CommandData
™™+ 6
cmdData
™™7 >
)
™™> ?
{
´´ 	
Thread
¨¨ 
t
¨¨ 
=
¨¨ 
new
¨¨ 
Thread
¨¨ !
(
¨¨! "
new
¨¨" %
ThreadStart
¨¨& 1
(
¨¨1 2
ObjectsHelper
¨¨2 ?
.
¨¨? @ 
ObjectsMainsCalled
¨¨@ R
)
¨¨R S
)
¨¨S T
;
¨¨T U
t
≠≠ 
.
≠≠ 
Start
≠≠ 
(
≠≠ 
)
≠≠ 
;
≠≠ 
return
ÆÆ 
true
ÆÆ 
;
ÆÆ 
}
ØØ 	
public
±± 
bool
±± #
ExecObjectsReferenced
±± )
(
±±) *
CommandData
±±* 5
cmdData
±±6 =
)
±±= >
{
≤≤ 	
CleanKBHelper
≥≥ 
.
≥≥ 
ObjectsReferenced
≥≥ +
(
≥≥+ ,
)
≥≥, -
;
≥≥- .
return
¥¥ 
true
¥¥ 
;
¥¥ 
}
µµ 	
public
∑∑ 
bool
∑∑ -
ExecObjectsWithVarNotBasedOnAtt
∑∑ 3
(
∑∑3 4
CommandData
∑∑4 ?
cmdData
∑∑@ G
)
∑∑G H
{
∏∏ 	
Thread
∫∫ 
t
∫∫ 
=
∫∫ 
new
∫∫ 
Thread
∫∫ !
(
∫∫! "
new
∫∫" %
ThreadStart
∫∫& 1
(
∫∫1 2
ObjectsHelper
∫∫2 ?
.
∫∫? @)
ObjectsWithVarNotBasedOnAtt
∫∫@ [
)
∫∫[ \
)
∫∫\ ]
;
∫∫] ^
t
ªª 
.
ªª 
Start
ªª 
(
ªª 
)
ªª 
;
ªª 
return
ºº 
true
ºº 
;
ºº 
}
ΩΩ 	
public
øø 
bool
øø 
ExecBuildModule
øø #
(
øø# $
CommandData
øø$ /
cmdData
øø0 7
)
øø7 8
{
¿¿ 	
ModulesHelper
¬¬ 
.
¬¬ 
BuildModule
¬¬ $
(
¬¬$ %
)
¬¬% &
;
¬¬& '
return
√√ 
true
√√ 
;
√√ 
}
ƒƒ 	
public
∆∆ 
bool
∆∆ $
ExecBuildModuleContext
∆∆ *
(
∆∆* +
CommandData
∆∆+ 6
cmdData
∆∆7 >
)
∆∆> ?
{
«« 	
return
   
true
   
;
   
}
ÀÀ 	
public
ÃÃ 
bool
ÃÃ *
ExecBuildObjectAndReferences
ÃÃ 0
(
ÃÃ0 1
CommandData
ÃÃ1 <
cmdData
ÃÃ= D
)
ÃÃD E
{
ÕÕ 	
ObjectsHelper
œœ 
.
œœ &
BuildObjectAndReferences
œœ 2
(
œœ2 3
)
œœ3 4
;
œœ4 5
return
–– 
true
–– 
;
–– 
}
—— 	
public
”” 
bool
”” !
ExecRenameVariables
”” '
(
””' (
CommandData
””( 3
cmdData
””4 ;
)
””; <
{
‘‘ 	
Thread
÷÷ 
t
÷÷ 
=
÷÷ 
new
÷÷ 
Thread
÷÷ !
(
÷÷! "
new
÷÷" %
ThreadStart
÷÷& 1
(
÷÷1 2
CleanKBHelper
÷÷2 ?
.
÷÷? @
RenameVariables
÷÷@ O
)
÷÷O P
)
÷÷P Q
;
÷÷Q R
t
◊◊ 
.
◊◊ 
Start
◊◊ 
(
◊◊ 
)
◊◊ 
;
◊◊ 
return
ÿÿ 
true
ÿÿ 
;
ÿÿ 
}
ŸŸ 	
public
‹‹ 
bool
‹‹ "
ExecObjectsNotCalled
‹‹ (
(
‹‹( )
CommandData
‹‹) 4
cmdData
‹‹5 <
)
‹‹< =
{
›› 	
Thread
ﬁﬁ 
t
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ 
Thread
ﬁﬁ !
(
ﬁﬁ! "
new
ﬁﬁ" %
ThreadStart
ﬁﬁ& 1
(
ﬁﬁ1 2
ObjectsHelper
ﬁﬁ2 ?
.
ﬁﬁ? @
ObjetNotCalled
ﬁﬁ@ N
)
ﬁﬁN O
)
ﬁﬁO P
;
ﬁﬁP Q
t
ﬂﬂ 
.
ﬂﬂ 
Start
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
return
‡‡ 
true
‡‡ 
;
‡‡ 
}
·· 	
public
„„ 
bool
„„ )
ExecObjectsWithCommitOnExit
„„ /
(
„„/ 0
CommandData
„„0 ;
cmdData
„„< C
)
„„C D
{
‰‰ 	
Thread
ÂÂ 
t
ÂÂ 
=
ÂÂ 
new
ÂÂ 
Thread
ÂÂ !
(
ÂÂ! "
new
ÂÂ" %
ThreadStart
ÂÂ& 1
(
ÂÂ1 2
ObjectsHelper
ÂÂ2 ?
.
ÂÂ? @,
ObjectsWithParmAndCommitOnExit
ÂÂ@ ^
)
ÂÂ^ _
)
ÂÂ_ `
;
ÂÂ` a
t
ÊÊ 
.
ÊÊ 
Start
ÊÊ 
(
ÊÊ 
)
ÊÊ 
;
ÊÊ 
return
ÁÁ 
true
ÁÁ 
;
ÁÁ 
}
ËË 	
public
ÍÍ 
bool
ÍÍ (
ExecObjectsWithVarsNotUsed
ÍÍ .
(
ÍÍ. /
CommandData
ÍÍ/ :
cmdData
ÍÍ; B
)
ÍÍB C
{
ÎÎ 	
Thread
ÏÏ 
t
ÏÏ 
=
ÏÏ 
new
ÏÏ 
Thread
ÏÏ !
(
ÏÏ! "
new
ÏÏ" %
ThreadStart
ÏÏ& 1
(
ÏÏ1 2
ObjectsHelper
ÏÏ2 ?
.
ÏÏ? @$
ObjectsWithVarsNotUsed
ÏÏ@ V
)
ÏÏV W
)
ÏÏW X
;
ÏÏX Y
t
ÌÌ 
.
ÌÌ 
Start
ÌÌ 
(
ÌÌ 
)
ÌÌ 
;
ÌÌ 
return
ÓÓ 
true
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
public
ÒÒ 
bool
ÒÒ 
ExecResetWINForm
ÒÒ $
(
ÒÒ$ %
CommandData
ÒÒ% 0
cmdData
ÒÒ1 8
)
ÒÒ8 9
{
ÚÚ 	
Thread
ÛÛ 
t
ÛÛ 
=
ÛÛ 
new
ÛÛ 
Thread
ÛÛ !
(
ÛÛ! "
new
ÛÛ" %
ThreadStart
ÛÛ& 1
(
ÛÛ1 2
ObjectsHelper
ÛÛ2 ?
.
ÛÛ? @
ResetWINForm
ÛÛ@ L
)
ÛÛL M
)
ÛÛM N
;
ÛÛN O
t
ÙÙ 
.
ÙÙ 
Start
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
return
ıı 
true
ıı 
;
ıı 
}
ˆˆ 	
public
¯¯ 
bool
¯¯ 6
(ExecListProcedureCallWebpanelTransaction
¯¯ <
(
¯¯< =
CommandData
¯¯= H
cmdData
¯¯I P
)
¯¯P Q
{
˘˘ 	
Thread
˙˙ 
t
˙˙ 
=
˙˙ 
new
˙˙ 
Thread
˙˙ !
(
˙˙! "
new
˙˙" %
ThreadStart
˙˙& 1
(
˙˙1 2
ObjectsHelper
˙˙2 ?
.
˙˙? @2
$ListProcedureCallWebPanelTransaction
˙˙@ d
)
˙˙d e
)
˙˙e f
;
˙˙f g
t
˚˚ 
.
˚˚ 
Start
˚˚ 
(
˚˚ 
)
˚˚ 
;
˚˚ 
return
¸¸ 
true
¸¸ 
;
¸¸ 
}
˝˝ 	
public
ˇˇ 
bool
ˇˇ  
ExecObjectsComplex
ˇˇ &
(
ˇˇ& '
CommandData
ˇˇ' 2
cmdData
ˇˇ3 :
)
ˇˇ: ;
{
ÄÄ 	
Thread
ÅÅ 
t
ÅÅ 
=
ÅÅ 
new
ÅÅ 
Thread
ÅÅ !
(
ÅÅ! "
new
ÅÅ" %
ThreadStart
ÅÅ& 1
(
ÅÅ1 2
ObjectsHelper
ÅÅ2 ?
.
ÅÅ? @
ObjectsComplex
ÅÅ@ N
)
ÅÅN O
)
ÅÅO P
;
ÅÅP Q
t
ÇÇ 
.
ÇÇ 
Start
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
return
ÉÉ 
true
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
public
ÜÜ 
bool
ÜÜ #
ExecObjectsLegacyCode
ÜÜ )
(
ÜÜ) *
CommandData
ÜÜ* 5
cmdData
ÜÜ6 =
)
ÜÜ= >
{
áá 	
Thread
àà 
t
àà 
=
àà 
new
àà 
Thread
àà !
(
àà! "
new
àà" %
ThreadStart
àà& 1
(
àà1 2
ObjectsHelper
àà2 ?
.
àà? @
ObjectsLegacyCode
àà@ Q
)
ààQ R
)
ààR S
;
ààS T
t
ââ 
.
ââ 
Start
ââ 
(
ââ 
)
ââ 
;
ââ 
return
ää 
true
ää 
;
ää 
}
ãã 	
public
çç 
bool
çç )
ExecEditLegacyCodeToReplace
çç /
(
çç/ 0
CommandData
çç0 ;
cmdData
çç< C
)
ççC D
{
éé 	
ObjectsHelper
êê 
.
êê %
EditLegacyCodeToReplace
êê 1
(
êê1 2
)
êê2 3
;
êê3 4
return
ëë 
true
ëë 
;
ëë 
}
íí 	
public
îî 
bool
îî "
ExecChangeLegacyCode
îî (
(
îî( )
CommandData
îî) 4
cmdData
îî5 <
)
îî< =
{
ïï 	
ObjectsHelper
ññ 
.
ññ 
ChangeLegacyCode
ññ *
(
ññ* +
)
ññ+ ,
;
ññ, -
return
óó 
true
óó 
;
óó 
}
òò 	
public
öö 
bool
öö $
ExecChangeCommitOnExit
öö *
(
öö* +
CommandData
öö+ 6
cmdData
öö7 >
)
öö> ?
{
õõ 	
ObjectsHelper
ùù 
.
ùù  
ChangeCommitOnExit
ùù ,
(
ùù, -
)
ùù- .
;
ùù. /
return
ûû 
true
ûû 
;
ûû 
}
üü 	
public
°° 
bool
°° 
ExecTreeCommit
°° "
(
°°" #
CommandData
°°# .
cmdData
°°/ 6
)
°°6 7
{
¢¢ 	
ObjectsHelper
§§ 
.
§§ 

TreeCommit
§§ $
(
§§$ %
)
§§% &
;
§§& '
return
•• 
true
•• 
;
•• 
}
¶¶ 	
public
®® 
bool
®® .
 ExecObjectsRefactoringCandidates
®® 4
(
®®4 5
CommandData
®®5 @
cmdData
®®A H
)
®®H I
{
©© 	
Thread
™™ 
t
™™ 
=
™™ 
new
™™ 
Thread
™™ !
(
™™! "
new
™™" %
ThreadStart
™™& 1
(
™™1 2
ObjectsHelper
™™2 ?
.
™™? @*
ObjectsRefactoringCandidates
™™@ \
)
™™\ ]
)
™™] ^
;
™™^ _
t
´´ 
.
´´ 
Start
´´ 
(
´´ 
)
´´ 
;
´´ 
return
¨¨ 
true
¨¨ 
;
¨¨ 
}
≠≠ 	
public
ØØ 
bool
ØØ 
ExecUDPCallables
ØØ $
(
ØØ$ %
CommandData
ØØ% 0
cmdData
ØØ1 8
)
ØØ8 9
{
∞∞ 	
ObjectsHelper
±± 
.
±± !
ObjectsUDPCallables
±± -
(
±±- .
)
±±. /
;
±±/ 0
return
≤≤ 
true
≤≤ 
;
≤≤ 
}
≥≥ 	
public
µµ 
bool
µµ $
ExecObjectsDiagnostics
µµ *
(
µµ* +
CommandData
µµ+ 6
cmdData
µµ7 >
)
µµ> ?
{
∂∂ 	
ObjectsHelper
∑∑ 
.
∑∑  
ObjectsDiagnostics
∑∑ ,
(
∑∑, -
)
∑∑- .
;
∑∑. /
return
∏∏ 
true
∏∏ 
;
∏∏ 
}
ππ 	
public
ªª 
bool
ªª 
ExecObjectsWINWEB
ªª %
(
ªª% &
CommandData
ªª& 1
cmdData
ªª2 9
)
ªª9 :
{
ºº 	
Thread
ΩΩ 
t
ΩΩ 
=
ΩΩ 
new
ΩΩ 
Thread
ΩΩ !
(
ΩΩ! "
new
ΩΩ" %
ThreadStart
ΩΩ& 1
(
ΩΩ1 2
KbStats
ΩΩ2 9
.
ΩΩ9 :
ObjectsWINWEB
ΩΩ: G
)
ΩΩG H
)
ΩΩH I
;
ΩΩI J
t
ææ 
.
ææ 
Start
ææ 
(
ææ 
)
ææ 
;
ææ 
return
øø 
true
øø 
;
øø 
}
¿¿ 	
public
¬¬ 
bool
¬¬ 
ExecMainTableUsed
¬¬ %
(
¬¬% &
CommandData
¬¬& 1
cmdData
¬¬2 9
)
¬¬9 :
{
√√ 	
Thread
ƒƒ 
t
ƒƒ 
=
ƒƒ 
new
ƒƒ 
Thread
ƒƒ !
(
ƒƒ! "
new
ƒƒ" %
ThreadStart
ƒƒ& 1
(
ƒƒ1 2
ObjectsHelper
ƒƒ2 ?
.
ƒƒ? @
MainTableUsed
ƒƒ@ M
)
ƒƒM N
)
ƒƒN O
;
ƒƒO P
t
≈≈ 
.
≈≈ 
Start
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
return
∆∆ 
true
∆∆ 
;
∆∆ 
}
«« 	
public
»» 
bool
»» '
ExecRemovableTransactions
»» -
(
»»- .
CommandData
»». 9
cmdData
»»: A
)
»»A B
{
…… 	
Thread
   
t
   
=
   
new
   
Thread
   !
(
  ! "
new
  " %
ThreadStart
  & 1
(
  1 2
ObjectsHelper
  2 ?
.
  ? @#
RemovableTransactions
  @ U
)
  U V
)
  V W
;
  W X
t
ÀÀ 
.
ÀÀ 
Start
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
return
ÃÃ 
true
ÃÃ 
;
ÃÃ 
}
ÕÕ 	
public
œœ 
bool
œœ $
ExecGenerateSQLScripts
œœ *
(
œœ* +
CommandData
œœ+ 6
cmdData
œœ7 >
)
œœ> ?
{
–– 	
TablesHelper
—— 
.
——  
GenerateSQLScripts
—— +
(
——+ ,
)
——, -
;
——- .
return
““ 
true
““ 
;
““ 
}
”” 	
public
‘‘ 
bool
‘‘ 
ExecGenerateGraph
‘‘ %
(
‘‘% &
CommandData
‘‘& 1
cmdData
‘‘2 9
)
‘‘9 :
{
’’ 	
Thread
÷÷ 
t
÷÷ 
=
÷÷ 
new
÷÷ 
Thread
÷÷ "
(
÷÷" #
new
÷÷# &
ThreadStart
÷÷' 2
(
÷÷2 3
GraphHelper
÷÷3 >
.
÷÷> ?
GenerateGraph
÷÷? L
)
÷÷L M
)
÷÷M N
;
÷÷N O
t
◊◊ 
.
◊◊ 
Start
◊◊ 
(
◊◊ 
)
◊◊ 
;
◊◊ 
return
ÿÿ 
true
ÿÿ 
;
ÿÿ 
}
ŸŸ 	
public
€€ 
bool
€€ 
ExecKBInterfaces
€€ $
(
€€$ %
CommandData
€€% 0
cmdData
€€1 8
)
€€8 9
{
‹‹ 	
Thread
ﬁﬁ 
t
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ 
Thread
ﬁﬁ !
(
ﬁﬁ! "
new
ﬁﬁ" %
ThreadStart
ﬁﬁ& 1
(
ﬁﬁ1 2
KbStats
ﬁﬁ2 9
.
ﬁﬁ9 :
KBInterfaces
ﬁﬁ: F
)
ﬁﬁF G
)
ﬁﬁG H
;
ﬁﬁH I
t
ﬂﬂ 
.
ﬂﬂ 
Start
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
return
‡‡ 
true
‡‡ 
;
‡‡ 
}
·· 	
public
ÁÁ 
bool
ÁÁ 
ExecRemoveObject
ÁÁ $
(
ÁÁ$ %
CommandData
ÁÁ% 0
cmdData
ÁÁ1 8
)
ÁÁ8 9
{
ËË 	
ObjectsHelper
ÈÈ 
.
ÈÈ 
RemoveObject
ÈÈ &
(
ÈÈ& '
cmdData
ÈÈ' .
.
ÈÈ. /

Parameters
ÈÈ/ 9
)
ÈÈ9 :
;
ÈÈ: ;
return
ÍÍ 
true
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
public
ÌÌ 
bool
ÌÌ 
ExecOpenKBObject
ÌÌ $
(
ÌÌ$ %
CommandData
ÌÌ% 0
cmdData
ÌÌ1 8
)
ÌÌ8 9
{
ÓÓ 	
ObjectsHelper
ÔÔ 
.
ÔÔ 

OpenObject
ÔÔ $
(
ÔÔ$ %
cmdData
ÔÔ% ,
.
ÔÔ, -

Parameters
ÔÔ- 7
)
ÔÔ7 8
;
ÔÔ8 9
return
ÒÒ 
true
ÒÒ 
;
ÒÒ 
}
ÚÚ 	
public
ÙÙ 
bool
ÙÙ +
ExecAssignAttributeToVariable
ÙÙ 1
(
ÙÙ1 2
CommandData
ÙÙ2 =
cmdData
ÙÙ> E
)
ÙÙE F
{
ıı 	
ObjectsHelper
ˆˆ 
.
ˆˆ '
AssignAttributeToVariable
ˆˆ 3
(
ˆˆ3 4
cmdData
ˆˆ4 ;
.
ˆˆ; <

Parameters
ˆˆ< F
)
ˆˆF G
;
ˆˆG H
return
˜˜ 
true
˜˜ 
;
˜˜ 
}
¯¯ 	
public
˙˙ 
bool
˙˙ (
ExecAssignDomainToVariable
˙˙ .
(
˙˙. /
CommandData
˙˙/ :
cmdData
˙˙; B
)
˙˙B C
{
˚˚ 	
ObjectsHelper
¸¸ 
.
¸¸ $
AssignDomainToVariable
¸¸ 0
(
¸¸0 1
cmdData
¸¸1 8
.
¸¸8 9

Parameters
¸¸9 C
)
¸¸C D
;
¸¸D E
return
˝˝ 
true
˝˝ 
;
˝˝ 
}
˛˛ 	
public
ÄÄ 
bool
ÄÄ "
ExecCleanVarsNotUsed
ÄÄ (
(
ÄÄ( )
CommandData
ÄÄ) 4
cmdData
ÄÄ5 <
)
ÄÄ< =
{
ÅÅ 	
ObjectsHelper
ÇÇ 
.
ÇÇ 
CleanVarsNotUsed
ÇÇ *
(
ÇÇ* +
)
ÇÇ+ ,
;
ÇÇ, -
return
ÉÉ 
true
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
public
àà 
bool
àà 
ExecAboutKBDoctor
àà %
(
àà% &
CommandData
àà& 1
cmdData
àà2 9
)
àà9 :
{
ââ 	
Assembly
ää 
assem
ää 
=
ää 
this
ää !
.
ää! "
GetType
ää" )
(
ää) *
)
ää* +
.
ää+ ,
Assembly
ää, 4
;
ää4 5
object
ãã 
[
ãã 
]
ãã 
	atributos
ãã 
=
ãã  
assem
ãã! &
.
ãã& '!
GetCustomAttributes
ãã' :
(
ãã: ;
typeof
ãã; A
(
ããA B&
AssemblyVersionAttribute
ããB Z
)
ããZ [
,
ãã[ \
false
ãã] b
)
ããb c
;
ããc d
using
åå 
(
åå 
Form
åå 
aboutBox
åå  
=
åå! "
new
åå# &
	AboutBox1
åå' 0
(
åå0 1
)
åå1 2
)
åå2 3
{
çç 
aboutBox
éé 
.
éé 

ShowDialog
éé #
(
éé# $
)
éé$ %
;
éé% &
}
èè 
return
êê 
true
êê 
;
êê 
}
ëë 	
public
ìì 
bool
ìì 
ExecHelpKBDoctor
ìì $
(
ìì$ %
CommandData
ìì% 0
cmdData
ìì1 8
)
ìì8 9
{
îî 	
KBDoctorHelper
ïï 
.
ïï !
ShowKBDoctorResults
ïï .
(
ïï. /
$str
ïï/ m
)
ïïm n
;
ïïn o
return
ññ 
true
ññ 
;
ññ 
}
óó 	
public
öö 
bool
öö 
ExecCleanKB
öö 
(
öö  
CommandData
öö  +
cmdData
öö, 3
)
öö3 4
{
õõ 	
CleanKBHelper
ùù 
.
ùù %
CleanKBAsMuchAsPossible
ùù 1
(
ùù1 2
)
ùù2 3
;
ùù3 4
return
ûû 
true
ûû 
;
ûû 
}
üü 	
public
°° 
bool
°° 
ExecCleanObjects
°° $
(
°°$ %
CommandData
°°% 0
cmdData
°°1 8
)
°°8 9
{
¢¢ 	
CleanKBHelper
§§ 
.
§§ 
CleanObjects
§§ &
(
§§& '
)
§§' (
;
§§( )
return
•• 
true
•• 
;
•• 
}
¶¶ 	
public
®® 
bool
®® 
ExecAddINParmRule
®® %
(
®®% &
CommandData
®®& 1
cmdData
®®2 9
)
®®9 :
{
©© 	
CleanKBHelper
´´ 
.
´´ 
AddINParmRule
´´ '
(
´´' (
)
´´( )
;
´´) *
return
¨¨ 
true
¨¨ 
;
¨¨ 
}
≠≠ 	
public
ØØ 
bool
ØØ 0
"ExecListTableAttributesUsingDomain
ØØ 6
(
ØØ6 7
CommandData
ØØ7 B
cmdData
ØØC J
)
ØØJ K
{
∞∞ 	
CleanKBHelper
≤≤ 
.
≤≤ ,
ListTableAttributesUsingDomain
≤≤ 8
(
≤≤8 9
)
≤≤9 :
;
≤≤: ;
return
≥≥ 
true
≥≥ 
;
≥≥ 
}
¥¥ 	
public
µµ 
bool
µµ 
ExecProcedureSDT
µµ $
(
µµ$ %
CommandData
µµ% 0
cmdData
µµ1 8
)
µµ8 9
{
∂∂ 	
CleanKBHelper
∏∏ 
.
∏∏  
CreateProcedureSDT
∏∏ ,
(
∏∏, -
)
∏∏- .
;
∏∏. /
return
ππ 
true
ππ 
;
ππ 
}
∫∫ 	
public
ºº 
bool
ºº !
ExecProcedureGetSet
ºº '
(
ºº' (
CommandData
ºº( 3
cmdData
ºº4 ;
)
ºº; <
{
ΩΩ 	
CodeGeneration
øø 
.
øø #
CreateProcedureGetSet
øø 0
(
øø0 1
)
øø1 2
;
øø2 3
return
¿¿ 
true
¿¿ 
;
¿¿ 
}
¡¡ 	
public
ƒƒ 
bool
ƒƒ +
ExecPrepareComparerNavigation
ƒƒ 1
(
ƒƒ1 2
CommandData
ƒƒ2 =
cmdData
ƒƒ> E
)
ƒƒE F
{
≈≈ 	
ObjectsHelper
∆∆ 
.
∆∆ 

TestParser
∆∆ $
(
∆∆$ %
)
∆∆% &
;
∆∆& '
return
«« 
true
«« 
;
«« 
}
»» 	
public
   
bool
   .
 ExecOpenFolderComparerNavigation
   4
(
  4 5
CommandData
  5 @
cmdData
  A H
)
  H I
{
ÀÀ 	
KbStats
ÃÃ 
.
ÃÃ *
OpenFolderComparerNavigation
ÃÃ 0
(
ÃÃ0 1
)
ÃÃ1 2
;
ÃÃ2 3
return
ÕÕ 
true
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
public
–– 
bool
–– 1
#ExecOpenFolderObjComparerNavigation
–– 7
(
––7 8
CommandData
––8 C
cmdData
––D K
)
––K L
{
—— 	
KbStats
““ 
.
““ -
OpenFolderObjComparerNavigation
““ 3
(
““3 4
)
““4 5
;
““5 6
return
”” 
true
”” 
;
”” 
}
‘‘ 	
public
÷÷ 
bool
÷÷ )
ExecCompareLastNVGDirectory
÷÷ /
(
÷÷/ 0
CommandData
÷÷0 ;
cmdData
÷÷< C
)
÷÷C D
{
◊◊ 	
KbStats
ÿÿ 
.
ÿÿ %
CompareLastNVGDirectory
ÿÿ +
(
ÿÿ+ ,
)
ÿÿ, -
;
ÿÿ- .
return
ŸŸ 
true
ŸŸ 
;
ŸŸ 
}
⁄⁄ 	
public
‹‹ 
bool
‹‹ )
ExecCompareLastOBJDirectory
‹‹ /
(
‹‹/ 0
CommandData
‹‹0 ;
cmdData
‹‹< C
)
‹‹C D
{
›› 	
KbStats
ﬁﬁ 
.
ﬁﬁ %
CompareLastOBJDirectory
ﬁﬁ +
(
ﬁﬁ+ ,
)
ﬁﬁ, -
;
ﬁﬁ- .
return
ﬂﬂ 
true
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
public
·· 
bool
·· "
ExecSearchAndReplace
·· (
(
··( )
CommandData
··) 4
cmdData
··5 <
)
··< =
{
‚‚ 	
CleanKBHelper
„„ 
.
„„ 
SearchAndReplace
„„ *
(
„„* +
)
„„+ ,
;
„„, -
return
‰‰ 
true
‰‰ 
;
‰‰ 
}
ÂÂ 	
public
ÁÁ 
bool
ÁÁ !
ExecClassNotInTheme
ÁÁ '
(
ÁÁ' (
CommandData
ÁÁ( 3
cmdData
ÁÁ4 ;
)
ÁÁ; <
{
ËË 	
CleanKBHelper
ÈÈ 
.
ÈÈ 
ClassNotInTheme
ÈÈ )
(
ÈÈ) *
)
ÈÈ* +
;
ÈÈ+ ,
return
ÍÍ 
true
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
public
ÌÌ 
bool
ÌÌ 
ExecClassUsed
ÌÌ !
(
ÌÌ! "
CommandData
ÌÌ" -
cmdData
ÌÌ. 5
)
ÌÌ5 6
{
ÓÓ 	
CleanKBHelper
ÔÔ 
.
ÔÔ 
	ClassUsed
ÔÔ #
(
ÔÔ# $
)
ÔÔ$ %
;
ÔÔ% &
return
 
true
 
;
 
}
ÒÒ 	
public
ÛÛ 
bool
ÛÛ 
ExecListClassUsed
ÛÛ %
(
ÛÛ% &
CommandData
ÛÛ& 1
cmdData
ÛÛ2 9
)
ÛÛ9 :
{
ÙÙ 	
CleanKBHelper
ıı 
.
ıı 
	ClassUsed
ıı #
(
ıı# $
)
ıı$ %
;
ıı% &
return
ˆˆ 
true
ˆˆ 
;
ˆˆ 
}
˜˜ 	
public
˙˙ 
bool
˙˙ )
ExecCountGeneratedByPattern
˙˙ /
(
˙˙/ 0
CommandData
˙˙0 ;
cmdData
˙˙< C
)
˙˙C D
{
˚˚ 	
KbStats
¸¸ 
.
¸¸ %
CountGeneratedByPattern
¸¸ +
(
¸¸+ ,
)
¸¸, -
;
¸¸- .
return
˝˝ 
true
˝˝ 
;
˝˝ 
}
˛˛ 	
public
ÄÄ 
bool
ÄÄ '
ExecReplaceNullCompatible
ÄÄ -
(
ÄÄ- .
CommandData
ÄÄ. 9
cmdData
ÄÄ: A
)
ÄÄA B
{
ÅÅ 	
Labs
ÇÇ 
.
ÇÇ $
ReplaceNullsCompatible
ÇÇ '
(
ÇÇ' (
)
ÇÇ( )
;
ÇÇ) *
return
ÉÉ 
true
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
public
ÜÜ 
bool
ÜÜ 
ExecListObj
ÜÜ 
(
ÜÜ  
CommandData
ÜÜ  +
cmdData
ÜÜ, 3
)
ÜÜ3 4
{
áá 	
Thread
àà 
t
àà 
=
àà 
new
àà 
Thread
àà !
(
àà! "
new
àà" %
ThreadStart
àà& 1
(
àà1 2
KbStats
àà2 9
.
àà9 :
ListObj
àà: A
)
ààA B
)
ààB C
;
ààC D
t
ââ 
.
ââ 
Start
ââ 
(
ââ 
)
ââ 
;
ââ 
return
ää 
true
ää 
;
ää 
}
ãã 	
public
çç 
bool
çç #
ExecCreateDeployUnits
çç )
(
çç) *
CommandData
çç* 5
cmdData
çç6 =
)
çç= >
{
éé 	
ObjectsHelper
èè 
.
èè 
CreateDeployUnits
èè +
(
èè+ ,
)
èè, -
;
èè- .
return
êê 
true
êê 
;
êê 
}
ëë 	
public
ìì 
bool
ìì #
ExecMarkPublicObjects
ìì )
(
ìì) *
CommandData
ìì* 5
cmdData
ìì6 =
)
ìì= >
{
îî 	
ModulesHelper
ïï 
.
ïï 
MarkPublicObjects
ïï +
(
ïï+ ,
)
ïï, -
;
ïï- .
return
ññ 
true
ññ 
;
ññ 
}
óó 	
public
ôô 
bool
ôô 
ExecListModules
ôô #
(
ôô# $
CommandData
ôô$ /
cmdData
ôô0 7
)
ôô7 8
{
öö 	
ModulesHelper
õõ 
.
õõ 
ListModulesErrors
õõ +
(
õõ+ ,
)
õõ, -
;
õõ- .
return
úú 
true
úú 
;
úú 
}
ùù 	
public
†† 
bool
†† '
ExecListModulesStatistics
†† -
(
††- .
CommandData
††. 9
cmdData
††: A
)
††A B
{
°° 	
ModulesHelper
¢¢ 
.
¢¢ #
ListModulesStatistics
¢¢ /
(
¢¢/ 0
)
¢¢0 1
;
¢¢1 2
return
££ 
true
££ 
;
££ 
}
§§ 	
public
¶¶ 
bool
¶¶ "
ExecMoveTransactions
¶¶ (
(
¶¶( )
CommandData
¶¶) 4
cmdData
¶¶5 <
)
¶¶< =
{
ßß 	
ModulesHelper
®® 
.
®® 
MoveTransactions
®® *
(
®®* +
)
®®+ ,
;
®®, -
return
©© 
true
©© 
;
©© 
}
™™ 	
public
¨¨ 
bool
¨¨ #
ExecCalculateCheckSum
¨¨ )
(
¨¨) *
CommandData
¨¨* 5
cmdData
¨¨6 =
)
¨¨= >
{
≠≠ 	
ObjectsHelper
ÆÆ 
.
ÆÆ 
CalculateCheckSum
ÆÆ +
(
ÆÆ+ ,
)
ÆÆ, -
;
ÆÆ- .
return
ØØ 
true
ØØ 
;
ØØ 
}
∞∞ 	
public
≤≤ 
bool
≤≤ %
ExecGenerateLocationXML
≤≤ +
(
≤≤+ ,
CommandData
≤≤, 7
cmdData
≤≤8 ?
)
≤≤? @
{
≥≥ 	
ObjectsHelper
¥¥ 
.
¥¥ !
GenerateLocationXML
¥¥ -
(
¥¥- .
)
¥¥. /
;
¥¥/ 0
return
µµ 
true
µµ 
;
µµ 
}
∂∂ 	
public
∏∏ 
bool
∏∏ !
ExecListLastReports
∏∏ '
(
∏∏' (
CommandData
∏∏( 3
cmdData
∏∏4 ;
)
∏∏; <
{
ππ 	
KbStats
∫∫ 
.
∫∫ 
ListLastReports
∫∫ #
(
∫∫# $
)
∫∫$ %
;
∫∫% &
return
ªª 
true
ªª 
;
ªª 
}
ºº 	
public
ææ 
bool
ææ '
ExecListObjWarningsErrors
ææ -
(
ææ- .
CommandData
ææ. 9
cmdData
ææ: A
)
ææA B
{
øø 	
NavigationHelper
¡¡ 
.
¡¡ #
ListObjWarningsErrors
¡¡ 2
(
¡¡2 3
)
¡¡3 4
;
¡¡4 5
return
¬¬ 
true
¬¬ 
;
¬¬ 
}
√√ 	
public
≈≈ 
bool
≈≈ *
ExecListObjSimilarNavigation
≈≈ 0
(
≈≈0 1
CommandData
≈≈1 <
cmdData
≈≈= D
)
≈≈D E
{
∆∆ 	
NavigationHelper
«« 
.
«« &
ListObjSimilarNavigation
«« 5
(
««5 6
)
««6 7
;
««7 8
return
»» 
true
»» 
;
»» 
}
…… 	
public
ÀÀ 
bool
ÀÀ  
ExecListAPIObjects
ÀÀ &
(
ÀÀ& '
CommandData
ÀÀ' 2
cmdData
ÀÀ3 :
)
ÀÀ: ;
{
ÃÃ 	
ObjectsHelper
ÕÕ 
.
ÕÕ 
ListAPIObjects
ÕÕ (
(
ÕÕ( )
)
ÕÕ) *
;
ÕÕ* +
return
ŒŒ 
true
ŒŒ 
;
ŒŒ 
}
œœ 	
public
–– 
bool
–– "
ExecRecomendedModule
–– (
(
––( )
CommandData
––) 4
cmdData
––5 <
)
––< =
{
—— 	
ModulesHelper
““ 
.
““ 
RecomendedModule
““ *
(
““* +
)
““+ ,
;
““, -
return
”” 
true
”” 
;
”” 
}
‘‘ 	
public
÷÷ 
bool
÷÷ !
ExecSplitMainObject
÷÷ '
(
÷÷' (
CommandData
÷÷( 3
cmdData
÷÷4 ;
)
÷÷; <
{
◊◊ 	
ObjectsHelper
ÿÿ 
.
ÿÿ 
SplitMainObject
ÿÿ )
(
ÿÿ) *
)
ÿÿ* +
;
ÿÿ+ ,
return
ŸŸ 
true
ŸŸ 
;
ŸŸ 
}
⁄⁄ 	
private
‹‹ 
bool
‹‹ 
QueryKBDoctor
‹‹ "
(
‹‹" #
CommandData
‹‹# .
cmdData
‹‹/ 6
,
‹‹6 7
ref
‹‹8 ;
CommandStatus
‹‹< I
status
‹‹J P
)
‹‹P Q
{
›› 	
status
‡‡ 
.
‡‡ 
State
‡‡ 
=
‡‡ 
CommandState
‡‡ '
.
‡‡' (
Disabled
‡‡( 0
;
‡‡0 1

IKBService
‚‚ 
kbserv
‚‚ 
=
‚‚ 

UIServices
‚‚  *
.
‚‚* +
KB
‚‚+ -
;
‚‚- .
if
„„ 
(
„„ 
kbserv
„„ 
!=
„„ 
null
„„ 
&&
„„ !
kbserv
„„" (
.
„„( )
	CurrentKB
„„) 2
!=
„„3 5
null
„„6 :
)
„„: ;
{
‰‰ 
status
ÂÂ 
.
ÂÂ 
State
ÂÂ 
=
ÂÂ 
CommandState
ÂÂ +
.
ÂÂ+ ,
Enabled
ÂÂ, 3
;
ÂÂ3 4
}
ÊÊ 
return
ÎÎ 
true
ÎÎ 
;
ÎÎ 
}
ÏÏ 	
private
ÓÓ 
bool
ÓÓ 
QueryKBDoctorNoKB
ÓÓ &
(
ÓÓ& '
CommandData
ÓÓ' 2
cmdData
ÓÓ3 :
,
ÓÓ: ;
ref
ÓÓ< ?
CommandStatus
ÓÓ@ M
status
ÓÓN T
)
ÓÓT U
{
ÔÔ 	
status
 
.
 
State
 
=
 
CommandState
 '
.
' (
Enabled
( /
;
/ 0
return
ÚÚ 
true
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
private
ıı 
bool
ıı #
QueryIsModuleSelected
ıı *
(
ıı* +
CommandData
ıı+ 6
data
ıı7 ;
,
ıı; <
ref
ıı= @
CommandStatus
ııA N
status
ııO U
)
ııU V
{
ˆˆ 	
status
˜˜ 
.
˜˜ 
State
˜˜ 
=
˜˜ 
CommandState
˜˜ '
.
˜˜' (
Disabled
˜˜( 0
;
˜˜0 1
if
¯¯ 
(
¯¯ 

UIServices
¯¯ 
.
¯¯ 
KB
¯¯ 
!=
¯¯  
null
¯¯! %
&&
¯¯& (

UIServices
¯¯) 3
.
¯¯3 4
KB
¯¯4 6
.
¯¯6 7
	CurrentKB
¯¯7 @
!=
¯¯A C
null
¯¯D H
)
¯¯H I
{
˘˘ 

IModelTree
˙˙ 
tree
˙˙ 
=
˙˙  !
data
˙˙" &
.
˙˙& '
Context
˙˙' .
as
˙˙/ 1

IModelTree
˙˙2 <
;
˙˙< =
if
˚˚ 
(
˚˚ 
tree
˚˚ 
==
˚˚ 
null
˚˚  
||
˚˚! #
!
˚˚$ %
(
˚˚% &
tree
˚˚& *
.
˚˚* +
SelectedObject
˚˚+ 9
is
˚˚: <
KBObject
˚˚= E
)
˚˚E F
)
˚˚F G
return
¸¸ 
true
¸¸ 
;
¸¸  
foreach
˛˛ 
(
˛˛ 
KBObject
˛˛ !
obj
˛˛" %
in
˛˛& (
tree
˛˛) -
.
˛˛- .
SelectedObjects
˛˛. =
)
˛˛= >
if
ˇˇ 
(
ˇˇ 
obj
ˇˇ 
.
ˇˇ 
Type
ˇˇ  
!=
ˇˇ! #
typeof
ˇˇ$ *
(
ˇˇ* +
Artech
ˇˇ+ 1
.
ˇˇ1 2
Architecture
ˇˇ2 >
.
ˇˇ> ?
Common
ˇˇ? E
.
ˇˇE F
Objects
ˇˇF M
.
ˇˇM N
Module
ˇˇN T
)
ˇˇT U
.
ˇˇU V
GUID
ˇˇV Z
)
ˇˇZ [
return
ÄÄ 
true
ÄÄ #
;
ÄÄ# $
status
ÇÇ 
.
ÇÇ 
State
ÇÇ 
=
ÇÇ 
CommandState
ÇÇ +
.
ÇÇ+ ,
Enabled
ÇÇ, 3
;
ÇÇ3 4
}
ÉÉ 
return
ÑÑ 
true
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
}
ââ 
}ää º!
DC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\KBDoctorHelper.cs
	namespace 	
Concepto
 
. 
Packages 
. 
KBDoctor $
{ 
public 

static 
class 
KBDoctorHelper &
{ 
public 
static 
void 
ShowKBDoctorResults .
(. /
string/ 5

outputFile6 @
)@ A
{ 	

UIServices 
. 
	StartPage  
.  !
OpenPage! )
() *

outputFile* 4
,4 5
$str6 @
,@ A
nullB F
)F G
;G H

UIServices 
. 
ToolWindows "
." #
FocusToolWindow# 2
(2 3

UIServices3 =
.= >
	StartPage> G
.G H

ToolWindowH R
.R S
IdS U
)U V
;V W
}   	
public"" 
static"" 
string"" 
SpcDirectory"" )
("") *

IKBService""* 4
kbserv""5 ;
)""< =
{## 	
GxModel$$ 
gxModel$$ 
=$$ 
kbserv$$ $
.$$$ %
	CurrentKB$$% .
.$$. /
DesignModel$$/ :
.$$: ;
Environment$$; F
.$$F G
TargetModel$$G R
.$$R S
GetAs$$S X
<$$X Y
GxModel$$Y `
>$$` a
($$a b
)$$b c
;$$c d
return%% 
kbserv%% 
.%% 
	CurrentKB%% #
.%%# $
Location%%$ ,
+%%- .
string%%/ 5
.%%5 6
Format%%6 <
(%%< =
$str%%= M
,%%M N
gxModel%%O V
.%%V W
Model%%W \
.%%\ ]
Id%%] _
)%%_ `
;%%` a
}&& 	
public(( 
static(( 
string((  
ObjComparerDirectory(( 1
(((1 2

IKBService((2 <
kbserv((= C
)((C D
{)) 	
GxModel** 
gxModel** 
=** 
kbserv** $
.**$ %
	CurrentKB**% .
.**. /
DesignModel**/ :
.**: ;
Environment**; F
.**F G
TargetModel**G R
.**R S
GetAs**S X
<**X Y
GxModel**Y `
>**` a
(**a b
)**b c
;**c d
string++ 
dir++ 
=++ 
Path++ 
.++ 
Combine++ %
(++% &
SpcDirectory++& 2
(++2 3
kbserv++3 9
)++9 :
,++: ;
$str++< I
)++I J
;++J K
try,, 
{-- 
	Directory.. 
... 
CreateDirectory.. )
(..) *
dir..* -
)..- .
;... /
}// 
catch00 
(00 
	Exception00 
e00 
)00 
{00  !
}00" #
return22 
dir22 
;22 
}33 	
public55 
static55 
string55  
NvgComparerDirectory55 1
(551 2

IKBService552 <
kbserv55= C
)55C D
{66 	
GxModel77 
gxModel77 
=77 
kbserv77 $
.77$ %
	CurrentKB77% .
.77. /
DesignModel77/ :
.77: ;
Environment77; F
.77F G
TargetModel77G R
.77R S
GetAs77S X
<77X Y
GxModel77Y `
>77` a
(77a b
)77b c
;77c d
string88 
dir88 
=88 
Path88 
.88 
Combine88 %
(88% &
SpcDirectory88& 2
(882 3
kbserv883 9
)889 :
,88: ;
$str88< I
)88I J
;88J K
try99 
{:: 
	Directory;; 
.;; 
CreateDirectory;; )
(;;) *
dir;;* -
);;- .
;;;. /
}<< 
catch== 
(== 
	Exception== 
e== 
)== 
{==  !
}==" #
return>> 
dir>> 
;>> 
}?? 	
}@@ 
}AA ∫7
GC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\KBDoctorXMLWriter.cs
	namespace 	
Concepto
 
. 
Packages 
. 
KBDoctor $
{		 
class

 	
KBDoctorXMLWriter


 
:

 
XmlTextWriter

 *
{ 
public 
KBDoctorXMLWriter  
(  !
string! '
archivo( /
,/ 0
Encoding1 9
enc: =
)= >
:> ?
base@ D
(D E
archivoE L
,L M
encN Q
)Q R
{ 	
} 	
public 
void 
	AddHeader 
( 
string $
title% *
)* +
{ 	
WriteJScripttoDir 
( 
) 
;  
WriteStartElement 
( 
$str $
)$ %
;% & 
WriteAttributeString  
(  !
$str! (
,( )
$str* H
)H I
;I J
WriteStartElement 
( 
$str $
)$ %
;% &
WriteElementString 
( 
$str &
,& '
title( -
)- .
;. /
WriteStartElement 
( 
$str %
)% &
;& ' 
WriteAttributeString $
($ %
$str% +
,+ ,
$str- 7
)7 8
;8 9
WriteString 
( 
$str D
)D E
;E F
WriteString 
( 
$str t
)t u
;u v
WriteString 
( 
$str J
)J K
;K L
WriteEndElement   
(   
)   
;   
WriteRaw"" 
("" 
$str"" X
)""X Y
;""Y Z
WriteRaw## 
(## 
$str## \
)##\ ]
;##] ^
WriteRaw$$ 
($$ 
$str$$ n
)$$n o
;$$o p
WriteEndElement&& 
(&& 
)&& 
;&& 
WriteStartElement(( 
((( 
$str(( $
)(($ %
;((% &
AddTitle)) 
()) 
title)) 
))) 
;)) 
WriteStartElement++ 
(++ 
$str++ %
)++% &
;++& ' 
WriteAttributeString,,  
(,,  !
$str,,! (
,,,( )
$str,,* 0
),,0 1
;,,1 2 
WriteAttributeString--  
(--  !
$str--! (
,--( )
$str--) D
)--D E
;--E F 
WriteAttributeString..  
(..  !
$str..! .
,... /
$str../ 8
)..8 9
;..9 : 
WriteAttributeString//  
(//  !
$str//! .
,//. /
$str/// 2
)//2 3
;//3 4 
WriteAttributeString00  
(00  !
$str00! .
,00. /
$str00/ 2
)002 3
;003 4 
WriteAttributeString11  
(11  !
$str11! )
,11) *
$str11* -
)11- .
;11. /
}22 	
public44 
void44 
	AddFooter44 
(44 
)44 
{55 	
WriteEndElement77 
(77 
)77 
;77 
WriteEndElement88 
(88 
)88 
;88 
WriteEndElement99 
(99 
)99 
;99 
WriteEndElement:: 
(:: 
):: 
;:: 
};; 	
public== 
void== 
AddTableFooterOnly== &
(==& '
)==' (
{>> 	
WriteEndElement?? 
(?? 
)?? 
;?? 
}@@ 	
publicBB 
voidBB 
AddTableHeaderBB "
(BB" #
stringBB# )
[BB) *
]BB* +
titlesBB, 2
)BB2 3
{CC 	
WriteStartElementDD 
(DD 
$strDD %
)DD% &
;DD& '
WriteStartElementEE 
(EE 
$strEE "
)EE" #
;EE# $
foreachFF 
(FF 
stringFF 
sFF 
inFF  
titlesFF! '
)FF' (
{GG 
WriteElementStringHH "
(HH" #
$strHH# '
,HH' (
sHH) *
)HH* +
;HH+ ,
}II 
WriteEndElementJJ 
(JJ 
)JJ 
;JJ 
WriteEndElementKK 
(KK 
)KK 
;KK 
WriteStartElementMM 
(MM 
$strMM %
)MM% &
;MM& ' 
WriteAttributeStringNN  
(NN  !
$strNN! (
,NN( )
$strNN) @
)NN@ A
;NNA B
}PP 	
publicRR 
voidRR 
AddTableDataRR  
(RR  !
stringRR! '
[RR' (
]RR( )
datosRR* /
)RR/ 0
{SS 	
WriteStartElementTT 
(TT 
$strTT "
)TT" #
;TT# $
foreachUU 
(UU 
stringUU 
sUU 
inUU  
datosUU! &
)UU& '
{VV 
WriteStartElementWW !
(WW! "
$strWW" &
)WW& '
;WW' (
WriteRawXX 
(XX 
sXX 
)XX 
;XX 
WriteEndElementYY 
(YY  
)YY  !
;YY! "
}ZZ 
WriteEndElement[[ 
([[ 
)[[ 
;[[ 
}\\ 	
public^^ 
void^^ 
AddTitle^^ 
(^^ 
string^^ #
title^^$ )
)^^) *
{__ 	
WriteElementString`` 
(`` 
$str`` #
,``# $
title``% *
)``* +
;``+ ,
}aa 	
privatecc 
staticcc 
voidcc 
WriteJScripttoDircc -
(cc- .
)cc. /
{dd 	

IKBServiceee 
kbservee 
=ee 

UIServicesee  *
.ee* +
KBee+ -
;ee- .
stringff 

outputFileff 
=ff 
kbservff  &
.ff& '
	CurrentKBff' 0
.ff0 1
UserDirectoryff1 >
+ff? @
$strffA U
;ffU V
Filegg 
.gg 
WriteAllTextgg 
(gg 

outputFilegg (
,gg( )
StringResourcesgg* 9
.gg9 :
jquery_latestgg: G
)ggG H
;ggH I

outputFileii 
=ii 
kbservii 
.ii  
	CurrentKBii  )
.ii) *
UserDirectoryii* 7
+ii8 9
$strii: S
;iiS T
Filejj 
.jj 
WriteAllTextjj 
(jj 

outputFilejj (
,jj( )
StringResourcesjj* 9
.jj9 :
jquery_tablesorterjj: L
)jjL M
;jjM N
}ll 	
}mm 
}nn çï
CC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\ObjectsHelper.cs
	namespace++ 	
Concepto++
 
.++ 
Packages++ 
.++ 
KBDoctor++ $
{,, 
static-- 

class-- 
ObjectsHelper-- 
{.. 
public00 
static00 
void00 
Unreachables00 '
(00' (
)00( )
{11 	

IKBService22 
kbserv22 
=22 

UIServices22  *
.22* +
KB22+ -
;22- .
IOutputService33 
output33 !
=33" #
CommonServices33$ 2
.332 3
Output333 9
;339 :
bool44 
success44 
=44 
true44 
;44  
string55 
title55 
=55 
$str55 ;
;55; <
output66 
.66 
StartSection66 
(66  
title66  %
)66% &
;66& '
string99 

outputFile99 
=99 
	Functions99  )
.99) *
CreateOutputFile99* :
(99: ;
kbserv99; A
,99A B
title99C H
)99H I
;99I J
KBDoctorXMLWriter;; 
writer;; $
=;;% &
new;;' *
KBDoctorXMLWriter;;+ <
(;;< =

outputFile;;= G
,;;G H
Encoding;;I Q
.;;Q R
UTF8;;R V
);;V W
;;;W X
writer<< 
.<< 
	AddHeader<< 
(<< 
title<< "
)<<" #
;<<# $
writer== 
.== 
AddTableHeader== !
(==! "
new==" %
string==& ,
[==, -
]==- .
{==/ 0
$str==1 9
,==9 :
$str==; A
,==A B
$str==C P
,==P Q
$str==R Z
}==[ \
)==\ ]
;==] ^
KBObjectCollection>> 
reachablesObjects>> 0
=>>1 2
new>>3 6
KBObjectCollection>>7 I
(>>I J
)>>J K
;>>K L
KBObjectCollection?? 
unreachablesObjects?? 2
=??3 4
new??5 8
KBObjectCollection??9 K
(??K L
)??L M
;??M N

KBCategory@@ 
mainCategory@@ #
=@@$ %

KBCategory@@& 0
.@@0 1
Get@@1 4
(@@4 5
kbserv@@5 ;
.@@; <
CurrentModel@@< H
,@@H I
$str@@J Y
)@@Y Z
;@@Z [
foreachAA 
(AA 
KBObjectAA 
objAA !
inAA" $
mainCategoryAA% 1
.AA1 2

AllMembersAA2 <
)AA< =
{BB 
MarkReachablesCC 
(CC 
outputCC %
,CC% &
objCC' *
,CC* +
reachablesObjectsCC, =
)CC= >
;CC> ?
}DD 
foreachGG 
(GG 
KBObjectGG 
objGG !
inGG" $
kbservGG% +
.GG+ ,
CurrentModelGG, 8
.GG8 9
ObjectsGG9 @
.GG@ A
GetAllGGA G
(GGG H
)GGH I
)GGI J
{HH 
ICallableObjectII 
callableObjectII  .
=II/ 0
objII1 4
asII5 7
ICallableObjectII8 G
;IIG H
ifJJ 
(JJ 
(JJ 
callableObjectJJ #
!=JJ$ &
nullJJ' +
)JJ+ ,
|JJ- .
(JJ/ 0
objJJ0 3
isJJ4 6
ArtechJJ7 =
.JJ= >
GenexusJJ> E
.JJE F
CommonJJF L
.JJL M
ObjectsJJM T
.JJT U
	AttributeJJU ^
)JJ^ _
|KK 
objKK 
isKK 
ArtechKK #
.KK# $
GenexusKK$ +
.KK+ ,
CommonKK, 2
.KK2 3
ObjectsKK3 :
.KK: ;
TableKK; @
|KKA B
objKKC F
isKKG I
DomainKKJ P
|KKQ R
objKKS V
isKKW Y
ExternalObjectKKZ h
|KKi j
objKKk n
isKKo q
SDTKKr u
)KKu v
{LL 
unreachablesObjectsMM '
.MM' (
AddMM( +
(MM+ ,
objMM, /
)MM/ 0
;MM0 1
}NN 
}OO 
intPP 
cantObjPP 
=PP 
unreachablesObjectsPP -
.PP- .
CountPP. 3
;PP3 4
unreachablesObjectsRR 
.RR  
	RemoveAllRR  )
(RR) *
reachablesObjectsRR* ;
)RR; <
;RR< =
intSS 
	cantUnObjSS 
=SS 
unreachablesObjectsSS /
.SS/ 0
CountSS0 5
;SS5 6
outputTT 
.TT 
AddLineTT 
(TT 
$strTT G
)TTG H
;TTH I

KBCategoryUU 
catRUU 
=UU 

KBCategoryUU (
.UU( )
GetUU) ,
(UU, -
kbservUU- 3
.UU3 4
CurrentModelUU4 @
,UU@ A
$strUUB X
)UUX Y
;UUY Z
ifVV 
(VV 
catRVV 
==VV 
nullVV 
)VV 
{WW 
catRXX 
=XX 
newXX 

KBCategoryXX %
(XX% &
kbservXX& ,
.XX, -
CurrentModelXX- 9
)XX9 :
;XX: ;
catRYY 
.YY 
NameYY 
=YY 
$strYY 2
;YY2 3
catRZZ 
.ZZ 
DescriptionZZ  
=ZZ! "
$strZZ# E
;ZZE F
catR[[ 
.[[ 
ShowInModelTree[[ $
=[[% &
true[[' +
;[[+ ,

BLServices\\ 
.\\ 
TeamDevClient\\ (
.\\( )
IgnoreForCommit\\) 8
(\\8 9
catR\\9 =
.\\= >
Model\\> C
,\\C D
catR\\E I
.\\I J
Key\\J M
)\\M N
;\\N O
catR]] 
.]] 
Save]] 
(]] 
)]] 
;]] 
}^^ 
foreach`` 
(`` 
KBObject`` 
obj`` !
in``" $
catR``% )
.``) *

AllMembers``* 4
)``4 5
{aa 
outputbb 
.bb 
AddLinebb 
(bb 
$strbb *
+bb+ ,
objbb- 0
.bb0 1
Namebb1 5
+bb6 7
$strbb8 ^
)bb^ _
;bb_ `
objcc 
.cc 
RemoveCategorycc "
(cc" #
catRcc# '
)cc' (
;cc( )
ifdd 
(dd 
!dd 
objdd 
.dd 
GetPropertyValuedd )
<dd) *
booldd* .
>dd. /
(dd/ 0

Propertiesdd0 :
.dd: ;
TRNdd; >
.dd> ?
GenerateObjectdd? M
)ddM N
&&ddO Q
(ddR S
objddS V
isddW Y
	ProcedureddZ c
|ddd e
objddf i
isddj l
WebPanelddm u
|ddv w
objddx {
isdd| ~
	WorkPanel	dd à
|
ddâ ä
obj
ddã é
is
ddè ë
Transaction
ddí ù
|
ddû ü
obj
dd† £
is
dd§ ¶
DataProvider
ddß ≥
|
dd¥ µ
obj
dd∂ π
is
dd∫ º
Menubar
ddΩ ƒ
)
ddƒ ≈
)
dd≈ ∆
{ee 
objff 
.ff 
SetPropertyValueff (
(ff( )

Propertiesff) 3
.ff3 4
TRNff4 7
.ff7 8
GenerateObjectff8 F
,ffF G
trueffH L
)ffL M
;ffM N
}gg 
objhh 
.hh 
Savehh 
(hh 
)hh 
;hh 
}jj 
Booleanmm 
SaveObjmm 
=mm 
falsemm #
;mm# $
foreachnn 
(nn 
KBObjectnn 
objnn !
innn" $
unreachablesObjectsnn% 8
)nn8 9
{oo 
Artechpp 
.pp 
Architecturepp #
.pp# $
UIpp$ &
.pp& '
	Frameworkpp' 0
.pp0 1
Objectspp1 8
.pp8 9
IGxDocumentpp9 D
documentppE M
;ppM N
SaveObjrr 
=rr 
falserr 
;rr  
ifuu 
(uu 

UIServicesuu 
.uu 
DocumentManageruu .
.uu. /
IsOpenDocumentuu/ =
(uu= >
objuu> A
,uuA B
outuuC F
documentuuG O
)uuO P
)uuP Q
{vv 
documentww 
.ww 
Objectww #
.ww# $
AddCategoryww$ /
(ww/ 0
catRww0 4
)ww4 5
;ww5 6
SetDocumentDirtyxx $
(xx$ %
documentxx% -
)xx- .
;xx. /

UIServicesyy 
.yy 
TrackSelectionyy -
.yy- .
OnSelectChangeyy. <
(yy< =
documentyy= E
.yyE F
ObjectyyF L
,yyL M
nullyyN R
)yyR S
;yyS T
}zz 
else{{ 
{|| 
if}} 
(}} 
!}} 
catR}} 
.}} 
ContainsMember}} ,
(}}, -
obj}}- 0
)}}0 1
)}}1 2
{~~ 
obj 
. 
AddCategory '
(' (
catR( ,
), -
;- .
SaveObj
ÄÄ 
=
ÄÄ  !
true
ÄÄ" &
;
ÄÄ& '
}
ÅÅ 
if
ÑÑ 
(
ÑÑ 
obj
ÑÑ 
.
ÑÑ 
GetPropertyValue
ÑÑ ,
<
ÑÑ, -
bool
ÑÑ- 1
>
ÑÑ1 2
(
ÑÑ2 3

Properties
ÑÑ3 =
.
ÑÑ= >
TRN
ÑÑ> A
.
ÑÑA B
GenerateObject
ÑÑB P
)
ÑÑP Q
&&
ÑÑR T
(
ÑÑU V
obj
ÑÑV Y
is
ÑÑZ \
	Procedure
ÑÑ] f
|
ÑÑg h
obj
ÑÑi l
is
ÑÑm o
WebPanel
ÑÑp x
|
ÑÑy z
obj
ÑÑ{ ~
isÑÑ Å
	WorkPanelÑÑÇ ã
|ÑÑå ç
objÑÑé ë
isÑÑí î
TransactionÑÑï †
|ÑÑ° ¢
objÑÑ£ ¶
isÑÑß ©
DataProviderÑÑ™ ∂
)ÑÑ∂ ∑
)ÑÑ∑ ∏
{
ÖÖ 
obj
ÜÜ 
.
ÜÜ 
SetPropertyValue
ÜÜ ,
(
ÜÜ, -

Properties
ÜÜ- 7
.
ÜÜ7 8
TRN
ÜÜ8 ;
.
ÜÜ; <
GenerateObject
ÜÜ< J
,
ÜÜJ K
false
ÜÜL Q
)
ÜÜQ R
;
ÜÜR S
SaveObj
áá 
=
áá  !
true
áá" &
;
áá& '
}
àà 
string
ää 
objNameLink
ää &
=
ää' (
	Functions
ää) 2
.
ää2 3

linkObject
ää3 =
(
ää= >
obj
ää> A
)
ääA B
;
ääB C
string
ãã 
remove
ãã !
=
ãã" #
$str
ãã$ u
+
ããv w
obj
ããx {
.
ãã{ |
Guidãã| Ä
.ããÄ Å
ToStringããÅ â
(ããâ ä
)ããä ã
+ããå ç
$strããé ù
;ããù û
writer
åå 
.
åå 
AddTableData
åå '
(
åå' (
new
åå( +
string
åå, 2
[
åå2 3
]
åå3 4
{
åå5 6
objNameLink
åå7 B
,
ååB C
obj
ååD G
.
ååG H
TypeDescriptor
ååH V
.
ååV W
Name
ååW [
,
åå[ \
obj
åå] `
.
åå` a
Description
ååa l
,
åål m
remove
åån t
}
ååu v
)
ååv w
;
ååw x
if
éé 
(
éé 
SaveObj
éé 
)
éé  
{
èè 
try
êê 
{
ëë 
output
íí "
.
íí" #
AddLine
íí# *
(
íí* +
obj
íí+ .
.
íí. /
TypeDescriptor
íí/ =
.
íí= >
Name
íí> B
+
ííC D
$str
ííE H
+
ííI J
obj
ííK N
.
ííN O
Name
ííO S
+
ííT U
$str
ííV q
)
ííq r
;
íír s
obj
ìì 
.
ìì  
Save
ìì  $
(
ìì$ %
)
ìì% &
;
ìì& '
}
îî 
catch
ïï 
{
ññ 
output
óó "
.
óó" #
AddWarningLine
óó# 1
(
óó1 2
$str
óó2 A
+
óóB C
obj
óóD G
.
óóG H
TypeDescriptor
óóH V
.
óóV W
Name
óóW [
+
óó\ ]
$str
óó^ a
+
óób c
obj
óód g
.
óóg h
Name
óóh l
)
óól m
;
óóm n
success
òò #
=
òò$ %
false
òò& +
;
òò+ ,
}
ôô 
}
öö 
else
õõ 
{
úú 
output
ùù 
.
ùù 
AddLine
ùù &
(
ùù& '
obj
ùù' *
.
ùù* +
TypeDescriptor
ùù+ 9
.
ùù9 :
Name
ùù: >
+
ùù? @
$str
ùùA D
+
ùùE F
obj
ùùG J
.
ùùJ K
Name
ùùK O
+
ùùP Q
$str
ùùR d
)
ùùd e
;
ùùe f
}
ûû 
}
üü 
}
¢¢ 
output
§§ 
.
§§ 
AddLine
§§ 
(
§§ 
$str
§§ 
)
§§ 
;
§§ 
output
•• 
.
•• 
AddLine
•• 
(
•• 
$str
•• +
+
••, -
cantObj
••. 5
.
••5 6
ToString
••6 >
(
••> ?
)
••? @
+
••A B
$str
••C \
+
••] ^
	cantUnObj
••_ h
.
••h i
ToString
••i q
(
••q r
)
••r s
)
••s t
;
••t u
output
¶¶ 
.
¶¶ 

EndSection
¶¶ 
(
¶¶ 
title
¶¶ #
,
¶¶# $
success
¶¶% ,
)
¶¶, -
;
¶¶- .
writer
ßß 
.
ßß 
	AddFooter
ßß 
(
ßß 
)
ßß 
;
ßß 
writer
®® 
.
®® 
Close
®® 
(
®® 
)
®® 
;
®® 
KBDoctorHelper
©© 
.
©© !
ShowKBDoctorResults
©© .
(
©©. /

outputFile
©©/ 9
)
©©9 :
;
©©: ;
}
´´ 	
private
≠≠ 
static
≠≠ 
void
≠≠ 
MarkReachables
≠≠ *
(
≠≠* +
IOutputService
≠≠+ 9
output
≠≠: @
,
≠≠@ A
KBObject
≠≠B J
obj
≠≠K N
,
≠≠N O 
KBObjectCollection
≠≠P b
reachablesObjects
≠≠c t
)
≠≠t u
{
ÆÆ 	

IKBService
ØØ 
kbserv
ØØ 
=
ØØ 

UIServices
ØØ  *
.
ØØ* +
KB
ØØ+ -
;
ØØ- .
WriteOutputLine
∞∞ 
(
∞∞ 
output
∞∞ "
,
∞∞" #
obj
∞∞$ '
)
∞∞' (
;
∞∞( )
reachablesObjects
±± 
.
±± 
Add
±± !
(
±±! "
obj
±±" %
)
±±% &
;
±±& '
foreach
≥≥ 
(
≥≥ 
EntityReference
≥≥ $
	reference
≥≥% .
in
≥≥/ 1
obj
≥≥2 5
.
≥≥5 6
GetReferences
≥≥6 C
(
≥≥C D
)
≥≥D E
)
≥≥E F
{
¥¥ 
KBObject
µµ 
objRef
µµ 
=
µµ  !
KBObject
µµ" *
.
µµ* +
Get
µµ+ .
(
µµ. /
obj
µµ/ 2
.
µµ2 3
Model
µµ3 8
,
µµ8 9
	reference
µµ: C
.
µµC D
To
µµD F
)
µµF G
;
µµG H
if
∂∂ 
(
∂∂ 
(
∂∂ 
objRef
∂∂ 
!=
∂∂ 
null
∂∂ #
)
∂∂# $
&&
∂∂% '
!
∂∂( )
reachablesObjects
∂∂) :
.
∂∂: ;
Contains
∂∂; C
(
∂∂C D
objRef
∂∂D J
)
∂∂J K
)
∂∂K L
{
∑∑ 
string
∫∫ 
objname
∫∫ "
=
∫∫# $
obj
∫∫% (
.
∫∫( )
Name
∫∫) -
;
∫∫- .
output
ªª 
.
ªª 
AddLine
ªª "
(
ªª" #
obj
ªª# &
.
ªª& '
Name
ªª' +
+
ªª, -
$str
ªª. >
+
ªª? @
	reference
ªªA J
.
ªªJ K
ReferenceType
ªªK X
.
ªªX Y
ToString
ªªY a
(
ªªa b
)
ªªb c
+
ªªd e
$str
ªªf j
+
ªªk l
objRef
ªªm s
.
ªªs t
Name
ªªt x
)
ªªx y
;
ªªy z
MarkReachables
ºº "
(
ºº" #
output
ºº# )
,
ºº) *
objRef
ºº+ 1
,
ºº1 2
reachablesObjects
ºº3 D
)
ººD E
;
ººE F
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
private
»» 
static
»» 
void
»» 
WriteOutputLine
»» +
(
»»+ ,
IOutputService
»», :
output
»»; A
,
»»A B
KBObject
»»C K
obj
»»L O
)
»»O P
{
…… 	
output
   
.
   
AddLine
   
(
   
$str
   *
+
  + ,
obj
  - 0
.
  0 1
TypeDescriptor
  1 ?
.
  ? @
DefaultName
  @ K
+
  L M
$str
  N Q
+
  R S
obj
  T W
.
  W X
Name
  X \
+
  ] ^
$str
  _ b
)
  b c
;
  c d
}
ÀÀ 	
public
ÕÕ 
static
ÕÕ 
void
ÕÕ  
ObjectsMainsCalled
ÕÕ -
(
ÕÕ- .
)
ÕÕ. /
{
ŒŒ 	

IKBService
–– 
kbserv
–– 
=
–– 

UIServices
––  *
.
––* +
KB
––+ -
;
––- .
IOutputService
—— 
output
—— !
=
——" #
CommonServices
——$ 2
.
——2 3
Output
——3 9
;
——9 :
string
““ 
title
““ 
=
““ 
$str
““ D
;
““D E
output
‘‘ 
.
‘‘ 
StartSection
‘‘ 
(
‘‘  
title
‘‘  %
)
‘‘% &
;
‘‘& '
string
’’ 

outputFile
’’ 
=
’’ 
	Functions
’’  )
.
’’) *
CreateOutputFile
’’* :
(
’’: ;
kbserv
’’; A
,
’’A B
title
’’C H
)
’’H I
;
’’I J
KBDoctorXMLWriter
ÿÿ 
writer
ÿÿ $
=
ÿÿ% &
new
ÿÿ' *
KBDoctorXMLWriter
ÿÿ+ <
(
ÿÿ< =

outputFile
ÿÿ= G
,
ÿÿG H
Encoding
ÿÿI Q
.
ÿÿQ R
UTF8
ÿÿR V
)
ÿÿV W
;
ÿÿW X
writer
ŸŸ 
.
ŸŸ 
	AddHeader
ŸŸ 
(
ŸŸ 
title
ŸŸ "
)
ŸŸ" #
;
ŸŸ# $
writer
⁄⁄ 
.
⁄⁄ 
AddTableHeader
⁄⁄ !
(
⁄⁄! "
new
⁄⁄" %
string
⁄⁄& ,
[
⁄⁄, -
]
⁄⁄- .
{
⁄⁄/ 0
$str
⁄⁄1 7
,
⁄⁄7 8
$str
⁄⁄9 A
,
⁄⁄A B
$str
⁄⁄C P
,
⁄⁄P Q
$str
⁄⁄R X
,
⁄⁄X Y
$str
⁄⁄Z d
,
⁄⁄d e
$str
⁄⁄f u
,
⁄⁄u v
$str⁄⁄w ç
,⁄⁄ç é
$str⁄⁄è •
}⁄⁄¶ ß
)⁄⁄ß ®
;⁄⁄® ©

KBCategory
‹‹ 
mainCategory
‹‹ #
=
‹‹$ %

KBCategory
‹‹& 0
.
‹‹0 1
Get
‹‹1 4
(
‹‹4 5
kbserv
‹‹5 ;
.
‹‹; <
CurrentModel
‹‹< H
,
‹‹H I
$str
‹‹J Y
)
‹‹Y Z
;
‹‹Z [
foreach
›› 
(
›› 
KBObject
›› 
obj
›› !
in
››" $
mainCategory
››% 1
.
››1 2

AllMembers
››2 <
)
››< =
{
ﬁﬁ 
int
ﬂﬂ 
callers
ﬂﬂ 
=
ﬂﬂ 
$num
ﬂﬂ 
;
ﬂﬂ  
foreach
‡‡ 
(
‡‡ 
EntityReference
‡‡ (
	reference
‡‡) 2
in
‡‡3 5
obj
‡‡6 9
.
‡‡9 :
GetReferencesTo
‡‡: I
(
‡‡I J
LinkType
‡‡J R
.
‡‡R S

UsedObject
‡‡S ]
)
‡‡] ^
)
‡‡^ _
{
·· 
callers
‚‚ 
=
‚‚ 
callers
‚‚ %
+
‚‚& '
$num
‚‚( )
;
‚‚) *
}
‰‰ 
string
ÁÁ 
ruleParm
ÁÁ 
=
ÁÁ  !
	Functions
ÁÁ" +
.
ÁÁ+ ,
ExtractRuleParm
ÁÁ, ;
(
ÁÁ; <
obj
ÁÁ< ?
)
ÁÁ? @
;
ÁÁ@ A
string
ËË 
enc
ËË 
=
ËË 
obj
ËË  
.
ËË  !$
GetPropertyValueString
ËË! 7
(
ËË7 8
$str
ËË8 H
)
ËËH I
;
ËËI J
writer
ÈÈ 
.
ÈÈ 
AddTableData
ÈÈ #
(
ÈÈ# $
new
ÈÈ$ '
string
ÈÈ( .
[
ÈÈ. /
]
ÈÈ/ 0
{
ÈÈ1 2
obj
ÈÈ3 6
.
ÈÈ6 7
TypeDescriptor
ÈÈ7 E
.
ÈÈE F
Name
ÈÈF J
,
ÈÈJ K
	Functions
ÈÈL U
.
ÈÈU V

linkObject
ÈÈV `
(
ÈÈ` a
obj
ÈÈa d
)
ÈÈd e
,
ÈÈe f
obj
ÈÈg j
.
ÈÈj k
Description
ÈÈk v
,
ÈÈv w
ruleParmÈÈx Ä
,ÈÈÄ Å
callersÈÈÇ â
.ÈÈâ ä
ToStringÈÈä í
(ÈÈí ì
)ÈÈì î
,ÈÈî ï
objÈÈñ ô
.ÈÈô ö&
GetPropertyValueStringÈÈö ∞
(ÈÈ∞ ±
$strÈÈ± ¿
)ÈÈ¿ ¡
,ÈÈ¡ ¬$
isGeneratedbyPatternÈÈ√ ◊
(ÈÈ◊ ÿ
objÈÈÿ €
)ÈÈ€ ‹
.ÈÈ‹ ›
ToStringÈÈ› Â
(ÈÈÂ Ê
)ÈÈÊ Á
,ÈÈÁ Ë
encÈÈÈ Ï
}ÈÈÌ Ó
)ÈÈÓ Ô
;ÈÈÔ 
}
ˆˆ 
writer
˘˘ 
.
˘˘ 
	AddFooter
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 
writer
˙˙ 
.
˙˙ 
Close
˙˙ 
(
˙˙ 
)
˙˙ 
;
˙˙ 
bool
¸¸ 
success
¸¸ 
=
¸¸ 
true
¸¸ 
;
¸¸  
output
˝˝ 
.
˝˝ 

EndSection
˝˝ 
(
˝˝ 
title
˝˝ #
,
˝˝# $
success
˝˝% ,
)
˝˝, -
;
˝˝- .
KBDoctorHelper
ˇˇ 
.
ˇˇ !
ShowKBDoctorResults
ˇˇ .
(
ˇˇ. /

outputFile
ˇˇ/ 9
)
ˇˇ9 :
;
ˇˇ: ;
}
ÅÅ 	
public
ÉÉ 
static
ÉÉ 
void
ÉÉ 
ParmWOInOut
ÉÉ &
(
ÉÉ& '
)
ÉÉ' (
{
ÑÑ 	

IKBService
ÜÜ 
kbserv
ÜÜ 
=
ÜÜ 

UIServices
ÜÜ  *
.
ÜÜ* +
KB
ÜÜ+ -
;
ÜÜ- .
IOutputService
áá 
output
áá !
=
áá" #
CommonServices
áá$ 2
.
áá2 3
Output
áá3 9
;
áá9 :
string
àà 
title
àà 
=
àà 
$str
àà V
;
ààV W
output
ää 
.
ää 
StartSection
ää 
(
ää  
title
ää  %
)
ää% &
;
ää& '
string
ãã 

outputFile
ãã 
=
ãã 
	Functions
ãã  )
.
ãã) *
CreateOutputFile
ãã* :
(
ãã: ;
kbserv
ãã; A
,
ããA B
title
ããC H
)
ããH I
;
ããI J
int
çç 
numObj
çç 
=
çç 
$num
çç 
;
çç 
KBDoctorXMLWriter
éé 
writer
éé $
=
éé% &
new
éé' *
KBDoctorXMLWriter
éé+ <
(
éé< =

outputFile
éé= G
,
ééG H
Encoding
ééI Q
.
ééQ R
UTF8
ééR V
)
ééV W
;
ééW X
writer
èè 
.
èè 
	AddHeader
èè 
(
èè 
title
èè "
)
èè" #
;
èè# $
writer
êê 
.
êê 
AddTableHeader
êê !
(
êê! "
new
êê" %
string
êê& ,
[
êê, -
]
êê- .
{
êê/ 0
$str
êê1 9
,
êê9 :
$str
êê; C
,
êêC D
$str
êêE R
,
êêR S
$str
êêT `
,
êê` a
$str
êêb m
,
êêm n
$str
êêo v
}
êêw x
)
êêx y
;
êêy z
int
íí 
objWithProblems
íí 
=
íí  !
$num
íí" #
;
íí# $
foreach
ìì 
(
ìì 
KBObject
ìì 
obj
ìì !
in
ìì" $
kbserv
ìì% +
.
ìì+ ,
CurrentModel
ìì, 8
.
ìì8 9
Objects
ìì9 @
.
ìì@ A
GetAll
ììA G
(
ììG H
)
ììH I
)
ììI J
{
îî 
ICallableObject
ïï 
callableObject
ïï  .
=
ïï/ 0
obj
ïï1 4
as
ïï5 7
ICallableObject
ïï8 G
;
ïïG H
if
óó 
(
óó 
callableObject
óó "
!=
óó# %
null
óó& *
)
óó* +
{
òò 
numObj
ôô 
+=
ôô 
$num
ôô 
;
ôô  
if
öö 
(
öö 
(
öö 
numObj
öö 
%
öö  !
$num
öö" %
)
öö% &
==
öö' )
$num
öö* +
)
öö+ ,
output
õõ 
.
õõ 
AddLine
õõ &
(
õõ& '
$str
õõ' 4
+
õõ5 6
obj
õõ7 :
.
õõ: ;
Name
õõ; ?
)
õõ? @
;
õõ@ A
foreach
úú 
(
úú 
	Signature
úú &
	signature
úú' 0
in
úú1 3
callableObject
úú4 B
.
úúB C
GetSignatures
úúC P
(
úúP Q
)
úúQ R
)
úúR S
{
ùù 
Boolean
ûû 
	someInOut
ûû  )
=
ûû* +
false
ûû, 1
;
ûû1 2
foreach
üü 
(
üü  !
	Parameter
üü! *
parm
üü+ /
in
üü0 2
	signature
üü3 <
.
üü< =

Parameters
üü= G
)
üüG H
{
†† 
if
°° 
(
°°  
parm
°°  $
.
°°$ %
Accessor
°°% -
.
°°- .
ToString
°°. 6
(
°°6 7
)
°°7 8
==
°°9 ;
$str
°°< H
)
°°H I
{
¢¢ 
	someInOut
££  )
=
££* +
true
££, 0
;
££0 1
break
§§  %
;
§§% &
}
•• 
}
¶¶ 
if
ßß 
(
ßß 
	someInOut
ßß %
)
ßß% &
{
®® 
string
©© "
ruleParm
©©# +
=
©©, -
	Functions
©©. 7
.
©©7 8
ExtractRuleParm
©©8 G
(
©©G H
obj
©©H K
)
©©K L
;
©©L M
if
™™ 
(
™™  
ruleParm
™™  (
!=
™™) +
$str
™™, .
)
™™. /
{
´´ 
int
¨¨  #

countparms
¨¨$ .
=
¨¨/ 0
ruleParm
¨¨1 9
.
¨¨9 :
Split
¨¨: ?
(
¨¨? @
new
¨¨@ C
char
¨¨D H
[
¨¨H I
]
¨¨I J
{
¨¨K L
$char
¨¨M P
}
¨¨Q R
)
¨¨R S
.
¨¨S T
Length
¨¨T Z
;
¨¨Z [
int
≠≠  #
countsemicolon
≠≠$ 2
=
≠≠3 4
ruleParm
≠≠5 =
.
≠≠= >
Split
≠≠> C
(
≠≠C D
new
≠≠D G
char
≠≠H L
[
≠≠L M
]
≠≠M N
{
≠≠O P
$char
≠≠Q T
}
≠≠U V
)
≠≠V W
.
≠≠W X
Length
≠≠X ^
-
≠≠_ `
$num
≠≠a b
;
≠≠b c
if
ÆÆ  "
(
ÆÆ# $

countparms
ÆÆ$ .
!=
ÆÆ/ 1
countsemicolon
ÆÆ2 @
)
ÆÆ@ A
{
ØØ  !
objWithProblems
∞∞$ 3
+=
∞∞4 6
$num
∞∞7 8
;
∞∞8 9
string
±±$ *
objNameLink
±±+ 6
=
±±7 8
	Functions
±±9 B
.
±±B C

linkObject
±±C M
(
±±M N
obj
±±N Q
)
±±Q R
;
±±R S 
KBObjectCollection
≥≥$ 6
objColl
≥≥7 >
=
≥≥? @
new
≥≥A D 
KBObjectCollection
≥≥E W
(
≥≥W X
)
≥≥X Y
;
≥≥Y Z
string
¥¥$ *
callTree
¥¥+ 3
=
¥¥4 5
$str
¥¥6 8
;
¥¥8 9
string
∂∂$ *
mainss
∂∂+ 1
=
∂∂2 3
$str
∂∂4 6
;
∂∂6 7
writer
∏∏$ *
.
∏∏* +
AddTableData
∏∏+ 7
(
∏∏7 8
new
∏∏8 ;
string
∏∏< B
[
∏∏B C
]
∏∏C D
{
∏∏E F
obj
∏∏G J
.
∏∏J K
Parent
∏∏K Q
.
∏∏Q R
Name
∏∏R V
,
∏∏V W
objNameLink
∏∏X c
,
∏∏c d
obj
∏∏e h
.
∏∏h i
Description
∏∏i t
,
∏∏t u
ruleParm
∏∏v ~
,
∏∏~ 
obj∏∏Ä É
.∏∏É Ñ
	Timestamp∏∏Ñ ç
.∏∏ç é
ToString∏∏é ñ
(∏∏ñ ó
)∏∏ó ò
,∏∏ò ô
mainss∏∏ö †
}∏∏° ¢
)∏∏¢ £
;∏∏£ §
}
ππ  !
}
∫∫ 
}
ªª 
}
ºº 
}
¡¡ 
}
√√ 
writer
ƒƒ 
.
ƒƒ 
AddTableData
ƒƒ 
(
ƒƒ  
new
ƒƒ  #
string
ƒƒ$ *
[
ƒƒ* +
]
ƒƒ+ ,
{
ƒƒ- .
$str
ƒƒ/ H
,
ƒƒH I
objWithProblems
ƒƒJ Y
.
ƒƒY Z
ToString
ƒƒZ b
(
ƒƒb c
)
ƒƒc d
,
ƒƒd e
$str
ƒƒf h
,
ƒƒh i
$str
ƒƒj l
}
ƒƒm n
)
ƒƒn o
;
ƒƒo p
writer
∆∆ 
.
∆∆ 
	AddFooter
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆ 
writer
«« 
.
«« 
Close
«« 
(
«« 
)
«« 
;
«« 
bool
…… 
success
…… 
=
…… 
true
…… 
;
……  
output
   
.
   

EndSection
   
(
   
title
   #
,
  # $
success
  % ,
)
  , -
;
  - .
KBDoctorHelper
ÃÃ 
.
ÃÃ !
ShowKBDoctorResults
ÃÃ .
(
ÃÃ. /

outputFile
ÃÃ/ 9
)
ÃÃ9 :
;
ÃÃ: ;
}
ÕÕ 	
public
œœ 
static
œœ 
bool
œœ 
isMain
œœ !
(
œœ! "
KBObject
œœ" *
obj
œœ+ .
)
œœ. /
{
–– 	
object
—— 
aux
—— 
=
—— 
obj
—— 
.
—— 
GetPropertyValue
—— -
(
——- .
$str
——. 6
)
——6 7
;
——7 8
return
““ 
(
““ 
(
““ 
aux
““ 
!=
““ 
null
““  
)
““  !
&&
““" $
(
““% &
aux
““& )
.
““) *
ToString
““* 2
(
““2 3
)
““3 4
==
““5 7
$str
““8 >
)
““> ?
)
““? @
;
““@ A
}
‘‘ 	
public
÷÷ 
static
÷÷ 
bool
÷÷ 
isGenerated
÷÷ &
(
÷÷& '
KBObject
÷÷' /
obj
÷÷0 3
)
÷÷3 4
{
◊◊ 	
object
ÿÿ 
aux
ÿÿ 
=
ÿÿ 
obj
ÿÿ 
.
ÿÿ 
GetPropertyValue
ÿÿ -
(
ÿÿ- .

Properties
ÿÿ. 8
.
ÿÿ8 9
TRN
ÿÿ9 <
.
ÿÿ< =
GenerateObject
ÿÿ= K
)
ÿÿK L
;
ÿÿL M
return
ŸŸ 
(
ŸŸ 
(
ŸŸ 
aux
ŸŸ 
!=
ŸŸ 
null
ŸŸ  
)
ŸŸ  !
&&
ŸŸ" $
(
ŸŸ% &
aux
ŸŸ& )
.
ŸŸ) *
ToString
ŸŸ* 2
(
ŸŸ2 3
)
ŸŸ3 4
==
ŸŸ5 7
$str
ŸŸ8 >
)
ŸŸ> ?
)
ŸŸ? @
;
ŸŸ@ A
}
€€ 	
public
›› 
static
›› 
void
›› ,
ObjectsWithParmAndCommitOnExit
›› 9
(
››9 :
)
››: ;
{
ﬁﬁ 	

IKBService
ﬂﬂ 
kbserv
ﬂﬂ 
=
ﬂﬂ 

UIServices
ﬂﬂ  *
.
ﬂﬂ* +
KB
ﬂﬂ+ -
;
ﬂﬂ- .
IOutputService
‡‡ 
output
‡‡ !
=
‡‡" #
CommonServices
‡‡$ 2
.
‡‡2 3
Output
‡‡3 9
;
‡‡9 :
bool
·· 
hasParameters
·· 
;
·· 
bool
‚‚ 
commitOnExit
‚‚ 
;
‚‚ 
string
„„ 
title
„„ 
=
„„ 
$str
„„ W
;
„„W X
string
‰‰ 
objNameLink
‰‰ 
;
‰‰ 
output
ÊÊ 
.
ÊÊ 
StartSection
ÊÊ 
(
ÊÊ  
title
ÊÊ  %
)
ÊÊ% &
;
ÊÊ& '
string
ËË 

outputFile
ËË 
=
ËË 
	Functions
ËË  )
.
ËË) *
CreateOutputFile
ËË* :
(
ËË: ;
kbserv
ËË; A
,
ËËA B
title
ËËC H
)
ËËH I
;
ËËI J
KBDoctorXMLWriter
ÍÍ 
writer
ÍÍ $
=
ÍÍ% &
new
ÍÍ' *
KBDoctorXMLWriter
ÍÍ+ <
(
ÍÍ< =

outputFile
ÍÍ= G
,
ÍÍG H
Encoding
ÍÍI Q
.
ÍÍQ R
UTF8
ÍÍR V
)
ÍÍV W
;
ÍÍW X
writer
ÎÎ 
.
ÎÎ 
	AddHeader
ÎÎ 
(
ÎÎ 
title
ÎÎ "
)
ÎÎ" #
;
ÎÎ# $
writer
ÏÏ 
.
ÏÏ 
AddTableHeader
ÏÏ !
(
ÏÏ! "
new
ÏÏ" %
string
ÏÏ& ,
[
ÏÏ, -
]
ÏÏ- .
{
ÏÏ/ 0
$str
ÏÏ1 7
,
ÏÏ7 8
$str
ÏÏ9 ?
,
ÏÏ? @
$str
ÏÏA N
,
ÏÏN O
$str
ÏÏP ^
}
ÏÏ_ `
)
ÏÏ` a
;
ÏÏa b
foreach
ÓÓ 
(
ÓÓ 
KBObject
ÓÓ 
obj
ÓÓ !
in
ÓÓ" $
kbserv
ÓÓ% +
.
ÓÓ+ ,
CurrentModel
ÓÓ, 8
.
ÓÓ8 9
Objects
ÓÓ9 @
.
ÓÓ@ A
GetAll
ÓÓA G
(
ÓÓG H
)
ÓÓH I
)
ÓÓI J
{
ÔÔ 
ICallableObject
 
callableObject
  .
=
/ 0
obj
1 4
as
5 7
ICallableObject
8 G
;
G H
if
ÒÒ 
(
ÒÒ 
callableObject
ÒÒ "
!=
ÒÒ# %
null
ÒÒ& *
)
ÒÒ* +
{
ÚÚ 
output
ÛÛ 
.
ÛÛ 
AddLine
ÛÛ "
(
ÛÛ" #
$str
ÛÛ# 0
+
ÛÛ1 2
obj
ÛÛ3 6
.
ÛÛ6 7
TypeDescriptor
ÛÛ7 E
.
ÛÛE F
Name
ÛÛF J
+
ÛÛK L
$str
ÛÛM P
+
ÛÛQ R
obj
ÛÛS V
.
ÛÛV W
Name
ÛÛW [
)
ÛÛ[ \
;
ÛÛ\ ]
hasParameters
ıı !
=
ıı" #
false
ıı$ )
;
ıı) *
foreach
ˆˆ 
(
ˆˆ 
	Signature
ˆˆ &
	signature
ˆˆ' 0
in
ˆˆ1 3
callableObject
ˆˆ4 B
.
ˆˆB C
GetSignatures
ˆˆC P
(
ˆˆP Q
)
ˆˆQ R
)
ˆˆR S
{
˜˜ 
foreach
¯¯ 
(
¯¯  !
	Parameter
¯¯! *
parm
¯¯+ /
in
¯¯0 2
	signature
¯¯3 <
.
¯¯< =

Parameters
¯¯= G
)
¯¯G H
{
˘˘ 
hasParameters
˙˙ )
=
˙˙* +
true
˙˙, 0
;
˙˙0 1
}
˚˚ 
}
¸¸ 
if
˛˛ 
(
˛˛ 
hasParameters
˛˛ %
)
˛˛% &
{
ˇˇ 
object
ÄÄ 
aux
ÄÄ "
=
ÄÄ# $
obj
ÄÄ% (
.
ÄÄ( )
GetPropertyValue
ÄÄ) 9
(
ÄÄ9 :
$str
ÄÄ: H
)
ÄÄH I
;
ÄÄI J
commitOnExit
ÅÅ $
=
ÅÅ% &
(
ÅÅ' (
(
ÅÅ( )
aux
ÅÅ) ,
!=
ÅÅ- /
null
ÅÅ0 4
)
ÅÅ4 5
&&
ÅÅ6 8
(
ÅÅ9 :
aux
ÅÅ: =
.
ÅÅ= >
ToString
ÅÅ> F
(
ÅÅF G
)
ÅÅG H
==
ÅÅI K
$str
ÅÅL Q
)
ÅÅQ R
)
ÅÅR S
;
ÅÅS T
if
ÉÉ 
(
ÉÉ 
commitOnExit
ÉÉ (
)
ÉÉ( )
{
ÑÑ 
string
ÖÖ "
isGeneratedstr
ÖÖ# 1
=
ÖÖ2 3
(
ÖÖ4 5
isGenerated
ÖÖ5 @
(
ÖÖ@ A
obj
ÖÖA D
)
ÖÖD E
?
ÖÖF G
$str
ÖÖH M
:
ÖÖN O
string
ÖÖP V
.
ÖÖV W
Empty
ÖÖW \
)
ÖÖ\ ]
;
ÖÖ] ^
objNameLink
ÜÜ '
=
ÜÜ( )
	Functions
ÜÜ* 3
.
ÜÜ3 4

linkObject
ÜÜ4 >
(
ÜÜ> ?
obj
ÜÜ? B
)
ÜÜB C
;
ÜÜC D
writer
áá "
.
áá" #
AddTableData
áá# /
(
áá/ 0
new
áá0 3
string
áá4 :
[
áá: ;
]
áá; <
{
áá= >
obj
áá? B
.
ááB C
TypeDescriptor
ááC Q
.
ááQ R
Name
ááR V
,
ááV W
objNameLink
ááX c
,
áác d
obj
ááe h
.
ááh i
Description
áái t
,
áát u
isGeneratedstrááv Ñ
}ááÖ Ü
)ááÜ á
;ááá à
}
àà 
}
ââ 
}
ää 
}
ãã 
writer
çç 
.
çç 
	AddFooter
çç 
(
çç 
)
çç 
;
çç 
writer
éé 
.
éé 
Close
éé 
(
éé 
)
éé 
;
éé 
KBDoctorHelper
êê 
.
êê !
ShowKBDoctorResults
êê .
(
êê. /

outputFile
êê/ 9
)
êê9 :
;
êê: ;
bool
íí 
success
íí 
=
íí 
true
íí 
;
íí  
output
ìì 
.
ìì 

EndSection
ìì 
(
ìì 
title
ìì #
,
ìì# $
success
ìì% ,
)
ìì, -
;
ìì- .
}
ññ 	
public
òò 
static
òò 
void
òò 
ObjetNotCalled
òò )
(
òò) *
)
òò* +
{
ôô 	

IKBService
öö 
kbserv
öö 
=
öö 

UIServices
öö  *
.
öö* +
KB
öö+ -
;
öö- .
IOutputService
õõ 
output
õõ !
=
õõ" #
CommonServices
õõ$ 2
.
õõ2 3
Output
õõ3 9
;
õõ9 :
string
úú 
title
úú 
=
úú 
$str
úú >
;
úú> ?
string
ùù 

outputFile
ùù 
=
ùù 
	Functions
ùù  )
.
ùù) *
CreateOutputFile
ùù* :
(
ùù: ;
kbserv
ùù; A
,
ùùA B
title
ùùC H
)
ùùH I
;
ùùI J
output
†† 
.
†† 
StartSection
†† 
(
††  
title
††  %
)
††% &
;
††& '
KBDoctorXMLWriter
¢¢ 
writer
¢¢ $
=
¢¢% &
new
¢¢' *
KBDoctorXMLWriter
¢¢+ <
(
¢¢< =

outputFile
¢¢= G
,
¢¢G H
Encoding
¢¢I Q
.
¢¢Q R
UTF8
¢¢R V
)
¢¢V W
;
¢¢W X
writer
££ 
.
££ 
	AddHeader
££ 
(
££ 
title
££ "
)
££" #
;
££# $
writer
§§ 
.
§§ 
AddTableHeader
§§ !
(
§§! "
new
§§" %
string
§§& ,
[
§§, -
]
§§- .
{
§§/ 0
$str
§§1 7
,
§§7 8
$str
§§9 A
,
§§A B
$str
§§C K
,
§§K L
$str
§§M \
,
§§\ ]
$str
§§^ g
}
§§h i
)
§§i j
;
§§j k
int
•• 
callers
•• 
;
•• 
string
¶¶ 
remove
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
bool
ßß 
	continuar
ßß 
=
ßß 
true
ßß !
;
ßß! "
do
©© 
{
™™ 
	continuar
´´ 
=
´´ 
false
´´ !
;
´´! "
foreach
¨¨ 
(
¨¨ 
KBObject
¨¨ !
obj
¨¨" %
in
¨¨& (
kbserv
¨¨) /
.
¨¨/ 0
CurrentModel
¨¨0 <
.
¨¨< =
Objects
¨¨= D
.
¨¨D E
GetAll
¨¨E K
(
¨¨K L
)
¨¨L M
)
¨¨M N
{
≠≠ 
ICallableObject
ÆÆ #
callableObject
ÆÆ$ 2
=
ÆÆ3 4
obj
ÆÆ5 8
as
ÆÆ9 ;
ICallableObject
ÆÆ< K
;
ÆÆK L
if
ØØ 
(
ØØ 
(
ØØ 
callableObject
ØØ '
!=
ØØ( *
null
ØØ+ /
)
ØØ/ 0
|
ØØ1 2
(
ØØ3 4
obj
ØØ4 7
is
ØØ8 :
Artech
ØØ; A
.
ØØA B
Genexus
ØØB I
.
ØØI J
Common
ØØJ P
.
ØØP Q
Objects
ØØQ X
.
ØØX Y
	Attribute
ØØY b
)
ØØb c
|
∞∞ 
obj
∞∞ 
is
∞∞  
Artech
∞∞! '
.
∞∞' (
Genexus
∞∞( /
.
∞∞/ 0
Common
∞∞0 6
.
∞∞6 7
Objects
∞∞7 >
.
∞∞> ?
Table
∞∞? D
|
∞∞E F
obj
∞∞G J
is
∞∞K M
Domain
∞∞N T
|
∞∞U V
obj
∞∞W Z
is
∞∞[ ]
ExternalObject
∞∞^ l
|
∞∞m n
obj
∞∞o r
is
∞∞s u
Image
∞∞v {
|
∞∞| }
obj∞∞~ Å
is∞∞Ç Ñ
SDT∞∞Ö à
)∞∞à â
{
±± 
callers
≤≤ 
=
≤≤  !
$num
≤≤" #
;
≤≤# $
foreach
≥≥ 
(
≥≥  !
EntityReference
≥≥! 0
	reference
≥≥1 :
in
≥≥; =
obj
≥≥> A
.
≥≥A B
GetReferencesTo
≥≥B Q
(
≥≥Q R
LinkType
≥≥R Z
.
≥≥Z [

UsedObject
≥≥[ e
)
≥≥e f
)
≥≥f g
{
¥¥ 
callers
µµ #
=
µµ$ %
callers
µµ& -
+
µµ. /
$num
µµ0 1
;
µµ1 2
}
∂∂ 
if
∏∏ 
(
∏∏ 
callers
∏∏ #
==
∏∏$ &
$num
∏∏' (
)
∏∏( )
{
ππ 
if
∫∫ 
(
∫∫  
(
∫∫  !
obj
∫∫! $
is
∫∫% '
Transaction
∫∫( 3
)
∫∫3 4
|
∫∫5 6
obj
∫∫7 :
is
∫∫; =
Table
∫∫> C
|
∫∫D E
obj
∫∫F I
is
∫∫J L
Artech
∫∫M S
.
∫∫S T
Genexus
∫∫T [
.
∫∫[ \
Common
∫∫\ b
.
∫∫b c
Objects
∫∫c j
.
∫∫j k
	Attribute
∫∫k t
|
∫∫u v
obj
∫∫w z
is
∫∫{ }
Domain∫∫~ Ñ
|∫∫Ö Ü
obj∫∫á ä
is∫∫ã ç
Image∫∫é ì
)∫∫ì î
{
ªª 
remove
ºº  &
=
ºº' (
$str
ºº) +
;
ºº+ ,
}
ΩΩ 
else
ææ  
{
øø 
remove
¿¿  &
=
¿¿' (
$str
¿¿) z
+
¿¿{ |
obj¿¿} Ä
.¿¿Ä Å
Guid¿¿Å Ö
.¿¿Ö Ü
ToString¿¿Ü é
(¿¿é è
)¿¿è ê
+¿¿ë í
$str¿¿ì ¢
;¿¿¢ £
}
¡¡ 
string
¬¬ "
objNameLink
¬¬# .
=
¬¬/ 0
	Functions
¬¬1 :
.
¬¬: ;

linkObject
¬¬; E
(
¬¬E F
obj
¬¬F I
)
¬¬I J
;
¬¬J K
string
√√ "
	isMainstr
√√# ,
=
√√- .
(
√√/ 0
isMain
√√0 6
(
√√6 7
obj
√√7 :
)
√√: ;
?
√√< =
$str
√√> D
:
√√E F
string
√√G M
.
√√M N
Empty
√√N S
)
√√S T
;
√√T U
string
ƒƒ "
isGeneratedstr
ƒƒ# 1
=
ƒƒ2 3
(
ƒƒ4 5
isGenerated
ƒƒ5 @
(
ƒƒ@ A
obj
ƒƒA D
)
ƒƒD E
?
ƒƒF G
$str
ƒƒH M
:
ƒƒN O
string
ƒƒP V
.
ƒƒV W
Empty
ƒƒW \
)
ƒƒ\ ]
;
ƒƒ] ^
if
≈≈ 
(
≈≈  
!
≈≈  !
isMain
≈≈! '
(
≈≈' (
obj
≈≈( +
)
≈≈+ ,
)
≈≈, -
{
∆∆ 
if
»»  "
(
»»# $
remove
»»$ *
!=
»»+ -
$str
»». 0
)
»»0 1
{
……  !
try
  $ '
{
ÀÀ$ %
obj
ÃÃ( +
.
ÃÃ+ ,
Delete
ÃÃ, 2
(
ÃÃ2 3
)
ÃÃ3 4
;
ÃÃ4 5
output
ÕÕ( .
.
ÕÕ. /
AddLine
ÕÕ/ 6
(
ÕÕ6 7
$str
ÕÕ7 D
+
ÕÕE F
obj
ÕÕG J
.
ÕÕJ K
Name
ÕÕK O
)
ÕÕO P
;
ÕÕP Q
remove
ŒŒ( .
=
ŒŒ/ 0
$str
ŒŒ1 ;
;
ŒŒ; <
objNameLink
œœ( 3
=
œœ4 5
obj
œœ6 9
.
œœ9 :
Name
œœ: >
;
œœ> ?
	continuar
––( 1
=
––2 3
true
––4 8
;
––8 9
}
——$ %
catch
““$ )
(
““* +
	Exception
““+ 4
e
““5 6
)
““6 7
{
““8 9
}
““: ;
;
““; <
}
‘‘  !
writer
’’  &
.
’’& '
AddTableData
’’' 3
(
’’3 4
new
’’4 7
string
’’8 >
[
’’> ?
]
’’? @
{
’’A B
obj
’’C F
.
’’F G
TypeDescriptor
’’G U
.
’’U V
Name
’’V Z
,
’’Z [
objNameLink
’’\ g
,
’’g h
remove
’’i o
,
’’o p
isGeneratedstr
’’q 
,’’ Ä
	isMainstr’’Å ä
}’’ã å
)’’å ç
;’’ç é
}
÷÷ 
if
◊◊ 
(
◊◊  
(
◊◊  !
obj
◊◊! $
is
◊◊% '
Transaction
◊◊( 3
)
◊◊3 4
&&
◊◊5 7
(
◊◊8 9
obj
◊◊9 <
.
◊◊< =
GetPropertyValue
◊◊= M
<
◊◊M N
bool
◊◊N R
>
◊◊R S
(
◊◊S T

Properties
◊◊T ^
.
◊◊^ _
TRN
◊◊_ b
.
◊◊b c
GenerateObject
◊◊c q
)
◊◊q r
)
◊◊r s
)
◊◊s t
{
ÿÿ 
try
ŸŸ  #
{
⁄⁄  !
obj
€€$ '
.
€€' (
SetPropertyValue
€€( 8
(
€€8 9

Properties
€€9 C
.
€€C D
TRN
€€D G
.
€€G H
GenerateObject
€€H V
,
€€V W
false
€€X ]
)
€€] ^
;
€€^ _
CleanKBHelper
‹‹$ 1
.
‹‹1 2
CleanObject
‹‹2 =
(
‹‹= >
obj
‹‹> A
,
‹‹A B
output
‹‹C I
)
‹‹I J
;
‹‹J K
}
››  !
catch
ﬁﬁ  %
(
ﬁﬁ& '
	Exception
ﬁﬁ' 0
e
ﬁﬁ1 2
)
ﬁﬁ2 3
{
ﬁﬁ4 5
}
ﬁﬁ6 7
;
ﬁﬁ7 8
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
}
‰‰ 
while
‰‰ 
(
‰‰ 
	continuar
‰‰ 
)
‰‰ 
;
‰‰  
writer
ÊÊ 
.
ÊÊ 
	AddFooter
ÊÊ 
(
ÊÊ 
)
ÊÊ 
;
ÊÊ 
writer
ÁÁ 
.
ÁÁ 
Close
ÁÁ 
(
ÁÁ 
)
ÁÁ 
;
ÁÁ 
KBDoctorHelper
ÈÈ 
.
ÈÈ !
ShowKBDoctorResults
ÈÈ .
(
ÈÈ. /

outputFile
ÈÈ/ 9
)
ÈÈ9 :
;
ÈÈ: ;
bool
ÍÍ 
success
ÍÍ 
=
ÍÍ 
true
ÍÍ 
;
ÍÍ  
output
ÎÎ 
.
ÎÎ 

EndSection
ÎÎ 
(
ÎÎ 
title
ÎÎ #
,
ÎÎ# $
success
ÎÎ% ,
)
ÎÎ, -
;
ÎÎ- .
}
ÌÌ 	
public
ÔÔ 
static
ÔÔ 
void
ÔÔ #
RemovableTransactions
ÔÔ 0
(
ÔÔ0 1
)
ÔÔ1 2
{
 	

IKBService
ÒÒ 
kbserv
ÒÒ 
=
ÒÒ 

UIServices
ÒÒ  *
.
ÒÒ* +
KB
ÒÒ+ -
;
ÒÒ- .
IOutputService
ÚÚ 
output
ÚÚ !
=
ÚÚ" #
CommonServices
ÚÚ$ 2
.
ÚÚ2 3
Output
ÚÚ3 9
;
ÚÚ9 :
string
ÙÙ 
title
ÙÙ 
=
ÙÙ 
$str
ÙÙ >
;
ÙÙ> ?
string
ıı 

outputFile
ıı 
=
ıı 
	Functions
ıı  )
.
ıı) *
CreateOutputFile
ıı* :
(
ıı: ;
kbserv
ıı; A
,
ııA B
title
ııC H
)
ııH I
;
ııI J
output
¯¯ 
.
¯¯ 
StartSection
¯¯ 
(
¯¯  
title
¯¯  %
)
¯¯% &
;
¯¯& '
KBDoctorXMLWriter
˚˚ 
writer
˚˚ $
=
˚˚% &
new
˚˚' *
KBDoctorXMLWriter
˚˚+ <
(
˚˚< =

outputFile
˚˚= G
,
˚˚G H
Encoding
˚˚I Q
.
˚˚Q R
UTF8
˚˚R V
)
˚˚V W
;
˚˚W X
writer
¸¸ 
.
¸¸ 
	AddHeader
¸¸ 
(
¸¸ 
title
¸¸ "
)
¸¸" #
;
¸¸# $
writer
˝˝ 
.
˝˝ 
AddTableHeader
˝˝ !
(
˝˝! "
new
˝˝" %
string
˝˝& ,
[
˝˝, -
]
˝˝- .
{
˝˝/ 0
$str
˝˝1 8
,
˝˝8 9
$str
˝˝: B
,
˝˝B C
$str
˝˝D L
,
˝˝L M
$str
˝˝N ]
,
˝˝] ^
$str
˝˝_ h
}
˝˝i j
)
˝˝j k
;
˝˝k l
string
ˇˇ 
remove
ˇˇ 
=
ˇˇ 
$str
ˇˇ 
;
ˇˇ 
foreach
ÅÅ 
(
ÅÅ 
Transaction
ÅÅ  
trn
ÅÅ! $
in
ÅÅ% '
Transaction
ÅÅ( 3
.
ÅÅ3 4
GetAll
ÅÅ4 :
(
ÅÅ: ;
kbserv
ÅÅ; A
.
ÅÅA B
CurrentModel
ÅÅB N
)
ÅÅN O
)
ÅÅO P
{
ÇÇ 
if
ÑÑ 
(
ÑÑ 
!
ÑÑ 
isGenerated
ÑÑ  
(
ÑÑ  !
trn
ÑÑ! $
)
ÑÑ$ %
)
ÑÑ% &
{
ÖÖ 
output
ÜÜ 
.
ÜÜ 
AddLine
ÜÜ "
(
ÜÜ" #
$str
ÜÜ# 2
+
ÜÜ3 4
trn
ÜÜ5 8
.
ÜÜ8 9
Name
ÜÜ9 =
)
ÜÜ= >
;
ÜÜ> ?
bool
áá 
isRemovable
áá $
,
áá$ %$
isRemovableWithWarning
áá& <
;
áá< =
string
àà 
lstTrns
àà "
,
àà" #
tblName
àà$ +
;
àà+ , 
KBObjectCollection
ââ &
attExclusive
ââ' 3
;
ââ3 4
CheckIfRemovable
ãã $
(
ãã$ %
output
ãã% +
,
ãã+ ,
writer
ãã- 3
,
ãã3 4
trn
ãã5 8
,
ãã8 9
out
ãã: =
isRemovable
ãã> I
,
ããI J
out
ããK N$
isRemovableWithWarning
ããO e
,
ããe f
out
ããg j
lstTrns
ããk r
,
ããr s
out
ããt w
attExclusiveããx Ñ
)ããÑ Ö
;ããÖ Ü
if
çç 
(
çç 
isRemovable
çç #
)
çç# $
{
éé 
output
èè 
.
èè 
AddLine
èè &
(
èè& '
$str
èè' 6
+
èè7 8
trn
èè9 <
.
èè< =
Name
èè= A
+
èèB C
$str
èèD Q
)
èèQ R
;
èèR S
remove
êê 
=
êê  
$str
êê! r
+
êês t
trn
êêu x
.
êêx y
Guid
êêy }
.
êê} ~
ToStringêê~ Ü
(êêÜ á
)êêá à
+êêâ ä
$strêêã ö
;êêö õ
writer
ëë 
.
ëë 
AddTableData
ëë +
(
ëë+ ,
new
ëë, /
string
ëë0 6
[
ëë6 7
]
ëë7 8
{
ëë9 :
$str
ëë; =
,
ëë= >
	Functions
ëë? H
.
ëëH I

linkObject
ëëI S
(
ëëS T
trn
ëëT W
)
ëëW X
,
ëëX Y
remove
ëëZ `
,
ëë` a
trn
ëëb e
.
ëëe f
Description
ëëf q
,
ëëq r
$str
ëës u
}
ëëv w
)
ëëw x
;
ëëx y
}
íí 
else
ìì 
if
îî 
(
îî $
isRemovableWithWarning
îî 2
)
îî2 3
{
ññ 
output
óó 
.
óó 
AddLine
óó &
(
óó& '
$str
óó' 6
+
óó7 8
trn
óó9 <
.
óó< =
Name
óó= A
+
óóB C
$str
óóD ^
)
óó^ _
;
óó_ `
remove
òò 
=
òò  
$str
òò! r
+
òòs t
trn
òòu x
.
òòx y
Guid
òòy }
.
òò} ~
ToStringòò~ Ü
(òòÜ á
)òòá à
+òòâ ä
$stròòã ö
;òòö õ
writer
ôô 
.
ôô 
AddTableData
ôô +
(
ôô+ ,
new
ôô, /
string
ôô0 6
[
ôô6 7
]
ôô7 8
{
ôô9 :
$str
ôô; =
,
ôô= >
	Functions
ôô? H
.
ôôH I

linkObject
ôôI S
(
ôôS T
trn
ôôT W
)
ôôW X
,
ôôX Y
remove
ôôZ `
,
ôô` a
trn
ôôb e
.
ôôe f
Description
ôôf q
,
ôôq r
lstTrns
ôôs z
+
ôô{ |
$strôô} å
}ôôç é
)ôôé è
;ôôè ê
}
öö 
else
õõ 
{
úú 
if
ùù 
(
ùù 
attExclusive
ùù (
.
ùù( )
Count
ùù) .
>
ùù/ 0
$num
ùù1 2
)
ùù2 3
{
ûû 
string
üü "
lstAtt
üü# )
=
üü* +
$str
üü, .
;
üü. /
foreach
†† #
(
††$ %
Artech
††% +
.
††+ ,
Genexus
††, 3
.
††3 4
Common
††4 :
.
††: ;
Objects
††; B
.
††B C
	Attribute
††C L
a
††M N
in
††O Q
attExclusive
††R ^
)
††^ _
{
°° 
lstAtt
¢¢  &
=
¢¢' (
	Functions
¢¢) 2
.
¢¢2 3

linkObject
¢¢3 =
(
¢¢= >
a
¢¢> ?
)
¢¢? @
+
¢¢A B
$str
¢¢C F
;
¢¢F G
}
££ 
writer
•• "
.
••" #
AddTableData
••# /
(
••/ 0
new
••0 3
string
••4 :
[
••: ;
]
••; <
{
••= >
$str
••? A
,
••A B
	Functions
••C L
.
••L M

linkObject
••M W
(
••W X
trn
••X [
)
••[ \
,
••\ ]
$str
••^ u
+
••v w
lstAtt
••x ~
,
••~ 
trn••Ä É
.••É Ñ
Description••Ñ è
,••è ê
$str••ë †
}••° ¢
)••¢ £
;••£ §
}
¶¶ 
}
ßß 
}
©© 
}
´´ 
writer
¨¨ 
.
¨¨ 
	AddFooter
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
writer
≠≠ 
.
≠≠ 
Close
≠≠ 
(
≠≠ 
)
≠≠ 
;
≠≠ 
KBDoctorHelper
ØØ 
.
ØØ !
ShowKBDoctorResults
ØØ .
(
ØØ. /

outputFile
ØØ/ 9
)
ØØ9 :
;
ØØ: ;
bool
∞∞ 
success
∞∞ 
=
∞∞ 
true
∞∞ 
;
∞∞  
output
±± 
.
±± 

EndSection
±± 
(
±± 
title
±± #
,
±±# $
success
±±% ,
)
±±, -
;
±±- .
}
≤≤ 	
private
¥¥ 
static
¥¥ 
void
¥¥ 
CheckIfRemovable
¥¥ ,
(
¥¥, -
IOutputService
¥¥- ;
output
¥¥< B
,
¥¥B C
KBDoctorXMLWriter
¥¥D U
writer
¥¥V \
,
¥¥\ ]
Transaction
¥¥^ i
trn
¥¥j m
,
¥¥m n
out
¥¥o r
bool
¥¥s w
isRemovable¥¥x É
,¥¥É Ñ
out¥¥Ö à
bool¥¥â ç&
isRemovableWithWarning¥¥é §
,¥¥§ •
out¥¥¶ ©
string¥¥™ ∞
lstTrns¥¥± ∏
,¥¥∏ π
out¥¥∫ Ω"
KBObjectCollection¥¥æ –
attExclusive¥¥— ›
)¥¥› ﬁ
{
µµ 	
isRemovable
∂∂ 
=
∂∂ 
true
∂∂ 
;
∂∂ $
isRemovableWithWarning
∑∑ "
=
∑∑# $
true
∑∑% )
;
∑∑) *
lstTrns
∏∏ 
=
∏∏ 
$str
∏∏ 
;
∏∏ 
attExclusive
ππ 
=
ππ 
new
ππ  
KBObjectCollection
ππ 1
(
ππ1 2
)
ππ2 3
;
ππ3 4
foreach
ªª 
(
ªª 
TransactionLevel
ªª %
LVL
ªª& )
in
ªª* ,
trn
ªª- 0
.
ªª0 1
	Structure
ªª1 :
.
ªª: ;
	GetLevels
ªª; D
(
ªªD E
)
ªªE F
)
ªªF G
{
ºº 
bool
ΩΩ 
isLevelRemovable
ΩΩ %
=
ΩΩ& '
true
ΩΩ( ,
;
ΩΩ, -
Table
øø 
TBL
øø 
=
øø 
LVL
øø 
.
øø  
AssociatedTable
øø  /
;
øø/ 0
string
¿¿ 
tblName
¿¿ 
=
¿¿  
TBL
¿¿! $
.
¿¿$ %
Name
¿¿% )
;
¿¿) * 
KBObjectCollection
¬¬ "
attLvl
¬¬# )
=
¬¬* +
new
¬¬, / 
KBObjectCollection
¬¬0 B
(
¬¬B C
)
¬¬C D
;
¬¬D E
attLvl
√√ 
=
√√ 1
#AttributesFromGeneratedTransactions
√√ <
(
√√< =
TBL
√√= @
)
√√@ A
;
√√A B 
KBObjectCollection
≈≈ "
	attLvlAll
≈≈# ,
=
≈≈- .
new
≈≈/ 2 
KBObjectCollection
≈≈3 E
(
≈≈E F
)
≈≈F G
;
≈≈G H
	attLvlAll
«« 
=
«« 4
&AttributesFromAllTransactionsExceptOne
«« B
(
««B C
TBL
««C F
,
««F G
trn
««H K
,
««K L
out
««M P
lstTrns
««Q X
)
««X Y
;
««Y Z
foreach
…… 
(
…… 
Artech
…… 
.
……  
Genexus
……  '
.
……' (
Common
……( .
.
……. /
Objects
……/ 6
.
……6 7
	Attribute
……7 @
a
……A B
in
……C E
LVL
……F I
.
……I J
	Structure
……J S
.
……S T
GetAttributes
……T a
(
……a b
)
……b c
)
……c d
{
   
if
ÕÕ 
(
ÕÕ 
!
ÕÕ 
attLvl
ÕÕ 
.
ÕÕ  
Contains
ÕÕ  (
(
ÕÕ( )
a
ÕÕ) *
)
ÕÕ* +
)
ÕÕ+ ,
{
ŒŒ 
output
œœ 
.
œœ 
AddLine
œœ &
(
œœ& '
$str
œœ' 5
+
œœ6 7
trn
œœ8 ;
.
œœ; <
Name
œœ< @
+
œœA B
$str
œœC L
+
œœM N
tblName
œœO V
+
œœW X
$str
œœY `
+
œœa b
LVL
œœc f
.
œœf g
Name
œœg k
+
œœl m
$str
œœn {
+
–– 
a
–– 
.
––  
Name
––  $
+
––% &
$str
––' J
)
––J K
;
––K L
isRemovable
—— #
=
——$ %
false
——& +
;
——+ ,
isLevelRemovable
““ (
=
““) *
false
““+ 0
;
““0 1
}
”” 
if
’’ 
(
’’ 
!
’’ 
	attLvlAll
’’ "
.
’’" #
Contains
’’# +
(
’’+ ,
a
’’, -
)
’’- .
)
’’. /
{
÷÷ 
output
◊◊ 
.
◊◊ 
AddLine
◊◊ &
(
◊◊& '
$str
◊◊' 5
+
◊◊6 7
trn
◊◊8 ;
.
◊◊; <
Name
◊◊< @
+
◊◊A B
$str
◊◊C L
+
◊◊M N
tblName
◊◊O V
+
◊◊W X
$str
◊◊Y `
+
◊◊a b
LVL
◊◊c f
.
◊◊f g
Name
◊◊g k
+
◊◊l m
$str
◊◊n {
+
ÿÿ 
a
ÿÿ 
.
ÿÿ  
Name
ÿÿ  $
+
ÿÿ% &
$str
ÿÿ' F
)
ÿÿF G
;
ÿÿG H$
isRemovableWithWarning
ŸŸ .
=
ŸŸ/ 0
false
ŸŸ1 6
;
ŸŸ6 7
isLevelRemovable
⁄⁄ (
=
⁄⁄) *
false
⁄⁄+ 0
;
⁄⁄0 1
attExclusive
€€ $
.
€€$ %
Add
€€% (
(
€€( )
a
€€) *
)
€€* +
;
€€+ ,
}
‹‹ 
}
·· 
if
‚‚ 
(
‚‚ 
isLevelRemovable
‚‚ $
)
‚‚$ %
writer
„„ 
.
„„ 
AddTableData
„„ '
(
„„' (
new
„„( +
string
„„, 2
[
„„2 3
]
„„3 4
{
„„5 6
tblName
„„7 >
,
„„> ?
	Functions
„„@ I
.
„„I J

linkObject
„„J T
(
„„T U
trn
„„U X
)
„„X Y
,
„„Y Z
LVL
„„[ ^
.
„„^ _
Name
„„_ c
,
„„c d
trn
„„e h
.
„„h i
Description
„„i t
,
„„t u
$str„„v á
}„„à â
)„„â ä
;„„ä ã
}
ÂÂ 
}
ÊÊ 	
internal
ËË 
static
ËË 
void
ËË  
ChangeCommitOnExit
ËË /
(
ËË/ 0
)
ËË0 1
{
ÈÈ 	

IKBService
ÎÎ 
kbserv
ÎÎ 
=
ÎÎ 

UIServices
ÎÎ  *
.
ÎÎ* +
KB
ÎÎ+ -
;
ÎÎ- .
IOutputService
ÏÏ 
output
ÏÏ !
=
ÏÏ" #
CommonServices
ÏÏ$ 2
.
ÏÏ2 3
Output
ÏÏ3 9
;
ÏÏ9 :
string
ÌÌ 
title
ÌÌ 
=
ÌÌ 
$str
ÌÌ D
;
ÌÌD E
output
ÔÔ 
.
ÔÔ 
StartSection
ÔÔ 
(
ÔÔ  
title
ÔÔ  %
)
ÔÔ% &
;
ÔÔ& '
string
 

outputFile
 
=
 
	Functions
  )
.
) *
CreateOutputFile
* :
(
: ;
kbserv
; A
,
A B
title
C H
)
H I
;
I J
KBDoctorXMLWriter
ÚÚ 
writer
ÚÚ $
=
ÚÚ% &
new
ÚÚ' *
KBDoctorXMLWriter
ÚÚ+ <
(
ÚÚ< =

outputFile
ÚÚ= G
,
ÚÚG H
Encoding
ÚÚI Q
.
ÚÚQ R
UTF8
ÚÚR V
)
ÚÚV W
;
ÚÚW X
writer
ıı 
.
ıı 
	AddHeader
ıı 
(
ıı 
title
ıı "
)
ıı" #
;
ıı# $
writer
ˆˆ 
.
ˆˆ 
AddTableHeader
ˆˆ !
(
ˆˆ! "
new
ˆˆ" %
string
ˆˆ& ,
[
ˆˆ, -
]
ˆˆ- .
{
ˆˆ/ 0
$str
ˆˆ1 9
,
ˆˆ9 :
$str
ˆˆ; A
,
ˆˆA B
$str
ˆˆC P
,
ˆˆP Q
$str
ˆˆR b
,
ˆˆb c
$str
ˆˆd p
,
ˆˆp q
$strˆˆr Ñ
,ˆˆÑ Ö
$strˆˆÜ ë
,ˆˆë í
$strˆˆì †
}ˆˆ° ¢
)ˆˆ¢ £
;ˆˆ£ §
string
¯¯ 
commitOnExit
¯¯ 
=
¯¯  !
$str
¯¯" $
;
¯¯$ %
string
˘˘ 
commitInSource
˘˘ !
=
˘˘" #
$str
˘˘$ &
;
˘˘& '
string
˙˙  
UpdateInsertDelete
˙˙ %
=
˙˙& '
$str
˙˙( *
;
˙˙* +
foreach
˚˚ 
(
˚˚ 
KBObject
˚˚ 
objRef
˚˚ $
in
˚˚% '
kbserv
˚˚( .
.
˚˚. /
CurrentModel
˚˚/ ;
.
˚˚; <
Objects
˚˚< C
.
˚˚C D
GetAll
˚˚D J
(
˚˚J K
)
˚˚K L
)
˚˚L M
{
¸¸ 
if
˝˝ 
(
˝˝ 
objRef
˝˝ 
is
˝˝ 
	Procedure
˝˝ '
)
˝˝' (
{
˛˛ 
object
ˇˇ 
aux
ˇˇ 
=
ˇˇ  
objRef
ˇˇ! '
.
ˇˇ' (
GetPropertyValue
ˇˇ( 8
(
ˇˇ8 9
$str
ˇˇ9 G
)
ˇˇG H
;
ˇˇH I
if
ÄÄ 
(
ÄÄ 
aux
ÄÄ 
!=
ÄÄ 
null
ÄÄ #
)
ÄÄ# $
{
ÅÅ 
commitOnExit
ÇÇ $
=
ÇÇ% &
aux
ÇÇ' *
.
ÇÇ* +
ToString
ÇÇ+ 3
(
ÇÇ3 4
)
ÇÇ4 5
==
ÇÇ6 8
$str
ÇÇ9 >
?
ÇÇ? @
$str
ÇÇA F
:
ÇÇG H
$str
ÇÇI L
;
ÇÇL M
}
ÑÑ  
UpdateInsertDelete
ÖÖ &
=
ÖÖ' (
CleanKBHelper
ÖÖ) 6
.
ÖÖ6 7
ObjectUpdateDB
ÖÖ7 E
(
ÖÖE F
objRef
ÖÖF L
)
ÖÖL M
?
ÖÖN O
$str
ÖÖP U
:
ÖÖV W
$str
ÖÖX Z
;
ÖÖZ [
	Procedure
áá 
prc
áá !
=
áá" #
(
áá$ %
	Procedure
áá% .
)
áá. /
objRef
áá/ 5
;
áá5 6
if
àà 
(
àà 
	Functions
àà !
.
àà! "
ExtractComments
àà" 1
(
àà1 2
prc
àà2 5
.
àà5 6
ProcedurePart
àà6 C
.
ààC D
Source
ààD J
.
ààJ K
ToString
ààK S
(
ààS T
)
ààT U
.
ààU V
ToUpper
ààV ]
(
àà] ^
)
àà^ _
)
àà_ `
.
àà` a
Contains
ààa i
(
àài j
$str
ààj r
)
ààr s
)
ààs t
commitInSource
ââ &
=
ââ' (
$str
ââ) /
;
ââ/ 0
else
ää 
commitInSource
ãã &
=
ãã' (
$str
ãã) +
;
ãã+ ,
if
çç 
(
çç  
UpdateInsertDelete
çç *
==
çç+ -
$str
çç. 0
&
çç1 2
commitOnExit
çç3 ?
==
çç@ B
$str
ççC H
)
ççH I
{
éé 
objRef
èè 
.
èè 
SetPropertyValue
èè /
(
èè/ 0
$str
èè0 >
,
èè> ?
$str
èè@ D
)
èèD E
;
èèE F
objRef
êê 
.
êê 
Save
êê #
(
êê# $
)
êê$ %
;
êê% &
writer
ëë 
.
ëë 
AddTableData
ëë +
(
ëë+ ,
new
ëë, /
string
ëë0 6
[
ëë6 7
]
ëë7 8
{
ëë9 :
	Functions
ëë; D
.
ëëD E

linkObject
ëëE O
(
ëëO P
objRef
ëëP V
)
ëëV W
,
ëëW X
objRef
ëëY _
.
ëë_ `
TypeDescriptor
ëë` n
.
ëën o
Name
ëëo s
,
ëës t
objRef
ëëu {
.
ëë{ |
Descriptionëë| á
,ëëá à
commitOnExitëëâ ï
,ëëï ñ"
UpdateInsertDeleteëëó ©
,ëë© ™
commitInSourceëë´ π
,ëëπ ∫
objRefëëª ¡
.ëë¡ ¬
	Timestampëë¬ À
.ëëÀ Ã
ToStringëëÃ ‘
(ëë‘ ’
)ëë’ ÷
,ëë÷ ◊
objRefëëÿ ﬁ
.ëëﬁ ﬂ

LastUpdateëëﬂ È
.ëëÈ Í
ToStringëëÍ Ú
(ëëÚ Û
)ëëÛ Ù
}ëëı ˆ
)ëëˆ ˜
;ëë˜ ¯
}
íí 
}
ìì 
}
ïï 
writer
òò 
.
òò 
	AddFooter
òò 
(
òò 
)
òò 
;
òò 
writer
ôô 
.
ôô 
Close
ôô 
(
ôô 
)
ôô 
;
ôô 
bool
õõ 
success
õõ 
=
õõ 
true
õõ 
;
õõ  
output
úú 
.
úú 

EndSection
úú 
(
úú 
title
úú #
,
úú# $
success
úú% ,
)
úú, -
;
úú- .
KBDoctorHelper
ûû 
.
ûû !
ShowKBDoctorResults
ûû .
(
ûû. /

outputFile
ûû/ 9
)
ûû9 :
;
ûû: ;
}
¢¢ 	
internal
§§ 
static
§§ 
void
§§ 

TreeCommit
§§ '
(
§§' (
)
§§( )
{
•• 	

IKBService
ßß 
kbserv
ßß 
=
ßß 

UIServices
ßß  *
.
ßß* +
KB
ßß+ -
;
ßß- .
IOutputService
®® 
output
®® !
=
®®" #
CommonServices
®®$ 2
.
®®2 3
Output
®®3 9
;
®®9 :
string
©© 
title
©© 
=
©© 
$str
©© 5
;
©©5 6
output
´´ 
.
´´ 
StartSection
´´ 
(
´´  
title
´´  %
)
´´% &
;
´´& '
string
¨¨ 

outputFile
¨¨ 
=
¨¨ 
	Functions
¨¨  )
.
¨¨) *
CreateOutputFile
¨¨* :
(
¨¨: ;
kbserv
¨¨; A
,
¨¨A B
title
¨¨C H
)
¨¨H I
;
¨¨I J
KBDoctorXMLWriter
ÆÆ 
writer
ÆÆ $
=
ÆÆ% &
new
ÆÆ' *
KBDoctorXMLWriter
ÆÆ+ <
(
ÆÆ< =

outputFile
ÆÆ= G
,
ÆÆG H
Encoding
ÆÆI Q
.
ÆÆQ R
UTF8
ÆÆR V
)
ÆÆV W
;
ÆÆW X
writer
∞∞ 
.
∞∞ 
	AddHeader
∞∞ 
(
∞∞ 
title
∞∞ "
)
∞∞" #
;
∞∞# $
writer
±± 
.
±± 
AddTableHeader
±± !
(
±±! "
new
±±" %
string
±±& ,
[
±±, -
]
±±- .
{
±±/ 0
$str
±±1 9
,
±±9 :
$str
±±; C
,
±±C D
$str
±±E R
,
±±R S
$str
±±T `
,
±±` a
$str
±±b o
,
±±o p
$str
±±q |
,
±±| }
$str±±~ è
}±±ê ë
)±±ë í
;±±í ì
string
¥¥ 
	Anidacion
¥¥ 
=
¥¥ 
$str
¥¥ !
;
¥¥! " 
KBObjectCollection
µµ 
yaIncluidos
µµ *
=
µµ+ ,
new
µµ- 0 
KBObjectCollection
µµ1 C
(
µµC D
)
µµD E
;
µµE F!
SelectObjectOptions
∑∑  
selectObjectOption
∑∑  2
=
∑∑3 4
new
∑∑5 8!
SelectObjectOptions
∑∑9 L
(
∑∑L M
)
∑∑M N
;
∑∑N O 
selectObjectOption
∏∏ 
.
∏∏ 
MultipleSelection
∏∏ 0
=
∏∏1 2
true
∏∏3 7
;
∏∏7 8
KBModel
ππ 
kbModel
ππ 
=
ππ 

UIServices
ππ (
.
ππ( )
KB
ππ) +
.
ππ+ ,
CurrentModel
ππ, 8
;
ππ8 9 
selectObjectOption
ªª 
.
ªª 
ObjectTypes
ªª *
.
ªª* +
Add
ªª+ .
(
ªª. / 
KBObjectDescriptor
ªª/ A
.
ªªA B
Get
ªªB E
<
ªªE F
	Procedure
ªªF O
>
ªªO P
(
ªªP Q
)
ªªQ R
)
ªªR S
;
ªªS T
foreach
ΩΩ 
(
ΩΩ 
	Procedure
ΩΩ 
obj
ΩΩ "
in
ΩΩ# %

UIServices
ΩΩ& 0
.
ΩΩ0 1 
SelectObjectDialog
ΩΩ1 C
.
ΩΩC D
SelectObjects
ΩΩD Q
(
ΩΩQ R 
selectObjectOption
ΩΩR d
)
ΩΩd e
)
ΩΩe f
{
øø 
GraboLlamado
¿¿ 
(
¿¿ 
obj
¿¿  
,
¿¿  !
	Anidacion
¿¿" +
,
¿¿+ ,
yaIncluidos
¿¿- 8
,
¿¿8 9
writer
¿¿: @
)
¿¿@ A
;
¿¿A B
}
¡¡ 
writer
ƒƒ 
.
ƒƒ 
	AddFooter
ƒƒ 
(
ƒƒ 
)
ƒƒ 
;
ƒƒ 
writer
≈≈ 
.
≈≈ 
Close
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
bool
«« 
success
«« 
=
«« 
true
«« 
;
««  
output
»» 
.
»» 

EndSection
»» 
(
»» 
title
»» #
,
»»# $
success
»»% ,
)
»», -
;
»»- .
KBDoctorHelper
   
.
   !
ShowKBDoctorResults
   .
(
  . /

outputFile
  / 9
)
  9 :
;
  : ;
}
ÀÀ 	
private
ÕÕ 
static
ÕÕ 
void
ÕÕ 
GraboLlamado
ÕÕ (
(
ÕÕ( )
	Procedure
ÕÕ) 2
obj
ÕÕ3 6
,
ÕÕ6 7
string
ÕÕ8 >
	Anidacion
ÕÕ? H
,
ÕÕH I 
KBObjectCollection
ÕÕJ \

yaIncluido
ÕÕ] g
,
ÕÕg h
KBDoctorXMLWriter
ÕÕi z
writerÕÕ{ Å
)ÕÕÅ Ç
{
ŒŒ 	
if
œœ 
(
œœ 

yaIncluido
œœ 
.
œœ 
Contains
œœ #
(
œœ# $
obj
œœ$ '
)
œœ' (
)
œœ( )
{
–– 
writer
—— 
.
—— 
AddTableData
—— #
(
——# $
new
——$ '
string
——( .
[
——. /
]
——/ 0
{
——1 2
	Anidacion
——3 <
+
——= >
	Functions
——? H
.
——H I

linkObject
——I S
(
——S T
obj
——T W
)
——W X
,
——X Y
$str
——Z \
,
——\ ]
$str
——^ u
,
——u v
$str
——w y
,
——y z
$str
——{ }
,
——} ~
$str—— Å
,——Å Ç
$str——É Ö
}——Ü á
)——á à
;——à â
}
““ 
else
”” 
{
‘‘ 
string
÷÷ 
commitOnExit
÷÷ #
=
÷÷$ %
$str
÷÷& (
;
÷÷( )
string
◊◊ 
commitInSource
◊◊ %
=
◊◊& '
$str
◊◊( *
;
◊◊* +
string
ÿÿ  
UpdateInsertDelete
ÿÿ )
=
ÿÿ* +
$str
ÿÿ, .
;
ÿÿ. /
string
ŸŸ 
doCommit
ŸŸ 
=
ŸŸ  !
$str
ŸŸ" $
;
ŸŸ$ %
object
⁄⁄ 
aux
⁄⁄ 
=
⁄⁄ 
obj
⁄⁄  
.
⁄⁄  !
GetPropertyValue
⁄⁄! 1
(
⁄⁄1 2
$str
⁄⁄2 @
)
⁄⁄@ A
;
⁄⁄A B
if
€€ 
(
€€ 
aux
€€ 
!=
€€ 
null
€€ 
)
€€  
{
‹‹ 
commitOnExit
››  
=
››! "
aux
››# &
.
››& '
ToString
››' /
(
››/ 0
)
››0 1
==
››2 4
$str
››5 :
?
››; <
$str
››= B
:
››C D
$str
››E H
;
››H I
}
ﬁﬁ  
UpdateInsertDelete
ﬂﬂ "
=
ﬂﬂ# $
CleanKBHelper
ﬂﬂ% 2
.
ﬂﬂ2 3
ObjectUpdateDB
ﬂﬂ3 A
(
ﬂﬂA B
obj
ﬂﬂB E
)
ﬂﬂE F
?
ﬂﬂG H
$str
ﬂﬂI N
:
ﬂﬂO P
$str
ﬂﬂQ S
;
ﬂﬂS T
	Procedure
·· 
prc
·· 
=
·· 
(
··  !
	Procedure
··! *
)
··* +
obj
··+ .
;
··. /
string
‚‚ 
source
‚‚ 
=
‚‚ 
$str
‚‚  "
;
‚‚" #
try
„„ 
{
‰‰ 
source
ÂÂ 
=
ÂÂ 
	Functions
ÂÂ &
.
ÂÂ& '
ExtractComments
ÂÂ' 6
(
ÂÂ6 7
prc
ÂÂ7 :
.
ÂÂ: ;
ProcedurePart
ÂÂ; H
.
ÂÂH I
Source
ÂÂI O
.
ÂÂO P
ToString
ÂÂP X
(
ÂÂX Y
)
ÂÂY Z
.
ÂÂZ [
ToUpper
ÂÂ[ b
(
ÂÂb c
)
ÂÂc d
)
ÂÂd e
;
ÂÂe f
}
ÊÊ 
catch
ÁÁ 
{
ÁÁ 
	Exception
ÁÁ !
e
ÁÁ" #
;
ÁÁ# $
}
ÁÁ% &
;
ÁÁ& '
if
ÈÈ 
(
ÈÈ 
source
ÈÈ 
.
ÈÈ 
Contains
ÈÈ #
(
ÈÈ# $
$str
ÈÈ$ ,
)
ÈÈ, -
)
ÈÈ- .
commitInSource
ÍÍ "
=
ÍÍ# $
$str
ÍÍ% *
;
ÍÍ* +
else
ÎÎ 
commitInSource
ÏÏ "
=
ÏÏ# $
$str
ÏÏ% '
;
ÏÏ' (
if
ÓÓ 
(
ÓÓ 
(
ÓÓ 
commitOnExit
ÓÓ !
==
ÓÓ" $
$str
ÓÓ% *
&&
ÓÓ+ - 
UpdateInsertDelete
ÓÓ. @
==
ÓÓA C
$str
ÓÓD I
)
ÓÓI J
||
ÓÓK M
(
ÓÓN O
commitInSource
ÓÓO ]
==
ÓÓ^ `
$str
ÓÓa f
)
ÓÓf g
)
ÓÓg h
{
ÔÔ 
doCommit
 
=
 
$str
 $
;
$ %
}
ÒÒ 
;
ÒÒ 
string
ÛÛ 
ExecuteInNewLuw
ÛÛ &
=
ÛÛ' (
$str
ÛÛ) +
;
ÛÛ+ ,
object
ÙÙ 
aux2
ÙÙ 
=
ÙÙ 
obj
ÙÙ !
.
ÙÙ! "
GetPropertyValue
ÙÙ" 2
(
ÙÙ2 3

Properties
ÙÙ3 =
.
ÙÙ= >
PRC
ÙÙ> A
.
ÙÙA B
ExecuteInNewLuw
ÙÙB Q
)
ÙÙQ R
;
ÙÙR S
if
ıı 
(
ıı 
aux2
ıı 
!=
ıı 
null
ıı  
)
ıı  !
{
ˆˆ 
ExecuteInNewLuw
˜˜ #
=
˜˜$ %
aux2
˜˜& *
.
˜˜* +
ToString
˜˜+ 3
(
˜˜3 4
)
˜˜4 5
==
˜˜6 8
$str
˜˜9 ?
?
˜˜@ A
$str
˜˜B G
:
˜˜H I
$str
˜˜J L
;
˜˜L M
}
¯¯ 
KBModel
˙˙ 
model
˙˙ 
=
˙˙ 
obj
˙˙  #
.
˙˙# $
Model
˙˙$ )
;
˙˙) *
IList
˚˚ 
<
˚˚ 
KBObject
˚˚ 
>
˚˚ 
tableUpdInsDel
˚˚  .
=
˚˚/ 0
(
˚˚1 2
from
˚˚2 6
r
˚˚7 8
in
˚˚9 ;
model
˚˚< A
.
˚˚A B
GetReferencesFrom
˚˚B S
(
˚˚S T
obj
˚˚T W
.
˚˚W X
Key
˚˚X [
,
˚˚[ \
LinkType
˚˚] e
.
˚˚e f

UsedObject
˚˚f p
)
˚˚p q
where
¸¸2 7
r
¸¸8 9
.
¸¸9 :
ReferenceType
¸¸: G
==
¸¸H J
ReferenceType
¸¸K X
.
¸¸X Y
WeakExternal
¸¸Y e
where
˝˝2 7
(
˝˝8 9
ReferenceTypeInfo
˝˝9 J
.
˝˝J K
HasUpdateAccess
˝˝K Z
(
˝˝Z [
r
˝˝[ \
.
˝˝\ ]
LinkTypeInfo
˝˝] i
)
˝˝i j
|
˝˝k l
ReferenceTypeInfo
˝˝m ~
.
˝˝~ 
HasDeleteAccess˝˝ é
(˝˝é è
r˝˝è ê
.˝˝ê ë
LinkTypeInfo˝˝ë ù
)˝˝ù û
|˝˝ü †!
ReferenceTypeInfo˝˝° ≤
.˝˝≤ ≥
HasInsertAccess˝˝≥ ¬
(˝˝¬ √
r˝˝√ ƒ
.˝˝ƒ ≈
LinkTypeInfo˝˝≈ —
)˝˝— “
)˝˝“ ”
select
˛˛2 8
model
˛˛9 >
.
˛˛> ?
Objects
˛˛? F
.
˛˛F G
Get
˛˛G J
(
˛˛J K
r
˛˛K L
.
˛˛L M
To
˛˛M O
)
˛˛O P
)
˛˛P Q
.
˛˛Q R
ToList
˛˛R X
(
˛˛X Y
)
˛˛Y Z
;
˛˛Z [
string
ÄÄ 
tblList
ÄÄ 
=
ÄÄ  
$str
ÄÄ! #
;
ÄÄ# $
string
ÅÅ 
coma
ÅÅ 
=
ÅÅ 
$str
ÅÅ  
;
ÅÅ  !
foreach
ÇÇ 
(
ÇÇ 
KBObject
ÇÇ !
objref
ÇÇ" (
in
ÇÇ) +
tableUpdInsDel
ÇÇ, :
)
ÇÇ: ;
{
ÉÉ 
tblList
ÑÑ 
+=
ÑÑ 
coma
ÑÑ #
+
ÑÑ$ %
	Functions
ÑÑ& /
.
ÑÑ/ 0

linkObject
ÑÑ0 :
(
ÑÑ: ;
objref
ÑÑ; A
)
ÑÑA B
;
ÑÑB C
coma
ÖÖ 
=
ÖÖ 
$str
ÖÖ 
;
ÖÖ 
}
ÜÜ 
writer
áá 
.
áá 
AddTableData
áá #
(
áá# $
new
áá$ '
string
áá( .
[
áá. /
]
áá/ 0
{
áá1 2
	Anidacion
áá3 <
+
áá= >
	Functions
áá? H
.
ááH I

linkObject
ááI S
(
ááS T
obj
ááT W
)
ááW X
,
ááX Y
doCommit
ááZ b
,
ááb c
obj
áád g
.
áág h
Description
ááh s
,
áás t
ExecuteInNewLuwááu Ñ
,ááÑ Ö"
UpdateInsertDeleteááÜ ò
,ááò ô
objááö ù
.ááù û
	Timestampááû ß
.ááß ®!
ToShortDateStringáá® π
(ááπ ∫
)áá∫ ª
,ááª º
tblListááΩ ƒ
}áá≈ ∆
)áá∆ «
;áá« »

yaIncluido
ãã 
.
ãã 
Add
ãã 
(
ãã 
obj
ãã "
)
ãã" #
;
ãã# $
Parse
çç 
(
çç 
obj
çç 
.
çç 
Model
çç 
,
çç  
obj
çç! $
,
çç$ %
	Anidacion
çç& /
,
çç/ 0

yaIncluido
çç1 ;
,
çç; <
writer
çç< B
)
ççB C
;
ççC D
}
èè 
}
êê 	
static
íí 
public
íí 
void
íí 
Parse
íí  
(
íí  !
KBModel
íí! (
modelo
íí) /
,
íí/ 0
KBObject
íí1 9
obj
íí: =
,
íí= >
string
íí? E
	Anidacion
ííF O
,
ííO P 
KBObjectCollection
ííQ c

yaIncluido
ííd n
,
íín o 
KBDoctorXMLWriterííp Å
writerííÇ à
)ííà â
{
ìì 	
ILanguageService
îî 
	parserSrv
îî &
=
îî' (
Artech
îî) /
.
îî/ 0
Architecture
îî0 <
.
îî< =
Common
îî= C
.
îîC D
Services
îîD L
.
îîL M
Services
îîM U
.
îîU V

GetService
îîV `
(
îî` a
new
îîa d
Guid
îîe i
(
îîi j
$strîîj ê
)îîê ë
)îîë í
asîîì ï 
ILanguageServiceîîñ ¶
;îî¶ ß
IParserEngine
ïï 
parser
ïï  
=
ïï! "
	parserSrv
ïï# ,
.
ïï, -
CreateEngine
ïï- 9
(
ïï9 :
)
ïï: ;
;
ïï; <

ParserInfo
ññ 

parserInfo
ññ !
;
ññ! "
Artech
ôô 
.
ôô 
Genexus
ôô 
.
ôô 
Common
ôô !
.
ôô! "
Parts
ôô" '
.
ôô' (
ProcedurePart
ôô( 5
source
ôô6 <
=
ôô= >
obj
ôô? B
.
ôôB C
Parts
ôôC H
.
ôôH I
Get
ôôI L
<
ôôL M
Artech
ôôM S
.
ôôS T
Genexus
ôôT [
.
ôô[ \
Common
ôô\ b
.
ôôb c
Parts
ôôc h
.
ôôh i
ProcedurePart
ôôi v
>
ôôv w
(
ôôw x
)
ôôx y
;
ôôy z
if
öö 
(
öö 
source
öö 
!=
öö 
null
öö 
)
öö 
{
õõ 

parserInfo
úú 
=
úú 
new
úú  

ParserInfo
úú! +
(
úú+ ,
source
úú, 2
)
úú2 3
;
úú3 4
OutputReference
ùù 
oref
ùù  $
;
ùù$ %
int
ûû 
FCLobjClass
ûû 
=
ûû  !
$num
ûû" #
;
ûû# $
string
üü 

FCIobjName
üü !
=
üü" #
$str
üü$ &
;
üü& '
foreach
†† 
(
†† 
	TokenData
†† "
token
††# (
in
††) +
parser
††, 2
.
††2 3
	GetTokens
††3 <
(
††< =
true
††= A
,
††A B

parserInfo
††C M
,
††M N
source
††O U
.
††U V
Source
††V \
)
††\ ]
)
††] ^
{
°° 
if
££ 
(
££ 
token
££ 
.
££ 
Token
££ #
==
££$ &
(
££' (
int
££( +
)
££+ ,
	TokensIds
££, 5
.
££5 6
FCL
££6 9
)
££9 :
FCLobjClass
§§ #
=
§§$ %
token
§§& +
.
§§+ ,
Id
§§, .
;
§§. /
if
•• 
(
•• 
token
•• 
.
•• 
Token
•• #
==
••$ &
(
••' (
int
••( +
)
••+ ,
	TokensIds
••, 5
.
••5 6
FOI
••6 9
)
••9 :
{
¶¶ 

FCIobjName
ßß "
=
ßß# $
token
ßß% *
.
ßß* +
Word
ßß+ /
;
ßß/ 0
CommonServices
®® &
.
®®& '
Output
®®' -
.
®®- .
AddLine
®®. 5
(
®®5 6
	Anidacion
®®6 ?
+
®®@ A
FCLobjClass
®®B M
.
®®M N
ToString
®®N V
(
®®V W
)
®®W X
+
®®Y Z
$str
®®[ ^
+
®®_ `

FCIobjName
®®a k
)
®®k l
;
®®l m
	EntityKey
™™ !
objKey
™™" (
=
™™) *
new
™™+ .
	EntityKey
™™/ 8
(
™™8 9
ObjClass
™™9 A
.
™™A B
	Procedure
™™B K
,
™™K L
token
™™M R
.
™™R S
Id
™™S U
)
™™U V
;
™™V W
KBObject
´´  
objRef
´´! '
=
´´( )
KBObject
´´* 2
.
´´2 3
Get
´´3 6
(
´´6 7
obj
´´7 :
.
´´: ;
Model
´´; @
,
´´@ A
objKey
´´B H
)
´´H I
;
´´I J
GraboLlamado
≠≠ $
(
≠≠$ %
(
≠≠% &
	Procedure
≠≠& /
)
≠≠/ 0
objRef
≠≠1 7
,
≠≠7 8
	Anidacion
≠≠9 B
+
≠≠C D
$str
≠≠E K
,
≠≠K L

yaIncluido
≠≠M W
,
≠≠W X
writer
≠≠Y _
)
≠≠_ `
;
≠≠` a
}
ØØ 
if
∞∞ 
(
∞∞ 
token
∞∞ 
.
∞∞ 
Token
∞∞ #
==
∞∞$ &
(
∞∞' (
int
∞∞( +
)
∞∞+ ,
	TokensIds
∞∞, 5
.
∞∞5 6
DTCMM
∞∞6 ;
)
∞∞; <
writer
±± 
.
±± 
AddTableData
±± +
(
±±+ ,
new
±±, /
string
±±0 6
[
±±6 7
]
±±7 8
{
±±9 :
	Anidacion
±±; D
+
±±E F
$str
±±G Q
,
±±Q R
$str
±±S U
,
±±V W
$str
±±X j
,
±±k l
$str
±±m o
,
±±o p
$str
±±q s
,
±±t u
$str
±±v x
,
±±x y
$str
±±y {
,
±±{ |
$str
±±} 
}±±Ä Å
)±±Å Ç
;±±Ç É
}
¥¥ 
}
µµ 
}
∂∂ 	
public
∏∏ 
enum
∏∏ 
	TokensIds
∏∏ 
{
ππ 
FNONE
∫∫ 
=
∫∫ 	
-
∫∫
 
$num
∫∫ 
,
∫∫ 
FOB
¡¡ 
=
¡¡ 
$num
¡¡ 	
,
¡¡	 

FFN
¬¬ 
,
¬¬ 
FNA
√√ 
,
√√ 
FNC
ƒƒ 
,
ƒƒ 
FCB
≈≈ 
,
≈≈ 
FPL
∆∆ 
,
∆∆ 
FPR
«« 
,
«« 
FCM
»» 
,
»» 
FNT
…… 
,
…… 
FAN
   
,
   
FRE
ÃÃ 
,
ÃÃ 
EXP
ÕÕ 
,
ÕÕ 
SUM
ŒŒ 
,
ŒŒ 
COU
œœ 
,
œœ 
AVE
–– 
,
–– 
MAX
—— 
,
—— 
MIN
““ 
,
““ 
FIF
”” 
,
”” 
FSC
‘‘ 
,
‘‘ 
FOT
’’ 
,
’’ 
	ERR_TOKEN
◊◊ 
,
◊◊ 
FEN
ÿÿ 
,
ÿÿ 
FCO
ŸŸ 
,
ŸŸ 
FUV
⁄⁄ 
,
⁄⁄ 
FUA
€€ 
,
€€ 
FCN
‹‹ 
,
‹‹ 
FAM
›› 
,
›› 
FCL
ﬁﬁ 
,
ﬁﬁ 
FOI
ﬂﬂ 
,
ﬂﬂ 
FCT
‡‡ 
,
‡‡ 
FCI
‚‚ 
,
‚‚ 
FMT
„„ 
,
„„ 
FBI
‰‰ 
,
‰‰ 
FDC
ÂÂ 
,
ÂÂ 
FCV
ÊÊ 
,
ÊÊ 
FWH
ÁÁ 
,
ÁÁ 
FNS
ËË 
,
ËË 
FON
ÈÈ 
,
ÈÈ 
FBC
ÍÍ 
,
ÍÍ 
FOR
ÎÎ 
,
ÎÎ 
TKN_TRUE
ÌÌ 

,
ÌÌ
 
	TKN_FALSE
ÓÓ 
,
ÓÓ 
TKN_NONE
ÔÔ 

,
ÔÔ
 
PRM
 
,
 
FND
ÒÒ 
,
ÒÒ 
FLV
ÚÚ 
,
ÚÚ 
TKN_NEW
ÛÛ 	
,
ÛÛ	 

FSDTCLS
ÙÙ 	
,
ÙÙ	 

TKN_NULL
ıı 

,
ıı
 
TKN_IN
ˆˆ 
,
ˆˆ 	
SSL
¯¯ 
,
¯¯ 
FEX
˘˘ 
,
˘˘ 
TMSGID
˙˙ 
,
˙˙ 	
TNCNT
˚˚ 
,
˚˚ 
TFOR
¸¸ 
,
¸¸ 
TDEPENDENCIES
˝˝ 
,
˝˝ 
TRULE
˛˛ 
,
˛˛ 
TBY
ˇˇ 
,
ˇˇ 
TGIVEN
ÄÄ 
,
ÄÄ 	
TWHERE
ÅÅ 
,
ÅÅ 	

TDEFINEDBY
ÉÉ 
,
ÉÉ 
TSECTION
ÑÑ 

,
ÑÑ
 
TINDP
ÖÖ 
,
ÖÖ 
OPENSQUAREBRACKET
ÜÜ 
,
ÜÜ  
CLOSESQUAREBRACKET
áá 
,
áá 

OUTPUTNAME
àà 
,
àà 
OUTPUTDYNAMICSYM
ââ 
,
ââ 
INPUT
ää 
,
ää 
OUTPUTPROPERTY
ãã 
,
ãã 
OBJREFERENCE
åå 
,
åå 
TUSING
éé 
,
éé 	
TSIGN
èè 
,
èè 
TEXO
êê 
,
êê 
DTEJE
öö 
=
öö 	
$num
öö
 
,
öö 
DTNSK
õõ 
,
õõ 
DTLNN
úú 
,
úú 
DTPRC
ùù 
,
ùù 
DTCLL
ûû 
,
ûû 
DTDBA
üü 
,
üü 
DTCOB
†† 
,
†† 
DTASG
°° 
,
°° 
DTPRI
¢¢ 
,
¢¢ 
DTIF
££ 
,
££ 
DTELS
•• 
,
•• 
DTEIF
¶¶ 
,
¶¶ 
DTNPR
ßß 
,
ßß 
DTDEL
®® 
,
®® 
DTDO
©© 
,
©© 
DTEDO
™™ 
,
™™ 
DTWHE
´´ 
,
´´ 
DTNEW
¨¨ 
,
¨¨ 
DTRET
≠≠ 
,
≠≠ 
DTHEA
ÆÆ 
,
ÆÆ 
DTBEG
∞∞ 
,
∞∞ 
DTFOR
±± 
,
±± 
DTEND
≤≤ 
,
≤≤ 
DTPL
≥≥ 
,
≥≥ 
DTMT
¥¥ 
,
¥¥ 
DTMB
µµ 
,
µµ 
DTSRC
∂∂ 
,
∂∂ 
DTENW
∑∑ 
,
∑∑ 
DTEFO
∏∏ 
,
∏∏ 
DTWDU
ππ 
,
ππ 
DTWNO
ªª 
,
ªª 
DTCP
ºº 
,
ºº 
DTCMM
ΩΩ 
,
ΩΩ 
DTXFE
ææ 
,
ææ 
DTXFF
øø 
,
øø 
DTXNW
¿¿ 
,
¿¿ 
DTXEF
¡¡ 
,
¡¡ 
DTXEN
¬¬ 
,
¬¬ 
DTDBY
√√ 
,
√√ 
DTEXF
ƒƒ 
,
ƒƒ 
DTEXD
∆∆ 
,
∆∆ 
DTMSG
«« 
,
«« 
DTFOO
»» 
,
»» 
DTPRO
…… 
,
…… 
DTEPR
   
,
   
DTDOP
ÀÀ 
,
ÀÀ 
DTEVT
ÃÃ 
,
ÃÃ 
DTEEV
ÕÕ 
,
ÕÕ 
DTREF
ŒŒ 
,
ŒŒ 
DTFLN
œœ 
,
œœ 
DTEFL
—— 
,
—— 
DTCNF
““ 
,
““ 
DTDOC
”” 
,
”” 
DTCAS
‘‘ 
,
‘‘ 
DTECA
’’ 
,
’’ 
DTLOA
÷÷ 
,
÷÷ 
DTLVL
◊◊ 
,
◊◊ 
DTRBK
ÿÿ 
,
ÿÿ 
DTSBM
ŸŸ 
,
ŸŸ 
DTGRA
⁄⁄ 
,
⁄⁄ 
DTERH
‹‹ 
,
‹‹ 
DTVB
›› 
,
›› 
DTFSL
ﬁﬁ 
,
ﬁﬁ 
DTDMY
ﬂﬂ 
,
ﬂﬂ 
DTOTH
‡‡ 
,
‡‡ 
DTEFS
·· 
,
·· 
DTJAV
‚‚ 
,
‚‚ 
DTSQL
„„ 
,
„„ 
DTFLS
‰‰ 
,
‰‰ 
DTFSS
ÂÂ 
,
ÂÂ 
DTEFF
ÁÁ 
,
ÁÁ 
DTLNK
ËË 
,
ËË 
DTAPL
ÈÈ 
,
ÈÈ 
DTAMI
ÍÍ 
,
ÍÍ 
DTAMU
ÎÎ 
,
ÎÎ 
DTADI
ÏÏ 
,
ÏÏ 
DTFIN
ÌÌ 
,
ÌÌ 
DTEFI
ÓÓ 
,
ÓÓ 
DTFFT
ÔÔ 
,
ÔÔ 
DTEFT
 
,
 
DTIN
ÚÚ 
,
ÚÚ 
DTTO
ÛÛ 
,
ÛÛ 
DTSTP
ÙÙ 
,
ÙÙ 
DTCSH
ıı 
,
ıı 
DTON
ˆˆ 
,
ˆˆ 
DTWHN
˜˜ 
,
˜˜ 
DTOPD
¯¯ 
,
¯¯ 
DTUSG
˘˘ 
,
˘˘ 
DTPOPUP
˙˙ 	
,
˙˙	 

BLOCKING
˚˚ 

,
˚˚
 
OUTPUTELEMENT
˝˝ 
,
˝˝ 
OPENCURLYBRACKET
˛˛ 
,
˛˛ 
CLOSECURLYBRACKET
ˇˇ 
,
ˇˇ 
PRINT
ÄÄ 
,
ÄÄ 
INSERT
ÅÅ 
,
ÅÅ 	
SUBGROUP
ÇÇ 

,
ÇÇ
 
ENDSUBGROUP
ÉÉ 
,
ÉÉ 
DTStub
ÑÑ 
,
ÑÑ 	
DTJavaScript
ÖÖ 
,
ÖÖ 
	DTEndStub
ÜÜ 
,
ÜÜ 

DTCallStub
àà 
,
àà 
DTRuby
ââ 
,
ââ 	
DTREDUNDANCY
ãã 
=
ãã 
$num
ãã 
,
ãã 
}
åå 
;
åå 
private
¬¬ 
static
¬¬  
KBObjectCollection
¬¬ )1
#AttributesFromGeneratedTransactions
¬¬* M
(
¬¬M N
Table
¬¬N S
tBL
¬¬T W
)
¬¬W X
{
√√ 	 
KBObjectCollection
ƒƒ 
attlist
ƒƒ &
=
ƒƒ' (
new
ƒƒ) , 
KBObjectCollection
ƒƒ- ?
(
ƒƒ? @
)
ƒƒ@ A
;
ƒƒA B
foreach
≈≈ 
(
≈≈ 
Transaction
≈≈  
trn
≈≈! $
in
≈≈% '
tBL
≈≈( +
.
≈≈+ ,$
AssociatedTransactions
≈≈, B
)
≈≈B C
{
∆∆ 
if
«« 
(
«« 
isGenerated
«« 
(
««  
trn
««  #
)
««# $
)
««$ %
{
»» 
foreach
…… 
(
…… 
TransactionLevel
…… -
LVL
……. 1
in
……2 4
trn
……5 8
.
……8 9
	Structure
……9 B
.
……B C
	GetLevels
……C L
(
……L M
)
……M N
)
……N O
{
   
if
ÀÀ 
(
ÀÀ 
LVL
ÀÀ 
.
ÀÀ  
AssociatedTable
ÀÀ  /
==
ÀÀ0 2
tBL
ÀÀ3 6
)
ÀÀ6 7
{
ÃÃ 
foreach
ÕÕ #
(
ÕÕ$ %
Artech
ÕÕ% +
.
ÕÕ+ ,
Genexus
ÕÕ, 3
.
ÕÕ3 4
Common
ÕÕ4 :
.
ÕÕ: ;
Objects
ÕÕ; B
.
ÕÕB C
	Attribute
ÕÕC L
a
ÕÕM N
in
ÕÕO Q
LVL
ÕÕR U
.
ÕÕU V
	Structure
ÕÕV _
.
ÕÕ_ `
GetAttributes
ÕÕ` m
(
ÕÕm n
)
ÕÕn o
)
ÕÕo p
{
ŒŒ 
attlist
œœ  '
.
œœ' (
Add
œœ( +
(
œœ+ ,
a
œœ, -
)
œœ- .
;
œœ. /
}
–– 
}
—— 
}
““ 
}
”” 
}
’’ 
return
÷÷ 
attlist
÷÷ 
;
÷÷ 
}
◊◊ 	
private
ŸŸ 
static
ŸŸ  
KBObjectCollection
ŸŸ )4
&AttributesFromAllTransactionsExceptOne
ŸŸ* P
(
ŸŸP Q
Table
ŸŸQ V
tBL
ŸŸW Z
,
ŸŸZ [
Transaction
ŸŸ\ g
trnToExclude
ŸŸh t
,
ŸŸt u
out
ŸŸv y
stringŸŸz Ä
lstTrnŸŸÅ á
)ŸŸá à
{
⁄⁄ 	 
KBObjectCollection
€€ 
attlist
€€ &
=
€€' (
new
€€) , 
KBObjectCollection
€€- ?
(
€€? @
)
€€@ A
;
€€A B
lstTrn
‹‹ 
=
‹‹ 
$str
‹‹ 
;
‹‹ 
foreach
›› 
(
›› 
Transaction
››  
trn
››! $
in
››% '
tBL
››( +
.
››+ ,$
AssociatedTransactions
››, B
)
››B C
{
ﬁﬁ 
if
ﬂﬂ 
(
ﬂﬂ 
trn
ﬂﬂ 
!=
ﬂﬂ 
trnToExclude
ﬂﬂ '
)
ﬂﬂ' (
{
‡‡ 
lstTrn
·· 
+=
·· 
trn
·· !
.
··! "
QualifiedName
··" /
+
··0 1
$str
··2 5
;
··5 6
foreach
‚‚ 
(
‚‚ 
TransactionLevel
‚‚ -
LVL
‚‚. 1
in
‚‚2 4
trn
‚‚5 8
.
‚‚8 9
	Structure
‚‚9 B
.
‚‚B C
	GetLevels
‚‚C L
(
‚‚L M
)
‚‚M N
)
‚‚N O
{
„„ 
if
‰‰ 
(
‰‰ 
LVL
‰‰ 
.
‰‰  
AssociatedTable
‰‰  /
==
‰‰0 2
tBL
‰‰3 6
)
‰‰6 7
{
ÂÂ 
foreach
ÊÊ #
(
ÊÊ$ %
Artech
ÊÊ% +
.
ÊÊ+ ,
Genexus
ÊÊ, 3
.
ÊÊ3 4
Common
ÊÊ4 :
.
ÊÊ: ;
Objects
ÊÊ; B
.
ÊÊB C
	Attribute
ÊÊC L
a
ÊÊM N
in
ÊÊO Q
LVL
ÊÊR U
.
ÊÊU V
	Structure
ÊÊV _
.
ÊÊ_ `
GetAttributes
ÊÊ` m
(
ÊÊm n
)
ÊÊn o
)
ÊÊo p
{
ÁÁ 
attlist
ËË  '
.
ËË' (
Add
ËË( +
(
ËË+ ,
a
ËË, -
)
ËË- .
;
ËË. /
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 
}
ÏÏ 
}
ÓÓ 
return
ÔÔ 
attlist
ÔÔ 
;
ÔÔ 
}
 	
public
ÚÚ 
static
ÚÚ 
void
ÚÚ 
MainTableUsed
ÚÚ (
(
ÚÚ( )
)
ÚÚ) *
{
ÛÛ 	

IKBService
ÙÙ 
kbserv
ÙÙ 
=
ÙÙ 

UIServices
ÙÙ  *
.
ÙÙ* +
KB
ÙÙ+ -
;
ÙÙ- .
IOutputService
ıı 
output
ıı !
=
ıı" #
CommonServices
ıı$ 2
.
ıı2 3
Output
ıı3 9
;
ıı9 :
string
˜˜ 
title
˜˜ 
=
˜˜ 
$str
˜˜ <
;
˜˜< =
string
¯¯ 

outputFile
¯¯ 
=
¯¯ 
	Functions
¯¯  )
.
¯¯) *
CreateOutputFile
¯¯* :
(
¯¯: ;
kbserv
¯¯; A
,
¯¯A B
title
¯¯C H
)
¯¯H I
;
¯¯I J
output
˚˚ 
.
˚˚ 
StartSection
˚˚ 
(
˚˚  
title
˚˚  %
)
˚˚% &
;
˚˚& '
KBDoctorXMLWriter
˝˝ 
writer
˝˝ $
=
˝˝% &
new
˝˝' *
KBDoctorXMLWriter
˝˝+ <
(
˝˝< =

outputFile
˝˝= G
,
˝˝G H
Encoding
˝˝I Q
.
˝˝Q R
UTF8
˝˝R V
)
˝˝V W
;
˝˝W X
writer
˛˛ 
.
˛˛ 
	AddHeader
˛˛ 
(
˛˛ 
title
˛˛ "
)
˛˛" #
;
˛˛# $
writer
ˇˇ 
.
ˇˇ 
AddTableHeader
ˇˇ !
(
ˇˇ! "
new
ˇˇ" %
string
ˇˇ& ,
[
ˇˇ, -
]
ˇˇ- .
{
ˇˇ/ 0
$str
ˇˇ1 7
,
ˇˇ7 8
$str
ˇˇ9 @
,
ˇˇ@ A
$str
ˇˇB M
}
ˇˇN O
)
ˇˇO P
;
ˇˇP Q

KBCategory
Ç	Ç	 
mainCategory
Ç	Ç	 #
=
Ç	Ç	$ %

KBCategory
Ç	Ç	& 0
.
Ç	Ç	0 1
Get
Ç	Ç	1 4
(
Ç	Ç	4 5
kbserv
Ç	Ç	5 ;
.
Ç	Ç	; <
CurrentModel
Ç	Ç	< H
,
Ç	Ç	H I
$str
Ç	Ç	J Y
)
Ç	Ç	Y Z
;
Ç	Ç	Z [
foreach
É	É	 
(
É	É	 
KBObject
É	É	 
obj
É	É	 !
in
É	É	" $
mainCategory
É	É	% 1
.
É	É	1 2

AllMembers
É	É	2 <
)
É	É	< =
{
Ñ	Ñ	 
StringCollection
Ö	Ö	  
tableOperation
Ö	Ö	! /
=
Ö	Ö	0 1
new
Ö	Ö	2 5
StringCollection
Ö	Ö	6 F
(
Ö	Ö	F G
)
Ö	Ö	G H
;
Ö	Ö	H I 
KBObjectCollection
Ü	Ü	 "
	objMarked
Ü	Ü	# ,
=
Ü	Ü	- .
new
Ü	Ü	/ 2 
KBObjectCollection
Ü	Ü	3 E
(
Ü	Ü	E F
)
Ü	Ü	F G
;
Ü	Ü	G H
output
á	á	 
.
á	á	 
AddLine
á	á	 
(
á	á	 
$str
á	á	 "
)
á	á	" #
;
á	á	# $
output
à	à	 
.
à	à	 
AddLine
à	à	 
(
à	à	 
$str
à	à	 A
+
à	à	B C
obj
à	à	D G
.
à	à	G H
Name
à	à	H L
)
à	à	L M
;
à	à	M N
string
ä	ä	 
mainstr
ä	ä	 
=
ä	ä	  
obj
ä	ä	! $
.
ä	ä	$ %
Name
ä	ä	% )
+
ä	ä	* +
$str
ä	ä	, /
+
ä	ä	0 1
obj
ä	ä	2 5
.
ä	ä	5 6$
GetPropertyValueString
ä	ä	6 L
(
ä	ä	L M
$str
ä	ä	M Z
)
ä	ä	Z [
;
ä	ä	[ \

TablesUsed
ã	ã	 
(
ã	ã	 
output
ã	ã	 !
,
ã	ã	! "
obj
ã	ã	# &
,
ã	ã	& '
tableOperation
ã	ã	( 6
,
ã	ã	6 7
	objMarked
ã	ã	8 A
,
ã	ã	A B
mainstr
ã	ã	C J
,
ã	ã	J K
writer
ã	ã	L R
)
ã	ã	R S
;
ã	ã	S T
}
é	é	 
writer
ê	ê	 
.
ê	ê	 
	AddFooter
ê	ê	 
(
ê	ê	 
)
ê	ê	 
;
ê	ê	 
writer
ë	ë	 
.
ë	ë	 
Close
ë	ë	 
(
ë	ë	 
)
ë	ë	 
;
ë	ë	 
KBDoctorHelper
ì	ì	 
.
ì	ì	 !
ShowKBDoctorResults
ì	ì	 .
(
ì	ì	. /

outputFile
ì	ì	/ 9
)
ì	ì	9 :
;
ì	ì	: ;
bool
î	î	 
success
î	î	 
=
î	î	 
true
î	î	 
;
î	î	  
output
ï	ï	 
.
ï	ï	 

EndSection
ï	ï	 
(
ï	ï	 
title
ï	ï	 #
,
ï	ï	# $
success
ï	ï	% ,
)
ï	ï	, -
;
ï	ï	- .
}
ó	ó	 	
private
ô	ô	 
static
ô	ô	 
void
ô	ô	 

TablesUsed
ô	ô	 &
(
ô	ô	& '
IOutputService
ô	ô	' 5
output
ô	ô	6 <
,
ô	ô	< =
KBObject
ô	ô	> F
obj
ô	ô	G J
,
ô	ô	J K
StringCollection
ô	ô	L \
tableOperation
ô	ô	] k
,
ô	ô	k l 
KBObjectCollection
ô	ô	m 
	objMarkedô	ô	Ä â
,ô	ô	â ä
stringô	ô	ã ë
mainstrô	ô	í ô
,ô	ô	ô ö!
KBDoctorXMLWriterô	ô	õ ¨
writerô	ô	≠ ≥
)ô	ô	≥ ¥
{
ö	ö	 	

IKBService
õ	õ	 
kbserv
õ	õ	 
=
õ	õ	 

UIServices
õ	õ	  *
.
õ	õ	* +
KB
õ	õ	+ -
;
õ	õ	- .
	objMarked
ù	ù	 
.
ù	ù	 
Add
ù	ù	 
(
ù	ù	 
obj
ù	ù	 
)
ù	ù	 
;
ù	ù	 
foreach
ü	ü	 
(
ü	ü	 
EntityReference
ü	ü	 $
	reference
ü	ü	% .
in
ü	ü	/ 1
obj
ü	ü	2 5
.
ü	ü	5 6
GetReferences
ü	ü	6 C
(
ü	ü	C D
)
ü	ü	D E
)
ü	ü	E F
{
†	†	 
KBObject
°	°	 
objRef
°	°	 
=
°	°	  !
KBObject
°	°	" *
.
°	°	* +
Get
°	°	+ .
(
°	°	. /
obj
°	°	/ 2
.
°	°	2 3
Model
°	°	3 8
,
°	°	8 9
	reference
°	°	: C
.
°	°	C D
To
°	°	D F
)
°	°	F G
;
°	°	G H
if
£	£	 
(
£	£	 
(
£	£	 
objRef
£	£	 
!=
£	£	 
null
£	£	 #
)
£	£	# $
&&
£	£	% '
!
£	£	( )
	objMarked
£	£	) 2
.
£	£	2 3
Contains
£	£	3 ;
(
£	£	; <
objRef
£	£	< B
)
£	£	B C
)
£	£	C D
{
§	§	 
if
•	•	 
(
•	•	 
isMain
•	•	 
(
•	•	 
objRef
•	•	 %
)
•	•	% &
)
•	•	& '
return
¶	¶	 
;
¶	¶	 
if
ß	ß	 
(
ß	ß	 
(
ß	ß	 
	reference
ß	ß	 "
.
ß	ß	" #
ReferenceType
ß	ß	# 0
==
ß	ß	1 3
ReferenceType
ß	ß	4 A
.
ß	ß	A B
WeakExternal
ß	ß	B N
)
ß	ß	N O
&&
ß	ß	P R
(
ß	ß	S T
objRef
ß	ß	T Z
is
ß	ß	[ ]
Table
ß	ß	^ c
)
ß	ß	c d
)
ß	ß	d e
{
®	®	 
bool
©	©	 
read
©	©	 !
,
©	©	! "
insert
©	©	# )
,
©	©	) *
update
©	©	+ 1
,
©	©	1 2
delete
©	©	3 9
,
©	©	9 :
isBase
©	©	; A
;
©	©	A B
if
™	™	 
(
™	™	 
ReferenceTypeInfo
™	™	 -
.
™	™	- .
ReadTableInfo
™	™	. ;
(
™	™	; <
	reference
™	™	< E
.
™	™	E F
LinkTypeInfo
™	™	F R
,
™	™	R S
out
™	™	T W
read
™	™	X \
,
™	™	\ ]
out
™	™	^ a
insert
™	™	b h
,
™	™	h i
out
™	™	j m
update
™	™	n t
,
™	™	t u
out
™	™	v y
delete™	™	z Ä
,™	™	Ä Å
out™	™	Ç Ö
isBase™	™	Ü å
)™	™	å ç
)™	™	ç é
{
´	´	 
string
¨	¨	 "
linea
¨	¨	# (
=
¨	¨	) *
$str
¨	¨	+ -
;
¨	¨	- .
if
≠	≠	 
(
≠	≠	  
read
≠	≠	  $
)
≠	≠	$ %
{
Æ	Æ	 
linea
Ø	Ø	  %
=
Ø	Ø	& '
mainstr
Ø	Ø	( /
+
Ø	Ø	0 1
$str
Ø	Ø	2 7
+
Ø	Ø	8 9
objRef
Ø	Ø	: @
.
Ø	Ø	@ A
Name
Ø	Ø	A E
+
Ø	Ø	F G
$str
Ø	Ø	H M
+
Ø	Ø	N O
$str
Ø	Ø	P X
;
Ø	Ø	X Y
if
±	±	  "
(
±	±	# $
!
±	±	$ %
tableOperation
±	±	% 3
.
±	±	3 4
Contains
±	±	4 <
(
±	±	< =
linea
±	±	= B
)
±	±	B C
)
±	±	C D
{
≤	≤	  !
output
≥	≥	$ *
.
≥	≥	* +
AddLine
≥	≥	+ 2
(
≥	≥	2 3
linea
≥	≥	3 8
)
≥	≥	8 9
;
≥	≥	9 :
tableOperation
¥	¥	$ 2
.
¥	¥	2 3
Add
¥	¥	3 6
(
¥	¥	6 7
linea
¥	¥	7 <
)
¥	¥	< =
;
¥	¥	= >
writer
µ	µ	$ *
.
µ	µ	* +
AddTableData
µ	µ	+ 7
(
µ	µ	7 8
new
µ	µ	8 ;
string
µ	µ	< B
[
µ	µ	B C
]
µ	µ	C D
{
µ	µ	E F
mainstr
µ	µ	G N
,
µ	µ	N O
objRef
µ	µ	P V
.
µ	µ	V W
Name
µ	µ	W [
,
µ	µ	[ \
$str
µ	µ	] e
}
µ	µ	f g
)
µ	µ	g h
;
µ	µ	h i
}
∂	∂	  !
;
∂	∂	! "
}
∑	∑	 
if
∏	∏	 
(
∏	∏	  
insert
∏	∏	  &
)
∏	∏	& '
{
π	π	 
linea
∫	∫	  %
=
∫	∫	& '
mainstr
∫	∫	( /
+
∫	∫	0 1
$str
∫	∫	2 7
+
∫	∫	8 9
objRef
∫	∫	: @
.
∫	∫	@ A
Name
∫	∫	A E
+
∫	∫	F G
$str
∫	∫	H M
+
∫	∫	N O
$str
∫	∫	P X
;
∫	∫	X Y
if
ª	ª	  "
(
ª	ª	# $
!
ª	ª	$ %
tableOperation
ª	ª	% 3
.
ª	ª	3 4
Contains
ª	ª	4 <
(
ª	ª	< =
linea
ª	ª	= B
)
ª	ª	B C
)
ª	ª	C D
{
º	º	  !
output
Ω	Ω	$ *
.
Ω	Ω	* +
AddLine
Ω	Ω	+ 2
(
Ω	Ω	2 3
linea
Ω	Ω	3 8
)
Ω	Ω	8 9
;
Ω	Ω	9 :
tableOperation
æ	æ	$ 2
.
æ	æ	2 3
Add
æ	æ	3 6
(
æ	æ	6 7
linea
æ	æ	7 <
)
æ	æ	< =
;
æ	æ	= >
writer
ø	ø	$ *
.
ø	ø	* +
AddTableData
ø	ø	+ 7
(
ø	ø	7 8
new
ø	ø	8 ;
string
ø	ø	< B
[
ø	ø	B C
]
ø	ø	C D
{
ø	ø	E F
mainstr
ø	ø	G N
,
ø	ø	N O
objRef
ø	ø	P V
.
ø	ø	V W
Name
ø	ø	W [
,
ø	ø	[ \
$str
ø	ø	] e
}
ø	ø	f g
)
ø	ø	g h
;
ø	ø	h i
}
¿	¿	  !
;
¿	¿	! "
}
¡	¡	 
if
√	√	 
(
√	√	  
update
√	√	  &
)
√	√	& '
{
ƒ	ƒ	 
linea
≈	≈	  %
=
≈	≈	& '
mainstr
≈	≈	( /
+
≈	≈	0 1
$str
≈	≈	2 7
+
≈	≈	8 9
objRef
≈	≈	: @
.
≈	≈	@ A
Name
≈	≈	A E
+
≈	≈	F G
$str
≈	≈	H M
+
≈	≈	N O
$str
≈	≈	P X
;
≈	≈	X Y
if
∆	∆	  "
(
∆	∆	# $
!
∆	∆	$ %
tableOperation
∆	∆	% 3
.
∆	∆	3 4
Contains
∆	∆	4 <
(
∆	∆	< =
linea
∆	∆	= B
)
∆	∆	B C
)
∆	∆	C D
{
«	«	  !
output
»	»	$ *
.
»	»	* +
AddLine
»	»	+ 2
(
»	»	2 3
linea
»	»	3 8
)
»	»	8 9
;
»	»	9 :
tableOperation
…	…	$ 2
.
…	…	2 3
Add
…	…	3 6
(
…	…	6 7
linea
…	…	7 <
)
…	…	< =
;
…	…	= >
writer
 	 	$ *
.
 	 	* +
AddTableData
 	 	+ 7
(
 	 	7 8
new
 	 	8 ;
string
 	 	< B
[
 	 	B C
]
 	 	C D
{
 	 	E F
mainstr
 	 	G N
,
 	 	N O
objRef
 	 	P V
.
 	 	V W
Name
 	 	W [
,
 	 	[ \
$str
 	 	] e
}
 	 	f g
)
 	 	g h
;
 	 	h i
}
À	À	  !
;
À	À	! "
}
Ã	Ã	 
if
Œ	Œ	 
(
Œ	Œ	  
delete
Œ	Œ	  &
)
Œ	Œ	& '
{
œ	œ	 
linea
–	–	  %
=
–	–	& '
mainstr
–	–	( /
+
–	–	0 1
$str
–	–	2 7
+
–	–	8 9
objRef
–	–	: @
.
–	–	@ A
Name
–	–	A E
+
–	–	F G
$str
–	–	H M
+
–	–	N O
$str
–	–	P X
;
–	–	X Y
if
—	—	  "
(
—	—	# $
!
—	—	$ %
tableOperation
—	—	% 3
.
—	—	3 4
Contains
—	—	4 <
(
—	—	< =
linea
—	—	= B
)
—	—	B C
)
—	—	C D
{
“	“	  !
output
”	”	$ *
.
”	”	* +
AddLine
”	”	+ 2
(
”	”	2 3
linea
”	”	3 8
)
”	”	8 9
;
”	”	9 :
tableOperation
‘	‘	$ 2
.
‘	‘	2 3
Add
‘	‘	3 6
(
‘	‘	6 7
linea
‘	‘	7 <
)
‘	‘	< =
;
‘	‘	= >
writer
’	’	$ *
.
’	’	* +
AddTableData
’	’	+ 7
(
’	’	7 8
new
’	’	8 ;
string
’	’	< B
[
’	’	B C
]
’	’	C D
{
’	’	E F
mainstr
’	’	G N
,
’	’	N O
objRef
’	’	P V
.
’	’	V W
Name
’	’	W [
,
’	’	[ \
$str
’	’	] e
}
’	’	f g
)
’	’	g h
;
’	’	h i
}
÷	÷	  !
;
÷	÷	! "
}
◊	◊	 
}
Ÿ	Ÿ	 
}
€	€	 

TablesUsed
‹	‹	 
(
‹	‹	 
output
‹	‹	 %
,
‹	‹	% &
objRef
‹	‹	' -
,
‹	‹	- .
tableOperation
‹	‹	/ =
,
‹	‹	= >
	objMarked
‹	‹	? H
,
‹	‹	H I
mainstr
‹	‹	J Q
,
‹	‹	Q R
writer
‹	‹	S Y
)
‹	‹	Y Z
;
‹	‹	Z [
}
ﬁ	ﬁ	 
}
·	·	 
}
‚	‚	 	
public
‰	‰	 
static
‰	‰	 
void
‰	‰	 
CreateDeployUnits
‰	‰	 ,
(
‰	‰	, -
)
‰	‰	- .
{
Â	Â	 	

IKBService
Ê	Ê	 
kbserv
Ê	Ê	 
=
Ê	Ê	 

UIServices
Ê	Ê	  *
.
Ê	Ê	* +
KB
Ê	Ê	+ -
;
Ê	Ê	- .
IOutputService
Á	Á	 
output
Á	Á	 !
=
Á	Á	" #
CommonServices
Á	Á	$ 2
.
Á	Á	2 3
Output
Á	Á	3 9
;
Á	Á	9 :%
SpecificationListHelper
Ë	Ë	 #
helper
Ë	Ë	$ *
=
Ë	Ë	+ ,
new
Ë	Ë	- 0%
SpecificationListHelper
Ë	Ë	1 H
(
Ë	Ë	H I
kbserv
Ë	Ë	I O
.
Ë	Ë	O P
CurrentModel
Ë	Ë	P \
.
Ë	Ë	\ ]
Environment
Ë	Ë	] h
.
Ë	Ë	h i
TargetModel
Ë	Ë	i t
)
Ë	Ë	t u
;
Ë	Ë	u v
string
È	È	 
title
È	È	 
=
È	È	 
$str
È	È	 9
;
È	È	9 :
string
Í	Í	 

outputFile
Í	Í	 
=
Í	Í	 
	Functions
Í	Í	  )
.
Í	Í	) *
CreateOutputFile
Í	Í	* :
(
Í	Í	: ;
kbserv
Í	Í	; A
,
Í	Í	A B
title
Í	Í	C H
)
Í	Í	H I
;
Í	Í	I J
output
Ì	Ì	 
.
Ì	Ì	 
StartSection
Ì	Ì	 
(
Ì	Ì	  
title
Ì	Ì	  %
)
Ì	Ì	% &
;
Ì	Ì	& '
KBDoctorXMLWriter
Ô	Ô	 
writer
Ô	Ô	 $
=
Ô	Ô	% &
new
Ô	Ô	' *
KBDoctorXMLWriter
Ô	Ô	+ <
(
Ô	Ô	< =

outputFile
Ô	Ô	= G
,
Ô	Ô	G H
Encoding
Ô	Ô	I Q
.
Ô	Ô	Q R
UTF8
Ô	Ô	R V
)
Ô	Ô	V W
;
Ô	Ô	W X
writer
		 
.
		 
	AddHeader
		 
(
		 
title
		 "
)
		" #
;
		# $
writer
Ò	Ò	 
.
Ò	Ò	 
AddTableHeader
Ò	Ò	 !
(
Ò	Ò	! "
new
Ò	Ò	" %
string
Ò	Ò	& ,
[
Ò	Ò	, -
]
Ò	Ò	- .
{
Ò	Ò	/ 0
$str
Ò	Ò	1 >
,
Ò	Ò	> ?
$str
Ò	Ò	@ F
,
Ò	Ò	F G
$str
Ò	Ò	H P
,
Ò	Ò	P Q
$str
Ò	Ò	R [
}
Ò	Ò	\ ]
)
Ò	Ò	] ^
;
Ò	Ò	^ _
StringCollection
Û	Û	 
objReferenced
Û	Û	 *
=
Û	Û	+ ,
new
Û	Û	- 0
StringCollection
Û	Û	1 A
(
Û	Û	A B
)
Û	Û	B C
;
Û	Û	C D

KBCategory
ı	ı	 
mainCategory
ı	ı	 #
=
ı	ı	$ %

KBCategory
ı	ı	& 0
.
ı	ı	0 1
Get
ı	ı	1 4
(
ı	ı	4 5
kbserv
ı	ı	5 ;
.
ı	ı	; <
CurrentModel
ı	ı	< H
,
ı	ı	H I
$str
ı	ı	J Y
)
ı	ı	Y Z
;
ı	ı	Z [
foreach
ˆ	ˆ	 
(
ˆ	ˆ	 
KBObject
ˆ	ˆ	 
obj
ˆ	ˆ	 !
in
ˆ	ˆ	" $
mainCategory
ˆ	ˆ	% 1
.
ˆ	ˆ	1 2

AllMembers
ˆ	ˆ	2 <
)
ˆ	ˆ	< =
{
˜	˜	 
string
˘	˘	 
objLocation
˘	˘	 "
=
˘	˘	# $
(
˘	˘	% &
string
˘	˘	& ,
)
˘	˘	, -
obj
˘	˘	- 0
.
˘	˘	0 1
GetProperty
˘	˘	1 <
(
˘	˘	< =
$str
˘	˘	= J
)
˘	˘	J K
.
˘	˘	K L
Value
˘	˘	L Q
;
˘	˘	Q R
string
˚	˚	 
objAppGenerator
˚	˚	 &
=
˚	˚	' (
obj
˚	˚	) ,
.
˚	˚	, -$
GetPropertyValueString
˚	˚	- C
(
˚	˚	C D
$str
˚	˚	D R
)
˚	˚	R S
;
˚	˚	S T
string
¸	¸	 
Dircopia
¸	¸	 
,
¸	¸	  
exts
¸	¸	! %
;
¸	¸	% &
if
˝	˝	 
(
˝	˝	 
objAppGenerator
˝	˝	 #
.
˝	˝	# $
ToUpper
˝	˝	$ +
(
˝	˝	+ ,
)
˝	˝	, -
.
˝	˝	- .
Contains
˝	˝	. 6
(
˝	˝	6 7
$str
˝	˝	7 <
)
˝	˝	< =
)
˝	˝	= >
{
˛	˛	 
Dircopia
ˇ	ˇ	 
=
ˇ	ˇ	 
$str
ˇ	ˇ	 (
;
ˇ	ˇ	( )
exts
Ä
Ä
 
=
Ä
Ä
 
$str
Ä
Ä
 !
;
Ä
Ä
! "
}
Å
Å
 
else
Ç
Ç
 
{
É
É
 
Dircopia
Ñ
Ñ
 
=
Ñ
Ñ
 
$str
Ñ
Ñ
 $
;
Ñ
Ñ
$ %
exts
Ö
Ö
 
=
Ö
Ö
 
$str
Ö
Ö
 !
;
Ö
Ö
! "
}
Ü
Ü
 
string
à
à
 
letra
à
à
 
=
à
à
 
$str
à
à
 !
;
à
à
! "
if
ã
ã
 
(
ã
ã
 
obj
ã
ã
 
is
ã
ã
 
	Procedure
ã
ã
 $
)
ã
ã
$ %
letra
å
å
 
=
å
å
 
$str
å
å
 
;
å
å
  
if
ç
ç
 
(
ç
ç
 
obj
ç
ç
 
is
ç
ç
 
	WorkPanel
ç
ç
 $
)
ç
ç
$ %
letra
é
é
 
=
é
é
 
$str
é
é
 
;
é
é
  
if
è
è
 
(
è
è
 
obj
è
è
 
is
è
è
 
Transaction
è
è
 &
)
è
è
& '
letra
ê
ê
 
=
ê
ê
 
$str
ê
ê
 
;
ê
ê
  
KBObjectCollection
ì
ì
 "
	objMarked
ì
ì
# ,
=
ì
ì
- .
new
ì
ì
/ 2 
KBObjectCollection
ì
ì
3 E
(
ì
ì
E F
)
ì
ì
F G
;
ì
ì
G H
output
î
î
 
.
î
î
 
AddLine
î
î
 
(
î
î
 
$str
î
î
 "
)
î
î
" #
;
î
î
# $
output
ï
ï
 
.
ï
ï
 
AddLine
ï
ï
 
(
ï
ï
 
$str
ï
ï
 ,
+
ï
ï
- .
obj
ï
ï
/ 2
.
ï
ï
2 3
Name
ï
ï
3 7
+
ï
ï
8 9
$str
ï
ï
: C
)
ï
ï
C D
;
ï
ï
D E
if
ó
ó
 
(
ó
ó
 
obj
ó
ó
 
.
ó
ó
 $
GetPropertyValueString
ó
ó
 .
(
ó
ó
. /
$str
ó
ó
/ <
)
ó
ó
< =
==
ó
ó
> @
$str
ó
ó
A C
)
ó
ó
C D
{
ò
ò
 
string
ö
ö
 
mensaje
ö
ö
 "
=
ö
ö
# $
$str
ö
ö
% <
+
ö
ö
= >
obj
ö
ö
? B
.
ö
ö
B C
TypeDescriptor
ö
ö
C Q
.
ö
ö
Q R
Name
ö
ö
R V
+
ö
ö
W X
$str
ö
ö
Y ]
+
ö
ö
^ _
obj
ö
ö
` c
.
ö
ö
c d
Name
ö
ö
d h
+
ö
ö
i j
$str
ö
ö
k n
+
ö
ö
o p
obj
ö
ö
q t
.
ö
ö
t u
Descriptionö
ö
u Ä
;ö
ö
Ä Å
PromptDescription
ú
ú
 %
pd
ú
ú
& (
=
ú
ú
) *
new
ú
ú
+ .
PromptDescription
ú
ú
/ @
(
ú
ú
@ A
mensaje
ú
ú
A H
)
ú
ú
H I
;
ú
ú
I J
DialogResult
ù
ù
  
dr
ù
ù
! #
=
ù
ù
$ %
pd
ù
ù
& (
.
ù
ù
( )

ShowDialog
ù
ù
) 3
(
ù
ù
3 4
)
ù
ù
4 5
;
ù
ù
5 6
if
ü
ü
 
(
ü
ü
 
dr
ü
ü
 
==
ü
ü
 
DialogResult
ü
ü
 *
.
ü
ü
* +
OK
ü
ü
+ -
)
ü
ü
- .
{
†
†
 
obj
°
°
 
.
°
°
 
SetPropertyValue
°
°
 ,
(
°
°
, -
$str
°
°
- :
,
°
°
: ;
pd
°
°
< >
.
°
°
> ?
Description
°
°
? J
)
°
°
J K
;
°
°
K L
obj
¢
¢
 
.
¢
¢
 
Save
¢
¢
  
(
¢
¢
  !
)
¢
¢
! "
;
¢
¢
" #
}
£
£
 
}
ß
ß
 
string
®
®
 
mainstr
®
®
 
=
®
®
  
obj
®
®
! $
.
®
®
$ %$
GetPropertyValueString
®
®
% ;
(
®
®
; <
$str
®
®
< I
)
®
®
I J
;
®
®
J K
string
™
™
 
linea
™
™
 
=
™
™
 
$str
™
™
 ,
+
™
™
- .
Dircopia
™
™
/ 7
+
™
™
8 9
$str
™
™
: A
+
™
™
B C
letra
™
™
D I
+
™
™
J K
obj
™
™
L O
.
™
™
O P
Name
™
™
P T
+
™
™
U V
exts
™
™
W [
+
™
™
\ ]
$str
™
™
^ b
+
™
™
c d
mainstr
™
™
e l
+
™
™
m n
$str
™
™
o x
;
™
™
x y
output
´
´
 
.
´
´
 
AddLine
´
´
 
(
´
´
 
linea
´
´
 $
)
´
´
$ %
;
´
´
% &
objReferenced
¨
¨
 
.
¨
¨
 
Add
¨
¨
 !
(
¨
¨
! "
linea
¨
¨
" '
)
¨
¨
' (
;
¨
¨
( )
if
Æ
Æ
 
(
Æ
Æ
 
!
Æ
Æ
 
(
Æ
Æ
 
obj
Æ
Æ
 
is
Æ
Æ
 
	Procedure
Æ
Æ
 &
)
Æ
Æ
& '
&&
Æ
Æ
( *
!
Æ
Æ
+ ,
(
Æ
Æ
, -
obj
Æ
Æ
- 0
is
Æ
Æ
1 3
	WorkPanel
Æ
Æ
4 =
)
Æ
Æ
= >
&&
Æ
Æ
? A
Dircopia
Æ
Æ
B J
==
Æ
Æ
K M
$str
Æ
Æ
N W
)
Æ
Æ
W X
{
Ø
Ø
 
linea
∞
∞
 
=
∞
∞
 
$str
∞
∞
 )
+
∞
∞
* +
Dircopia
∞
∞
, 4
+
∞
∞
5 6
letra
∞
∞
7 <
+
∞
∞
= >
obj
∞
∞
? B
.
∞
∞
B C
Name
∞
∞
C G
+
∞
∞
H I
$str
∞
∞
J Q
+
∞
∞
R S
mainstr
∞
∞
T [
+
∞
∞
\ ]
$str
∞
∞
^ a
;
∞
∞
a b
output
±
±
 
.
±
±
 
AddLine
±
±
 "
(
±
±
" #
linea
±
±
# (
)
±
±
( )
;
±
±
) *
objReferenced
≤
≤
 !
.
≤
≤
! "
Add
≤
≤
" %
(
≤
≤
% &
linea
≤
≤
& +
)
≤
≤
+ ,
;
≤
≤
, -
}
≥
≥
 
WriteCopyObject
¥
¥
 
(
¥
¥
  
output
¥
¥
  &
,
¥
¥
& '
obj
¥
¥
( +
,
¥
¥
+ ,
objReferenced
¥
¥
- :
,
¥
¥
: ;
	objMarked
¥
¥
< E
,
¥
¥
E F
mainstr
¥
¥
G N
,
¥
¥
N O
Dircopia
¥
¥
P X
)
¥
¥
X Y
;
¥
¥
Y Z
}
∂
∂
 
KBDoctorHelper
∏
∏
 
.
∏
∏
 !
ShowKBDoctorResults
∏
∏
 .
(
∏
∏
. /

outputFile
∏
∏
/ 9
)
∏
∏
9 :
;
∏
∏
: ;
bool
π
π
 
success
π
π
 
=
π
π
 
true
π
π
 
;
π
π
  
output
∫
∫
 
.
∫
∫
 

EndSection
∫
∫
 
(
∫
∫
 
title
∫
∫
 #
,
∫
∫
# $
success
∫
∫
% ,
)
∫
∫
, -
;
∫
∫
- .
}
ª
ª
 	
internal
Ω
Ω
 
static
Ω
Ω
 
void
Ω
Ω
 
SplitMainObject
Ω
Ω
 ,
(
Ω
Ω
, -
)
Ω
Ω
- .
{
æ
æ
 	

IKBService
ø
ø
 
kbserv
ø
ø
 
=
ø
ø
 

UIServices
ø
ø
  *
.
ø
ø
* +
KB
ø
ø
+ -
;
ø
ø
- .
IOutputService
¿
¿
 
output
¿
¿
 !
=
¿
¿
" #
CommonServices
¿
¿
$ 2
.
¿
¿
2 3
Output
¿
¿
3 9
;
¿
¿
9 :
output
¡
¡
 
.
¡
¡
 
StartSection
¡
¡
 
(
¡
¡
  
$str
¡
¡
  3
)
¡
¡
3 4
;
¡
¡
4 5!
SelectObjectOptions
√
√
  
selectObjectOption
√
√
  2
=
√
√
3 4
new
√
√
5 8!
SelectObjectOptions
√
√
9 L
(
√
√
L M
)
√
√
M N
;
√
√
N O 
selectObjectOption
ƒ
ƒ
 
.
ƒ
ƒ
 
MultipleSelection
ƒ
ƒ
 0
=
ƒ
ƒ
1 2
true
ƒ
ƒ
3 7
;
ƒ
ƒ
7 8
KBModel
≈
≈
 
kbModel
≈
≈
 
=
≈
≈
 

UIServices
≈
≈
 (
.
≈
≈
( )
KB
≈
≈
) +
.
≈
≈
+ ,
CurrentModel
≈
≈
, 8
;
≈
≈
8 9 
selectObjectOption
Œ
Œ
 
.
Œ
Œ
 
ObjectTypes
Œ
Œ
 *
.
Œ
Œ
* +
Add
Œ
Œ
+ .
(
Œ
Œ
. / 
KBObjectDescriptor
Œ
Œ
/ A
.
Œ
Œ
A B
Get
Œ
Œ
B E
<
Œ
Œ
E F
	Procedure
Œ
Œ
F O
>
Œ
Œ
O P
(
Œ
Œ
P Q
)
Œ
Œ
Q R
)
Œ
Œ
R S
;
Œ
Œ
S T
foreach
–
–
 
(
–
–
 
	Procedure
–
–
 
viejo
–
–
 $
in
–
–
% '

UIServices
–
–
( 2
.
–
–
2 3 
SelectObjectDialog
–
–
3 E
.
–
–
E F
SelectObjects
–
–
F S
(
–
–
S T 
selectObjectOption
–
–
T f
)
–
–
f g
)
–
–
g h
{
—
—
 
string
”
”
 
objName
”
”
 
=
”
”
  
viejo
”
”
! &
.
”
”
& '
Name
”
”
' +
;
”
”
+ ,
object
‘
‘
 
callProtocol
‘
‘
 #
=
‘
‘
$ %
viejo
‘
‘
& +
.
‘
‘
+ ,
GetPropertyValue
‘
‘
, <
(
‘
‘
< =
$str
‘
‘
= L
)
‘
‘
L M
;
‘
‘
M N
viejo
’
’
 
.
’
’
 
SetPropertyValue
’
’
 &
(
’
’
& '
$str
’
’
' 6
,
’
’
6 7
$str
’
’
8 B
)
’
’
B C
;
’
’
C D
viejo
÷
÷
 
.
÷
÷
 
SetPropertyValue
÷
÷
 &
(
÷
÷
& '
$str
÷
÷
' /
,
÷
÷
/ 0
false
÷
÷
1 6
)
÷
÷
6 7
;
÷
÷
7 8
viejo
◊
◊
 
.
◊
◊
 
SetPropertyValue
◊
◊
 &
(
◊
◊
& '
$str
◊
◊
' 9
,
◊
◊
9 :
ObjectVisibility
◊
◊
; K
.
◊
◊
K L
Public
◊
◊
L R
)
◊
◊
R S
;
◊
◊
S T
viejo
Ÿ
Ÿ
 
.
Ÿ
Ÿ
 
Name
Ÿ
Ÿ
 
=
Ÿ
Ÿ
 
objName
Ÿ
Ÿ
 $
+
Ÿ
Ÿ
% &
$str
Ÿ
Ÿ
' .
;
Ÿ
Ÿ
. /
viejo
⁄
⁄
 
.
⁄
⁄
 
Save
⁄
⁄
 
(
⁄
⁄
 
)
⁄
⁄
 
;
⁄
⁄
 
Artech
‹
‹
 
.
‹
‹
 
Genexus
‹
‹
 
.
‹
‹
 
Common
‹
‹
 %
.
‹
‹
% &
Objects
‹
‹
& -
.
‹
‹
- .
	Procedure
‹
‹
. 7
nuevo
‹
‹
8 =
=
‹
‹
> ?
new
‹
‹
@ C
Artech
‹
‹
D J
.
‹
‹
J K
Genexus
‹
‹
K R
.
‹
‹
R S
Common
‹
‹
S Y
.
‹
‹
Y Z
Objects
‹
‹
Z a
.
‹
‹
a b
	Procedure
‹
‹
b k
(
‹
‹
k l
kbModel
‹
‹
l s
)
‹
‹
s t
;
‹
‹
t u
foreach
›
›
 
(
›
›
 
Artech
›
›
 
.
›
›
  
Common
›
›
  &
.
›
›
& '

Properties
›
›
' 1
.
›
›
1 2
Property
›
›
2 :
prop
›
›
; ?
in
›
›
@ B
viejo
›
›
C H
.
›
›
H I

Properties
›
›
I S
)
›
›
S T
{
ﬁ
ﬁ
 
if
ﬂ
ﬂ
 
(
ﬂ
ﬂ
 
!
ﬂ
ﬂ
 
prop
ﬂ
ﬂ
 
.
ﬂ
ﬂ
 
	IsDefault
ﬂ
ﬂ
 '
)
ﬂ
ﬂ
' (
nuevo
‡
‡
  
.
‡
‡
  !
SetPropertyValue
‡
‡
! 1
(
‡
‡
1 2
prop
‡
‡
2 6
.
‡
‡
6 7
Name
‡
‡
7 ;
,
‡
‡
; <
prop
‡
‡
= A
.
‡
‡
A B
Value
‡
‡
B G
)
‡
‡
G H
;
‡
‡
H I
}
·
·
 
nuevo
‚
‚
 
.
‚
‚
 
SetPropertyValue
‚
‚
 &
(
‚
‚
& '
$str
‚
‚
' -
,
‚
‚
- .
objName
‚
‚
/ 6
)
‚
‚
6 7
;
‚
‚
7 8
nuevo
„
„
 
.
„
„
 
SetPropertyValue
„
„
 &
(
„
„
& '
$str
„
„
' /
,
„
„
/ 0
true
„
„
1 5
)
„
„
5 6
;
„
„
6 7
nuevo
‰
‰
 
.
‰
‰
 
SetPropertyValue
‰
‰
 &
(
‰
‰
& '
$str
‰
‰
' 6
,
‰
‰
6 7
callProtocol
‰
‰
8 D
)
‰
‰
D E
;
‰
‰
E F
viejo
Â
Â
 
.
Â
Â
 
SetPropertyValue
Â
Â
 &
(
Â
Â
& '
$str
Â
Â
' 9
,
Â
Â
9 :
ObjectVisibility
Â
Â
; K
.
Â
Â
K L
Private
Â
Â
L S
)
Â
Â
S T
;
Â
Â
T U
string
Á
Á
 
parm
Á
Á
 
=
Á
Á
 
	Functions
Á
Á
 '
.
Á
Á
' (
ExtractRuleParm
Á
Á
( 7
(
Á
Á
7 8
viejo
Á
Á
8 =
)
Á
Á
= >
;
Á
Á
> ?
string
Ë
Ë
 
parm2
Ë
Ë
 
=
Ë
Ë
 
$str
Ë
Ë
 !
;
Ë
Ë
! "
if
Í
Í
 
(
Í
Í
 
parm
Í
Í
 
!=
Í
Í
 
$str
Í
Í
 
)
Í
Í
 
{
Î
Î
 
nuevo
Ï
Ï
 
.
Ï
Ï
 
Rules
Ï
Ï
 
.
Ï
Ï
  
Source
Ï
Ï
  &
=
Ï
Ï
' (
parm
Ï
Ï
* .
+
Ï
Ï
/ 0
$str
Ï
Ï
1 4
;
Ï
Ï
4 5
parm2
Ó
Ó
 
=
Ó
Ó
 
parm
Ó
Ó
  
.
Ó
Ó
  !
ToLower
Ó
Ó
! (
(
Ó
Ó
( )
)
Ó
Ó
) *
;
Ó
Ó
* +
parm2
Ô
Ô
 
=
Ô
Ô
 
parm2
Ô
Ô
 !
.
Ô
Ô
! "
Replace
Ô
Ô
" )
(
Ô
Ô
) *
$str
Ô
Ô
* 0
,
Ô
Ô
0 1
$str
Ô
Ô
2 4
)
Ô
Ô
4 5
;
Ô
Ô
5 6
parm2


 
=


 
parm2


 !
.


! "
Replace


" )
(


) *
$str


* /
,


/ 0
$str


1 3
)


3 4
;


4 5
parm2
Ò
Ò
 
=
Ò
Ò
 
parm2
Ò
Ò
 !
.
Ò
Ò
! "
Replace
Ò
Ò
" )
(
Ò
Ò
) *
$str
Ò
Ò
* 0
,
Ò
Ò
0 1
$str
Ò
Ò
2 4
)
Ò
Ò
4 5
;
Ò
Ò
5 6
parm2
Ú
Ú
 
=
Ú
Ú
 
parm2
Ú
Ú
 !
.
Ú
Ú
! "
Replace
Ú
Ú
" )
(
Ú
Ú
) *
$str
Ú
Ú
* 2
,
Ú
Ú
2 3
$str
Ú
Ú
4 6
)
Ú
Ú
6 7
;
Ú
Ú
7 8
parm2
Û
Û
 
=
Û
Û
 
parm2
Û
Û
 !
.
Û
Û
! "
Replace
Û
Û
" )
(
Û
Û
) *
$str
Û
Û
* -
,
Û
Û
- .
$str
Û
Û
/ 1
)
Û
Û
1 2
;
Û
Û
2 3
parm2
Ù
Ù
 
=
Ù
Ù
 
parm2
Ù
Ù
 !
.
Ù
Ù
! "
Replace
Ù
Ù
" )
(
Ù
Ù
) *
$str
Ù
Ù
* -
,
Ù
Ù
- .
$str
Ù
Ù
/ 1
)
Ù
Ù
1 2
;
Ù
Ù
2 3
}
ˆ
ˆ
 
;
ˆ
ˆ
 
nuevo
¯
¯
 
.
¯
¯
 
ProcedurePart
¯
¯
 #
.
¯
¯
# $
Source
¯
¯
$ *
=
¯
¯
+ ,
objName
¯
¯
0 7
+
¯
¯
8 9
$str
¯
¯
: G
+
¯
¯
H I
parm2
¯
¯
J O
+
¯
¯
P Q
$str
¯
¯
R V
;
¯
¯
V W
foreach
˙
˙
 
(
˙
˙
 
Variable
˙
˙
 !
v
˙
˙
" #
in
˙
˙
$ &
viejo
˙
˙
' ,
.
˙
˙
, -
	Variables
˙
˙
- 6
.
˙
˙
6 7
	Variables
˙
˙
7 @
)
˙
˙
@ A
{
˚
˚
 
if
¸
¸
 
(
¸
¸
 
!
¸
¸
 
v
¸
¸
 
.
¸
¸
 

IsStandard
¸
¸
 %
)
¸
¸
% &
nuevo
˝
˝
 "
.
˝
˝
" #
	Variables
˝
˝
# ,
.
˝
˝
, -
Add
˝
˝
- 0
(
˝
˝
0 1
v
˝
˝
1 2
)
˝
˝
2 3
;
˝
˝
3 4
}
˛
˛
 
try
ˇ
ˇ
 
{
ÄÄ 
output
ÅÅ 
.
ÅÅ 
AddWarningLine
ÅÅ )
(
ÅÅ) *
$str
ÅÅ* 8
+
ÅÅ9 :
nuevo
ÅÅ; @
.
ÅÅ@ A
Name
ÅÅA E
+
ÅÅF G
$str
ÅÅH U
+
ÅÅV W
callProtocol
ÅÅX d
)
ÅÅd e
;
ÅÅe f
nuevo
ÉÉ 
.
ÉÉ 
Save
ÉÉ 
(
ÉÉ 
)
ÉÉ  
;
ÉÉ  !
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ  
e
ÖÖ! "
)
ÖÖ" #
{
ÜÜ 
output
áá 
.
áá 
AddErrorLine
áá '
(
áá' (
e
áá( )
.
áá) *
Message
áá* 1
+
áá2 3
$str
áá4 9
+
áá: ;
e
áá< =
.
áá= >
InnerException
áá> L
)
ááL M
;
ááM N
output
àà 
.
àà 
AddErrorLine
àà '
(
àà' (
$str
àà( ;
+
àà< =
objName
àà> E
+
ààF G
$str
ààH a
)
ààa b
;
ààb c
output
ââ 
.
ââ 
AddLine
ââ "
(
ââ" #
$str
ââ# ,
+
ââ- .
parm
ââ/ 3
+
ââ4 5
$str
ââ6 @
+
ââA B
parm2
ââC H
)
ââH I
;
ââI J
nuevo
ãã 
.
ãã 
ProcedurePart
ãã '
.
ãã' (
Source
ãã( .
=
ãã/ 0
$str
ãã1 5
+
ãã5 6
objName
ãã7 >
+
ãã? @
$str
ããA N
+
ããO P
parm2
ããQ V
+
ããW X
$str
ããY ]
;
ãã] ^
nuevo
åå 
.
åå 
Rules
åå 
.
åå  
Source
åå  &
=
åå' (
$str
åå) -
+
åå. /
parm
åå0 4
+
åå5 6
$str
åå7 :
;
åå: ;
nuevo
çç 
.
çç 
Save
çç 
(
çç 
)
çç  
;
çç  !
}
êê 
;
êê 
}
ëë 
output
íí 
.
íí 

EndSection
íí 
(
íí 
$str
íí 1
,
íí1 2
true
íí2 6
)
íí6 7
;
íí7 8
}
ìì 	
public
ïï 
static
ïï 
void
ïï 
CalculateCheckSum
ïï ,
(
ïï, -
)
ïï- .
{
ññ 	

IKBService
óó 
kbserv
óó 
=
óó 

UIServices
óó  *
.
óó* +
KB
óó+ -
;
óó- .
IOutputService
òò 
output
òò !
=
òò" #
CommonServices
òò$ 2
.
òò2 3
Output
òò3 9
;
òò9 :%
SpecificationListHelper
ôô #
helper
ôô$ *
=
ôô+ ,
new
ôô- 0%
SpecificationListHelper
ôô1 H
(
ôôH I
kbserv
ôôI O
.
ôôO P
CurrentModel
ôôP \
.
ôô\ ]
Environment
ôô] h
.
ôôh i
TargetModel
ôôi t
)
ôôt u
;
ôôu v
string
õõ 
title
õõ 
=
õõ 
$str
õõ G
;
õõG H
output
úú 
.
úú 
StartSection
úú 
(
úú  
title
úú  %
)
úú% &
;
úú& '
string
ûû 
	fechahora
ûû 
=
ûû 
String
ûû %
.
ûû% &
Format
ûû& ,
(
ûû, -
$str
ûû- B
,
ûûB C
DateTime
ûûD L
.
ûûL M
Now
ûûM P
)
ûûP Q
;
ûûQ R
string
üü 
newDir
üü 
=
üü 
KBDoctorHelper
üü *
.
üü* +"
ObjComparerDirectory
üü+ ?
(
üü? @
kbserv
üü@ F
)
üüF G
+
üüH I
$str
üüJ R
+
üüS T
	fechahora
üüU ^
+
üü_ `
$str
üüa e
;
üüe f
	Directory
†† 
.
†† 
CreateDirectory
†† %
(
††% &
newDir
††& ,
)
††, -
;
††- .
StringCollection
¢¢ 
objReferenced
¢¢ *
=
¢¢+ ,
new
¢¢- 0
StringCollection
¢¢1 A
(
¢¢A B
)
¢¢B C
;
¢¢C D
int
¶¶ 
iObj
¶¶ 
=
¶¶ 
$num
¶¶ 
;
¶¶ 
foreach
ßß 
(
ßß 
KBObject
ßß 
obj
ßß !
in
ßß" $
kbserv
ßß% +
.
ßß+ ,
CurrentModel
ßß, 8
.
ßß8 9
Objects
ßß9 @
.
ßß@ A
GetAll
ßßA G
(
ßßG H
)
ßßH I
)
ßßI J
{
®® 
if
©© 
(
©© 
!
©© 
(
©© 
obj
©© 
is
©© 
Domain
©© #
|
©©$ %
obj
©©& )
is
©©* ,
Theme
©©- 2
|
©©3 4
obj
©©5 8
is
©©9 ;
DataView
©©< D
|
©©E F
obj
©©G J
is
©©K M
Index
©©N S
|
©©T U
obj
©©V Y
is
©©Z \

KBCategory
©©] g
|
©©h i
obj
©©j m
is
©©n p
DataProvider
©©q }
|
©©~ 
obj©©Ä É
is©©Ñ Ü
Menubar©©á é
|©©è ê
obj©©ë î
is©©ï ó
DataView©©ò †
|©©° ¢
obj©©£ ¶
is©©ß ©
Diagram©©™ ±
|©©≤ ≥
obj©©¥ ∑
is©©∏ ∫
Folder©©ª ¡
|©©¬ √
obj©©ƒ «
is©©»  
Image©©À –
|©©— “
obj
™™ 
is
™™ 
ExternalObject
™™ )
|
™™* +
obj
™™, /
is
™™0 2

ThemeClass
™™3 =
|
™™> ?
obj
™™@ C
is
™™D F

ThemeColor
™™G Q
|
™™R S
obj
™™T W
is
™™X Z
DataViewIndex
™™[ h
)
™™h i
)
™™i j
{
´´ 
iObj
¨¨ 
+=
¨¨ 
$num
¨¨ 
;
¨¨ 
if
≠≠ 
(
≠≠ 
(
≠≠ 
iObj
≠≠ 
%
≠≠ 
$num
≠≠  #
)
≠≠# $
==
≠≠% '
$num
≠≠( )
)
≠≠) *
{
ÆÆ 
output
ØØ 
.
ØØ 
AddLine
ØØ &
(
ØØ& '
obj
ØØ' *
.
ØØ* +
GetFullName
ØØ+ 6
(
ØØ6 7
)
ØØ7 8
)
ØØ8 9
;
ØØ9 :
}
∞∞ #
WriteObjectToTextFile
±± )
(
±±) *
obj
±±* -
,
±±- .
newDir
±±/ 5
)
±±5 6
;
±±6 7
}
≤≤ 
}
≥≥ 
bool
µµ 
success
µµ 
=
µµ 
true
µµ 
;
µµ  
output
∂∂ 
.
∂∂ 

EndSection
∂∂ 
(
∂∂ 
title
∂∂ #
,
∂∂# $
success
∂∂% ,
)
∂∂, -
;
∂∂- .
}
∑∑ 	
public
ππ 
static
ππ 
void
ππ !
GenerateLocationXML
ππ .
(
ππ. /
)
ππ/ 0
{
∫∫ 	

IKBService
ªª 
kbserv
ªª 
=
ªª 

UIServices
ªª  *
.
ªª* +
KB
ªª+ -
;
ªª- .
IOutputService
ºº 
output
ºº !
=
ºº" #
CommonServices
ºº$ 2
.
ºº2 3
Output
ºº3 9
;
ºº9 :%
SpecificationListHelper
ΩΩ #
helper
ΩΩ$ *
=
ΩΩ+ ,
new
ΩΩ- 0%
SpecificationListHelper
ΩΩ1 H
(
ΩΩH I
kbserv
ΩΩI O
.
ΩΩO P
CurrentModel
ΩΩP \
.
ΩΩ\ ]
Environment
ΩΩ] h
.
ΩΩh i
TargetModel
ΩΩi t
)
ΩΩt u
;
ΩΩu v
string
ææ 
title
ææ 
=
ææ 
$str
ææ >
;
ææ> ?
string
¿¿ 

outputFile
¿¿ 
=
¿¿ 
kbserv
¿¿  &
.
¿¿& '
	CurrentKB
¿¿' 0
.
¿¿0 1
UserDirectory
¿¿1 >
+
¿¿? @
$str
¿¿A Q
;
¿¿Q R
if
¡¡ 
(
¡¡ 
File
¡¡ 
.
¡¡ 
Exists
¡¡ 
(
¡¡ 

outputFile
¡¡ &
)
¡¡& '
)
¡¡' (
{
¬¬ 
File
√√ 
.
√√ 
Delete
√√ 
(
√√ 

outputFile
√√ &
)
√√& '
;
√√' (
}
ƒƒ 
output
∆∆ 
.
∆∆ 
StartSection
∆∆ 
(
∆∆  
title
∆∆  %
)
∆∆% &
;
∆∆& '
output
«« 
.
«« 
AddLine
«« 
(
«« 
$str
«« ?
+
««@ A

outputFile
««B L
)
««L M
;
««M N
KBDoctorXMLWriter
…… 
writer
…… $
=
……% &
new
……' *
KBDoctorXMLWriter
……+ <
(
……< =

outputFile
……= G
,
……G H
Encoding
……I Q
.
……Q R
UTF8
……R V
)
……V W
;
……W X
writer
   
.
   
WriteStartElement
   $
(
  $ %
$str
  % 2
)
  2 3
;
  3 4

KBCategory
ÃÃ 
mainCategory
ÃÃ #
=
ÃÃ$ %

KBCategory
ÃÃ& 0
.
ÃÃ0 1
Get
ÃÃ1 4
(
ÃÃ4 5
kbserv
ÃÃ5 ;
.
ÃÃ; <
CurrentModel
ÃÃ< H
,
ÃÃH I
$str
ÃÃJ Y
)
ÃÃY Z
;
ÃÃZ [
foreach
ÕÕ 
(
ÕÕ 
ExternalObject
ÕÕ #
eobj
ÕÕ$ (
in
ÕÕ) +
kbserv
ÕÕ, 2
.
ÕÕ2 3
CurrentModel
ÕÕ3 ?
.
ÕÕ? @

GetObjects
ÕÕ@ J
<
ÕÕJ K
ExternalObject
ÕÕK Y
>
ÕÕY Z
(
ÕÕZ [
)
ÕÕ[ \
)
ÕÕ\ ]
{
ŒŒ 
if
œœ 
(
œœ 
eobj
œœ 
.
œœ $
GetPropertyValueString
œœ /
(
œœ/ 0

Properties
œœ0 :
.
œœ: ;
EXO
œœ; >
.
œœ> ?
Type
œœ? C
)
œœC D
==
œœE G
$str
œœH N
)
œœN O
{
–– 
writer
““ 
.
““ 
WriteStartElement
““ ,
(
““, -
$str
““- 9
)
““9 :
;
““: ;
writer
”” 
.
”” "
WriteAttributeString
”” /
(
””/ 0
$str
””0 6
,
””6 7
eobj
””8 <
.
””< =
Name
””= A
)
””A B
;
””B C
writer
‘‘ 
.
‘‘ 
WriteStartElement
‘‘ ,
(
‘‘, -
$str
‘‘- 5
)
‘‘5 6
;
‘‘6 7
writer
÷÷ 
.
÷÷  
WriteElementString
÷÷ -
(
÷÷- .
$str
÷÷. 4
,
÷÷4 5
$str
÷÷6 F
)
÷÷F G
;
÷÷G H
writer
◊◊ 
.
◊◊  
WriteElementString
◊◊ -
(
◊◊- .
$str
◊◊. 4
,
◊◊4 5
$str
◊◊6 :
)
◊◊: ;
;
◊◊; <
writer
ÿÿ 
.
ÿÿ  
WriteElementString
ÿÿ -
(
ÿÿ- .
$str
ÿÿ. 7
,
ÿÿ7 8
$str
ÿÿ9 D
)
ÿÿD E
;
ÿÿE F
writer
ŸŸ 
.
ŸŸ  
WriteElementString
ŸŸ -
(
ŸŸ- .
$str
ŸŸ. 6
,
ŸŸ6 7
$str
ŸŸ8 :
)
ŸŸ: ;
;
ŸŸ; <
writer
⁄⁄ 
.
⁄⁄  
WriteElementString
⁄⁄ -
(
⁄⁄- .
$str
⁄⁄. 7
,
⁄⁄7 8
$str
⁄⁄9 =
)
⁄⁄= >
;
⁄⁄> ?
writer
€€ 
.
€€  
WriteElementString
€€ -
(
€€- .
$str
€€. =
,
€€= >
$str
€€? B
)
€€B C
;
€€C D
writer
›› 
.
››  
WriteElementString
›› -
(
››- .
$str
››. ?
,
››? @
$str
››A P
)
››P Q
;
››Q R
writer
ﬁﬁ 
.
ﬁﬁ  
WriteElementString
ﬁﬁ -
(
ﬁﬁ- .
$str
ﬁﬁ. ?
,
ﬁﬁ? @
$str
ﬁﬁA E
)
ﬁﬁE F
;
ﬁﬁF G
writer
ﬂﬂ 
.
ﬂﬂ 
WriteEndElement
ﬂﬂ *
(
ﬂﬂ* +
)
ﬂﬂ+ ,
;
ﬂﬂ, -
writer
‡‡ 
.
‡‡ 
WriteEndElement
‡‡ *
(
‡‡* +
)
‡‡+ ,
;
‡‡, -
writer
‚‚ 
.
‚‚ 
WriteStartElement
‚‚ ,
(
‚‚, -
$str
‚‚- 3
)
‚‚3 4
;
‚‚4 5
writer
„„ 
.
„„ 
WriteStartElement
„„ ,
(
„„, -
$str
„„- =
)
„„= >
;
„„> ?
writer
‰‰ 
.
‰‰  
WriteElementString
‰‰ -
(
‰‰- .
$str
‰‰. D
,
‰‰D E
$str
‰‰F j
)
‰‰j k
;
‰‰k l
writer
ÂÂ 
.
ÂÂ  
WriteElementString
ÂÂ -
(
ÂÂ- .
$str
ÂÂ. C
,
ÂÂC D
$str
ÂÂE M
)
ÂÂM N
;
ÂÂN O
writer
ÊÊ 
.
ÊÊ  
WriteElementString
ÊÊ -
(
ÊÊ- .
$str
ÊÊ. B
,
ÊÊB C
$str
ÊÊD J
)
ÊÊJ K
;
ÊÊK L
writer
ÁÁ 
.
ÁÁ  
WriteElementString
ÁÁ -
(
ÁÁ- .
$str
ÁÁ. F
,
ÁÁF G
$str
ÁÁH N
)
ÁÁN O
;
ÁÁO P
writer
ËË 
.
ËË 
WriteEndElement
ËË *
(
ËË* +
)
ËË+ ,
;
ËË, -
writer
ÈÈ 
.
ÈÈ 
WriteStartElement
ÈÈ ,
(
ÈÈ, -
$str
ÈÈ- B
)
ÈÈB C
;
ÈÈC D
writer
ÍÍ 
.
ÍÍ  
WriteElementString
ÍÍ -
(
ÍÍ- .
$str
ÍÍ. I
,
ÍÍI J
$str
ÍÍK o
)
ÍÍo p
;
ÍÍp q
writer
ÎÎ 
.
ÎÎ  
WriteElementString
ÎÎ -
(
ÎÎ- .
$str
ÎÎ. H
,
ÎÎH I
$str
ÎÎJ W
)
ÎÎW X
;
ÎÎX Y
writer
ÏÏ 
.
ÏÏ  
WriteElementString
ÏÏ -
(
ÏÏ- .
$str
ÏÏ. G
,
ÏÏG H
$str
ÏÏI T
)
ÏÏT U
;
ÏÏU V
writer
ÌÌ 
.
ÌÌ  
WriteElementString
ÌÌ -
(
ÌÌ- .
$str
ÌÌ. K
,
ÌÌK L
$str
ÌÌM X
)
ÌÌX Y
;
ÌÌY Z
writer
ÓÓ 
.
ÓÓ 
WriteEndElement
ÓÓ *
(
ÓÓ* +
)
ÓÓ+ ,
;
ÓÓ, -
writer
ÔÔ 
.
ÔÔ 
WriteEndElement
ÔÔ *
(
ÔÔ* +
)
ÔÔ+ ,
;
ÔÔ, -
}
 
}
ÚÚ 
writer
ÛÛ 
.
ÛÛ 
WriteEndElement
ÛÛ "
(
ÛÛ" #
)
ÛÛ# $
;
ÛÛ$ %
writer
ÙÙ 
.
ÙÙ 
Close
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
KBDoctorHelper
ˆˆ 
.
ˆˆ !
ShowKBDoctorResults
ˆˆ .
(
ˆˆ. /

outputFile
ˆˆ/ 9
)
ˆˆ9 :
;
ˆˆ: ;
bool
˜˜ 
success
˜˜ 
=
˜˜ 
true
˜˜ 
;
˜˜  
output
¯¯ 
.
¯¯ 

EndSection
¯¯ 
(
¯¯ 
title
¯¯ #
,
¯¯# $
success
¯¯% ,
)
¯¯, -
;
¯¯- .
}
˙˙ 	
private
¸¸ 
static
¸¸ 
void
¸¸ #
WriteObjectToTextFile
¸¸ 1
(
¸¸1 2
KBObject
¸¸2 :
obj
¸¸; >
,
¸¸> ?
string
¸¸@ F
newDir
¸¸G M
)
¸¸M N
{
˝˝ 	
string
ˇˇ 
name
ˇˇ 
=
ˇˇ 
obj
ˇˇ 
.
ˇˇ 
GetFullName
ˇˇ )
(
ˇˇ) *
)
ˇˇ* +
;
ˇˇ+ ,
name
ÄÄ 
=
ÄÄ 
name
ÄÄ 
.
ÄÄ 
Replace
ÄÄ 
(
ÄÄ  
$str
ÄÄ  #
,
ÄÄ# $
$str
ÄÄ% '
)
ÄÄ' (
;
ÄÄ( )
name
ÅÅ 
=
ÅÅ 
name
ÅÅ 
.
ÅÅ 
Replace
ÅÅ 
(
ÅÅ  
$str
ÅÅ  #
,
ÅÅ# $
$str
ÅÅ% (
)
ÅÅ( )
;
ÅÅ) *
name
ÇÇ 
=
ÇÇ 
name
ÇÇ 
.
ÇÇ 
Replace
ÇÇ 
(
ÇÇ  
$str
ÇÇ  #
,
ÇÇ# $
$str
ÇÇ% (
)
ÇÇ( )
;
ÇÇ) *
name
ÉÉ 
=
ÉÉ 
name
ÉÉ 
.
ÉÉ 
Replace
ÉÉ 
(
ÉÉ  
$str
ÉÉ  $
,
ÉÉ$ %
$str
ÉÉ& )
)
ÉÉ) *
;
ÉÉ* +
name
ÑÑ 
=
ÑÑ 
name
ÑÑ 
.
ÑÑ 
Replace
ÑÑ 
(
ÑÑ  
$str
ÑÑ  #
,
ÑÑ# $
$str
ÑÑ% (
)
ÑÑ( )
;
ÑÑ) *
string
ÜÜ 
FileName
ÜÜ 
=
ÜÜ 
newDir
ÜÜ $
+
ÜÜ% &
name
ÜÜ' +
+
ÜÜ, -
$str
ÜÜ. 4
;
ÜÜ4 5
System
àà 
.
àà 
IO
àà 
.
àà 
StreamWriter
àà "
file
àà# '
=
àà( )
new
àà* -
System
àà. 4
.
àà4 5
IO
àà5 7
.
àà7 8
StreamWriter
àà8 D
(
ààD E
FileName
ààE M
)
ààM N
;
ààN O
switch
ìì 
(
ìì 
obj
ìì 
.
ìì 
TypeDescriptor
ìì &
.
ìì& '
Name
ìì' +
)
ìì+ ,
{
îî 
case
ññ 
$str
ññ  
:
ññ  !
Artech
òò 
.
òò 
Genexus
òò "
.
òò" #
Common
òò# )
.
òò) *
Objects
òò* 1
.
òò1 2
	Attribute
òò2 ;
att
òò< ?
=
òò@ A
(
òòB C
Artech
òòC I
.
òòI J
Genexus
òòJ Q
.
òòQ R
Common
òòR X
.
òòX Y
Objects
òòY `
.
òò` a
	Attribute
òòa j
)
òòj k
obj
òòk n
;
òòn o
file
öö 
.
öö 
	WriteLine
öö "
(
öö" #
	Functions
öö# ,
.
öö, -
ReturnPicture
öö- :
(
öö: ;
att
öö; >
)
öö> ?
)
öö? @
;
öö@ A
if
õõ 
(
õõ 
att
õõ 
.
õõ 
Formula
õõ #
==
õõ$ &
null
õõ' +
)
õõ+ ,
file
úú 
.
úú 
	WriteLine
úú &
(
úú& '
$str
úú' )
)
úú) *
;
úú* +
else
ùù 
file
ûû 
.
ûû 
	WriteLine
ûû &
(
ûû& '
att
ûû' *
.
ûû* +
Formula
ûû+ 2
.
ûû2 3
ToString
ûû3 ;
(
ûû; <
)
ûû< =
)
ûû= >
;
ûû> ?
break
üü 
;
üü 
case
°° 
$str
°°  
:
°°  !
ProcedurePart
¢¢ !
pp
¢¢" $
=
¢¢% &
obj
¢¢' *
.
¢¢* +
Parts
¢¢+ 0
.
¢¢0 1
Get
¢¢1 4
<
¢¢4 5
ProcedurePart
¢¢5 B
>
¢¢B C
(
¢¢C D
)
¢¢D E
;
¢¢E F
if
££ 
(
££ 
pp
££ 
!=
££ 
null
££ "
)
££" #
{
§§ 
file
•• 
.
•• 
	WriteLine
•• &
(
••& '
$str
••' A
)
••A B
;
••B C
file
¶¶ 
.
¶¶ 
	WriteLine
¶¶ &
(
¶¶& '
pp
¶¶' )
.
¶¶) *
Source
¶¶* 0
)
¶¶0 1
;
¶¶1 2
}
ßß 
break
®® 
;
®® 
case
©© 
$str
©© "
:
©©" #
StructurePart
™™ !
sp
™™" $
=
™™% &
obj
™™' *
.
™™* +
Parts
™™+ 0
.
™™0 1
Get
™™1 4
<
™™4 5
StructurePart
™™5 B
>
™™B C
(
™™C D
)
™™D E
;
™™E F
if
´´ 
(
´´ 
sp
´´ 
!=
´´ 
null
´´ "
)
´´" #
{
¨¨ 
file
≠≠ 
.
≠≠ 
	WriteLine
≠≠ &
(
≠≠& '
$str
≠≠' :
)
≠≠: ;
;
≠≠; <
file
ÆÆ 
.
ÆÆ 
	WriteLine
ÆÆ &
(
ÆÆ& '
sp
ÆÆ' )
.
ÆÆ) *
ToString
ÆÆ* 2
(
ÆÆ2 3
)
ÆÆ3 4
)
ÆÆ4 5
;
ÆÆ5 6
}
ØØ 

EventsPart
±± 
ep
±± !
=
±±" #
obj
±±$ '
.
±±' (
Parts
±±( -
.
±±- .
Get
±±. 1
<
±±1 2

EventsPart
±±2 <
>
±±< =
(
±±= >
)
±±> ?
;
±±? @
if
≤≤ 
(
≤≤ 
ep
≤≤ 
!=
≤≤ 
null
≤≤ "
)
≤≤" #
{
≥≥ 
file
¥¥ 
.
¥¥ 
	WriteLine
¥¥ &
(
¥¥& '
$str
¥¥' >
)
¥¥> ?
;
¥¥? @
file
µµ 
.
µµ 
	WriteLine
µµ &
(
µµ& '
ep
µµ' )
.
µµ) *
Source
µµ* 0
)
µµ0 1
;
µµ1 2
}
∂∂ 
break
∏∏ 
;
∏∏ 
case
∫∫ 
$str
∫∫  
:
∫∫  !
	WorkPanel
ªª 
wkp
ªª !
=
ªª" #
(
ªª$ %
	WorkPanel
ªª% .
)
ªª. /
obj
ªª/ 2
;
ªª2 3
ep
ΩΩ 
=
ΩΩ 
obj
ΩΩ 
.
ΩΩ 
Parts
ΩΩ "
.
ΩΩ" #
Get
ΩΩ# &
<
ΩΩ& '

EventsPart
ΩΩ' 1
>
ΩΩ1 2
(
ΩΩ2 3
)
ΩΩ3 4
;
ΩΩ4 5
if
ææ 
(
ææ 
ep
ææ 
!=
ææ 
null
ææ "
)
ææ" #
{
øø 
file
¿¿ 
.
¿¿ 
	WriteLine
¿¿ &
(
¿¿& '
$str
¿¿' >
)
¿¿> ?
;
¿¿? @
file
¡¡ 
.
¡¡ 
	WriteLine
¡¡ &
(
¡¡& '
ep
¡¡' )
.
¡¡) *
Source
¡¡* 0
)
¡¡0 1
;
¡¡1 2
}
¬¬ 
break
√√ 
;
√√ 
case
≈≈ 
$str
≈≈ 
:
≈≈  
WebPanel
«« 
wbp
««  
=
««! "
(
««# $
WebPanel
««$ ,
)
««, -
obj
««- 0
;
««0 1
ep
»» 
=
»» 
obj
»» 
.
»» 
Parts
»» "
.
»»" #
Get
»»# &
<
»»& '

EventsPart
»»' 1
>
»»1 2
(
»»2 3
)
»»3 4
;
»»4 5
if
…… 
(
…… 
ep
…… 
!=
…… 
null
…… "
)
……" #
{
   
file
ÀÀ 
.
ÀÀ 
	WriteLine
ÀÀ &
(
ÀÀ& '
$str
ÀÀ' >
)
ÀÀ> ?
;
ÀÀ? @
file
ÃÃ 
.
ÃÃ 
	WriteLine
ÃÃ &
(
ÃÃ& '
ep
ÃÃ' )
.
ÃÃ) *
Source
ÃÃ* 0
)
ÃÃ0 1
;
ÃÃ1 2
}
ÕÕ 
break
ŒŒ 
;
ŒŒ 
case
—— 
$str
—— #
:
——# $
wbp
”” 
=
”” 
(
”” 
WebPanel
”” #
)
””# $
obj
””$ '
;
””' (
ep
‘‘ 
=
‘‘ 
obj
‘‘ 
.
‘‘ 
Parts
‘‘ "
.
‘‘" #
Get
‘‘# &
<
‘‘& '

EventsPart
‘‘' 1
>
‘‘1 2
(
‘‘2 3
)
‘‘3 4
;
‘‘4 5
if
’’ 
(
’’ 
ep
’’ 
!=
’’ 
null
’’ "
)
’’" #
{
÷÷ 
file
◊◊ 
.
◊◊ 
	WriteLine
◊◊ &
(
◊◊& '
$str
◊◊' >
)
◊◊> ?
;
◊◊? @
file
ÿÿ 
.
ÿÿ 
	WriteLine
ÿÿ &
(
ÿÿ& '
ep
ÿÿ' )
.
ÿÿ) *
Source
ÿÿ* 0
)
ÿÿ0 1
;
ÿÿ1 2
}
ŸŸ 
break
⁄⁄ 
;
⁄⁄ 
case
‹‹ 
$str
‹‹ 
:
‹‹ 
Table
›› 
tbl
›› 
=
›› 
(
››  !
Table
››! &
)
››& '
obj
››' *
;
››* +
foreach
ﬂﬂ 
(
ﬂﬂ 
TableAttribute
ﬂﬂ +
attr
ﬂﬂ, 0
in
ﬂﬂ1 3
tbl
ﬂﬂ4 7
.
ﬂﬂ7 8
TableStructure
ﬂﬂ8 F
.
ﬂﬂF G

Attributes
ﬂﬂG Q
)
ﬂﬂQ R
{
‡‡ 
String
·· 
line
·· #
=
··$ %
$str
··& (
;
··( )
if
‚‚ 
(
‚‚ 
attr
‚‚  
.
‚‚  !
IsKey
‚‚! &
)
‚‚& '
{
„„ 
line
‰‰  
=
‰‰! "
$str
‰‰# &
;
‰‰& '
}
ÂÂ 
else
ÊÊ 
{
ÁÁ 
line
ËË  
=
ËË! "
$str
ËË# &
;
ËË& '
}
ÈÈ 
line
ÎÎ 
+=
ÎÎ 
attr
ÎÎ  $
.
ÎÎ$ %
Name
ÎÎ% )
+
ÎÎ* +
$str
ÎÎ, 0
+
ÎÎ1 2
attr
ÎÎ3 7
.
ÎÎ7 8!
GetPropertiesObject
ÎÎ8 K
(
ÎÎK L
)
ÎÎL M
.
ÎÎM N$
GetPropertyValueString
ÎÎN d
(
ÎÎd e
$str
ÎÎe u
)
ÎÎu v
+
ÎÎw x
$str
ÎÎy |
+
ÎÎ} ~
attrÎÎ É
.ÎÎÉ Ñ#
GetPropertiesObjectÎÎÑ ó
(ÎÎó ò
)ÎÎò ô
.ÎÎô ö&
GetPropertyValueStringÎÎö ∞
(ÎÎ∞ ±
$strÎÎ± ∫
)ÎÎ∫ ª
;ÎÎª º
if
ÌÌ 
(
ÌÌ 
attr
ÌÌ  
.
ÌÌ  !!
IsExternalRedundant
ÌÌ! 4
)
ÌÌ4 5
line
ÓÓ  
+=
ÓÓ! #
$str
ÓÓ$ 9
;
ÓÓ9 :
line
 
+=
 
$str
  (
+
) *
attr
+ /
.
/ 0

IsNullable
0 :
;
: ;
if
ÒÒ 
(
ÒÒ 
attr
ÒÒ  
.
ÒÒ  !
IsRedundant
ÒÒ! ,
)
ÒÒ, -
line
ÚÚ  
+=
ÚÚ! #
$str
ÚÚ$ 0
;
ÚÚ0 1
file
ÙÙ 
.
ÙÙ 
	WriteLine
ÙÙ &
(
ÙÙ& '
line
ÙÙ' +
)
ÙÙ+ ,
;
ÙÙ, -
}
ıı 
break
ˆˆ 
;
ˆˆ 
case
˘˘ 
$str
˘˘ 
:
˘˘ 
SDT
˙˙ 
	sdtToList
˙˙ !
=
˙˙" #
(
˙˙$ %
SDT
˙˙% (
)
˙˙( )
obj
˙˙) ,
;
˙˙, -
if
˚˚ 
(
˚˚ 
	sdtToList
˚˚ !
!=
˚˚" $
null
˚˚% )
)
˚˚) *
{
¸¸ 
file
˝˝ 
.
˝˝ 
	WriteLine
˝˝ &
(
˝˝& '
$str
˝˝' :
)
˝˝: ;
;
˝˝; <
ListStructure
˛˛ %
(
˛˛% &
	sdtToList
˛˛& /
.
˛˛/ 0
SDTStructure
˛˛0 <
.
˛˛< =
Root
˛˛= A
,
˛˛A B
$num
˛˛C D
,
˛˛D E
file
˛˛F J
)
˛˛J K
;
˛˛K L
}
ˇˇ 
break
ÄÄ 
;
ÄÄ 
default
ÇÇ 
:
ÇÇ 
break
ÉÉ 
;
ÉÉ 
}
ÖÖ 
file
ÜÜ 
.
ÜÜ 
Close
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 	
private
ââ 
static
ââ 
void
ââ 
ListStructure
ââ )
(
ââ) *
SDTLevel
ââ* 2
level
ââ3 8
,
ââ8 9
int
ââ: =
tabs
ââ> B
,
ââB C
System
ââD J
.
ââJ K
IO
ââK M
.
ââM N
StreamWriter
ââN Z
file
ââ[ _
)
ââ_ `
{
ää 	
	WriteTabs
ãã 
(
ãã 
tabs
ãã 
,
ãã 
file
ãã  
)
ãã  !
;
ãã! "
file
åå 
.
åå 
Write
åå 
(
åå 
level
åå 
.
åå 
Name
åå !
)
åå! "
;
åå" #
if
çç 
(
çç 
level
çç 
.
çç 
IsCollection
çç "
)
çç" #
file
éé 
.
éé 
Write
éé 
(
éé 
$str
éé .
,
éé. /
level
éé0 5
.
éé5 6 
CollectionItemName
éé6 H
)
ééH I
;
ééI J
file
èè 
.
èè 
	WriteLine
èè 
(
èè 
)
èè 
;
èè 
foreach
ëë 
(
ëë 
var
ëë 
	childItem
ëë "
in
ëë# %
level
ëë& +
.
ëë+ ,
GetItems
ëë, 4
<
ëë4 5
SDTItem
ëë5 <
>
ëë< =
(
ëë= >
)
ëë> ?
)
ëë? @
ListItem
íí 
(
íí 
	childItem
íí "
,
íí" #
tabs
íí$ (
+
íí) *
$num
íí+ ,
,
íí, -
file
íí. 2
)
íí2 3
;
íí3 4
foreach
ìì 
(
ìì 
var
ìì 

childLevel
ìì #
in
ìì$ &
level
ìì' ,
.
ìì, -
GetItems
ìì- 5
<
ìì5 6
SDTLevel
ìì6 >
>
ìì> ?
(
ìì? @
)
ìì@ A
)
ììA B
ListStructure
îî 
(
îî 

childLevel
îî (
,
îî( )
tabs
îî* .
+
îî/ 0
$num
îî1 2
,
îî2 3
file
îî4 8
)
îî8 9
;
îî9 :
}
ïï 	
private
óó 
static
óó 
void
óó 
ListItem
óó $
(
óó$ %
SDTItem
óó% ,
item
óó- 1
,
óó1 2
int
óó3 6
tabs
óó7 ;
,
óó; <
System
óó= C
.
óóC D
IO
óóD F
.
óóF G
StreamWriter
óóG S
file
óóT X
)
óóX Y
{
òò 	
	WriteTabs
ôô 
(
ôô 
tabs
ôô 
,
ôô 
file
ôô  
)
ôô  !
;
ôô! "
string
öö 
dataType
öö 
=
öö 
item
öö "
.
öö" #
Type
öö# '
.
öö' (
ToString
öö( 0
(
öö0 1
)
öö1 2
.
öö2 3
	Substring
öö3 <
(
öö< =
$num
öö= >
,
öö> ?
$num
öö@ A
)
ööA B
+
ööC D
$str
ööE H
+
ööI J
item
ööK O
.
ööO P
Length
ööP V
.
ööV W
ToString
ööW _
(
öö_ `
)
öö` a
+
ööb c
(
ööd e
item
ööe i
.
ööi j
Decimals
ööj r
>
öös t
$num
ööu v
?
ööw x
$str
ööy |
+
öö} ~
itemöö É
.ööÉ Ñ
DecimalsööÑ å
.ööå ç
ToStringööç ï
(ööï ñ
)ööñ ó
:ööò ô
$strööö ú
)ööú ù
+ööû ü
$ströö† £
+öö§ •
(öö¶ ß
itemööß ´
.öö´ ¨
Signedöö¨ ≤
?öö≥ ¥
$strööµ ∏
:ööπ ∫
$strööª Ω
)ööΩ æ
;ööæ ø
file
õõ 
.
õõ 
	WriteLine
õõ 
(
õõ 
$str
õõ .
,
õõ. /
item
õõ0 4
.
õõ4 5
Name
õõ5 9
,
õõ9 :
dataType
õõ; C
,
õõC D
item
õõE I
.
õõI J
Description
õõJ U
,
õõU V
(
õõW X
item
õõX \
.
õõ\ ]
IsCollection
õõ] i
?
õõj k
$str
õõl {
+
õõ| }
itemõõ~ Ç
.õõÇ É"
CollectionItemNameõõÉ ï
:õõñ ó
$strõõò ö
)õõö õ
)õõõ ú
;õõú ù
}
ûû 	
private
†† 
static
†† 
void
†† 
	WriteTabs
†† %
(
††% &
int
††& )
tabs
††* .
,
††. /
System
††0 6
.
††6 7
IO
††7 9
.
††9 :
StreamWriter
††: F
file
††G K
)
††K L
{
°° 	
while
¢¢ 
(
¢¢ 
tabs
¢¢ 
--
¢¢ 
>
¢¢ 
$num
¢¢ 
)
¢¢ 
file
££ 
.
££ 
Write
££ 
(
££ 
$char
££ 
)
££  
;
££  !
}
§§ 	
private
¶¶ 
static
¶¶ 
void
¶¶ 
WriteCopyObject
¶¶ +
(
¶¶+ ,
IOutputService
¶¶, :
output
¶¶; A
,
¶¶A B
KBObject
¶¶C K
obj
¶¶L O
,
¶¶O P
StringCollection
¶¶Q a
tableOperation
¶¶b p
,
¶¶p q!
KBObjectCollection¶¶r Ñ
	objMarked¶¶Ö é
,¶¶é è
string¶¶ê ñ
mainstr¶¶ó û
,¶¶û ü
string¶¶† ¶
Dircopia¶¶ß Ø
)¶¶Ø ∞
{
ßß 	

IKBService
®® 
kbserv
®® 
=
®® 

UIServices
®®  *
.
®®* +
KB
®®+ -
;
®®- .
string
©© 
linea
©© 
=
©© 
String
©© !
.
©©! "
Format
©©" (
(
©©( )
$str
©©) P
,
©©P Q
Dircopia
©©R Z
,
©©Z [
obj
©©\ _
.
©©_ `
Name
©©` d
,
©©d e
mainstr
©©f m
)
©©m n
;
©©n o
if
´´ 
(
´´ 
!
´´ 
(
´´ 
obj
´´ 
is
´´ 
	Procedure
´´ "
)
´´" #
&&
´´$ &
!
´´' (
(
´´( )
obj
´´) ,
is
´´- /
	WorkPanel
´´0 9
)
´´9 :
&&
´´; =
!
´´> ?
(
´´? @
tableOperation
´´@ N
.
´´N O
Contains
´´O W
(
´´W X
linea
´´X ]
)
´´] ^
)
´´^ _
)
´´_ `
{
¨¨ 
output
≠≠ 
.
≠≠ 
AddLine
≠≠ 
(
≠≠ 
linea
≠≠ $
)
≠≠$ %
;
≠≠% &
output
ÆÆ 
.
ÆÆ 
AddLine
ÆÆ 
(
ÆÆ 
String
ÆÆ %
.
ÆÆ% &
Format
ÆÆ& ,
(
ÆÆ, -
$str
ÆÆ- M
,
ÆÆM N
Dircopia
ÆÆO W
,
ÆÆW X
obj
ÆÆY \
.
ÆÆ\ ]
Name
ÆÆ] a
,
ÆÆa b
mainstr
ÆÆc j
)
ÆÆj k
)
ÆÆk l
;
ÆÆl m
tableOperation
ØØ 
.
ØØ 
Add
ØØ "
(
ØØ" #
linea
ØØ# (
)
ØØ( )
;
ØØ) *
}
∞∞ 
	objMarked
≤≤ 
.
≤≤ 
Add
≤≤ 
(
≤≤ 
obj
≤≤ 
)
≤≤ 
;
≤≤ 
foreach
¥¥ 
(
¥¥ 
EntityReference
¥¥ $
	reference
¥¥% .
in
¥¥/ 1
obj
¥¥2 5
.
¥¥5 6
GetReferences
¥¥6 C
(
¥¥C D
)
¥¥D E
)
¥¥E F
{
µµ 
KBObject
∂∂ 
objRef
∂∂ 
=
∂∂  !
KBObject
∂∂" *
.
∂∂* +
Get
∂∂+ .
(
∂∂. /
obj
∂∂/ 2
.
∂∂2 3
Model
∂∂3 8
,
∂∂8 9
	reference
∂∂: C
.
∂∂C D
To
∂∂D F
)
∂∂F G
;
∂∂G H
if
∏∏ 
(
∏∏ 
(
∏∏ 
objRef
∏∏ 
!=
∏∏ 
null
∏∏ #
)
∏∏# $
&&
∏∏% '
!
∏∏( )
	objMarked
∏∏) 2
.
∏∏2 3
Contains
∏∏3 ;
(
∏∏; <
objRef
∏∏< B
)
∏∏B C
)
∏∏C D
{
ππ 
if
∫∫ 
(
∫∫ 
isMain
∫∫ 
(
∫∫ 
objRef
∫∫ %
)
∫∫% &
)
∫∫& '
return
ªª 
;
ªª 
if
ºº 
(
ºº 
objRef
ºº 
is
ºº !
Transaction
ºº" -
||
ºº. 0
objRef
ºº1 7
is
ºº8 :
	WorkPanel
ºº; D
||
ººE G
objRef
ººH N
is
ººO Q
WebPanel
ººR Z
||
ºº[ ]
objRef
ºº^ d
is
ººe g
Menubar
ººh o
||
ººp r
objRef
ººs y
is
ººz |
	Procedureºº} Ü
||ººá â
objRefººä ê
isººë ì
DataProviderººî †
||ºº° £
objRefºº§ ™
isºº´ ≠
DataSelectorººÆ ∫
)ºº∫ ª
WriteCopyObject
ΩΩ '
(
ΩΩ' (
output
ΩΩ( .
,
ΩΩ. /
objRef
ΩΩ0 6
,
ΩΩ6 7
tableOperation
ΩΩ8 F
,
ΩΩF G
	objMarked
ΩΩH Q
,
ΩΩQ R
mainstr
ΩΩS Z
,
ΩΩZ [
Dircopia
ΩΩ\ d
)
ΩΩd e
;
ΩΩe f
}
øø 
}
¬¬ 
}
√√ 	
public
≈≈ 
static
≈≈ 
void
≈≈ 
ObjectsComplex
≈≈ )
(
≈≈) *
)
≈≈* +
{
∆∆ 	

IKBService
«« 
kbserv
«« 
=
«« 

UIServices
««  *
.
««* +
KB
««+ -
;
««- .
IOutputService
»» 
output
»» !
=
»»" #
CommonServices
»»$ 2
.
»»2 3
Output
»»3 9
;
»»9 :
string
…… 
title
…… 
=
…… 
$str
…… 7
;
……7 8
string
   

outputFile
   
=
   
	Functions
    )
.
  ) *
CreateOutputFile
  * :
(
  : ;
kbserv
  ; A
,
  A B
title
  C H
)
  H I
;
  I J
output
ÕÕ 
.
ÕÕ 
StartSection
ÕÕ 
(
ÕÕ  
title
ÕÕ  %
)
ÕÕ% &
;
ÕÕ& '
KBDoctorXMLWriter
œœ 
writer
œœ $
=
œœ% &
new
œœ' *
KBDoctorXMLWriter
œœ+ <
(
œœ< =

outputFile
œœ= G
,
œœG H
Encoding
œœI Q
.
œœQ R
UTF8
œœR V
)
œœV W
;
œœW X
writer
–– 
.
–– 
	AddHeader
–– 
(
–– 
title
–– "
)
––" #
;
––# $
writer
—— 
.
—— 
AddTableHeader
—— !
(
——! "
new
——" %
string
——& ,
[
——, -
]
——- .
{
——/ 0
$str
——1 9
,
——9 :
$str
——; H
,
——H I
$str
——J P
,
——P Q
$str
——R X
}
——Y Z
)
——Z [
;
——[ \
string
”” 
[
”” 
]
”” 
fileEntries
””  
=
””! "
	Directory
””# ,
.
””, -
GetFiles
””- 5
(
””5 6
KBDoctorHelper
””6 D
.
””D E
SpcDirectory
””E Q
(
””Q R
kbserv
””R X
)
””X Y
,
””Y Z
$str
””[ b
,
””b c
System
””d j
.
””j k
IO
””k m
.
””m n
SearchOption
””n z
.
””z {
AllDirectories””{ â
)””â ä
;””ä ã
foreach
’’ 
(
’’ 
string
’’ 
fileName
’’ $
in
’’% '
fileEntries
’’( 3
)
’’3 4
{
÷÷ 
var
ÿÿ 
length
ÿÿ 
=
ÿÿ 
new
ÿÿ  
System
ÿÿ! '
.
ÿÿ' (
IO
ÿÿ( *
.
ÿÿ* +
FileInfo
ÿÿ+ 3
(
ÿÿ3 4
fileName
ÿÿ4 <
)
ÿÿ< =
.
ÿÿ= >
Length
ÿÿ> D
;
ÿÿD E
string
ŸŸ 
objName
ŸŸ 
=
ŸŸ  
Path
ŸŸ! %
.
ŸŸ% &)
GetFileNameWithoutExtension
ŸŸ& A
(
ŸŸA B
fileName
ŸŸB J
)
ŸŸJ K
;
ŸŸK L
string
€€ 
[
€€ 
]
€€ 
ns
€€ 
=
€€ 
new
€€ !
[
€€! "
]
€€" #
{
€€$ %
$str
€€& /
}
€€0 1
;
€€1 2
foreach
ﬂﬂ 
(
ﬂﬂ 
KBObject
ﬂﬂ !
obj
ﬂﬂ" %
in
ﬂﬂ& (

UIServices
ﬂﬂ) 3
.
ﬂﬂ3 4
KB
ﬂﬂ4 6
.
ﬂﬂ6 7
CurrentModel
ﬂﬂ7 C
.
ﬂﬂC D
Objects
ﬂﬂD K
.
ﬂﬂK L
GetByPartialName
ﬂﬂL \
(
ﬂﬂ\ ]
ns
ﬂﬂ] _
,
ﬂﬂ_ `
objName
ﬂﬂa h
)
ﬂﬂh i
)
ﬂﬂi j
{
‡‡ 
if
‚‚ 
(
‚‚ 
(
‚‚ 
obj
‚‚ 
.
‚‚ 
Name
‚‚ !
==
‚‚" $
objName
‚‚% ,
)
‚‚, -
&&
‚‚. 0
(
‚‚1 2
length
‚‚2 8
>
‚‚9 :
$num
‚‚; A
)
‚‚A B
)
‚‚B C
{
„„ 
writer
‰‰ 
.
‰‰ 
AddTableData
‰‰ +
(
‰‰+ ,
new
‰‰, /
string
‰‰0 6
[
‰‰6 7
]
‰‰7 8
{
‰‰9 :
	Functions
‰‰; D
.
‰‰D E

linkObject
‰‰E O
(
‰‰O P
obj
‰‰P S
)
‰‰S T
,
‰‰T U
obj
‰‰V Y
.
‰‰Y Z
Description
‰‰Z e
,
‰‰e f
obj
‰‰g j
.
‰‰j k
TypeDescriptor
‰‰k y
.
‰‰y z
Name
‰‰z ~
,
‰‰~ 
length‰‰Ä Ü
.‰‰Ü á
ToString‰‰á è
(‰‰è ê
$str‰‰ê î
)‰‰î ï
}‰‰ñ ó
)‰‰ó ò
;‰‰ò ô
output
ÂÂ 
.
ÂÂ 
AddLine
ÂÂ &
(
ÂÂ& '
fileName
ÂÂ' /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÊÊ 
}
ËË 
}
ÈÈ 
writer
ÍÍ 
.
ÍÍ 
	AddFooter
ÍÍ 
(
ÍÍ 
)
ÍÍ 
;
ÍÍ 
writer
ÎÎ 
.
ÎÎ 
Close
ÎÎ 
(
ÎÎ 
)
ÎÎ 
;
ÎÎ 
KBDoctorHelper
ÌÌ 
.
ÌÌ !
ShowKBDoctorResults
ÌÌ .
(
ÌÌ. /

outputFile
ÌÌ/ 9
)
ÌÌ9 :
;
ÌÌ: ;
bool
ÓÓ 
success
ÓÓ 
=
ÓÓ 
true
ÓÓ 
;
ÓÓ  
output
ÔÔ 
.
ÔÔ 

EndSection
ÔÔ 
(
ÔÔ 
title
ÔÔ #
,
ÔÔ# $
success
ÔÔ% ,
)
ÔÔ, -
;
ÔÔ- .
}
ÒÒ 	
public
ÛÛ 
static
ÛÛ 
void
ÛÛ 
ObjectsLegacyCode
ÛÛ ,
(
ÛÛ, -
)
ÛÛ- .
{
ÙÙ 	

IKBService
ıı 
kbserv
ıı 
=
ıı 

UIServices
ıı  *
.
ıı* +
KB
ıı+ -
;
ıı- .
IOutputService
ˆˆ 
output
ˆˆ !
=
ˆˆ" #
CommonServices
ˆˆ$ 2
.
ˆˆ2 3
Output
ˆˆ3 9
;
ˆˆ9 :
string
˜˜ 
[
˜˜ 
]
˜˜ 

legacyCode
˜˜ 
=
˜˜  !
new
˜˜" %
string
˜˜& ,
[
˜˜, -
]
˜˜- .
{
˜˜/ 0
$str
˜˜1 9
,
˜˜9 :
$str
˜˜; H
,
˜˜H I
$str
˜˜J P
,
˜˜P Q
$str
˜˜R Y
,
˜˜Y Z
$str
˜˜[ a
,
˜˜a b
$str
˜˜c l
,
˜˜l m
$str
˜˜n v
,
˜˜v w
$str
˜˜x 
,˜˜ Ä
$str˜˜Å Ü
,˜˜Ü á
$str˜˜à ë
,˜˜ë í
$str˜˜ì õ
,˜˜õ ú
$str˜˜ù §
,˜˜§ •
$str˜˜¶ ¨
,˜˜¨ ≠
$str˜˜Æ µ
,˜˜µ ∂
$str˜˜∑ ø
}˜˜¿ ¡
;˜˜¡ ¬
string
¯¯ 
titulo
¯¯ 
=
¯¯ 
$str
¯¯ >
;
¯¯> ?
string
˘˘ 

outputFile
˘˘ 
=
˘˘ 
	Functions
˘˘  )
.
˘˘) *
CreateOutputFile
˘˘* :
(
˘˘: ;
kbserv
˘˘; A
,
˘˘A B
titulo
˘˘C I
)
˘˘I J
;
˘˘J K
KBDoctorXMLWriter
˚˚ 
writer
˚˚ $
=
˚˚% &
new
˚˚' *
KBDoctorXMLWriter
˚˚+ <
(
˚˚< =

outputFile
˚˚= G
,
˚˚G H
Encoding
˚˚I Q
.
˚˚Q R
UTF8
˚˚R V
)
˚˚V W
;
˚˚W X
output
˝˝ 
.
˝˝ 
StartSection
˝˝ 
(
˝˝  
titulo
˝˝  &
)
˝˝& '
;
˝˝' (
writer
˛˛ 
.
˛˛ 
	AddHeader
˛˛ 
(
˛˛ 
titulo
˛˛ #
)
˛˛# $
;
˛˛$ %
writer
ˇˇ 
.
ˇˇ 
AddTableHeader
ˇˇ !
(
ˇˇ! "

legacyCode
ˇˇ" ,
)
ˇˇ, -
;
ˇˇ- .
int
ÄÄ 
objWithLegacyCode
ÄÄ !
=
ÄÄ" #
$num
ÄÄ$ %
;
ÄÄ% &
foreach
ÇÇ 
(
ÇÇ 
KBObject
ÇÇ 
obj
ÇÇ !
in
ÇÇ" $

UIServices
ÇÇ% /
.
ÇÇ/ 0
KB
ÇÇ0 2
.
ÇÇ2 3
CurrentModel
ÇÇ3 ?
.
ÇÇ? @
Objects
ÇÇ@ G
.
ÇÇG H
GetAll
ÇÇH N
(
ÇÇN O
)
ÇÇO P
)
ÇÇP Q
{
ÉÉ 
if
ÖÖ 
(
ÖÖ 
obj
ÖÖ 
is
ÖÖ 
Transaction
ÖÖ &
||
ÖÖ' )
obj
ÖÖ* -
is
ÖÖ. 0
WebPanel
ÖÖ1 9
||
ÖÖ: <
obj
ÖÖ= @
is
ÖÖA C
	Procedure
ÖÖD M
||
ÖÖN P
obj
ÖÖQ T
is
ÖÖU W
	WorkPanel
ÖÖX a
)
ÖÖa b
{
ÜÜ 
if
àà 
(
àà 
isGenerated
àà #
(
àà# $
obj
àà$ '
)
àà' (
)
àà( )
{
ââ 
output
ää 
.
ää 
AddLine
ää &
(
ää& '
obj
ää' *
.
ää* +
Name
ää+ /
)
ää/ 0
;
ää0 1
string
åå 
source
åå %
=
åå& '
ObjectSource
åå( 4
(
åå4 5
obj
åå5 8
)
åå8 9
;
åå9 :
source
çç 
=
çç  
	Functions
çç! *
.
çç* +
RemoveEmptyLines
çç+ ;
(
çç; <
source
çç< B
)
ççB C
;
ççC D
string
éé 
sourceWOComments
éé /
=
éé0 1
	Functions
éé2 ;
.
éé; <
ExtractComments
éé< K
(
ééK L
source
ééL R
)
ééR S
;
ééS T
bool
èè 
hasLegacyCode
èè *
=
èè+ ,
false
èè- 2
;
èè2 3
string
êê 
[
êê 
]
êê  
data
êê! %
=
êê& '
new
êê( +
string
êê, 2
[
êê2 3

legacyCode
êê3 =
.
êê= >
Length
êê> D
]
êêD E
;
êêE F
data
ëë 
[
ëë 
$num
ëë 
]
ëë 
=
ëë  !
	Functions
ëë" +
.
ëë+ ,

linkObject
ëë, 6
(
ëë6 7
obj
ëë7 :
)
ëë: ;
;
ëë; <
data
íí 
[
íí 
$num
íí 
]
íí 
=
íí  !
obj
íí" %
.
íí% &
Description
íí& 1
;
íí1 2
data
ìì 
[
ìì 
$num
ìì 
]
ìì 
=
ìì  !
obj
ìì" %
.
ìì% &
TypeDescriptor
ìì& 4
.
ìì4 5
Name
ìì5 9
;
ìì9 :
for
ïï 
(
ïï 
int
ïï  
i
ïï! "
=
ïï# $
$num
ïï% &
;
ïï& '
i
ïï( )
<
ïï* +

legacyCode
ïï, 6
.
ïï6 7
Length
ïï7 =
;
ïï= >
i
ïï? @
++
ïï@ B
)
ïïB C
{
ññ 
if
óó 
(
óó  
sourceWOComments
óó  0
.
óó0 1
Contains
óó1 9
(
óó9 :

legacyCode
óó: D
[
óóD E
i
óóE F
]
óóF G
.
óóG H
ToUpper
óóH O
(
óóO P
)
óóP Q
)
óóQ R
)
óóR S
{
òò 
data
ôô  $
[
ôô$ %
i
ôô% &
]
ôô& '
=
ôô( )
$str
ôô* 3
;
ôô3 4
hasLegacyCode
öö  -
=
öö. /
true
öö0 4
;
öö4 5
}
õõ 
else
úú  
{
ùù 
data
ûû  $
[
ûû$ %
i
ûû% &
]
ûû& '
=
ûû( )
$str
ûû* ,
;
ûû, -
}
üü 
}
†† 
if
°° 
(
°° 
hasLegacyCode
°° )
)
°°) *
{
¢¢ 
writer
££ "
.
££" #
AddTableData
££# /
(
££/ 0
data
££0 4
)
££4 5
;
££5 6
objWithLegacyCode
§§ -
+=
§§. 0
$num
§§1 2
;
§§2 3
}
•• 
}
¶¶ 
}
ßß 
}
®® 
writer
™™ 
.
™™ 
	AddFooter
™™ 
(
™™ 
)
™™ 
;
™™ 
writer
´´ 
.
´´ 
Close
´´ 
(
´´ 
)
´´ 
;
´´ 
KBDoctorHelper
≠≠ 
.
≠≠ !
ShowKBDoctorResults
≠≠ .
(
≠≠. /

outputFile
≠≠/ 9
)
≠≠9 :
;
≠≠: ;
bool
ÆÆ 
success
ÆÆ 
=
ÆÆ 
true
ÆÆ 
;
ÆÆ  
output
ØØ 
.
ØØ 

EndSection
ØØ 
(
ØØ 
titulo
ØØ $
,
ØØ$ %
success
ØØ& -
)
ØØ- .
;
ØØ. /
	Functions
∞∞ 
.
∞∞ 
AddLineSummary
∞∞ $
(
∞∞$ %
titulo
∞∞% +
+
∞∞, -
$str
∞∞. 4
,
∞∞4 5
objWithLegacyCode
∞∞6 G
.
∞∞G H
ToString
∞∞H P
(
∞∞P Q
)
∞∞Q R
)
∞∞R S
;
∞∞S T
}
≤≤ 	
public
¥¥ 
static
¥¥ 
void
¥¥ %
EditLegacyCodeToReplace
¥¥ 2
(
¥¥2 3
)
¥¥3 4
{
µµ 	
string
∂∂ 
filename
∂∂ 
=
∂∂ )
CreateFileWithTextToTeplace
∂∂ 9
(
∂∂9 :
)
∂∂: ;
;
∂∂; <
Process
∑∑ 
.
∑∑ 
Start
∑∑ 
(
∑∑ 
$str
∑∑ '
,
∑∑' (
filename
∑∑) 1
)
∑∑1 2
;
∑∑2 3
}
ππ 	
private
ªª 
static
ªª 
string
ªª )
CreateFileWithTextToTeplace
ªª 9
(
ªª9 :
)
ªª: ;
{
ºº 	

IKBService
ΩΩ 
kbserv
ΩΩ 
=
ΩΩ 

UIServices
ΩΩ  *
.
ΩΩ* +
KB
ΩΩ+ -
;
ΩΩ- .
string
øø 
filename
øø 
=
øø 
kbserv
øø $
.
øø$ %
	CurrentKB
øø% .
.
øø. /
UserDirectory
øø/ <
+
øø= >
$str
øø? N
;
øøN O
if
¿¿ 
(
¿¿ 
!
¿¿ 
File
¿¿ 
.
¿¿ 
Exists
¿¿ 
(
¿¿ 
filename
¿¿ %
)
¿¿% &
)
¿¿& '
{
¡¡ 
File
¬¬ 
.
¬¬ 
WriteAllText
¬¬ !
(
¬¬! "
filename
¬¬" *
,
¬¬* +
Comparer
¬¬, 4
.
¬¬4 5
Replace
¬¬5 <
)
¬¬< =
;
¬¬= >
}
√√ 
return
≈≈ 
filename
≈≈ 
;
≈≈ 
}
∆∆ 	
public
»» 
static
»» 
void
»» 
ChangeLegacyCode
»» +
(
»»+ ,
)
»», -
{
…… 	

IKBService
   
kbserv
   
=
   

UIServices
    *
.
  * +
KB
  + -
;
  - .
IOutputService
ÀÀ 
output
ÀÀ !
=
ÀÀ" #
CommonServices
ÀÀ$ 2
.
ÀÀ2 3
Output
ÀÀ3 9
;
ÀÀ9 :
bool
ÃÃ 
success
ÃÃ 
=
ÃÃ 
true
ÃÃ 
;
ÃÃ  
Regex
ŒŒ 
[
ŒŒ 
]
ŒŒ 
re4
ŒŒ 
=
ŒŒ 
new
ŒŒ 
Regex
ŒŒ #
[
ŒŒ# $
$num
ŒŒ$ %
]
ŒŒ% &
{œœ 
new
–– 
Regex
–– 
(
–– 
$str
–– Y
,
––Y Z
RegexOptions
––[ g
.
––g h
Compiled
––h p
|
––q r
RegexOptions
––s 
.–– Ä

IgnoreCase––Ä ä
)––ã å
,––å ç
new
—— 
Regex
—— 
(
—— 
$str
—— V
,
——W X
RegexOptions
——Y e
.
——e f
Compiled
——f n
|
——o p
RegexOptions
——q }
.
——} ~

IgnoreCase——~ à
)——â ä
,——ä ã
new
““ 
Regex
““ 
(
““ 
$str
““ _
,
““` a
RegexOptions
““b n
.
““n o
Compiled
““o w
|
““x y
RegexOptions““z Ü
.““Ü á

IgnoreCase““á ë
)““ë í
,““í ì
new
”” 
Regex
”” 
(
”” 
$str
”” Y
,
””Y Z
RegexOptions
””[ g
.
””g h
Compiled
””h p
|
””q r
RegexOptions
””s 
.”” Ä

IgnoreCase””Ä ä
)””ä ã
,””ã å
new
’’ 
Regex
’’ 
(
’’ 
$str
’’ Y
,
’’Y Z
RegexOptions
’’[ g
.
’’g h
Compiled
’’h p
|
’’q r
RegexOptions
’’s 
.’’ Ä

IgnoreCase’’Ä ä
)’’ã å
,’’å ç
new
÷÷ 
Regex
÷÷ 
(
÷÷ 
$str
÷÷ V
,
÷÷W X
RegexOptions
÷÷Y e
.
÷÷e f
Compiled
÷÷f n
|
÷÷o p
RegexOptions
÷÷q }
.
÷÷} ~

IgnoreCase÷÷~ à
)÷÷â ä
,÷÷ä ã
new
◊◊ 
Regex
◊◊ 
(
◊◊ 
$str
◊◊ _
,
◊◊` a
RegexOptions
◊◊b n
.
◊◊n o
Compiled
◊◊o w
|
◊◊x y
RegexOptions◊◊z Ü
.◊◊Ü á

IgnoreCase◊◊á ë
)◊◊ë í
,◊◊í ì
new
ÿÿ 
Regex
ÿÿ 
(
ÿÿ 
$str
ÿÿ Y
,
ÿÿY Z
RegexOptions
ÿÿ[ g
.
ÿÿg h
Compiled
ÿÿh p
|
ÿÿq r
RegexOptions
ÿÿs 
.ÿÿ Ä

IgnoreCaseÿÿÄ ä
)ÿÿä ã
,ÿÿã å
new
⁄⁄ 
Regex
⁄⁄ 
(
⁄⁄ 
$str
⁄⁄ K
,
⁄⁄K L
RegexOptions
⁄⁄M Y
.
⁄⁄Y Z
Compiled
⁄⁄Z b
|
⁄⁄c d
RegexOptions
⁄⁄e q
.
⁄⁄q r

IgnoreCase
⁄⁄r |
|
⁄⁄} ~
RegexOptions⁄⁄ ã
.⁄⁄ã å
	Multiline⁄⁄å ï
)⁄⁄ï ñ
}€€ 
;
€€ 
string
‹‹ 
[
‹‹ 
]
‹‹ 

re4Replace
‹‹ 
=
‹‹  !
new
‹‹" %
string
‹‹& ,
[
‹‹, -
$num
‹‹- .
]
‹‹. /
{
›› 
$str
ﬁﬁ 
,
ﬁﬁ 
$str
ﬁﬁ )
,
ﬁﬁ) *
$str
ﬁﬁ* 6
,
ﬁﬁ6 7
$str
ﬁﬁ7 C
,
ﬁﬁC D
$str
ﬂﬂ 
,
ﬂﬂ 
$str
ﬂﬂ  -
,
ﬂﬂ- .
$str
ﬂﬂ0 =
,
ﬂﬂ= >
$str
ﬂﬂ@ M
,
ﬂﬂM N
$str
‡‡ 
}
·· 
;
·· 
string
„„ 
[
„„ 
]
„„ 
lines
„„ 
=
„„ 
System
„„ #
.
„„# $
IO
„„$ &
.
„„& '
File
„„' +
.
„„+ ,
ReadAllLines
„„, 8
(
„„8 9)
CreateFileWithTextToTeplace
„„9 T
(
„„T U
)
„„U V
)
„„V W
;
„„W X
string
‰‰ 
[
‰‰ 
,
‰‰ 
]
‰‰ 
leg
‰‰ 
=
‰‰ 
new
‰‰ 
string
‰‰  &
[
‰‰& '
$num
‰‰' *
,
‰‰* +
$num
‰‰, -
]
‰‰- .
;
‰‰. /
int
ÂÂ 
j
ÂÂ 
=
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
foreach
ÊÊ 
(
ÊÊ 
string
ÊÊ 
line
ÊÊ  
in
ÊÊ! #
lines
ÊÊ$ )
)
ÊÊ) *
{
ÁÁ 
if
ËË 
(
ËË 
!
ËË 
line
ËË 
.
ËË 

StartsWith
ËË $
(
ËË$ %
$str
ËË% (
)
ËË( )
&&
ËË* ,
line
ËË- 1
.
ËË1 2
Contains
ËË2 :
(
ËË: ;
$str
ËË; >
)
ËË> ?
)
ËË? @
{
ÈÈ 
string
ÍÍ 
[
ÍÍ 
]
ÍÍ 
cam
ÍÍ  
=
ÍÍ! "
line
ÍÍ# '
.
ÍÍ' (
Split
ÍÍ( -
(
ÍÍ- .
$char
ÍÍ. 1
)
ÍÍ1 2
;
ÍÍ2 3
leg
ÏÏ 
[
ÏÏ 
j
ÏÏ 
,
ÏÏ 
$num
ÏÏ 
]
ÏÏ 
=
ÏÏ 
cam
ÏÏ  #
[
ÏÏ# $
$num
ÏÏ$ %
]
ÏÏ% &
;
ÏÏ& '
leg
ÌÌ 
[
ÌÌ 
j
ÌÌ 
,
ÌÌ 
$num
ÌÌ 
]
ÌÌ 
=
ÌÌ 
cam
ÌÌ  #
[
ÌÌ# $
$num
ÌÌ$ %
]
ÌÌ% &
;
ÌÌ& '
j
ÓÓ 
+=
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
}
ÔÔ 
}
 
string
ÚÚ 
titulo
ÚÚ 
=
ÚÚ 
$str
ÚÚ K
;
ÚÚK L
output
ÛÛ 
.
ÛÛ 
StartSection
ÛÛ 
(
ÛÛ  
titulo
ÛÛ  &
)
ÛÛ& '
;
ÛÛ' (!
SelectObjectOptions
ıı  
selectObjectOption
ıı  2
=
ıı3 4
new
ıı5 8!
SelectObjectOptions
ıı9 L
(
ııL M
)
ııM N
;
ııN O 
selectObjectOption
ˆˆ 
.
ˆˆ 
MultipleSelection
ˆˆ 0
=
ˆˆ1 2
true
ˆˆ3 7
;
ˆˆ7 8
KBModel
˜˜ 
kbModel
˜˜ 
=
˜˜ 

UIServices
˜˜ (
.
˜˜( )
KB
˜˜) +
.
˜˜+ ,
CurrentModel
˜˜, 8
;
˜˜8 9 
selectObjectOption
˘˘ 
.
˘˘ 
ObjectTypes
˘˘ *
.
˘˘* +
Add
˘˘+ .
(
˘˘. / 
KBObjectDescriptor
˘˘/ A
.
˘˘A B
Get
˘˘B E
<
˘˘E F
	Procedure
˘˘F O
>
˘˘O P
(
˘˘P Q
)
˘˘Q R
)
˘˘R S
;
˘˘S T 
selectObjectOption
˙˙ 
.
˙˙ 
ObjectTypes
˙˙ *
.
˙˙* +
Add
˙˙+ .
(
˙˙. / 
KBObjectDescriptor
˙˙/ A
.
˙˙A B
Get
˙˙B E
<
˙˙E F
Transaction
˙˙F Q
>
˙˙Q R
(
˙˙R S
)
˙˙S T
)
˙˙T U
;
˙˙U V 
selectObjectOption
˚˚ 
.
˚˚ 
ObjectTypes
˚˚ *
.
˚˚* +
Add
˚˚+ .
(
˚˚. / 
KBObjectDescriptor
˚˚/ A
.
˚˚A B
Get
˚˚B E
<
˚˚E F
WebPanel
˚˚F N
>
˚˚N O
(
˚˚O P
)
˚˚P Q
)
˚˚Q R
;
˚˚R S 
selectObjectOption
¸¸ 
.
¸¸ 
ObjectTypes
¸¸ *
.
¸¸* +
Add
¸¸+ .
(
¸¸. / 
KBObjectDescriptor
¸¸/ A
.
¸¸A B
Get
¸¸B E
<
¸¸E F
	WorkPanel
¸¸F O
>
¸¸O P
(
¸¸P Q
)
¸¸Q R
)
¸¸R S
;
¸¸S T
foreach
˛˛ 
(
˛˛ 
KBObject
˛˛ 
obj
˛˛ !
in
˛˛" $

UIServices
˛˛% /
.
˛˛/ 0 
SelectObjectDialog
˛˛0 B
.
˛˛B C
SelectObjects
˛˛C P
(
˛˛P Q 
selectObjectOption
˛˛Q c
)
˛˛c d
)
˛˛d e
{
ˇˇ 
if
ÄÄ 
(
ÄÄ 
obj
ÄÄ 
is
ÄÄ 
Transaction
ÄÄ &
||
ÄÄ' )
obj
ÄÄ* -
is
ÄÄ. 0
WebPanel
ÄÄ1 9
||
ÄÄ: <
obj
ÄÄ= @
is
ÄÄA C
	Procedure
ÄÄD M
||
ÄÄN P
obj
ÄÄQ T
is
ÄÄU W
	WorkPanel
ÄÄX a
)
ÄÄa b
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
isGenerated
ÇÇ #
(
ÇÇ# $
obj
ÇÇ$ '
)
ÇÇ' (
&&
ÇÇ) +
!
ÇÇ, -"
isGeneratedbyPattern
ÇÇ- A
(
ÇÇA B
obj
ÇÇB E
)
ÇÇE F
)
ÇÇF G
{
ÉÉ 
string
ÑÑ 
source
ÑÑ %
=
ÑÑ& '
ObjectSource
ÑÑ( 4
(
ÑÑ4 5
obj
ÑÑ5 8
)
ÑÑ8 9
;
ÑÑ9 :
string
ÖÖ 
	newSource
ÖÖ (
=
ÖÖ) *
source
ÖÖ+ 1
;
ÖÖ1 2
output
áá 
.
áá 
AddLine
áá &
(
áá& '
$str
áá' 0
+
áá1 2
obj
áá3 6
.
áá6 7
Name
áá7 ;
)
áá; <
;
áá< =
if
íí 
(
íí 
!
íí 
(
íí 
	newSource
íí '
.
íí' (
ToLower
íí( /
(
íí/ 0
)
íí0 1
.
íí1 2
Contains
íí2 :
(
íí: ;
$str
íí; A
)
ííA B
||
ííC E
	newSource
ííF O
.
ííO P
ToLower
ííP W
(
ííW X
)
ííX Y
.
ííY Z
Contains
ííZ b
(
ííb c
$str
ííc k
)
íík l
)
ííl m
)
íím n
{
ìì 
for
îî 
(
îî  !
int
îî! $
i
îî% &
=
îî' (
$num
îî) *
;
îî* +
i
îî, -
<
îî. /
(
îî0 1
leg
îî1 4
.
îî4 5
Length
îî5 ;
)
îî; <
/
îî= >
$num
îî? @
;
îî@ A
i
îîB C
++
îîC E
)
îîE F
{
ïï 
	newSource
ññ  )
=
ññ* +
	newSource
ññ, 5
.
ññ5 6
Replace
ññ6 =
(
ññ= >
leg
ññ> A
[
ññA B
i
ññB C
,
ññC D
$num
ññE F
]
ññF G
,
ññG H
leg
ññI L
[
ññL M
i
ññM N
,
ññN O
$num
ññP Q
]
ññQ R
,
ññR S
StringComparison
ññT d
.
ññd e(
InvariantCultureIgnoreCase
ññe 
)ññ Ä
;ññÄ Å
}
óó 
if
ôô 
(
ôô  
source
ôô  &
!=
ôô' )
	newSource
ôô* 3
)
ôô3 4
{
öö 
try
õõ  #
{
úú  !
output
ùù$ *
.
ùù* +
AddLine
ùù+ 2
(
ùù2 3
$str
ùù3 ?
+
ùù@ A
obj
ùùB E
.
ùùE F
Name
ùùF J
)
ùùJ K
;
ùùK L
SaveNewSource
ûû$ 1
(
ûû1 2
obj
ûû2 5
,
ûû5 6
	newSource
ûû7 @
)
ûû@ A
;
ûûA B
}
üü  !
catch
††  %
(
††& '
	Exception
††' 0
e
††1 2
)
††2 3
{
°°  !
output
¢¢$ *
.
¢¢* +
AddErrorLine
¢¢+ 7
(
¢¢7 8
e
¢¢8 9
.
¢¢9 :
Message
¢¢: A
)
¢¢A B
;
¢¢B C
output
££$ *
.
££* +
AddErrorLine
££+ 7
(
££7 8
$str
££8 ]
)
££] ^
;
££^ _
output
§§$ *
.
§§* +
AddLine
§§+ 2
(
§§2 3
	newSource
§§3 <
)
§§< =
;
§§= >
success
••$ +
=
••, -
false
••. 3
;
••3 4
}
¶¶  !
;
¶¶! "
}
®® 
}
™™ 
}
´´ 
}
¨¨ 
}
≠≠ 
output
ØØ 
.
ØØ 

EndSection
ØØ 
(
ØØ 
titulo
ØØ $
,
ØØ$ %
success
ØØ& -
)
ØØ- .
;
ØØ. /
}
±± 	
private
≥≥ 
static
≥≥ 
string
≥≥ 
ReplaceLegacyCode
≥≥ /
(
≥≥/ 0
string
≥≥0 6
	newSource
≥≥7 @
,
≥≥@ A
string
≥≥B H
original
≥≥I Q
,
≥≥Q R
string
≥≥S Y
changeto
≥≥Z b
)
≥≥b c
{
¥¥ 	
	newSource
µµ 
=
µµ 
	newSource
µµ !
.
µµ! "
Replace
µµ" )
(
µµ) *
original
µµ* 2
,
µµ2 3
changeto
µµ4 <
,
µµ< =
StringComparison
µµ> N
.
µµN O&
CurrentCultureIgnoreCase
µµO g
)
µµg h
;
µµh i
return
∂∂ 
	newSource
∂∂ 
;
∂∂ 
}
∑∑ 	
private
ππ 
static
ππ 
void
ππ 
SaveNewSource
ππ )
(
ππ) *
KBObject
ππ* 2
obj
ππ3 6
,
ππ6 7
string
ππ8 >
	newSource
ππ? H
)
ππH I
{
∫∫ 	
if
ºº 
(
ºº 
obj
ºº 
is
ºº 
	Procedure
ºº  
)
ºº  !
{
ΩΩ 
	Procedure
ææ 
p
ææ 
=
ææ 
(
ææ 
	Procedure
ææ (
)
ææ( )
obj
ææ) ,
;
ææ, -
p
øø 
.
øø 
ProcedurePart
øø 
.
øø  
Source
øø  &
=
øø' (
	newSource
øø) 2
;
øø2 3
p
¿¿ 
.
¿¿ 
Save
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
}
¬¬ 
if
√√ 
(
√√ 
obj
√√ 
is
√√ 
WebPanel
√√ 
)
√√  
{
ƒƒ 
WebPanel
≈≈ 
p
≈≈ 
=
≈≈ 
(
≈≈ 
WebPanel
≈≈ &
)
≈≈& '
obj
≈≈' *
;
≈≈* +
p
∆∆ 
.
∆∆ 
Events
∆∆ 
.
∆∆ 
Source
∆∆ 
=
∆∆  !
	newSource
∆∆" +
;
∆∆+ ,
p
«« 
.
«« 
Save
«« 
(
«« 
)
«« 
;
«« 
}
»» 
if
…… 
(
…… 
obj
…… 
is
…… 
Transaction
…… "
)
……" #
{
   
Transaction
ÀÀ 
p
ÀÀ 
=
ÀÀ 
(
ÀÀ  !
Transaction
ÀÀ! ,
)
ÀÀ, -
obj
ÀÀ- 0
;
ÀÀ0 1
p
ÃÃ 
.
ÃÃ 
Events
ÃÃ 
.
ÃÃ 
Source
ÃÃ 
=
ÃÃ  !
	newSource
ÃÃ" +
;
ÃÃ+ ,
p
ÕÕ 
.
ÕÕ 
Save
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
}
ŒŒ 
if
œœ 
(
œœ 
obj
œœ 
is
œœ 
	WorkPanel
œœ  
)
œœ  !
{
–– 
	WorkPanel
—— 
p
—— 
=
—— 
(
—— 
	WorkPanel
—— (
)
——( )
obj
——) ,
;
——, -
p
““ 
.
““ 
Events
““ 
.
““ 
Source
““ 
=
““  !
	newSource
““" +
;
““+ ,
p
”” 
.
”” 
Save
”” 
(
”” 
)
”” 
;
”” 
}
‘‘ 
}
’’ 	
private
◊◊ 
static
◊◊ 
string
◊◊ 
ReplaceOneLegacy
◊◊ .
(
◊◊. /
string
◊◊/ 5
myString
◊◊6 >
,
◊◊> ?
string
◊◊@ F
v
◊◊G H
)
◊◊H I
{
ÿÿ 	
int
⁄⁄ 
from
⁄⁄ 
,
⁄⁄ 
to
⁄⁄ 
;
⁄⁄ 
string
€€ 
	newString
€€ 
=
€€ 
$str
€€ !
;
€€! "
from
›› 
=
›› 
myString
›› 
.
›› 
ToLower
›› #
(
››# $
)
››$ %
.
››% &
IndexOf
››& -
(
››- .
v
››. /
)
››/ 0
;
››0 1
to
ﬁﬁ 
=
ﬁﬁ 
from
ﬁﬁ 
+
ﬁﬁ 
v
ﬁﬁ 
.
ﬁﬁ 
Length
ﬁﬁ  
;
ﬁﬁ  !
string
ﬂﬂ 
aux
ﬂﬂ 
=
ﬂﬂ 
myString
ﬂﬂ !
.
ﬂﬂ! "
	Substring
ﬂﬂ" +
(
ﬂﬂ+ ,
to
ﬂﬂ, .
,
ﬂﬂ. /
myString
ﬂﬂ0 8
.
ﬂﬂ8 9
Length
ﬂﬂ9 ?
-
ﬂﬂ@ A
to
ﬂﬂB D
)
ﬂﬂD E
.
ﬂﬂE F
Trim
ﬂﬂF J
(
ﬂﬂJ K
)
ﬂﬂK L
;
ﬂﬂL M
aux
‡‡ 
=
‡‡ 
aux
‡‡ 
.
‡‡ 
Replace
‡‡ 
(
‡‡ 
$str
‡‡ !
,
‡‡! "
$str
‡‡# %
)
‡‡% &
;
‡‡& '
string
‚‚ 
objeto
‚‚ 
=
‚‚ 
$str
‚‚ 
;
‚‚ 
foreach
„„ 
(
„„ 
var
„„ 
token
„„ 
in
„„ !
aux
„„" %
.
„„% &
Split
„„& +
(
„„+ ,
new
„„, /
char
„„0 4
[
„„4 5
]
„„5 6
{
„„7 8
$char
„„9 <
,
„„< =
$char
„„> A
,
„„A B
$char
„„C F
}
„„G H
)
„„H I
)
„„I J
{
‰‰ 
objeto
ÂÂ 
=
ÂÂ 
token
ÂÂ 
;
ÂÂ 
break
ÁÁ 
;
ÁÁ 
}
ËË 
if
ÈÈ 
(
ÈÈ 
objeto
ÈÈ 
!=
ÈÈ 
$str
ÈÈ 
&&
ÈÈ 
objeto
ÈÈ  &
.
ÈÈ& '
	Substring
ÈÈ' 0
(
ÈÈ0 1
$num
ÈÈ1 2
,
ÈÈ2 3
$num
ÈÈ4 5
)
ÈÈ5 6
!=
ÈÈ7 9
$str
ÈÈ: =
)
ÈÈ= >
{
ÍÍ 
aux
ÎÎ 
=
ÎÎ 
aux
ÎÎ 
.
ÎÎ 
	Substring
ÎÎ #
(
ÎÎ# $
objeto
ÎÎ$ *
.
ÎÎ* +
Length
ÎÎ+ 1
,
ÎÎ1 2
aux
ÎÎ3 6
.
ÎÎ6 7
Length
ÎÎ7 =
-
ÎÎ> ?
objeto
ÎÎ@ F
.
ÎÎF G
Length
ÎÎG M
)
ÎÎM N
;
ÎÎN O
if
ÏÏ 
(
ÏÏ 
aux
ÏÏ 
!=
ÏÏ 
$str
ÏÏ 
&&
ÏÏ  
aux
ÏÏ! $
.
ÏÏ$ %
	Substring
ÏÏ% .
(
ÏÏ. /
$num
ÏÏ/ 0
,
ÏÏ0 1
$num
ÏÏ2 3
)
ÏÏ3 4
==
ÏÏ5 7
$str
ÏÏ8 ;
)
ÏÏ; <
{
ÌÌ 
aux
ÓÓ 
=
ÓÓ 
aux
ÓÓ 
.
ÓÓ 
	Substring
ÓÓ '
(
ÓÓ' (
$num
ÓÓ( )
,
ÓÓ) *
aux
ÓÓ+ .
.
ÓÓ. /
Length
ÓÓ/ 5
-
ÓÓ6 7
$num
ÓÓ8 9
)
ÓÓ9 :
;
ÓÓ: ;
}
ÔÔ 
	newString
ÒÒ 
=
ÒÒ 
myString
ÒÒ $
.
ÒÒ$ %
	Substring
ÒÒ% .
(
ÒÒ. /
$num
ÒÒ/ 0
,
ÒÒ0 1
from
ÒÒ2 6
)
ÒÒ6 7
+
ÒÒ8 9
$str
ÒÒ: =
+
ÒÒ> ?
objeto
ÒÒ@ F
+
ÒÒG H
$str
ÒÒI L
+
ÒÒM N
v
ÒÒO P
.
ÒÒP Q
Trim
ÒÒQ U
(
ÒÒU V
)
ÒÒV W
+
ÒÒX Y
$str
ÒÒZ ]
+
ÒÒ^ _
aux
ÒÒ` c
;
ÒÒc d
}
ÚÚ 
return
ÙÙ 
	newString
ÙÙ 
;
ÙÙ 
}
ˆˆ 	
public
¯¯ 
static
¯¯ 
void
¯¯ *
ObjectsRefactoringCandidates
¯¯ 7
(
¯¯7 8
)
¯¯8 9
{
˘˘ 	

IKBService
˙˙ 
kbserv
˙˙ 
=
˙˙ 

UIServices
˙˙  *
.
˙˙* +
KB
˙˙+ -
;
˙˙- .
IOutputService
˚˚ 
output
˚˚ !
=
˚˚" #
CommonServices
˚˚$ 2
.
˚˚2 3
Output
˚˚3 9
;
˚˚9 :
string
¸¸ 
title
¸¸ 
=
¸¸ 
$str
¸¸ >
;
¸¸> ?
string
˝˝ 

outputFile
˝˝ 
=
˝˝ 
	Functions
˝˝  )
.
˝˝) *
CreateOutputFile
˝˝* :
(
˝˝: ;
kbserv
˝˝; A
,
˝˝A B
title
˝˝C H
)
˝˝H I
;
˝˝I J
output
ÄÄ 
.
ÄÄ 
StartSection
ÄÄ 
(
ÄÄ  
title
ÄÄ  %
)
ÄÄ% &
;
ÄÄ& '
KBDoctorXMLWriter
ÇÇ 
writer
ÇÇ $
=
ÇÇ% &
new
ÇÇ' *
KBDoctorXMLWriter
ÇÇ+ <
(
ÇÇ< =

outputFile
ÇÇ= G
,
ÇÇG H
Encoding
ÇÇI Q
.
ÇÇQ R
UTF8
ÇÇR V
)
ÇÇV W
;
ÇÇW X
writer
ÉÉ 
.
ÉÉ 
	AddHeader
ÉÉ 
(
ÉÉ 
title
ÉÉ "
)
ÉÉ" #
;
ÉÉ# $
writer
ÑÑ 
.
ÑÑ 
AddTableHeader
ÑÑ !
(
ÑÑ! "
new
ÑÑ" %
string
ÑÑ& ,
[
ÑÑ, -
]
ÑÑ- .
{
ÑÑ/ 0
$str
ÑÑ1 9
,
ÑÑ9 :
$str
ÑÑ; H
,
ÑÑH I
$str
ÑÑJ P
,
ÑÑP Q
$str
ÑÑR Z
,
ÑÑZ [
$str
ÑÑ[ c
,
ÑÑc d
$str
ÑÑe s
,
ÑÑs t
$strÑÑu Ç
,ÑÑÇ É
$strÑÑÑ ï
,ÑÑï ñ
$strÑÑó £
,ÑÑ£ §
$strÑÑ• ±
,ÑÑ± ≤
$strÑÑ≥ º
,ÑÑº Ω
$strÑÑæ »
,ÑÑ» …
$strÑÑ  ﬁ
,ÑÑﬁ ﬂ
$strÑÑ‡ ˜
,ÑÑ˜ ¯
$strÑÑ˘ Ñ
,ÑÑÑ Ö
$strÑÑÜ ò
}ÑÑô ö
)ÑÑö õ
;ÑÑõ ú
int
ÜÜ "
ComplexityIndexTotal
ÜÜ $
=
ÜÜ% &
$num
ÜÜ' (
;
ÜÜ( )
int
áá 
ObjectsTotal
áá 
=
áá 
$num
áá  
;
áá  !
foreach
ââ 
(
ââ 
KBObject
ââ 
obj
ââ !
in
ââ" $

UIServices
ââ% /
.
ââ/ 0
KB
ââ0 2
.
ââ2 3
CurrentModel
ââ3 ?
.
ââ? @
Objects
ââ@ G
.
ââG H
GetAll
ââH N
(
ââN O
)
ââO P
)
ââP Q
{
ää 
if
åå 
(
åå 
obj
åå 
is
åå 
Transaction
åå &
||
åå' )
obj
åå* -
is
åå. 0
WebPanel
åå1 9
||
åå: <
obj
åå= @
is
ååA C
	Procedure
ååD M
||
ååN P
obj
ååQ T
is
ååU W
	WorkPanel
ååX a
)
ååa b
{
çç 
if
èè 
(
èè 
isGenerated
èè #
(
èè# $
obj
èè$ '
)
èè' (
&&
èè) +
!
èè, -"
isGeneratedbyPattern
èè- A
(
èèA B
obj
èèB E
)
èèE F
)
èèF G
{
êê 
output
ëë 
.
ëë 
AddLine
ëë &
(
ëë& '
obj
ëë' *
.
ëë* +
Name
ëë+ /
)
ëë/ 0
;
ëë0 1
string
ìì 
source
ìì %
=
ìì& '
	Functions
ìì( 1
.
ìì1 2
ObjectSourceUpper
ìì2 C
(
ììC D
obj
ììD G
)
ììG H
;
ììH I
source
îî 
=
îî  
	Functions
îî! *
.
îî* +
RemoveEmptyLines
îî+ ;
(
îî; <
source
îî< B
)
îîB C
;
îîC D
string
ññ 
sourceWOComments
ññ /
=
ññ0 1
	Functions
ññ2 ;
.
ññ; <
ExtractComments
ññ< K
(
ññK L
source
ññL R
)
ññR S
;
ññS T
sourceWOComments
óó (
=
óó) *
	Functions
óó+ 4
.
óó4 5
RemoveEmptyLines
óó5 E
(
óóE F
sourceWOComments
óóF V
)
óóV W
;
óóW X
int
ôô 
linesSource
ôô '
,
ôô' (
linesComment
ôô) 5
;
ôô5 6
float
öö 
PercentComment
öö ,
;
öö, - 
CountCommentsLines
úú *
(
úú* +
source
úú+ 1
,
úú1 2
sourceWOComments
úú3 C
,
úúC D
out
úúE H
linesSource
úúI T
,
úúT U
out
úúV Y
linesComment
úúZ f
,
úúf g
out
úúh k
PercentComment
úúl z
)
úúz {
;
úú{ |
int
†† 
MaxCodeBlock
†† (
=
††) *
	Functions
††+ 4
.
††4 5
MaxCodeBlock
††5 A
(
††A B
sourceWOComments
††B R
)
††R S
;
††S T
int
°° 
MaxNestLevel
°° (
=
°°) *
	Functions
°°+ 4
.
°°4 5
MaxNestLevel
°°5 A
(
°°A B
sourceWOComments
°°B R
)
°°R S
;
°°S T
int
¢¢ 
ComplexityLevel
¢¢ +
=
¢¢, -
	Functions
¢¢. 7
.
¢¢7 8
ComplexityLevel
¢¢8 G
(
¢¢G H
sourceWOComments
¢¢H X
)
¢¢X Y
;
¢¢Y Z
string
•• 
	ParmINOUT
•• (
=
••) *
	Functions
••+ 4
.
••4 5!
ValidateINOUTinParm
••5 H
(
••H I
obj
••I L
)
••L M
?
••N O
$str
••P W
:
••X Y
$str
••Z \
;
••\ ]
int
¶¶ 
parametersCount
¶¶ +
=
¶¶, -#
ParametersCountObject
¶¶. C
(
¶¶C D
obj
¶¶D G
)
¶¶G H
;
¶¶H I
string
®® 
	Candidate
®® (
=
®®) *
$str
®®+ -
;
®®- .
if
©© 
(
©© 
(
©© 
	ParmINOUT
©© &
==
©©' )
$str
©©* 1
)
©©1 2
||
©©3 5
(
©©6 7
MaxNestLevel
©©7 C
>
©©D E
$num
©©F G
)
©©G H
||
©©I K
(
©©L M
ComplexityLevel
©©M \
>
©©] ^
$num
©©_ a
)
©©a b
||
©©c e
(
©©f g
MaxCodeBlock
©©g s
>
©©t u
$num
©©v y
)
©©y z
||
©©{ }
(
©©~ 
parametersCount©© é
>©©è ê
$num©©ë í
)©©í ì
)©©ì î
{
™™ 
	Candidate
´´ %
=
´´& '
$str
´´( +
;
´´+ ,
}
¨¨ 
int
ÆÆ 
ComplexityIndex
ÆÆ +
=
ÆÆ, -&
CalculateComplexityIndex
ÆÆ. F
(
ÆÆF G
MaxCodeBlock
ÆÆG S
,
ÆÆS T
MaxNestLevel
ÆÆU a
,
ÆÆa b
ComplexityLevel
ÆÆc r
,
ÆÆr s
	ParmINOUT
ÆÆt }
)
ÆÆ} ~
;
ÆÆ~ 
string
∞∞ 
folder
∞∞ %
=
∞∞& '
obj
∞∞( +
.
∞∞+ ,
Parent
∞∞, 2
.
∞∞2 3
Name
∞∞3 7
;
∞∞7 8
string
≤≤ 
codeCommented
≤≤ ,
=
≤≤- .
	Functions
≤≤/ 8
.
≤≤8 9
CodeCommented
≤≤9 F
(
≤≤F G
source
≤≤G M
)
≤≤M N
;
≤≤N O
codeCommented
≥≥ %
=
≥≥& '
codeCommented
≥≥( 5
.
≥≥5 6
Replace
≥≥6 =
(
≥≥= >
$str
≥≥> A
,
≥≥A B
$str
≥≥C E
)
≥≥E F
;
≥≥F G
codeCommented
¥¥ %
=
¥¥& '
codeCommented
¥¥( 5
.
¥¥5 6
Replace
¥¥6 =
(
¥¥= >
$str
¥¥> A
,
¥¥A B
$str
¥¥C E
)
¥¥E F
;
¥¥F G
codeCommented
µµ %
=
µµ& '
codeCommented
µµ( 5
.
µµ5 6
Replace
µµ6 =
(
µµ= >
$str
µµ> A
,
µµA B
$str
µµC E
)
µµE F
;
µµF G
writer
∑∑ 
.
∑∑ 
AddTableData
∑∑ +
(
∑∑+ ,
new
∑∑, /
string
∑∑0 6
[
∑∑6 7
]
∑∑7 8
{
∑∑9 :
	Functions
∑∑; D
.
∑∑D E

linkObject
∑∑E O
(
∑∑O P
obj
∑∑P S
)
∑∑S T
,
∑∑T U
obj
∑∑V Y
.
∑∑Y Z
Description
∑∑Z e
,
∑∑e f
obj
∑∑g j
.
∑∑j k
TypeDescriptor
∑∑k y
.
∑∑y z
Name
∑∑z ~
,
∑∑~ 
obj∑∑Ä É
.∑∑É Ñ
Module∑∑Ñ ä
.∑∑ä ã
Name∑∑ã è
,∑∑ê ë
folder∑∑í ò
,∑∑ò ô
	ParmINOUT∑∑ö £
,∑∑£ §
parametersCount∑∑• ¥
.∑∑¥ µ
ToString∑∑µ Ω
(∑∑Ω æ
)∑∑æ ø
,∑∑ø ¿
codeCommented∑∑¡ Œ
,∑∑Œ œ
PercentComment∑∑– ﬁ
.∑∑ﬁ ﬂ
ToString∑∑ﬂ Á
(∑∑Á Ë
$str∑∑Ë Î
)∑∑Î Ï
,∑∑Ï Ì
linesComment∑∑Ó ˙
.∑∑˙ ˚
ToString∑∑˚ É
(∑∑É Ñ
)∑∑Ñ Ö
,∑∑Ö Ü
linesSource∑∑á í
.∑∑í ì
ToString∑∑ì õ
(∑∑õ ú
)∑∑ú ù
,∑∑ù û
MaxNestLevel∑∑ü ´
.∑∑´ ¨
ToString∑∑¨ ¥
(∑∑¥ µ
)∑∑µ ∂
,∑∑∂ ∑
MaxCodeBlock∑∑∏ ƒ
.∑∑ƒ ≈
ToString∑∑≈ Õ
(∑∑Õ Œ
)∑∑Œ œ
,∑∑œ –
ComplexityLevel∑∑— ‡
.∑∑‡ ·
ToString∑∑· È
(∑∑È Í
)∑∑Í Î
,∑∑Î Ï
	Candidate∑∑Ì ˆ
,∑∑ˆ ˜
ComplexityIndex∑∑¯ á
.∑∑á à
ToString∑∑à ê
(∑∑ê ë
)∑∑ë í
}∑∑ì î
)∑∑î ï
;∑∑ï ñ
ObjectsTotal
∏∏ $
+=
∏∏% '
$num
∏∏( )
;
∏∏) *"
ComplexityIndexTotal
ππ ,
+=
ππ- /
ComplexityIndex
ππ0 ?
;
ππ? @
}
ªª 
}
ΩΩ 
}
øø 
writer
¿¿ 
.
¿¿  
AddTableFooterOnly
¿¿ %
(
¿¿% &
)
¿¿& '
;
¿¿' (
writer
¡¡ 
.
¡¡  
AddTableFooterOnly
¡¡ %
(
¡¡% &
)
¡¡& '
;
¡¡' (
int
ƒƒ 
Average
ƒƒ 
=
ƒƒ "
ComplexityIndexTotal
ƒƒ .
/
ƒƒ/ 0
ObjectsTotal
ƒƒ1 =
;
ƒƒ= >
writer
≈≈ 
.
≈≈ 
AddTableHeader
≈≈ !
(
≈≈! "
new
≈≈" %
string
≈≈& ,
[
≈≈, -
]
≈≈- .
{
≈≈/ 0
$str
≈≈1 C
,
≈≈C D
ObjectsTotal
≈≈E Q
.
≈≈Q R
ToString
≈≈R Z
(
≈≈Z [
)
≈≈[ \
,
≈≈\ ]
$str
≈≈^ w
,
≈≈w x#
ComplexityIndexTotal≈≈y ç
.≈≈ç é
ToString≈≈é ñ
(≈≈ñ ó
)≈≈ó ò
,≈≈ò ô
$str≈≈ö ∑
+≈≈∏ π
Average≈≈∫ ¡
.≈≈¡ ¬
ToString≈≈¬  
(≈≈  À
)≈≈À Ã
}≈≈Õ Œ
)≈≈Œ œ
;≈≈œ –
writer
«« 
.
««  
AddTableFooterOnly
«« %
(
««% &
)
««& '
;
««' (
writer
»» 
.
»»  
AddTableFooterOnly
»» %
(
»»% &
)
»»& '
;
»»' (
writer
…… 
.
……  
AddTableFooterOnly
…… %
(
……% &
)
……& '
;
……' (
writer
   
.
   
Close
   
(
   
)
   
;
   
KBDoctorHelper
ÃÃ 
.
ÃÃ !
ShowKBDoctorResults
ÃÃ .
(
ÃÃ. /

outputFile
ÃÃ/ 9
)
ÃÃ9 :
;
ÃÃ: ;
bool
ÕÕ 
success
ÕÕ 
=
ÕÕ 
true
ÕÕ 
;
ÕÕ  
output
ŒŒ 
.
ŒŒ 

EndSection
ŒŒ 
(
ŒŒ 
title
ŒŒ #
,
ŒŒ# $
success
ŒŒ% ,
)
ŒŒ, -
;
ŒŒ- .
	Functions
œœ 
.
œœ 
AddLineSummary
œœ $
(
œœ$ %
title
œœ% *
+
œœ+ ,
$str
œœ- 3
,
œœ3 4
$str
œœ5 G
+
œœH I
ObjectsTotal
œœJ V
.
œœV W
ToString
œœW _
(
œœ_ `
)
œœ` a
+
œœb c
$str
œœd }
+
œœ~ $
ComplexityIndexTotalœœÄ î
.œœî ï
ToStringœœï ù
(œœù û
)œœû ü
+œœ† °
$strœœ¢ ø
+œœ¿ ¡
Averageœœ¬ …
.œœ…  
ToStringœœ  “
(œœ“ ”
)œœ” ‘
)œœ‘ ’
;œœ’ ÷
}
–– 	
private
““ 
static
““ 
int
““ #
ParametersCountObject
““ 0
(
““0 1
KBObject
““1 9
obj
““: =
)
““= >
{
”” 	
int
‘‘ 
	countparm
‘‘ 
=
‘‘ 
$num
‘‘ 
;
‘‘ 
ICallableObject
’’ 
callableObject
’’ *
=
’’+ ,
obj
’’- 0
as
’’1 3
ICallableObject
’’4 C
;
’’C D
if
÷÷ 
(
÷÷ 
callableObject
÷÷ 
!=
÷÷ !
null
÷÷" &
)
÷÷& '
{
◊◊ 
foreach
ÿÿ 
(
ÿÿ 
	Signature
ÿÿ "
	signature
ÿÿ# ,
in
ÿÿ- /
callableObject
ÿÿ0 >
.
ÿÿ> ?
GetSignatures
ÿÿ? L
(
ÿÿL M
)
ÿÿM N
)
ÿÿN O
{
ŸŸ 
	countparm
⁄⁄ 
=
⁄⁄ 
	signature
⁄⁄  )
.
⁄⁄) *
ParametersCount
⁄⁄* 9
;
⁄⁄9 :
}
€€ 
}
‹‹ 
return
›› 
	countparm
›› 
;
›› 
}
ﬁﬁ 	
public
‡‡ 
static
‡‡ 
void
‡‡  
ObjectsDiagnostics
‡‡ -
(
‡‡- .
)
‡‡. /
{
·· 	

IKBService
‚‚ 
kbserv
‚‚ 
=
‚‚ 

UIServices
‚‚  *
.
‚‚* +
KB
‚‚+ -
;
‚‚- .
IOutputService
„„ 
output
„„ !
=
„„" #
CommonServices
„„$ 2
.
„„2 3
Output
„„3 9
;
„„9 :
string
‰‰ 
title
‰‰ 
=
‰‰ 
$str
‰‰ 3
;
‰‰3 4
string
ÂÂ 

outputFile
ÂÂ 
=
ÂÂ 
	Functions
ÂÂ  )
.
ÂÂ) *
CreateOutputFile
ÂÂ* :
(
ÂÂ: ;
kbserv
ÂÂ; A
,
ÂÂA B
title
ÂÂC H
)
ÂÂH I
;
ÂÂI J
output
ËË 
.
ËË 
StartSection
ËË 
(
ËË  
title
ËË  %
)
ËË% &
;
ËË& '
KBDoctorXMLWriter
ÍÍ 
writer
ÍÍ $
=
ÍÍ% &
new
ÍÍ' *
KBDoctorXMLWriter
ÍÍ+ <
(
ÍÍ< =

outputFile
ÍÍ= G
,
ÍÍG H
Encoding
ÍÍI Q
.
ÍÍQ R
UTF8
ÍÍR V
)
ÍÍV W
;
ÍÍW X
writer
ÎÎ 
.
ÎÎ 
	AddHeader
ÎÎ 
(
ÎÎ 
title
ÎÎ "
)
ÎÎ" #
;
ÎÎ# $
writer
ÏÏ 
.
ÏÏ 
AddTableHeader
ÏÏ !
(
ÏÏ! "
new
ÏÏ" %
string
ÏÏ& ,
[
ÏÏ, -
]
ÏÏ- .
{
ÏÏ/ 0
$str
ÏÏ1 9
,
ÏÏ9 :
$str
ÏÏ; H
,
ÏÏH I
$str
ÏÏJ P
,
ÏÏP Q
$str
ÏÏR ^
,
ÏÏ^ _
$str
ÏÏ` s
,
ÏÏs t
$strÏÏu Ç
,ÏÏÇ É
$strÏÏÑ é
}ÏÏè ê
)ÏÏê ë
;ÏÏë í
string
ÓÓ 
	ErrorCode
ÓÓ 
,
ÓÓ 
ErrorDescription
ÓÓ .
,
ÓÓ. /
Observation
ÓÓ0 ;
,
ÓÓ; <
Solution
ÓÓ= E
;
ÓÓE F!
SelectObjectOptions
ÒÒ  
selectObjectOption
ÒÒ  2
=
ÒÒ3 4
new
ÒÒ5 8!
SelectObjectOptions
ÒÒ9 L
(
ÒÒL M
)
ÒÒM N
;
ÒÒN O 
selectObjectOption
ÚÚ 
.
ÚÚ 
MultipleSelection
ÚÚ 0
=
ÚÚ1 2
true
ÚÚ3 7
;
ÚÚ7 8
KBModel
ÛÛ 
kbModel
ÛÛ 
=
ÛÛ 

UIServices
ÛÛ (
.
ÛÛ( )
KB
ÛÛ) +
.
ÛÛ+ ,
CurrentModel
ÛÛ, 8
;
ÛÛ8 9 
selectObjectOption
ÙÙ 
.
ÙÙ 
ObjectTypes
ÙÙ *
.
ÙÙ* +
Add
ÙÙ+ .
(
ÙÙ. / 
KBObjectDescriptor
ÙÙ/ A
.
ÙÙA B
Get
ÙÙB E
<
ÙÙE F
	Procedure
ÙÙF O
>
ÙÙO P
(
ÙÙP Q
)
ÙÙQ R
)
ÙÙR S
;
ÙÙS T 
selectObjectOption
ıı 
.
ıı 
ObjectTypes
ıı *
.
ıı* +
Add
ıı+ .
(
ıı. / 
KBObjectDescriptor
ıı/ A
.
ııA B
Get
ııB E
<
ııE F
Transaction
ııF Q
>
ııQ R
(
ııR S
)
ııS T
)
ııT U
;
ııU V 
selectObjectOption
ˆˆ 
.
ˆˆ 
ObjectTypes
ˆˆ *
.
ˆˆ* +
Add
ˆˆ+ .
(
ˆˆ. / 
KBObjectDescriptor
ˆˆ/ A
.
ˆˆA B
Get
ˆˆB E
<
ˆˆE F
WebPanel
ˆˆF N
>
ˆˆN O
(
ˆˆO P
)
ˆˆP Q
)
ˆˆQ R
;
ˆˆR S 
selectObjectOption
˜˜ 
.
˜˜ 
ObjectTypes
˜˜ *
.
˜˜* +
Add
˜˜+ .
(
˜˜. / 
KBObjectDescriptor
˜˜/ A
.
˜˜A B
Get
˜˜B E
<
˜˜E F
	WorkPanel
˜˜F O
>
˜˜O P
(
˜˜P Q
)
˜˜Q R
)
˜˜R S
;
˜˜S T
foreach
˘˘ 
(
˘˘ 
KBObject
˘˘ 
obj
˘˘ !
in
˘˘" $

UIServices
˘˘% /
.
˘˘/ 0 
SelectObjectDialog
˘˘0 B
.
˘˘B C
SelectObjects
˘˘C P
(
˘˘P Q 
selectObjectOption
˘˘Q c
)
˘˘c d
)
˘˘d e
{
˙˙ 
if
˚˚ 
(
˚˚ 
isGenerated
˚˚ 
(
˚˚  
obj
˚˚  #
)
˚˚# $
&&
˚˚% '
!
˚˚( )"
isGeneratedbyPattern
˚˚) =
(
˚˚= >
obj
˚˚> A
)
˚˚A B
)
˚˚B C
{
¸¸ 
string
ˇˇ 
source
ˇˇ !
=
ˇˇ" #
	Functions
ˇˇ$ -
.
ˇˇ- .
ObjectSourceUpper
ˇˇ. ?
(
ˇˇ? @
obj
ˇˇ@ C
)
ˇˇC D
;
ˇˇD E
source
ÄÄ 
=
ÄÄ 
	Functions
ÄÄ &
.
ÄÄ& '
RemoveEmptyLines
ÄÄ' 7
(
ÄÄ7 8
source
ÄÄ8 >
)
ÄÄ> ?
;
ÄÄ? @
string
ÇÇ 
sourceWOComments
ÇÇ +
=
ÇÇ, -
	Functions
ÇÇ. 7
.
ÇÇ7 8
ExtractComments
ÇÇ8 G
(
ÇÇG H
source
ÇÇH N
)
ÇÇN O
;
ÇÇO P
sourceWOComments
ÉÉ $
=
ÉÉ% &
	Functions
ÉÉ' 0
.
ÉÉ0 1
RemoveEmptyLines
ÉÉ1 A
(
ÉÉA B
sourceWOComments
ÉÉB R
)
ÉÉR S
;
ÉÉS T
int
ÖÖ 
linesSource
ÖÖ #
,
ÖÖ# $
linesComment
ÖÖ% 1
;
ÖÖ1 2
float
ÜÜ 
PercentComment
ÜÜ (
;
ÜÜ( ) 
CountCommentsLines
àà &
(
àà& '
source
àà' -
,
àà- .
sourceWOComments
àà/ ?
,
àà? @
out
ààA D
linesSource
ààE P
,
ààP Q
out
ààR U
linesComment
ààV b
,
ààb c
out
ààd g
PercentComment
ààh v
)
ààv w
;
ààw x
int
ää 
MaxCodeBlock
ää $
=
ää% &
	Functions
ää' 0
.
ää0 1
MaxCodeBlock
ää1 =
(
ää= >
sourceWOComments
ää> N
)
ääN O
;
ääO P
int
ãã 
MaxNestLevel
ãã $
=
ãã% &
	Functions
ãã' 0
.
ãã0 1
MaxNestLevel
ãã1 =
(
ãã= >
sourceWOComments
ãã> N
)
ããN O
;
ããO P
int
åå 
ComplexityLevel
åå '
=
åå( )
	Functions
åå* 3
.
åå3 4
ComplexityLevel
åå4 C
(
ååC D
sourceWOComments
ååD T
)
ååT U
;
ååU V
string
çç 
	ParmINOUT
çç $
=
çç% &
	Functions
çç' 0
.
çç0 1!
ValidateINOUTinParm
çç1 D
(
ççD E
obj
ççE H
)
ççH I
?
ççJ K
$str
ççL S
:
ççT U
$str
ççV X
;
ççX Y
if
èè 
(
èè 
	ParmINOUT
èè !
==
èè" $
$str
èè% ,
)
èè, -
{
ëë 
	ErrorCode
íí !
=
íí" #
$str
íí$ -
;
íí- .
ErrorDescription
ìì (
=
ìì) *
$str
ìì+ O
;
ììO P
Observation
îî #
=
îî$ %
	Functions
îî& /
.
îî/ 0
ExtractRuleParm
îî0 ?
(
îî? @
obj
îî@ C
)
îîC D
;
îîD E
Solution
ïï  
=
ïï! "
CleanKBHelper
ïï# 0
.
ïï0 1"
ChangeRuleParmWithIN
ïï1 E
(
ïïE F
obj
ïïF I
)
ïïI J
;
ïïJ K
CleanKBHelper
ññ %
.
ññ% &
SaveObjectNewParm
ññ& 7
(
ññ7 8
output
ññ8 >
,
ññ> ?
obj
ññ@ C
,
ññC D
Observation
ññE P
,
ññP Q
Solution
ññR Z
)
ññZ [
;
ññ[ \
writer
óó 
.
óó 
AddTableData
óó +
(
óó+ ,
new
óó, /
string
óó0 6
[
óó6 7
]
óó7 8
{
óó9 :
	Functions
óó; D
.
óóD E

linkObject
óóE O
(
óóO P
obj
óóP S
)
óóS T
,
óóT U
obj
óóV Y
.
óóY Z
Description
óóZ e
,
óóe f
obj
óóg j
.
óój k
TypeDescriptor
óók y
.
óóy z
Name
óóz ~
,
óó~ 
	ErrorCodeóóÄ â
,óóâ ä 
ErrorDescriptionóóã õ
,óóõ ú
Observationóóù ®
,óó® ©
Solutionóó™ ≤
}óó≥ ¥
)óó¥ µ
;óóµ ∂
}
ôô 
string
úú 
	Candidate
úú $
=
úú% &
$str
úú' )
;
úú) *
if
ùù 
(
ùù 
(
ùù 
	ParmINOUT
ùù "
==
ùù# %
$str
ùù& -
)
ùù- .
||
ùù/ 1
(
ùù2 3
MaxNestLevel
ùù3 ?
>
ùù@ A
$num
ùùB D
)
ùùD E
||
ùùF H
(
ùùI J
ComplexityLevel
ùùJ Y
>
ùùZ [
$num
ùù\ ^
)
ùù^ _
||
ùù` b
(
ùùc d
MaxCodeBlock
ùùd p
>
ùùq r
$num
ùùs v
)
ùùv w
)
ùùw x
{
ûû 
	Candidate
üü !
=
üü" #
$str
üü$ '
;
üü' (
}
†† 
int
°° 
ComplexityIndex
°° '
=
°°( )&
CalculateComplexityIndex
°°* B
(
°°B C
MaxCodeBlock
°°C O
,
°°O P
MaxNestLevel
°°Q ]
,
°°] ^
ComplexityLevel
°°_ n
,
°°n o
	ParmINOUT
°°p y
)
°°y z
;
°°z {
if
££ 
(
££ 
ComplexityIndex
££ '
>
££( )
$num
££* -
)
££- .
{
§§ 
	ErrorCode
•• !
=
••" #
$str
••$ -
;
••- .
ErrorDescription
¶¶ (
=
¶¶) *
$str
¶¶+ O
;
¶¶O P
Observation
ßß #
=
ßß$ %
$str
ßß& :
+
ßß; <
ComplexityIndex
ßß= L
.
ßßL M
ToString
ßßM U
(
ßßU V
)
ßßV W
;
ßßW X
Solution
®®  
=
®®! "
$str
®®# %
;
®®% &
writer
©© 
.
©© 
AddTableData
©© +
(
©©+ ,
new
©©, /
string
©©0 6
[
©©6 7
]
©©7 8
{
©©9 :
	Functions
©©; D
.
©©D E

linkObject
©©E O
(
©©O P
obj
©©P S
)
©©S T
,
©©T U
obj
©©V Y
.
©©Y Z
Description
©©Z e
,
©©e f
obj
©©g j
.
©©j k
TypeDescriptor
©©k y
.
©©y z
Name
©©z ~
,
©©~ 
	ErrorCode©©Ä â
,©©â ä 
ErrorDescription©©ã õ
,©©õ ú
Observation©©ù ®
,©©® ©
Solution©©™ ≤
}©©≥ ¥
)©©¥ µ
;©©µ ∂
}
™™ 
string
¨¨ .
 variablesNotBasedAttributesOrDom
¨¨ ;
=
¨¨< =1
#VariablesNotBasedAttributesOrDomain
¨¨> a
(
¨¨a b
obj
¨¨b e
)
¨¨e f
;
¨¨f g
if
ÆÆ 
(
ÆÆ .
 variablesNotBasedAttributesOrDom
ÆÆ 8
!=
ÆÆ9 ;
$str
ÆÆ< >
)
ÆÆ> ?
{
ØØ 
	ErrorCode
∞∞ !
=
∞∞" #
$str
∞∞$ -
;
∞∞- .
ErrorDescription
±± (
=
±±) *
$str
±±+ W
;
±±W X
Observation
≤≤ #
=
≤≤$ %.
 variablesNotBasedAttributesOrDom
≤≤& F
;
≤≤F G
Solution
≥≥  
=
≥≥! "
$str
≥≥# %
;
≥≥% &
writer
¥¥ 
.
¥¥ 
AddTableData
¥¥ +
(
¥¥+ ,
new
¥¥, /
string
¥¥0 6
[
¥¥6 7
]
¥¥7 8
{
¥¥9 :
	Functions
¥¥; D
.
¥¥D E

linkObject
¥¥E O
(
¥¥O P
obj
¥¥P S
)
¥¥S T
,
¥¥T U
obj
¥¥V Y
.
¥¥Y Z
Description
¥¥Z e
,
¥¥e f
obj
¥¥g j
.
¥¥j k
TypeDescriptor
¥¥k y
.
¥¥y z
Name
¥¥z ~
,
¥¥~ 
	ErrorCode¥¥Ä â
,¥¥â ä 
ErrorDescription¥¥ã õ
,¥¥õ ú
Observation¥¥ù ®
,¥¥® ©
Solution¥¥™ ≤
}¥¥≥ ¥
)¥¥¥ µ
;¥¥µ ∂
}
µµ 
}
∆∆ 
}
»» 
writer
…… 
.
……  
AddTableFooterOnly
…… %
(
……% &
)
……& '
;
……' (
writer
   
.
    
AddTableFooterOnly
   %
(
  % &
)
  & '
;
  ' (
writer
ÃÃ 
.
ÃÃ  
AddTableFooterOnly
ÃÃ %
(
ÃÃ% &
)
ÃÃ& '
;
ÃÃ' (
writer
ÕÕ 
.
ÕÕ 
Close
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
KBDoctorHelper
œœ 
.
œœ !
ShowKBDoctorResults
œœ .
(
œœ. /

outputFile
œœ/ 9
)
œœ9 :
;
œœ: ;
bool
–– 
success
–– 
=
–– 
true
–– 
;
––  
output
—— 
.
—— 

EndSection
—— 
(
—— 
title
—— #
,
——# $
success
——% ,
)
——, -
;
——- .
}
““ 	
public
‘‘ 
static
‘‘ 
void
‘‘ !
ObjectsUDPCallables
‘‘ .
(
‘‘. /
)
‘‘/ 0
{
’’ 	

IKBService
÷÷ 
kbserv
÷÷ 
=
÷÷ 

UIServices
÷÷  *
.
÷÷* +
KB
÷÷+ -
;
÷÷- .
IOutputService
◊◊ 
output
◊◊ !
=
◊◊" #
CommonServices
◊◊$ 2
.
◊◊2 3
Output
◊◊3 9
;
◊◊9 :
string
ÿÿ 
title
ÿÿ 
=
ÿÿ 
$str
ÿÿ 4
;
ÿÿ4 5
string
ŸŸ 

outputFile
ŸŸ 
=
ŸŸ 
	Functions
ŸŸ  )
.
ŸŸ) *
CreateOutputFile
ŸŸ* :
(
ŸŸ: ;
kbserv
ŸŸ; A
,
ŸŸA B
title
ŸŸC H
)
ŸŸH I
;
ŸŸI J
string
€€ 
callers
€€ 
=
€€ 
$str
€€ 
;
€€  
output
›› 
.
›› 
StartSection
›› 
(
››  
title
››  %
)
››% &
;
››& '
KBDoctorXMLWriter
ﬂﬂ 
writer
ﬂﬂ $
=
ﬂﬂ% &
new
ﬂﬂ' *
KBDoctorXMLWriter
ﬂﬂ+ <
(
ﬂﬂ< =

outputFile
ﬂﬂ= G
,
ﬂﬂG H
Encoding
ﬂﬂI Q
.
ﬂﬂQ R
UTF8
ﬂﬂR V
)
ﬂﬂV W
;
ﬂﬂW X
writer
‡‡ 
.
‡‡ 
	AddHeader
‡‡ 
(
‡‡ 
title
‡‡ "
)
‡‡" #
;
‡‡# $
writer
·· 
.
·· 
AddTableHeader
·· !
(
··! "
new
··" %
string
··& ,
[
··, -
]
··- .
{
··/ 0
$str
··1 9
,
··9 :
$str
··; H
,
··H I
$str
··J P
,
··P Q
$str
··R Z
,
··Z [
$str
··\ f
,
··f g
$str
··h o
,
··o p
$str··q á
}··à â
)··â ä
;··ä ã
string
„„ 
	ErrorCode
„„ 
,
„„ 
ErrorDescription
„„ .
,
„„. /
Observation
„„0 ;
,
„„; <
Solution
„„= E
;
„„E F!
SelectObjectOptions
ÂÂ  
selectObjectOption
ÂÂ  2
=
ÂÂ3 4
new
ÂÂ5 8!
SelectObjectOptions
ÂÂ9 L
(
ÂÂL M
)
ÂÂM N
;
ÂÂN O 
selectObjectOption
ÊÊ 
.
ÊÊ 
MultipleSelection
ÊÊ 0
=
ÊÊ1 2
true
ÊÊ3 7
;
ÊÊ7 8
KBModel
ÁÁ 
kbModel
ÁÁ 
=
ÁÁ 

UIServices
ÁÁ (
.
ÁÁ( )
KB
ÁÁ) +
.
ÁÁ+ ,
CurrentModel
ÁÁ, 8
;
ÁÁ8 9 
selectObjectOption
ËË 
.
ËË 
ObjectTypes
ËË *
.
ËË* +
Add
ËË+ .
(
ËË. / 
KBObjectDescriptor
ËË/ A
.
ËËA B
Get
ËËB E
<
ËËE F
	Procedure
ËËF O
>
ËËO P
(
ËËP Q
)
ËËQ R
)
ËËR S
;
ËËS T 
selectObjectOption
ÈÈ 
.
ÈÈ 
ObjectTypes
ÈÈ *
.
ÈÈ* +
Add
ÈÈ+ .
(
ÈÈ. / 
KBObjectDescriptor
ÈÈ/ A
.
ÈÈA B
Get
ÈÈB E
<
ÈÈE F
	WorkPanel
ÈÈF O
>
ÈÈO P
(
ÈÈP Q
)
ÈÈQ R
)
ÈÈR S
;
ÈÈS T 
selectObjectOption
ÍÍ 
.
ÍÍ 
ObjectTypes
ÍÍ *
.
ÍÍ* +
Add
ÍÍ+ .
(
ÍÍ. / 
KBObjectDescriptor
ÍÍ/ A
.
ÍÍA B
Get
ÍÍB E
<
ÍÍE F
WebPanel
ÍÍF N
>
ÍÍN O
(
ÍÍO P
)
ÍÍP Q
)
ÍÍQ R
;
ÍÍR S 
selectObjectOption
ÎÎ 
.
ÎÎ 
ObjectTypes
ÎÎ *
.
ÎÎ* +
Add
ÎÎ+ .
(
ÎÎ. / 
KBObjectDescriptor
ÎÎ/ A
.
ÎÎA B
Get
ÎÎB E
<
ÎÎE F
Transaction
ÎÎF Q
>
ÎÎQ R
(
ÎÎR S
)
ÎÎS T
)
ÎÎT U
;
ÎÎU V
foreach
ÌÌ 
(
ÌÌ 
KBObject
ÌÌ 
obj
ÌÌ !
in
ÌÌ" $

UIServices
ÌÌ% /
.
ÌÌ/ 0 
SelectObjectDialog
ÌÌ0 B
.
ÌÌB C
SelectObjects
ÌÌC P
(
ÌÌP Q 
selectObjectOption
ÌÌQ c
)
ÌÌc d
)
ÌÌd e
{
ÓÓ 
output
ÔÔ 
.
ÔÔ 
AddLine
ÔÔ 
(
ÔÔ 
obj
ÔÔ "
.
ÔÔ" #
Name
ÔÔ# '
)
ÔÔ' (
;
ÔÔ( )
callers
 
=
 '
ChangeUDPCallWhenNecesary
 3
(
3 4
obj
4 7
)
7 8
;
8 9
if
ÚÚ 
(
ÚÚ 
callers
ÚÚ 
!=
ÚÚ 
$str
ÚÚ !
)
ÚÚ! "
{
ÛÛ 
string
ÙÙ 
Parms
ÙÙ  
=
ÙÙ! "
	Functions
ÙÙ# ,
.
ÙÙ, -
ExtractRuleParm
ÙÙ- <
(
ÙÙ< =
obj
ÙÙ= @
)
ÙÙ@ A
;
ÙÙA B
writer
ıı 
.
ıı 
AddTableData
ıı '
(
ıı' (
new
ıı( +
string
ıı, 2
[
ıı2 3
]
ıı3 4
{
ıı5 6
	Functions
ıı7 @
.
ıı@ A

linkObject
ııA K
(
ııK L
obj
ııL O
)
ııO P
,
ııP Q
obj
ııR U
.
ııU V
Description
ııV a
,
ııa b
obj
ııc f
.
ııf g
TypeDescriptor
ııg u
.
ııu v
Name
ııv z
,
ıız {
$str
ıı| 
+ııÄ Å
objııÇ Ö
.ııÖ Ü
ParentııÜ å
.ııå ç
Nameııç ë
,ııë í
$strııì ñ
+ııó ò
objııô ú
.ııú ù
VersionDateııù ®
.ıı® ©!
ToShortDateStringıı© ∫
(ıı∫ ª
)ııª º
,ııº Ω
Parmsııæ √
,ıı√ ƒ
callersıı≈ Ã
}ııÕ Œ
)ııŒ œ
;ııœ –
}
ˆˆ 
}
¯¯ 
writer
˘˘ 
.
˘˘  
AddTableFooterOnly
˘˘ %
(
˘˘% &
)
˘˘& '
;
˘˘' (
writer
˙˙ 
.
˙˙  
AddTableFooterOnly
˙˙ %
(
˙˙% &
)
˙˙& '
;
˙˙' (
writer
¸¸ 
.
¸¸  
AddTableFooterOnly
¸¸ %
(
¸¸% &
)
¸¸& '
;
¸¸' (
writer
˝˝ 
.
˝˝ 
Close
˝˝ 
(
˝˝ 
)
˝˝ 
;
˝˝ 
KBDoctorHelper
ˇˇ 
.
ˇˇ !
ShowKBDoctorResults
ˇˇ .
(
ˇˇ. /

outputFile
ˇˇ/ 9
)
ˇˇ9 :
;
ˇˇ: ;
bool
ÄÄ 
success
ÄÄ 
=
ÄÄ 
true
ÄÄ 
;
ÄÄ  
output
ÅÅ 
.
ÅÅ 

EndSection
ÅÅ 
(
ÅÅ 
title
ÅÅ #
,
ÅÅ# $
success
ÅÅ% ,
)
ÅÅ, -
;
ÅÅ- .
}
ÇÇ 	
static
ÑÑ 
string
ÑÑ '
ChangeUDPCallWhenNecesary
ÑÑ /
(
ÑÑ/ 0
KBObject
ÑÑ0 8
obj
ÑÑ9 <
)
ÑÑ< =
{
ÖÖ 	
string
ÜÜ 
callers
ÜÜ 
=
ÜÜ 
$str
ÜÜ 
;
ÜÜ  
if
áá 
(
áá 
isGenerated
áá 
(
áá 
obj
áá 
)
áá  
&&
áá! #
!
áá$ %"
isGeneratedbyPattern
áá% 9
(
áá9 :
obj
áá: =
)
áá= >
)
áá> ?
{
àà 
foreach
ââ 
(
ââ 
EntityReference
ââ (
	reference
ââ) 2
in
ââ3 5
obj
ââ6 9
.
ââ9 :
GetReferences
ââ: G
(
ââG H
LinkType
ââH P
.
ââP Q

UsedObject
ââQ [
)
ââ[ \
)
ââ\ ]
{
ää 
KBObject
ãã 
objRef
ãã #
=
ãã$ %
KBObject
ãã& .
.
ãã. /
Get
ãã/ 2
(
ãã2 3
obj
ãã3 6
.
ãã6 7
Model
ãã7 <
,
ãã< =
	reference
ãã> G
.
ããG H
To
ããH J
)
ããJ K
;
ããK L
if
åå 
(
åå $
OnlyLastParameterIsOut
åå .
(
åå. /
objRef
åå/ 5
)
åå5 6
)
åå6 7
{
çç 
if
éé 
(
éé '
ReplaceCallForUdpInObject
éé 5
(
éé5 6
obj
éé6 9
,
éé9 :
objRef
éé; A
.
ééA B
Name
ééB F
)
ééF G
)
ééG H
{
èè 
callers
êê #
+=
êê$ &
$str
êê' *
+
êê+ ,
	Functions
êê- 6
.
êê6 7

linkObject
êê7 A
(
êêA B
objRef
êêB H
)
êêH I
;
êêI J
}
ëë 
}
íí 
}
ìì 
}
îî 
return
ññ 
callers
ññ 
;
ññ 
}
óó 	
private
ôô 
static
ôô 
string
ôô 
ReplaceCallForUDP
ôô /
(
ôô/ 0
KBObject
ôô0 8
obj
ôô9 <
)
ôô< =
{
öö 	
IOutputService
õõ 
output
õõ !
=
õõ" #
CommonServices
õõ$ 2
.
õõ2 3
Output
õõ3 9
;
õõ9 :
bool
ùù 
isInvokedWithCall
ùù "
=
ùù# $
false
ùù% *
;
ùù* +
string
ûû 
callers
ûû 
=
ûû 
$str
ûû 
;
ûû  
foreach
†† 
(
†† 
EntityReference
†† $
	reference
††% .
in
††/ 1
obj
††2 5
.
††5 6
GetReferencesTo
††6 E
(
††E F
LinkType
††F N
.
††N O

UsedObject
††O Y
)
††Y Z
)
††Z [
{
°° 
KBObject
££ 
objRef
££ 
=
££  !
KBObject
££" *
.
££* +
Get
££+ .
(
££. /
obj
££/ 2
.
££2 3
Model
££3 8
,
££8 9
	reference
££: C
.
££C D
From
££D H
)
££H I
;
££I J
string
ßß 
source
ßß 
=
ßß 
	Functions
ßß  )
.
ßß) *
ObjectSourceUpper
ßß* ;
(
ßß; <
objRef
ßß< B
)
ßßB C
;
ßßC D
source
®® 
=
®® 
	Functions
®® "
.
®®" #
RemoveEmptyLines
®®# 3
(
®®3 4
source
®®4 :
)
®®: ;
;
®®; <
string
™™ 
sourceWOComments
™™ '
=
™™( )
	Functions
™™* 3
.
™™3 4
ExtractComments
™™4 C
(
™™C D
source
™™D J
)
™™J K
;
™™K L
sourceWOComments
´´  
=
´´! "
sourceWOComments
´´# 3
.
´´3 4
Replace
´´4 ;
(
´´; <
$str
´´< @
,
´´@ A
$str
´´B D
)
´´D E
;
´´E F
sourceWOComments
¨¨  
=
¨¨! "
sourceWOComments
¨¨# 3
.
¨¨3 4
Replace
¨¨4 ;
(
¨¨; <
$str
¨¨< ?
,
¨¨? @
$str
¨¨A C
)
¨¨C D
;
¨¨D E
string
ØØ 
callAux
ØØ 
=
ØØ  
$str
ØØ! (
+
ØØ) *
obj
ØØ+ .
.
ØØ. /
Name
ØØ/ 3
.
ØØ3 4
ToUpper
ØØ4 ;
(
ØØ; <
)
ØØ< =
;
ØØ= >
if
±± 
(
±± 
sourceWOComments
±± $
.
±±$ %
Contains
±±% -
(
±±- .
callAux
±±. 5
)
±±5 6
)
±±6 7
{
≤≤ 
isInvokedWithCall
≥≥ %
=
≥≥& '
true
≥≥( ,
;
≥≥, -
output
¥¥ 
.
¥¥ 
AddLine
¥¥ "
(
¥¥" #
objRef
¥¥# )
.
¥¥) *
Name
¥¥* .
+
¥¥/ 0
$str
¥¥1 9
+
¥¥: ;
obj
¥¥< ?
.
¥¥? @
Name
¥¥@ D
)
¥¥D E
;
¥¥E F
callers
µµ 
+=
µµ 
$str
µµ "
+
µµ# $
	Functions
µµ% .
.
µµ. /

linkObject
µµ/ 9
(
µµ9 :
objRef
µµ: @
)
µµ@ A
;
µµA B'
ReplaceCallForUdpInObject
∑∑ -
(
∑∑- .
objRef
∑∑. 4
,
∑∑4 5
obj
∑∑6 9
.
∑∑9 :
Name
∑∑: >
)
∑∑> ?
;
∑∑? @
}
∫∫ 
}
ªª 
return
ºº 
callers
ºº 
;
ºº 
}
ΩΩ 	
private
øø 
static
øø 
bool
øø '
ReplaceCallForUdpInObject
øø 5
(
øø5 6
KBObject
øø6 >
obj
øø? B
,
øøB C
string
øøD J
name
øøK O
)
øøO P
{
¿¿ 	
IOutputService
¡¡ 
output
¡¡ !
=
¡¡" #
CommonServices
¡¡$ 2
.
¡¡2 3
Output
¡¡3 9
;
¡¡9 :
string
¬¬ 
source
¬¬ 
=
¬¬ 
ObjectsHelper
¬¬ )
.
¬¬) *
ObjectSource
¬¬* 6
(
¬¬6 7
obj
¬¬7 :
)
¬¬: ;
;
¬¬; <
string
ƒƒ 
pattern
ƒƒ 
=
ƒƒ 
String
ƒƒ #
.
ƒƒ# $
Format
ƒƒ$ *
(
ƒƒ* +
$strƒƒ+ „
,ƒƒ„ ‰
nameƒƒÂ È
)ƒƒÈ Í
;ƒƒÍ Î
Regex
≈≈ 

regExpCall
≈≈ 
=
≈≈ 
new
≈≈ "
Regex
≈≈# (
(
≈≈( )
pattern
≈≈) 0
,
≈≈0 1
RegexOptions
≈≈2 >
.
≈≈> ?

IgnoreCase
≈≈? I
)
≈≈I J
;
≈≈J K
string
«« 
sourcemodified
«« !
=
««" #

regExpCall
««$ .
.
««. /
Replace
««/ 6
(
««6 7
source
««7 =
,
««= >
$str
««? a
)
««a b
;
««b c
bool
»» 
modified
»» 
=
»» 
false
»» !
;
»»! "
if
…… 
(
…… 
source
…… 
!=
…… 
sourcemodified
…… (
)
……( )
{
   
SaveNewSource
ÀÀ 
(
ÀÀ 
obj
ÀÀ !
,
ÀÀ! "
sourcemodified
ÀÀ# 1
)
ÀÀ1 2
;
ÀÀ2 3
output
ÃÃ 
.
ÃÃ 
AddLine
ÃÃ 
(
ÃÃ 
$str
ÃÃ F
)
ÃÃF G
;
ÃÃG H
output
ÕÕ 
.
ÕÕ 
AddLine
ÕÕ 
(
ÕÕ 
$str
ÕÕ -
+
ÕÕ. /
obj
ÕÕ0 3
.
ÕÕ3 4
Name
ÕÕ4 8
)
ÕÕ8 9
;
ÕÕ9 :
modified
œœ 
=
œœ 
true
œœ 
;
œœ  
}
–– 
return
—— 
modified
—— 
;
—— 
}
““ 	
private
‘‘ 
static
‘‘ 
bool
‘‘ $
OnlyLastParameterIsOut
‘‘ 2
(
‘‘2 3
KBObject
‘‘3 ;
obj
‘‘< ?
)
‘‘? @
{
’’ 	
bool
÷÷ 
udpCallable
÷÷ 
=
÷÷ 
false
÷÷ $
;
÷÷$ %
ICallableObject
ÿÿ 
callableObject
ÿÿ *
=
ÿÿ+ ,
obj
ÿÿ- 0
as
ÿÿ1 3
ICallableObject
ÿÿ4 C
;
ÿÿC D
if
ŸŸ 
(
ŸŸ 
callableObject
ŸŸ 
!=
ŸŸ !
null
ŸŸ" &
)
ŸŸ& '
{
⁄⁄ 
udpCallable
€€ 
=
€€ 
true
€€ "
;
€€" #
foreach
‹‹ 
(
‹‹ 
	Signature
‹‹ "
	signature
‹‹# ,
in
‹‹- /
callableObject
‹‹0 >
.
‹‹> ?
GetSignatures
‹‹? L
(
‹‹L M
)
‹‹M N
)
‹‹N O
{
›› 
int
ﬂﬂ 
	countparm
ﬂﬂ !
=
ﬂﬂ" #
	signature
ﬂﬂ$ -
.
ﬂﬂ- .
ParametersCount
ﬂﬂ. =
;
ﬂﬂ= >
	Parameter
·· 
[
·· 
]
·· 
p
··  !
=
··" #
	signature
··$ -
.
··- .

Parameters
··. 8
.
··8 9
ToArray
··9 @
<
··@ A
	Parameter
··A J
>
··J K
(
··K L
)
··L M
;
··M N
string
„„ 
ss
„„ 
=
„„ 
p
„„  !
[
„„! "
	countparm
„„" +
-
„„, -
$num
„„. /
]
„„/ 0
.
„„0 1
Accessor
„„1 9
.
„„9 :
ToString
„„: B
(
„„B C
)
„„C D
;
„„D E
if
‰‰ 
(
‰‰ 
ss
‰‰ 
!=
‰‰ 
$str
‰‰ (
)
‰‰( )
{
ÂÂ 
udpCallable
ÊÊ #
=
ÊÊ$ %
false
ÊÊ& +
;
ÊÊ+ ,
}
ÁÁ 
else
ËË 
{
ÈÈ 
for
ÍÍ 
(
ÍÍ 
int
ÍÍ  
i
ÍÍ! "
=
ÍÍ# $
$num
ÍÍ% &
;
ÍÍ& '
i
ÍÍ( )
<
ÍÍ* +
	countparm
ÍÍ, 5
-
ÍÍ6 7
$num
ÍÍ8 9
;
ÍÍ9 :
i
ÍÍ; <
++
ÍÍ< >
)
ÍÍ> ?
{
ÎÎ 
string
ÏÏ "
ss2
ÏÏ# &
=
ÏÏ' (
p
ÏÏ) *
[
ÏÏ* +
i
ÏÏ+ ,
]
ÏÏ, -
.
ÏÏ- .
Accessor
ÏÏ. 6
.
ÏÏ6 7
ToString
ÏÏ7 ?
(
ÏÏ? @
)
ÏÏ@ A
;
ÏÏA B
if
ÌÌ 
(
ÌÌ  
ss2
ÌÌ  #
!=
ÌÌ$ &
$str
ÌÌ' 0
)
ÌÌ0 1
{
ÓÓ 
udpCallable
ÔÔ  +
=
ÔÔ, -
false
ÔÔ. 3
;
ÔÔ3 4
}
 
}
ÚÚ 
}
ÛÛ 
}
ÙÙ 
}
ıı 
else
ˆˆ 
{
˜˜ 
udpCallable
¯¯ 
=
¯¯ 
false
¯¯ #
;
¯¯# $
}
˘˘ 
return
˙˙ 
udpCallable
˙˙ 
;
˙˙ 
}
˚˚ 	
private
˝˝ 
static
˝˝ 
string
˝˝ #
CompareCallParameters
˝˝ 3
(
˝˝3 4
KBObject
˝˝4 <
obj
˝˝= @
)
˝˝@ A
{
˛˛ 	
IOutputService
ˇˇ 
output
ˇˇ !
=
ˇˇ" #
CommonServices
ˇˇ$ 2
.
ˇˇ2 3
Output
ˇˇ3 9
;
ˇˇ9 :
string
ÄÄ 
source
ÄÄ 
=
ÄÄ 
ObjectSource
ÄÄ (
(
ÄÄ( )
obj
ÄÄ) ,
)
ÄÄ, -
;
ÄÄ- .
source
ÅÅ 
=
ÅÅ 
	Functions
ÅÅ 
.
ÅÅ 
RemoveEmptyLines
ÅÅ /
(
ÅÅ/ 0
source
ÅÅ0 6
)
ÅÅ6 7
;
ÅÅ7 8
string
ÇÇ 
sourceWOComments
ÇÇ #
=
ÇÇ$ %
	Functions
ÇÇ& /
.
ÇÇ/ 0
ExtractComments
ÇÇ0 ?
(
ÇÇ? @
source
ÇÇ@ F
)
ÇÇF G
;
ÇÇG H
string
ÉÉ 
callSentences
ÉÉ  
=
ÉÉ! "
$str
ÉÉ# %
;
ÉÉ% &
string
ÑÑ 
lista
ÑÑ 
=
ÑÑ 
$str
ÑÑ 
;
ÑÑ 
foreach
àà 
(
àà 
EntityReference
àà $
	reference
àà% .
in
àà/ 1
obj
àà2 5
.
àà5 6
GetReferences
àà6 C
(
ààC D
)
ààD E
)
ààE F
{
ââ 
KBObject
ää 
objRef
ää 
=
ää  !
KBObject
ää" *
.
ää* +
Get
ää+ .
(
ää. /
obj
ää/ 2
.
ää2 3
Model
ää3 8
,
ää8 9
	reference
ää: C
.
ääC D
To
ääD F
)
ääF G
;
ääG H
if
éé 
(
éé 
IsCallalable
éé  
(
éé  !
objRef
éé! '
)
éé' (
)
éé( )
{
èè 
StringCollection
ëë $"
interfazCalledObject
ëë% 9
=
ëë: ;
InspectCall
ëë< G
(
ëëG H
objRef
ëëH N
)
ëëN O
;
ëëO P
using
ìì 
(
ìì 
StringReader
ìì '
reader
ìì( .
=
ìì/ 0
new
ìì1 4
StringReader
ìì5 A
(
ììA B
sourceWOComments
ììB R
)
ììR S
)
ììS T
{
îî 
string
ïï 
line
ïï #
;
ïï# $
while
ññ 
(
ññ 
(
ññ  
line
ññ  $
=
ññ% &
reader
ññ' -
.
ññ- .
ReadLine
ññ. 6
(
ññ6 7
)
ññ7 8
)
ññ8 9
!=
ññ: <
null
ññ= A
)
ññA B
{
óó 
if
ôô 
(
ôô  
line
ôô  $
.
ôô$ %
Contains
ôô% -
(
ôô- .
objRef
ôô. 4
.
ôô4 5
Name
ôô5 9
)
ôô9 :
)
ôô: ;
{
öö 
line
õõ  $
=
õõ% &
line
õõ' +
.
õõ+ ,
Replace
õõ, 3
(
õõ3 4
$str
õõ4 8
,
õõ8 9
$str
õõ: =
)
õõ= >
;
õõ> ?
line
úú  $
=
úú% &
line
úú' +
.
úú+ ,
Replace
úú, 3
(
úú3 4
$str
úú4 7
,
úú7 8
$str
úú9 ;
)
úú; <
;
úú< =
line
ùù  $
.
ùù$ %
Replace
ùù% ,
(
ùù, -
$str
ùù- 5
,
ùù5 6
$str
ùù7 :
,
ùù: ;
StringComparison
ùù< L
.
ùùL M&
CurrentCultureIgnoreCase
ùùM e
)
ùùe f
;
ùùf g
line
ûû  $
.
ûû$ %
Replace
ûû% ,
(
ûû, -
$str
ûû- 4
,
ûû4 5
$str
ûû6 9
,
ûû9 :
StringComparison
ûû; K
.
ûûK L&
CurrentCultureIgnoreCase
ûûL d
)
ûûd e
;
ûûe f
line
üü  $
.
üü$ %
Replace
üü% ,
(
üü, -
$str
üü- 4
,
üü4 5
$str
üü6 9
,
üü9 :
StringComparison
üü; K
.
üüK L&
CurrentCultureIgnoreCase
üüL d
)
üüd e
;
üüe f
line
††  $
.
††$ %
Replace
††% ,
(
††, -
$str
††- 3
,
††3 4
$str
††5 8
,
††8 9
StringComparison
††: J
.
††J K&
CurrentCultureIgnoreCase
††K c
)
††c d
;
††d e
line
°°  $
.
°°$ %
Replace
°°% ,
(
°°, -
objRef
°°- 3
.
°°3 4
Name
°°4 8
,
°°8 9
$str
°°: =
,
°°= >
StringComparison
°°? O
.
°°O P&
CurrentCultureIgnoreCase
°°P h
)
°°h i
;
°°i j
StringCollection
§§  0"
interfazCallerObject
§§1 E
=
§§F G"
ProcessingObjectCall
§§H \
(
§§\ ]
obj
§§] `
,
§§` a
line
§§b f
)
§§f g
;
§§g h
for
••  #
(
••$ %
int
••% (
i
••) *
=
••+ ,
$num
••- .
;
••. /
i
••0 1
<
••2 3"
interfazCallerObject
••4 H
.
••H I
Count
••I N
;
••N O
i
••P Q
++
••Q S
)
••S T
{
¶¶  !
if
ßß$ &
(
ßß' ("
interfazCallerObject
ßß( <
[
ßß< =
i
ßß= >
]
ßß> ?
!=
ßß@ B"
interfazCalledObject
ßßC W
[
ßßW X
i
ßßX Y
]
ßßY Z
)
ßßZ [
output
®®( .
.
®®. /
AddLine
®®/ 6
(
®®6 7
$str
®®7 E
+
®®F G
line
®®H L
+
®®M N
$str
®®O ]
+
®®^ _
i
®®` a
.
®®a b
ToString
®®b j
(
®®j k
)
®®k l
+
®®m n
$str
®®o t
+
®®u v#
interfazCallerObject®®w ã
[®®ã å
i®®å ç
]®®ç é
+®®è ê
$str®®ë î
+®®ï ñ$
interfazCalledObject®®ó ´
[®®´ ¨
i®®¨ ≠
]®®≠ Æ
)®®Æ Ø
;®®Ø ∞
}
©©  !
}
™™ 
}
´´ 
}
¨¨ 
}
ÆÆ 
}
ØØ 
return
≤≤ 
lista
≤≤ 
;
≤≤ 
}
≥≥ 	
private
µµ 
static
µµ 
StringCollection
µµ '"
ProcessingObjectCall
µµ( <
(
µµ< =
KBObject
µµ= E
obj
µµF I
,
µµI J
string
µµK Q
line
µµR V
)
µµV W
{
∂∂ 	
IOutputService
∑∑ 
output
∑∑ !
=
∑∑" #
CommonServices
∑∑$ 2
.
∑∑2 3
Output
∑∑3 9
;
∑∑9 :
StringCollection
∏∏ 
lista
∏∏ "
=
∏∏# $
new
∏∏% (
StringCollection
∏∏) 9
(
∏∏9 :
)
∏∏: ;
;
∏∏; <
if
∫∫ 
(
∫∫ 
line
∫∫ 
.
∫∫ 
Contains
∫∫ 
(
∫∫ 
$str
∫∫ !
)
∫∫! "
)
∫∫" #
{
ªª 
String
ΩΩ 
[
ΩΩ 
]
ΩΩ 
partes
ΩΩ 
=
ΩΩ  !
line
ΩΩ" &
.
ΩΩ& '
Split
ΩΩ' ,
(
ΩΩ, -
$char
ΩΩ- 0
)
ΩΩ0 1
;
ΩΩ1 2
line
ææ 
=
ææ 
partes
ææ 
[
ææ 
$num
ææ 
]
ææ  
+
ææ! "
partes
ææ# )
[
ææ) *
$num
ææ* +
]
ææ+ ,
;
ææ, -
}
¿¿ 
Char
¡¡ 
[
¡¡ 
]
¡¡ 
sep
¡¡ 
=
¡¡ 
{
¡¡ 
$char
¡¡ 
,
¡¡ 
$char
¡¡  #
,
¡¡# $
$char
¡¡% (
,
¡¡( )
$char
¡¡* -
}
¡¡. /
;
¡¡/ 0
String
¬¬ 
[
¬¬ 
]
¬¬ 

substrings
¬¬ 
=
¬¬  !
line
¬¬" &
.
¬¬& '
Split
¬¬' ,
(
¬¬, -
sep
¬¬- 0
)
¬¬0 1
;
¬¬1 2
foreach
√√ 
(
√√ 
var
√√ 
	substring
√√ "
in
√√# %

substrings
√√& 0
)
√√0 1
{
ƒƒ 
if
∆∆ 
(
∆∆ 
	substring
∆∆ 
!=
∆∆  
$str
∆∆! #
)
∆∆# $
{
«« 
if
…… 
(
…… 
	substring
…… !
.
……! "

StartsWith
……" ,
(
……, -
$str
……- 0
)
……0 1
)
……1 2
{
   
lista
ÀÀ 
.
ÀÀ 
Add
ÀÀ !
(
ÀÀ! "
TypeOfVariable
ÀÀ" 0
(
ÀÀ0 1
	substring
ÀÀ1 :
.
ÀÀ: ;
Replace
ÀÀ; B
(
ÀÀB C
$str
ÀÀC F
,
ÀÀF G
$str
ÀÀH J
)
ÀÀJ K
,
ÀÀK L
obj
ÀÀM P
)
ÀÀP Q
)
ÀÀQ R
;
ÀÀR S
}
ÕÕ 
else
ŒŒ 
{
œœ 

IKBService
–– "
kbserv
––# )
=
––* +

UIServices
––, 6
.
––6 7
KB
––7 9
;
––9 :
foreach
‘‘ 
(
‘‘  !
KBObject
‘‘! )
att
‘‘* -
in
‘‘. 0
kbserv
‘‘1 7
.
‘‘7 8
CurrentModel
‘‘8 D
.
‘‘D E
Objects
‘‘E L
.
‘‘L M
	GetByName
‘‘M V
(
‘‘V W
$str
‘‘W c
,
‘‘c d
new
‘‘e h
Guid
‘‘i m
(
‘‘m n
$str‘‘n î
)‘‘î ï
,‘‘ï ñ
	substring‘‘ó †
)‘‘† °
)‘‘° ¢
{
’’ 
if
÷÷ 
(
÷÷  
(
÷÷  !
att
÷÷! $
!=
÷÷% '
null
÷÷( ,
)
÷÷, -
&&
÷÷. 0
(
÷÷1 2
att
÷÷2 5
is
÷÷6 8
Artech
÷÷9 ?
.
÷÷? @
Genexus
÷÷@ G
.
÷÷G H
Common
÷÷H N
.
÷÷N O
Objects
÷÷O V
.
÷÷V W
	Attribute
÷÷W `
)
÷÷` a
)
÷÷a b
{
◊◊ 
string
ÿÿ  &
type
ÿÿ' +
=
ÿÿ, -
(
ÿÿ. /
TypeOfAttribute
ÿÿ/ >
(
ÿÿ> ?
(
ÿÿ? @
Artech
ÿÿ@ F
.
ÿÿF G
Genexus
ÿÿG N
.
ÿÿN O
Common
ÿÿO U
.
ÿÿU V
Objects
ÿÿV ]
.
ÿÿ] ^
	Attribute
ÿÿ^ g
)
ÿÿg h
att
ÿÿh k
)
ÿÿk l
)
ÿÿl m
;
ÿÿm n
lista
ŸŸ  %
.
ŸŸ% &
Add
ŸŸ& )
(
ŸŸ) *
type
ŸŸ* .
)
ŸŸ. /
;
ŸŸ/ 0
if
€€  "
(
€€# $
type
€€$ (
==
€€) +
$str
€€, .
)
€€. /
{
‹‹  !
output
››$ *
.
››* +
AddLine
››+ 2
(
››2 3
$str
››3 W
+
››X Y
	substring
››Z c
)
››c d
;
››d e
}
ﬁﬁ  !
}
ﬂﬂ 
}
‡‡ 
}
‚‚ 
}
‰‰ 
}
ÂÂ 
return
ÁÁ 
lista
ÁÁ 
;
ÁÁ 
}
ÍÍ 	
private
ÏÏ 
static
ÏÏ 
StringCollection
ÏÏ '
InspectCall
ÏÏ( 3
(
ÏÏ3 4
KBObject
ÏÏ4 <
objRef
ÏÏ= C
)
ÏÏC D
{
ÌÌ 	
IOutputService
ÓÓ 
output
ÓÓ !
=
ÓÓ" #
CommonServices
ÓÓ$ 2
.
ÓÓ2 3
Output
ÓÓ3 9
;
ÓÓ9 :
StringCollection
ÔÔ 
lista
ÔÔ "
=
ÔÔ# $
new
ÔÔ% (
StringCollection
ÔÔ) 9
(
ÔÔ9 :
)
ÔÔ: ;
;
ÔÔ; <
ICallableObject
 
callableObject
 *
=
+ ,
objRef
- 3
as
4 6
ICallableObject
7 F
;
F G
if
ÒÒ 
(
ÒÒ 
callableObject
ÒÒ 
!=
ÒÒ !
null
ÒÒ" &
)
ÒÒ& '
{
ÚÚ 
foreach
ÛÛ 
(
ÛÛ 
	Signature
ÛÛ "
	signature
ÛÛ# ,
in
ÛÛ- /
callableObject
ÛÛ0 >
.
ÛÛ> ?
GetSignatures
ÛÛ? L
(
ÛÛL M
)
ÛÛM N
)
ÛÛN O
{
ÙÙ 
foreach
ıı 
(
ıı 
	Parameter
ıı &
parm
ıı' +
in
ıı, .
	signature
ıı/ 8
.
ıı8 9

Parameters
ıı9 C
)
ııC D
{
ˆˆ 
string
˜˜ 
p
˜˜  
=
˜˜! "

TypeOfParm
˜˜# -
(
˜˜- .
parm
˜˜. 2
,
˜˜2 3
objRef
˜˜4 :
)
˜˜: ;
;
˜˜; <
lista
˘˘ 
.
˘˘ 
Add
˘˘ !
(
˘˘! "
p
˘˘" #
)
˘˘# $
;
˘˘$ %
}
˚˚ 
}
¸¸ 
}
˝˝ 
return
˛˛ 
lista
˛˛ 
;
˛˛ 
}
ˇˇ 	
private
ÅÅ 
static
ÅÅ 
string
ÅÅ 

TypeOfParm
ÅÅ (
(
ÅÅ( )
	Parameter
ÅÅ) 2
parm
ÅÅ3 7
,
ÅÅ7 8
KBObject
ÅÅ9 A
objRef
ÅÅB H
)
ÅÅH I
{
ÇÇ 	
string
ÉÉ 

typeOfParm
ÉÉ 
=
ÉÉ 
$str
ÉÉ  "
;
ÉÉ" #
if
ÑÑ 
(
ÑÑ 
parm
ÑÑ 
.
ÑÑ 
IsAttribute
ÑÑ  
)
ÑÑ  !
{
ÖÖ 
Artech
ÜÜ 
.
ÜÜ 
Genexus
ÜÜ 
.
ÜÜ 
Common
ÜÜ %
.
ÜÜ% &
Objects
ÜÜ& -
.
ÜÜ- .
	Attribute
ÜÜ. 7
a
ÜÜ8 9
=
ÜÜ: ;
(
ÜÜ< =
Artech
ÜÜ= C
.
ÜÜC D
Genexus
ÜÜD K
.
ÜÜK L
Common
ÜÜL R
.
ÜÜR S
Objects
ÜÜS Z
.
ÜÜZ [
	Attribute
ÜÜ[ d
)
ÜÜd e
parm
ÜÜe i
.
ÜÜi j
Object
ÜÜj p
;
ÜÜp q

typeOfParm
áá 
=
áá 
TypeOfAttribute
áá ,
(
áá, -
a
áá- .
)
áá. /
;
áá/ 0
}
àà 
else
ââ 
{
ää 

typeOfParm
ãã 
=
ãã 
TypeOfVariable
ãã +
(
ãã+ ,
parm
ãã, 0
.
ãã0 1
Name
ãã1 5
,
ãã5 6
objRef
ãã7 =
)
ãã= >
;
ãã> ?
}
åå 
return
çç 

typeOfParm
çç 
;
çç 
}
éé 	
private
êê 
static
êê 
string
êê 
TypeOfAttribute
êê -
(
êê- .
Artech
êê. 4
.
êê4 5
Genexus
êê5 <
.
êê< =
Common
êê= C
.
êêC D
Objects
êêD K
.
êêK L
	Attribute
êêL U
a
êêV W
)
êêW X
{
ëë 	
string
íí 

typeOfParm
íí 
;
íí 

typeOfParm
ìì 
=
ìì 
$str
ìì 
+
ìì 
	Functions
ìì (
.
ìì( )
ReturnPicture
ìì) 6
(
ìì6 7
a
ìì7 8
)
ìì8 9
;
ìì9 :
if
îî 
(
îî 
a
îî 
.
îî 
DomainBasedOn
îî 
!=
îî  "
null
îî# '
)
îî' (

typeOfParm
ïï 
+=
ïï 
$str
ïï !
+
ïï" #
a
ïï$ %
.
ïï% &
DomainBasedOn
ïï& 3
.
ïï3 4
Name
ïï4 8
+
ïï9 :
$str
ïï; ?
;
ïï? @
return
ññ 

typeOfParm
ññ 
;
ññ 
}
óó 	
private
ôô 
static
ôô 
string
ôô 
TypeOfVariable
ôô ,
(
ôô, -
string
ôô- 3
varname
ôô4 ;
,
ôô; <
KBObject
ôô= E
objRef
ôôF L
)
ôôL M
{
öö 	
string
õõ 

typeOfParm
õõ 
=
õõ 
$str
õõ  "
;
õõ" #
VariablesPart
úú 
vp
úú 
=
úú 
objRef
úú %
.
úú% &
Parts
úú& +
.
úú+ ,
Get
úú, /
<
úú/ 0
VariablesPart
úú0 =
>
úú= >
(
úú> ?
)
úú? @
;
úú@ A
if
ùù 
(
ùù 
vp
ùù 
!=
ùù 
null
ùù 
)
ùù 
{
ûû 
foreach
üü 
(
üü 
Variable
üü !
v
üü" #
in
üü$ &
vp
üü' )
.
üü) *
	Variables
üü* 3
)
üü3 4
{
†† 
if
°° 
(
°° 
v
°° 
.
°° 
Name
°° 
==
°° !
varname
°°" )
)
°°) *
{
¢¢ 

typeOfParm
££ "
=
££# $
$str
££% (
+
££) *
	Functions
££+ 4
.
££4 5#
ReturnPictureVariable
££5 J
(
££J K
v
££K L
)
££L M
;
££M N
if
§§ 
(
§§ 
v
§§ 
.
§§ 
DomainBasedOn
§§ +
!=
§§, .
null
§§/ 3
)
§§3 4

typeOfParm
•• &
+=
••' )
$str
••* -
+
••. /
v
••0 1
.
••1 2
DomainBasedOn
••2 ?
.
••? @
Name
••@ D
+
••E F
$str
••G K
;
••K L
}
¶¶ 
}
ßß 
}
©© 
return
´´ 

typeOfParm
´´ 
;
´´ 
}
¨¨ 	
private
ÆÆ 
static
ÆÆ 
int
ÆÆ &
CalculateComplexityIndex
ÆÆ 3
(
ÆÆ3 4
int
ÆÆ4 7
MaxCodeBlock
ÆÆ8 D
,
ÆÆD E
int
ÆÆF I
MaxNestLevel
ÆÆJ V
,
ÆÆV W
int
ÆÆX [
ComplexityLevel
ÆÆ\ k
,
ÆÆk l
string
ÆÆm s
	ParmINOUT
ÆÆt }
)
ÆÆ} ~
{
ØØ 	
int
∞∞ 
ComplexityIndex
∞∞ 
=
∞∞  !
$num
∞∞" #
;
∞∞# $
if
±± 
(
±± 
	ParmINOUT
±± 
==
±± 
$str
±± $
)
±±$ %
ComplexityIndex
±±& 5
+=
±±6 8
$num
±±9 <
;
±±< =
ComplexityIndex
≤≤ 
+=
≤≤ 
MaxNestLevel
≤≤ +
*
≤≤, -
MaxNestLevel
≤≤. :
;
≤≤: ;
ComplexityIndex
≥≥ 
+=
≥≥ 
ComplexityLevel
≥≥ .
*
≥≥/ 0
$num
≥≥1 3
;
≥≥3 4
ComplexityIndex
¥¥ 
+=
¥¥ 
MaxCodeBlock
¥¥ +
*
¥¥, -
$num
¥¥. /
;
¥¥/ 0
return
µµ 
ComplexityIndex
µµ "
;
µµ" #
}
∂∂ 	
private
∏∏ 
static
∏∏ 
void
∏∏  
CountCommentsLines
∏∏ .
(
∏∏. /
string
∏∏/ 5
source
∏∏6 <
,
∏∏< =
string
∏∏> D
sourceWOComments
∏∏E U
,
∏∏U V
out
∏∏W Z
int
∏∏[ ^
linesSource
∏∏_ j
,
∏∏j k
out
∏∏l o
int
∏∏p s
linesComment∏∏t Ä
,∏∏Ä Å
out∏∏Ç Ö
float∏∏Ü ã
PercentComment∏∏å ö
)∏∏ö õ
{
ππ 	
linesSource
∫∫ 
=
∫∫ 
	Functions
∫∫ #
.
∫∫# $
	LineCount
∫∫$ -
(
∫∫- .
source
∫∫. 4
)
∫∫4 5
;
∫∫5 6
int
ªª 
linesWOComment
ªª 
=
ªª  
	Functions
ªª! *
.
ªª* +
	LineCount
ªª+ 4
(
ªª4 5
sourceWOComments
ªª5 E
)
ªªE F
;
ªªF G
linesComment
ΩΩ 
=
ΩΩ 
linesSource
ΩΩ &
-
ΩΩ' (
linesWOComment
ΩΩ) 7
;
ΩΩ7 8
PercentComment
ææ 
=
ææ 
(
ææ 
linesSource
ææ )
==
ææ* ,
$num
ææ- .
)
ææ. /
?
ææ0 1
$num
ææ2 3
:
ææ4 5
(
ææ6 7
linesComment
ææ7 C
*
ææD E
$num
ææF I
)
ææI J
/
ææK L
linesSource
ææM X
;
ææX Y
}
øø 	
public
¡¡ 
static
¡¡ 
string
¡¡ 
ObjectSource
¡¡ )
(
¡¡) *
KBObject
¡¡* 2
obj
¡¡3 6
)
¡¡6 7
{
¬¬ 	
string
√√ 
source
√√ 
=
√√ 
$str
√√ 
;
√√ 
if
≈≈ 
(
≈≈ 
obj
≈≈ 
is
≈≈ 
	Procedure
≈≈  
)
≈≈  !
source
≈≈" (
=
≈≈) *
obj
≈≈+ .
.
≈≈. /
Parts
≈≈/ 4
.
≈≈4 5
Get
≈≈5 8
<
≈≈8 9
ProcedurePart
≈≈9 F
>
≈≈F G
(
≈≈G H
)
≈≈H I
.
≈≈I J
Source
≈≈J P
;
≈≈P Q
if
«« 
(
«« 
obj
«« 
is
«« 
Transaction
«« "
)
««" #
source
««$ *
=
««+ ,
obj
««- 0
.
««0 1
Parts
««1 6
.
««6 7
Get
««7 :
<
««: ;

EventsPart
««; E
>
««E F
(
««F G
)
««G H
.
««H I
Source
««I O
;
««O P
if
…… 
(
…… 
obj
…… 
is
…… 
	WorkPanel
……  
)
……  !
source
……" (
=
……) *
obj
……+ .
.
……. /
Parts
……/ 4
.
……4 5
Get
……5 8
<
……8 9

EventsPart
……9 C
>
……C D
(
……D E
)
……E F
.
……F G
Source
……G M
;
……M N
if
ÀÀ 
(
ÀÀ 
obj
ÀÀ 
is
ÀÀ 
WebPanel
ÀÀ 
)
ÀÀ  
source
ÀÀ! '
=
ÀÀ( )
obj
ÀÀ* -
.
ÀÀ- .
Parts
ÀÀ. 3
.
ÀÀ3 4
Get
ÀÀ4 7
<
ÀÀ7 8

EventsPart
ÀÀ8 B
>
ÀÀB C
(
ÀÀC D
)
ÀÀD E
.
ÀÀE F
Source
ÀÀF L
;
ÀÀL M
return
ÕÕ 
source
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
private
–– 
static
–– 
void
–– 
ParseSource
–– '
(
––' (
string
––( .
source
––/ 5
,
––5 6
out
––7 :
int
––; >
MaxCodeBlock
––? K
,
––K L
out
––M P
int
––Q T
MaxNestLevel
––U a
,
––a b
out
––c f
int
––g j
ComplexityLevel
––k z
)
––z {
{
—— 	
string
““ 
input
““ 
=
““ 
source
““ !
.
““! "
ToUpper
““" )
(
““) *
)
““* +
;
““+ ,
int
”” 
	NestLevel
”” 
=
”” 
$num
”” 
;
”” 
ComplexityLevel
’’ 
=
’’ 
$num
’’ 
;
’’  
using
◊◊ 
(
◊◊ 
StringReader
◊◊ 
reader
◊◊  &
=
◊◊' (
new
◊◊) ,
StringReader
◊◊- 9
(
◊◊9 :
input
◊◊: ?
)
◊◊? @
)
◊◊@ A
{
ÿÿ 
string
ŸŸ 
line
ŸŸ 
;
ŸŸ 
while
⁄⁄ 
(
⁄⁄ 
(
⁄⁄ 
line
⁄⁄ 
=
⁄⁄ 
reader
⁄⁄ %
.
⁄⁄% &
ReadLine
⁄⁄& .
(
⁄⁄. /
)
⁄⁄/ 0
)
⁄⁄0 1
!=
⁄⁄2 4
null
⁄⁄5 9
)
⁄⁄9 :
{
€€ 
line
›› 
=
›› 
line
›› 
.
››  
	TrimStart
››  )
(
››) *
)
››* +
.
››+ ,
ToUpper
››, 3
(
››3 4
)
››4 5
;
››5 6
if
ﬁﬁ 
(
ﬁﬁ 
line
ﬁﬁ 
.
ﬁﬁ 

StartsWith
ﬁﬁ '
(
ﬁﬁ' (
$str
ﬁﬁ( 2
)
ﬁﬁ2 3
||
ﬁﬁ4 6
line
ﬁﬁ7 ;
.
ﬁﬁ; <

StartsWith
ﬁﬁ< F
(
ﬁﬁF G
$str
ﬁﬁG K
)
ﬁﬁK L
||
ﬁﬁM O
line
ﬁﬁP T
.
ﬁﬁT U

StartsWith
ﬁﬁU _
(
ﬁﬁ_ `
$str
ﬁﬁ` i
)
ﬁﬁi j
||
ﬁﬁk m
line
ﬁﬁn r
.
ﬁﬁr s

StartsWith
ﬁﬁs }
(
ﬁﬁ} ~
$strﬁﬁ~ É
)ﬁﬁÉ Ñ
)ﬁﬁÑ Ö
{
ﬂﬂ 
ComplexityLevel
‡‡ '
+=
‡‡( *
$num
‡‡+ ,
;
‡‡, -
}
·· 
}
‚‚ 
}
„„ 
MaxNestLevel
ÂÂ 
=
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
	NestLevel
ÊÊ 
=
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
using
ÁÁ 
(
ÁÁ 
StringReader
ÁÁ 
reader
ÁÁ  &
=
ÁÁ' (
new
ÁÁ) ,
StringReader
ÁÁ- 9
(
ÁÁ9 :
input
ÁÁ: ?
)
ÁÁ? @
)
ÁÁ@ A
{
ËË 
string
ÈÈ 
line
ÈÈ 
;
ÈÈ 
while
ÍÍ 
(
ÍÍ 
(
ÍÍ 
line
ÍÍ 
=
ÍÍ 
reader
ÍÍ %
.
ÍÍ% &
ReadLine
ÍÍ& .
(
ÍÍ. /
)
ÍÍ/ 0
)
ÍÍ0 1
!=
ÍÍ2 4
null
ÍÍ5 9
)
ÍÍ9 :
{
ÎÎ 
line
ÌÌ 
=
ÌÌ 
line
ÌÌ 
.
ÌÌ  
	TrimStart
ÌÌ  )
(
ÌÌ) *
)
ÌÌ* +
.
ÌÌ+ ,
ToUpper
ÌÌ, 3
(
ÌÌ3 4
)
ÌÌ4 5
;
ÌÌ5 6
if
ÓÓ 
(
ÓÓ 
line
ÓÓ 
.
ÓÓ 

StartsWith
ÓÓ '
(
ÓÓ' (
$str
ÓÓ( .
)
ÓÓ. /
)
ÓÓ/ 0
{
ÔÔ 
}
ÒÒ 
else
ÚÚ 
{
ÛÛ 
if
ıı 
(
ıı 
line
ıı  
.
ıı  !

StartsWith
ıı! +
(
ıı+ ,
$str
ıı, 2
)
ıı2 3
||
ıı4 6
line
ıı7 ;
.
ıı; <

StartsWith
ıı< F
(
ııF G
$str
ııG L
)
ııL M
||
ııN P
line
ııQ U
.
ııU V

StartsWith
ııV `
(
ıı` a
$str
ııa f
)
ııf g
||
ııh j
line
ıık o
.
ııo p

StartsWith
ııp z
(
ıız {
$strıı{ Ä
)ııÄ Å
||ııÇ Ñ
lineııÖ â
.ııâ ä

StartsWithııä î
(ııî ï
$strııï ö
)ııö õ
)ııõ ú
{
ˆˆ 
	NestLevel
˜˜ %
+=
˜˜& (
$num
˜˜) *
;
˜˜* +
MaxNestLevel
¯¯ (
=
¯¯) *
(
¯¯+ ,
	NestLevel
¯¯, 5
>
¯¯6 7
MaxNestLevel
¯¯8 D
)
¯¯D E
?
¯¯F G
	NestLevel
¯¯H Q
:
¯¯R S
MaxNestLevel
¯¯T `
;
¯¯` a
}
˘˘ 
else
˙˙ 
if
˚˚ 
(
˚˚  
line
˚˚  $
.
˚˚$ %

StartsWith
˚˚% /
(
˚˚/ 0
$str
˚˚0 8
)
˚˚8 9
||
˚˚: <
line
˚˚= A
.
˚˚A B

StartsWith
˚˚B L
(
˚˚L M
$str
˚˚M T
)
˚˚T U
||
˚˚V X
line
˚˚Y ]
.
˚˚] ^

StartsWith
˚˚^ h
(
˚˚h i
$str
˚˚i p
)
˚˚p q
||
˚˚r t
line
˚˚u y
.
˚˚y z

StartsWith˚˚z Ñ
(˚˚Ñ Ö
$str˚˚Ö é
)˚˚é è
||˚˚ê í
line˚˚ì ó
.˚˚ó ò

StartsWith˚˚ò ¢
(˚˚¢ £
$str˚˚£ ´
)˚˚´ ¨
||˚˚≠ Ø
line˚˚∞ ¥
.˚˚¥ µ

StartsWith˚˚µ ø
(˚˚ø ¿
$str˚˚¿ »
)˚˚» …
)˚˚…  
{
¸¸ 
	NestLevel
˝˝ %
-=
˝˝& (
$num
˝˝) *
;
˝˝* +
}
˛˛ 
}
ˇˇ 
}
ÄÄ 
}
ÅÅ 
if
ÇÇ 
(
ÇÇ 
	NestLevel
ÇÇ 
!=
ÇÇ 
$num
ÇÇ 
)
ÇÇ 
{
ÉÉ 
Console
ÑÑ 
.
ÑÑ 
	WriteLine
ÑÑ !
(
ÑÑ! "
	NestLevel
ÑÑ" +
.
ÑÑ+ ,
ToString
ÑÑ, 4
(
ÑÑ4 5
)
ÑÑ5 6
)
ÑÑ6 7
;
ÑÑ7 8
}
ÖÖ 
MaxCodeBlock
áá 
=
áá 
$num
áá 
;
áá 
int
àà 
	countLine
àà 
=
àà 
$num
àà 
;
àà 
using
ââ 
(
ââ 
StringReader
ââ 
reader
ââ  &
=
ââ' (
new
ââ) ,
StringReader
ââ- 9
(
ââ9 :
input
ââ: ?
)
ââ? @
)
ââ@ A
{
ää 
string
ãã 
line
ãã 
;
ãã 
while
åå 
(
åå 
(
åå 
line
åå 
=
åå 
reader
åå %
.
åå% &
ReadLine
åå& .
(
åå. /
)
åå/ 0
)
åå0 1
!=
åå2 4
null
åå5 9
)
åå9 :
{
çç 
	countLine
èè 
+=
èè  
$num
èè! "
;
èè" #
if
ëë 
(
ëë 
line
ëë 
.
ëë 

StartsWith
ëë '
(
ëë' (
$str
ëë( .
)
ëë. /
||
ëë0 2
line
ëë3 7
.
ëë7 8

StartsWith
ëë8 B
(
ëëB C
$str
ëëC K
)
ëëK L
)
ëëL M
{
íí 
MaxCodeBlock
ìì $
=
ìì% &
(
ìì' (
MaxCodeBlock
ìì( 4
<=
ìì5 7
	countLine
ìì8 A
)
ììA B
?
ììC D
	countLine
ììE N
:
ììO P
MaxCodeBlock
ììQ ]
;
ìì] ^
	countLine
îî !
=
îî" #
$num
îî$ %
;
îî% &
}
ïï 
}
óó 
MaxCodeBlock
òò 
=
òò 
(
òò  
MaxCodeBlock
òò  ,
<=
òò- /
	countLine
òò0 9
)
òò9 :
?
òò; <
	countLine
òò= F
:
òòG H
MaxCodeBlock
òòI U
;
òòU V
}
ôô 
}
öö 	
public
úú 
static
úú 
void
úú 2
$ListProcedureCallWebPanelTransaction
úú ?
(
úú? @
)
úú@ A
{
ùù 	

IKBService
ûû 
kbserv
ûû 
=
ûû 

UIServices
ûû  *
.
ûû* +
KB
ûû+ -
;
ûû- .
IOutputService
üü 
output
üü !
=
üü" #
CommonServices
üü$ 2
.
üü2 3
Output
üü3 9
;
üü9 :
string
†† 
title
†† 
=
†† 
$str
†† X
;
††X Y
string
°° 

outputFile
°° 
=
°° 
	Functions
°°  )
.
°°) *
CreateOutputFile
°°* :
(
°°: ;
kbserv
°°; A
,
°°A B
title
°°C H
)
°°H I
;
°°I J
output
§§ 
.
§§ 
StartSection
§§ 
(
§§  
title
§§  %
)
§§% &
;
§§& '
KBDoctorXMLWriter
¶¶ 
writer
¶¶ $
=
¶¶% &
new
¶¶' *
KBDoctorXMLWriter
¶¶+ <
(
¶¶< =

outputFile
¶¶= G
,
¶¶G H
Encoding
¶¶I Q
.
¶¶Q R
UTF8
¶¶R V
)
¶¶V W
;
¶¶W X
writer
ßß 
.
ßß 
	AddHeader
ßß 
(
ßß 
title
ßß "
)
ßß" #
;
ßß# $
writer
®® 
.
®® 
AddTableHeader
®® !
(
®®! "
new
®®" %
string
®®& ,
[
®®, -
]
®®- .
{
®®/ 0
$str
®®1 9
,
®®9 :
$str
®®; H
,
®®H I
$str
®®J U
,
®®U V
$str
®®W d
}
®®e f
)
®®f g
;
®®g h
foreach
™™ 
(
™™ 
KBObject
™™ 
obj
™™ !
in
™™" $

UIServices
™™% /
.
™™/ 0
KB
™™0 2
.
™™2 3
CurrentModel
™™3 ?
.
™™? @
Objects
™™@ G
.
™™G H
GetAll
™™H N
(
™™N O
)
™™O P
)
™™P Q
{
´´ 
if
¨¨ 
(
¨¨ 
(
¨¨ 
obj
¨¨ 
is
¨¨ 
	Procedure
¨¨ %
)
¨¨% &
&&
¨¨' )
(
¨¨* +
obj
¨¨+ .
.
¨¨. /
Name
¨¨/ 3
!=
¨¨4 6
$str
¨¨7 E
)
¨¨E F
&&
¨¨G I
(
¨¨J K
!
¨¨K L
obj
¨¨L O
.
¨¨O P
Name
¨¨P T
.
¨¨T U
Contains
¨¨U ]
(
¨¨] ^
$str
¨¨^ e
)
¨¨e f
)
¨¨f g
)
¨¨g h
{
≠≠ 
foreach
ÆÆ 
(
ÆÆ 
EntityReference
ÆÆ ,
	reference
ÆÆ- 6
in
ÆÆ7 9
obj
ÆÆ: =
.
ÆÆ= >
GetReferences
ÆÆ> K
(
ÆÆK L
)
ÆÆL M
)
ÆÆM N
{
ØØ 
KBObject
∞∞  
objRef
∞∞! '
=
∞∞( )
KBObject
∞∞* 2
.
∞∞2 3
Get
∞∞3 6
(
∞∞6 7
obj
∞∞7 :
.
∞∞: ;
Model
∞∞; @
,
∞∞@ A
	reference
∞∞B K
.
∞∞K L
To
∞∞L N
)
∞∞N O
;
∞∞O P
if
±± 
(
±± 
(
±± 
objRef
±± #
!=
±±$ &
null
±±' +
)
±±+ ,
&&
±±- /
(
±±0 1
objRef
±±1 7
is
±±8 :
Transaction
±±; F
||
±±G I
objRef
±±J P
is
±±Q S
	WorkPanel
±±T ]
||
±±^ `
objRef
±±a g
is
±±h j
WebPanel
±±k s
)
±±s t
)
±±t u
{
≤≤ 
writer
≥≥ "
.
≥≥" #
AddTableData
≥≥# /
(
≥≥/ 0
new
≥≥0 3
string
≥≥4 :
[
≥≥: ;
]
≥≥; <
{
≥≥= >
	Functions
≥≥? H
.
≥≥H I

linkObject
≥≥I S
(
≥≥S T
obj
≥≥T W
)
≥≥W X
,
≥≥X Y
obj
≥≥Z ]
.
≥≥] ^
Description
≥≥^ i
,
≥≥i j
	Functions
≥≥k t
.
≥≥t u

linkObject
≥≥u 
(≥≥ Ä
objRef≥≥Ä Ü
)≥≥Ü á
,≥≥á à
objRef≥≥â è
.≥≥è ê
Description≥≥ê õ
}≥≥ú ù
)≥≥ù û
;≥≥û ü
output
¥¥ "
.
¥¥" #
AddLine
¥¥# *
(
¥¥* +
obj
¥¥+ .
.
¥¥. /
Name
¥¥/ 3
+
¥¥4 5
$str
¥¥6 <
+
¥¥= >
objRef
¥¥? E
.
¥¥E F
Name
¥¥F J
)
¥¥J K
;
¥¥K L
}
µµ 
}
∂∂ 
}
∑∑ 
}
∏∏ 
writer
∫∫ 
.
∫∫ 
	AddFooter
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫ 
writer
ªª 
.
ªª 
Close
ªª 
(
ªª 
)
ªª 
;
ªª 
KBDoctorHelper
ΩΩ 
.
ΩΩ !
ShowKBDoctorResults
ΩΩ .
(
ΩΩ. /

outputFile
ΩΩ/ 9
)
ΩΩ9 :
;
ΩΩ: ;
bool
ææ 
success
ææ 
=
ææ 
true
ææ 
;
ææ  
output
øø 
.
øø 

EndSection
øø 
(
øø 
title
øø #
,
øø# $
success
øø% ,
)
øø, -
;
øø- .
}
¿¿ 	
public
¬¬ 
static
¬¬ 
void
¬¬ 
RemoveObject
¬¬ '
(
¬¬' (
object
¬¬( .
[
¬¬. /
]
¬¬/ 0

parameters
¬¬1 ;
)
¬¬; <
{
√√ 	
string
≈≈ 
objtype
≈≈ 
=
≈≈ 
$str
≈≈ 
;
≈≈  
string
∆∆ 
objName
∆∆ 
=
∆∆ 
$str
∆∆ 
;
∆∆  
string
«« 
mensaje
«« 
=
«« 
$str
«« 
;
««  
Guid
»» 
guid
»» 
=
»» 
Guid
»» 
.
»» 
Empty
»» "
;
»»" #
foreach
   
(
   
object
   
o
   
in
    

parameters
  ! +
)
  + ,
{
ÀÀ 

Dictionary
ÃÃ 
<
ÃÃ 
string
ÃÃ !
,
ÃÃ! "
string
ÃÃ# )
>
ÃÃ) *
dic
ÃÃ+ .
=
ÃÃ/ 0
(
ÃÃ1 2

Dictionary
ÃÃ2 <
<
ÃÃ< =
string
ÃÃ= C
,
ÃÃC D
string
ÃÃE K
>
ÃÃK L
)
ÃÃL M
o
ÃÃM N
;
ÃÃN O
foreach
ŒŒ 
(
ŒŒ 
string
ŒŒ 
s
ŒŒ  !
in
ŒŒ" $
dic
ŒŒ% (
.
ŒŒ( )
Values
ŒŒ) /
)
ŒŒ/ 0
{
œœ 
try
–– 
{
—— 
guid
““ 
=
““ 
new
““ "
Guid
““# '
(
““' (
s
““( )
)
““) *
;
““* +
}
”” 
catch
‘‘ 
(
‘‘ 
FormatException
‘‘ *
)
‘‘* +
{
’’ 
guid
÷÷ 
=
÷÷ 
Guid
÷÷ #
.
÷÷# $
Empty
÷÷$ )
;
÷÷) *
}
◊◊ 
}
ÿÿ 
}
ŸŸ 
KBObject
⁄⁄ 
obj
⁄⁄ 
=
⁄⁄ 

UIServices
⁄⁄ %
.
⁄⁄% &
KB
⁄⁄& (
.
⁄⁄( )
CurrentModel
⁄⁄) 5
.
⁄⁄5 6
Objects
⁄⁄6 =
.
⁄⁄= >
Get
⁄⁄> A
(
⁄⁄A B
guid
⁄⁄B F
)
⁄⁄F G
;
⁄⁄G H
objtype
€€ 
=
€€ 
obj
€€ 
.
€€ 
TypeDescriptor
€€ (
.
€€( )
Name
€€) -
;
€€- .
objName
‹‹ 
=
‹‹ 
obj
‹‹ 
.
‹‹ 
Name
‹‹ 
;
‹‹ 
mensaje
›› 
=
›› 
string
›› 
.
›› 
Format
›› #
(
››# $
$str
››$ F
+
››G H
objtype
››I P
.
››P Q
Trim
››Q U
(
››U V
)
››V W
+
››X Y
$str
››Z a
,
››a b
objName
››c j
)
››j k
;
››k l
DialogResult
ﬁﬁ 
dr
ﬁﬁ 
=
ﬁﬁ 

MessageBox
ﬁﬁ (
.
ﬁﬁ( )
Show
ﬁﬁ) -
(
ﬁﬁ- .
mensaje
ﬁﬁ. 5
,
ﬁﬁ5 6
$str
ﬁﬁ7 F
,
ﬁﬁF G
MessageBoxButtons
ﬁﬁH Y
.
ﬁﬁY Z
YesNo
ﬁﬁZ _
,
ﬁﬁ_ `
MessageBoxIcon
ﬁﬁa o
.
ﬁﬁo p
Question
ﬁﬁp x
)
ﬁﬁx y
;
ﬁﬁy z
if
ﬂﬂ 
(
ﬂﬂ 
dr
ﬂﬂ 
==
ﬂﬂ 
DialogResult
ﬂﬂ "
.
ﬂﬂ" #
Yes
ﬂﬂ# &
)
ﬂﬂ& '
{
‡‡ 
try
„„ 
{
‰‰ 
obj
ÂÂ 
.
ÂÂ 
Delete
ÂÂ 
(
ÂÂ 
)
ÂÂ  
;
ÂÂ  !

MessageBox
ÊÊ 
.
ÊÊ 
Show
ÊÊ #
(
ÊÊ# $
objtype
ÊÊ$ +
+
ÊÊ, -
$str
ÊÊ. 1
+
ÊÊ2 3
objName
ÊÊ4 ;
+
ÊÊ< =
$str
ÊÊ> Z
)
ÊÊZ [
;
ÊÊ[ \
}
ÁÁ 
catch
ËË 
(
ËË 
GxException
ËË "
gxe
ËË# &
)
ËË& '
{
ÈÈ 

MessageBox
ÍÍ 
.
ÍÍ 
Show
ÍÍ #
(
ÍÍ# $
gxe
ÍÍ$ '
.
ÍÍ' (
Message
ÍÍ( /
,
ÍÍ/ 0
$str
ÍÍ1 D
+
ÍÍE F
objtype
ÍÍG N
,
ÍÍN O
MessageBoxButtons
ÍÍP a
.
ÍÍa b
OK
ÍÍb d
,
ÍÍd e
MessageBoxIcon
ÍÍf t
.
ÍÍt u
Warning
ÍÍu |
)
ÍÍ| }
;
ÍÍ} ~
}
ÎÎ 
}
ÏÏ 
}
ÌÌ 	
public
ÔÔ 
static
ÔÔ 
void
ÔÔ 

OpenObject
ÔÔ %
(
ÔÔ% &
object
ÔÔ& ,
[
ÔÔ, -
]
ÔÔ- .

parameters
ÔÔ/ 9
)
ÔÔ9 :
{
 	
foreach
ÒÒ 
(
ÒÒ 
object
ÒÒ 
o
ÒÒ 
in
ÒÒ  

parameters
ÒÒ! +
)
ÒÒ+ ,
{
ÚÚ 

Dictionary
ÛÛ 
<
ÛÛ 
string
ÛÛ !
,
ÛÛ! "
string
ÛÛ# )
>
ÛÛ) *
dic
ÛÛ+ .
=
ÛÛ/ 0
(
ÛÛ1 2

Dictionary
ÛÛ2 <
<
ÛÛ< =
string
ÛÛ= C
,
ÛÛC D
string
ÛÛE K
>
ÛÛK L
)
ÛÛL M
o
ÛÛM N
;
ÛÛN O
int
ÙÙ 
cant
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
foreach
ıı 
(
ıı 
string
ıı 
s
ıı  !
in
ıı" $
dic
ıı% (
.
ıı( )
Values
ıı) /
)
ıı/ 0
{
ˆˆ 
if
˜˜ 
(
˜˜ 
cant
˜˜ 
==
˜˜ 
$num
˜˜  !
)
˜˜! "
{
¯¯ 
Guid
˙˙ 
guid
˙˙ !
=
˙˙" #
new
˙˙$ '
Guid
˙˙( ,
(
˙˙, -
s
˙˙- .
)
˙˙. /
;
˙˙/ 0
KBObject
˚˚  
obj
˚˚! $
=
˚˚% &

UIServices
˚˚' 1
.
˚˚1 2
KB
˚˚2 4
.
˚˚4 5
CurrentModel
˚˚5 A
.
˚˚A B
Objects
˚˚B I
.
˚˚I J
Get
˚˚J M
(
˚˚M N
guid
˚˚N R
)
˚˚R S
;
˚˚S T

UIServices
¸¸ "
.
¸¸" #
DocumentManager
¸¸# 2
.
¸¸2 3
OpenDocument
¸¸3 ?
(
¸¸? @
obj
¸¸@ C
,
¸¸C D!
OpenDocumentOptions
¸¸E X
.
¸¸X Y
CurrentVersion
¸¸Y g
)
¸¸g h
;
¸¸h i
}
˝˝ 
cant
˛˛ 
++
˛˛ 
;
˛˛ 
}
ˇˇ 
}
ÄÄ 
}
ÅÅ 	
public
ÉÉ 
static
ÉÉ 
void
ÉÉ 
OpenObjectRules
ÉÉ *
(
ÉÉ* +
object
ÉÉ+ 1
[
ÉÉ1 2
]
ÉÉ2 3

parameters
ÉÉ4 >
)
ÉÉ> ?
{
ÑÑ 	
foreach
ÖÖ 
(
ÖÖ 
object
ÖÖ 
o
ÖÖ 
in
ÖÖ  

parameters
ÖÖ! +
)
ÖÖ+ ,
{
ÜÜ 

Dictionary
áá 
<
áá 
string
áá !
,
áá! "
string
áá# )
>
áá) *
dic
áá+ .
=
áá/ 0
(
áá1 2

Dictionary
áá2 <
<
áá< =
string
áá= C
,
ááC D
string
ááE K
>
ááK L
)
ááL M
o
ááM N
;
ááN O
int
àà 
cant
àà 
=
àà 
$num
àà 
;
àà 
foreach
ââ 
(
ââ 
string
ââ 
s
ââ  !
in
ââ" $
dic
ââ% (
.
ââ( )
Values
ââ) /
)
ââ/ 0
{
ää 
if
ãã 
(
ãã 
cant
ãã 
==
ãã 
$num
ãã  !
)
ãã! "
{
åå 
Guid
éé 
guid
éé !
=
éé" #
new
éé$ '
Guid
éé( ,
(
éé, -
s
éé- .
)
éé. /
;
éé/ 0
KBObject
èè  
obj
èè! $
=
èè% &

UIServices
èè' 1
.
èè1 2
KB
èè2 4
.
èè4 5
CurrentModel
èè5 A
.
èèA B
Objects
èèB I
.
èèI J
Get
èèJ M
(
èèM N
guid
èèN R
)
èèR S
;
èèS T!
OpenDocumentOptions
ëë +
options
ëë, 3
=
ëë4 5!
OpenDocumentOptions
ëë6 I
.
ëëI J
CurrentVersion
ëëJ X
;
ëëX Y
}
ìì 
cant
îî 
++
îî 
;
îî 
}
ïï 
}
ññ 
}
óó 	
public
ôô 
static
ôô 
void
ôô )
ObjectsWithVarNotBasedOnAtt
ôô 6
(
ôô6 7
)
ôô7 8
{
öö 	

IKBService
õõ 
kbserv
õõ 
=
õõ 

UIServices
õõ  *
.
õõ* +
KB
õõ+ -
;
õõ- .
string
úú 
title
úú 
=
úú 
$str
úú [
;
úú[ \
string
ùù 

outputFile
ùù 
=
ùù 
	Functions
ùù  )
.
ùù) *
CreateOutputFile
ùù* :
(
ùù: ;
kbserv
ùù; A
,
ùùA B
title
ùùC H
)
ùùH I
;
ùùI J
IOutputService
†† 
output
†† !
=
††" #
CommonServices
††$ 2
.
††2 3
Output
††3 9
;
††9 :
output
°° 
.
°° 
StartSection
°° 
(
°°  
title
°°  %
)
°°% &
;
°°& '
KBDoctorXMLWriter
££ 
writer
££ $
=
££% &
new
££' *
KBDoctorXMLWriter
££+ <
(
££< =

outputFile
££= G
,
££G H
Encoding
££I Q
.
££Q R
UTF8
££R V
)
££V W
;
££W X
writer
§§ 
.
§§ 
	AddHeader
§§ 
(
§§ 
title
§§ "
)
§§" #
;
§§# $
writer
•• 
.
•• 
AddTableHeader
•• !
(
••! "
new
••" %
string
••& ,
[
••, -
]
••- .
{
••/ 0
$str
••1 7
,
••7 8
$str
••9 ?
,
••? @
$str
••A K
,
••K L
$str
••M X
,
••X Y
$str
••Z b
}
••c d
)
••d e
;
••e f
string
¶¶ 
type
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
string
ßß 
name
ßß 
=
ßß 
$str
ßß 
;
ßß 
foreach
™™ 
(
™™ 
KBObject
™™ 
obj
™™ !
in
™™" $
kbserv
™™% +
.
™™+ ,
CurrentModel
™™, 8
.
™™8 9
Objects
™™9 @
.
™™@ A
GetAll
™™A G
(
™™G H
)
™™H I
)
™™I J
{
´´ 
output
¨¨ 
.
¨¨ 
AddLine
¨¨ 
(
¨¨ 
$str
¨¨ /
+
¨¨0 1
obj
¨¨2 5
.
¨¨5 6
Name
¨¨6 :
+
¨¨; <
$str
¨¨= B
+
¨¨C D
obj
¨¨E H
.
¨¨H I
TypeDescriptor
¨¨I W
.
¨¨W X
Name
¨¨X \
)
¨¨\ ]
;
¨¨] ^
Boolean
ÆÆ 
SaveObj
ÆÆ 
=
ÆÆ  !
false
ÆÆ" '
;
ÆÆ' (
if
ØØ 
(
ØØ 
isGenerated
ØØ 
(
ØØ  
obj
ØØ  #
)
ØØ# $
&&
ØØ% '
(
ØØ( )
obj
ØØ) ,
is
ØØ- /
Transaction
ØØ0 ;
||
ØØ< >
obj
ØØ? B
is
ØØC E
WebPanel
ØØF N
||
ØØO Q
obj
ØØR U
is
ØØV X
	WorkPanel
ØØY b
||
ØØc e
obj
ØØf i
is
ØØj l
	Procedure
ØØm v
)
ØØv w
)
ØØw x
{
∞∞ 
VariablesPart
≤≤ !
vp
≤≤" $
=
≤≤% &
obj
≤≤' *
.
≤≤* +
Parts
≤≤+ 0
.
≤≤0 1
Get
≤≤1 4
<
≤≤4 5
VariablesPart
≤≤5 B
>
≤≤B C
(
≤≤C D
)
≤≤D E
;
≤≤E F
if
≥≥ 
(
≥≥ 
vp
≥≥ 
!=
≥≥ 
null
≥≥ "
)
≥≥" #
{
¥¥ 
foreach
µµ 
(
µµ  !
Variable
µµ! )
v
µµ* +
in
µµ, .
vp
µµ/ 1
.
µµ1 2
	Variables
µµ2 ;
)
µµ; <
{
∂∂ 
if
∑∑ 
(
∑∑  
(
∑∑  !
!
∑∑! "
v
∑∑" #
.
∑∑# $

IsStandard
∑∑$ .
)
∑∑. /
&&
∑∑0 2
(
∑∑3 4
v
∑∑4 5
.
∑∑5 6
Type
∑∑6 :
==
∑∑; =
eDBType
∑∑> E
.
∑∑E F
DATE
∑∑F J
)
∑∑J K
)
∑∑L M
{
ππ 
string
∫∫  &
attname
∫∫' .
=
∫∫/ 0
(
∫∫1 2
v
∫∫2 3
.
∫∫3 4
AttributeBasedOn
∫∫4 D
==
∫∫E G
null
∫∫H L
)
∫∫L M
?
∫∫N O
$str
∫∫P R
:
∫∫S T
v
∫∫U V
.
∫∫V W
AttributeBasedOn
∫∫W g
.
∫∫g h
Name
∫∫h l
;
∫∫l m
string
ªª  &
domname
ªª' .
=
ªª/ 0
(
ªª1 2
v
ªª2 3
.
ªª3 4
DomainBasedOn
ªª4 A
==
ªªB D
null
ªªE I
)
ªªI J
?
ªªK L
$str
ªªM O
:
ªªP Q
v
ªªR S
.
ªªS T
DomainBasedOn
ªªT a
.
ªªa b
Name
ªªb f
;
ªªf g
if
ΩΩ  "
(
ΩΩ# $
attname
ΩΩ$ +
==
ΩΩ, .
$str
ΩΩ/ 1
&&
ΩΩ2 4
domname
ΩΩ5 <
==
ΩΩ= ?
$str
ΩΩ@ B
)
ΩΩB C
{
øø  !
string
¿¿$ *
vname
¿¿+ 0
=
¿¿1 2
v
¿¿3 4
.
¿¿4 5
Name
¿¿5 9
.
¿¿9 :
ToLower
¿¿: A
(
¿¿A B
)
¿¿B C
;
¿¿C D
writer
¡¡$ *
.
¡¡* +
AddTableData
¡¡+ 7
(
¡¡7 8
new
¡¡8 ;
string
¡¡< B
[
¡¡B C
]
¡¡C D
{
¡¡E F
obj
¡¡G J
.
¡¡J K
TypeDescriptor
¡¡K Y
.
¡¡Y Z
Name
¡¡Z ^
,
¡¡^ _
	Functions
¡¡` i
.
¡¡i j

linkObject
¡¡j t
(
¡¡t u
obj
¡¡u x
)
¡¡x y
,
¡¡y z
v
¡¡{ |
.
¡¡| }
Name¡¡} Å
,¡¡Å Ç
attname¡¡É ä
,¡¡ä ã
domname¡¡å ì
}¡¡î ï
)¡¡ï ñ
;¡¡ñ ó
}
¬¬  !
}
√√ 
}
ƒƒ 
}
≈≈ 
}
»» 
}
…… 
writer
   
.
   
	AddFooter
   
(
   
)
   
;
   
writer
ÀÀ 
.
ÀÀ 
Close
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
KBDoctorHelper
ÕÕ 
.
ÕÕ !
ShowKBDoctorResults
ÕÕ .
(
ÕÕ. /

outputFile
ÕÕ/ 9
)
ÕÕ9 :
;
ÕÕ: ;
bool
ŒŒ 
success
ŒŒ 
=
ŒŒ 
true
ŒŒ 
;
ŒŒ  
output
œœ 
.
œœ 

EndSection
œœ 
(
œœ 
title
œœ #
,
œœ# $
success
œœ% ,
)
œœ, -
;
œœ- .
}
–– 	
public
““ 
static
““ 
string
““ 1
#VariablesNotBasedAttributesOrDomain
““ @
(
““@ A
KBObject
““A I
obj
““J M
)
““M N
{
”” 	

IKBService
‘‘ 
kbserv
‘‘ 
=
‘‘ 

UIServices
‘‘  *
.
‘‘* +
KB
‘‘+ -
;
‘‘- .
KBModel
’’ 
kbmod
’’ 
=
’’ 
kbserv
’’ "
.
’’" #
CurrentModel
’’# /
;
’’/ 0
string
◊◊ 
	variables
◊◊ 
=
◊◊ 
$str
◊◊ !
;
◊◊! "
VariablesPart
ÿÿ 
vp
ÿÿ 
=
ÿÿ 
obj
ÿÿ "
.
ÿÿ" #
Parts
ÿÿ# (
.
ÿÿ( )
Get
ÿÿ) ,
<
ÿÿ, -
VariablesPart
ÿÿ- :
>
ÿÿ: ;
(
ÿÿ; <
)
ÿÿ< =
;
ÿÿ= >
if
ŸŸ 
(
ŸŸ 
vp
ŸŸ 
!=
ŸŸ 
null
ŸŸ 
)
ŸŸ 
{
⁄⁄ 
foreach
€€ 
(
€€ 
Variable
€€ !
v
€€" #
in
€€$ &
vp
€€' )
.
€€) *
	Variables
€€* 3
)
€€3 4
{
‹‹ 
if
›› 
(
›› 
(
›› 
!
›› 
v
›› 
.
›› 

IsStandard
›› &
)
››& '
&&
››( *
(
››+ ,
v
››, -
.
››- .
AttributeBasedOn
››. >
==
››? A
null
››B F
)
››F G
&&
››H J
(
››K L
v
››L M
.
››M N
DomainBasedOn
››N [
==
››\ ^
null
››_ c
)
››c d
&&
››e g
(
››h i
v
››i j
.
››j k
Type
››k o
!=
››p r
eDBType
››s z
.
››z {
GX_USRDEFTYP››{ á
)››á à
&&
ﬁﬁ 
(
ﬁﬁ 
v
ﬁﬁ 
.
ﬁﬁ 
Type
ﬁﬁ "
!=
ﬁﬁ# %
eDBType
ﬁﬁ& -
.
ﬁﬁ- .
GX_SDT
ﬁﬁ. 4
)
ﬁﬁ4 5
&&
ﬁﬁ6 8
(
ﬁﬁ9 :
v
ﬁﬁ: ;
.
ﬁﬁ; <
Type
ﬁﬁ< @
!=
ﬁﬁA C
eDBType
ﬁﬁD K
.
ﬁﬁK L 
GX_EXTERNAL_OBJECT
ﬁﬁL ^
)
ﬁﬁ^ _
&&
ﬁﬁ` b
(
ﬁﬁc d
v
ﬁﬁd e
.
ﬁﬁe f
Type
ﬁﬁf j
!=
ﬁﬁk m
eDBType
ﬁﬁn u
.
ﬁﬁu v
Boolean
ﬁﬁv }
)
ﬁﬁ} ~
)
ﬁﬁ~ 
{
ﬂﬂ 
	variables
‡‡ !
+=
‡‡" $
v
‡‡% &
.
‡‡& '
Name
‡‡' +
+
‡‡, -
$str
‡‡. 1
+
‡‡2 3
v
‡‡4 5
.
‡‡5 6
Type
‡‡6 :
.
‡‡: ;
ToString
‡‡; C
(
‡‡C D
)
‡‡D E
.
‡‡E F
ToLower
‡‡F M
(
‡‡M N
)
‡‡N O
+
‡‡P Q
$str
‡‡R U
+
‡‡V W
v
‡‡X Y
.
‡‡Y Z
Length
‡‡Z `
.
‡‡` a
ToString
‡‡a i
(
‡‡i j
)
‡‡j k
+
‡‡l m
$str
‡‡n u
+
‡‡v w
Environment‡‡x É
.‡‡É Ñ
NewLine‡‡Ñ ã
;‡‡ã å
string
·· 
objaux
·· %
=
··& '
obj
··( +
.
··+ ,
Name
··, 0
+
··1 2
$str
··3 6
+
··7 8
v
··9 :
.
··: ;
Name
··; ?
+
··@ A
$str
··B E
+
··F G
	Functions
··H Q
.
··Q R#
ReturnPictureVariable
··R g
(
··g h
v
··h i
)
··i j
;
··j k
	Functions
‚‚ !
.
‚‚! "
AddLineSummary
‚‚" 0
(
‚‚0 1
$str
‚‚1 L
,
‚‚L M
objaux
‚‚N T
)
‚‚T U
;
‚‚U V
}
‰‰ 
}
ÂÂ 
}
ÊÊ 
return
ÁÁ 
	variables
ÁÁ 
;
ÁÁ 
}
ËË 	
public
ÍÍ 
static
ÍÍ 
void
ÍÍ $
AssignDomainToVariable
ÍÍ 1
(
ÍÍ1 2
object
ÍÍ2 8
[
ÍÍ8 9
]
ÍÍ9 :

parameters
ÍÍ; E
)
ÍÍE F
{
ÎÎ 	

IKBService
ÏÏ 
kbserv
ÏÏ 
=
ÏÏ 

UIServices
ÏÏ  *
.
ÏÏ* +
KB
ÏÏ+ -
;
ÏÏ- .
string
ÌÌ 

domainName
ÌÌ 
=
ÌÌ 
$str
ÌÌ  "
;
ÌÌ" #
string
ÓÓ 
objName
ÓÓ 
=
ÓÓ 
$str
ÓÓ 
;
ÓÓ  
string
ÔÔ 
type
ÔÔ 
=
ÔÔ 
$str
ÔÔ 
;
ÔÔ 
int
 
varid
 
=
 
$num
 
;
 
Artech
ÒÒ 
.
ÒÒ 
Architecture
ÒÒ 
.
ÒÒ  
UI
ÒÒ  "
.
ÒÒ" #
	Framework
ÒÒ# ,
.
ÒÒ, -
Objects
ÒÒ- 4
.
ÒÒ4 5
IGxDocument
ÒÒ5 @
document
ÒÒA I
;
ÒÒI J
foreach
ÚÚ 
(
ÚÚ 
object
ÚÚ 
o
ÚÚ 
in
ÚÚ  

parameters
ÚÚ! +
)
ÚÚ+ ,
{
ÛÛ 

Dictionary
ÙÙ 
<
ÙÙ 
string
ÙÙ !
,
ÙÙ! "
string
ÙÙ# )
>
ÙÙ) *
dic
ÙÙ+ .
=
ÙÙ/ 0
(
ÙÙ1 2

Dictionary
ÙÙ2 <
<
ÙÙ< =
string
ÙÙ= C
,
ÙÙC D
string
ÙÙE K
>
ÙÙK L
)
ÙÙL M
o
ÙÙM N
;
ÙÙN O
int
ıı 
cant
ıı 
=
ıı 
$num
ıı 
;
ıı 
foreach
˜˜ 
(
˜˜ 
string
˜˜ 
s
˜˜  !
in
˜˜" $
dic
˜˜% (
.
˜˜( )
Values
˜˜) /
)
˜˜/ 0
{
¯¯ 
switch
˘˘ 
(
˘˘ 
cant
˘˘  
)
˘˘  !
{
˙˙ 
case
˚˚ 
$num
˚˚ 
:
˚˚ 
objName
¸¸ #
=
¸¸$ %
s
¸¸& '
;
¸¸' (
break
˝˝ !
;
˝˝! "
case
˛˛ 
$num
˛˛ 
:
˛˛ 
type
ˇˇ  
=
ˇˇ! "
s
ˇˇ# $
;
ˇˇ$ %
break
ÄÄ !
;
ÄÄ! "
case
ÅÅ 
$num
ÅÅ 
:
ÅÅ 
varid
ÇÇ !
=
ÇÇ" #
int
ÇÇ$ '
.
ÇÇ' (
Parse
ÇÇ( -
(
ÇÇ- .
s
ÇÇ. /
)
ÇÇ/ 0
;
ÇÇ0 1
break
ÉÉ !
;
ÉÉ! "
case
ÑÑ 
$num
ÑÑ 
:
ÑÑ 

domainName
ÖÖ &
=
ÖÖ' (
s
ÖÖ) *
;
ÖÖ* +
break
ÜÜ !
;
ÜÜ! "
default
áá 
:
áá  
break
àà !
;
àà! "
}
ââ 
cant
ää 
++
ää 
;
ää 
}
ãã 
}
åå 
if
çç 
(
çç 
(
çç 
objName
çç 
!=
çç 
$str
çç 
)
çç 
&&
çç  "
(
çç# $

domainName
çç$ .
!=
çç/ 1
$str
çç2 4
)
çç4 5
&&
çç6 8
(
çç9 :
type
çç: >
!=
çç? A
$str
ççB D
)
ççD E
&&
ççF H
(
ççI J
varid
ççJ O
!=
ççP R
$num
ççS T
)
ççT U
)
ççU V
{
éé 
Domain
èè 
d
èè 
=
èè 
	Functions
èè $
.
èè$ %
DomainByName
èè% 1
(
èè1 2

domainName
èè2 <
)
èè< =
;
èè= >
foreach
êê 
(
êê 
KBObject
êê !
obj
êê" %
in
êê& (

UIServices
êê) 3
.
êê3 4
KB
êê4 6
.
êê6 7
CurrentModel
êê7 C
.
êêC D
Objects
êêD K
.
êêK L
	GetByName
êêL U
(
êêU V
$str
êêV _
,
êê_ `
null
êêa e
,
êêe f
objName
êêg n
)
êên o
)
êêo p
{
ëë 
Variable
íí 
v
íí 
=
íí  
obj
íí! $
.
íí$ %
Parts
íí% *
.
íí* +
Get
íí+ .
<
íí. /
VariablesPart
íí/ <
>
íí< =
(
íí= >
)
íí> ?
.
íí? @
GetVariable
íí@ K
(
ííK L
varid
ííL Q
)
ííQ R
;
ííR S
v
ìì 
.
ìì 
DomainBasedOn
ìì #
=
ìì$ %
d
ìì& '
;
ìì' (
if
îî 
(
îî 

UIServices
îî "
.
îî" #
DocumentManager
îî# 2
.
îî2 3
IsOpenDocument
îî3 A
(
îîA B
obj
îîB E
,
îîE F
out
îîG J
document
îîK S
)
îîS T
)
îîT U
{
ïï 
ObjectsHelper
ññ %
.
ññ% &
SetDocumentDirty
ññ& 6
(
ññ6 7
document
ññ7 ?
)
ññ? @
;
ññ@ A

UIServices
óó "
.
óó" #
TrackSelection
óó# 1
.
óó1 2
OnSelectChange
óó2 @
(
óó@ A
document
óóA I
.
óóI J
Object
óóJ P
,
óóP Q
null
óóR V
)
óóV W
;
óóW X

MessageBox
òò "
.
òò" #
Show
òò# '
(
òò' (
$str
òò( V
)
òòV W
;
òòW X
}
ôô 
else
öö 
{
õõ 
obj
úú 
.
úú 
Save
úú  
(
úú  !
)
úú! "
;
úú" #

MessageBox
ùù "
.
ùù" #
Show
ùù# '
(
ùù' (
$str
ùù( <
)
ùù< =
;
ùù= >
}
ûû 
}
üü 
}
†† 
}
££ 	
public
•• 
static
•• 
void
•• '
AssignAttributeToVariable
•• 4
(
••4 5
object
••5 ;
[
••; <
]
••< =

parameters
••> H
)
••H I
{
¶¶ 	

IKBService
ßß 
kbserv
ßß 
=
ßß 

UIServices
ßß  *
.
ßß* +
KB
ßß+ -
;
ßß- .
string
®® 
objName
®® 
=
®® 
$str
®® 
;
®®  
string
©© 
type
©© 
=
©© 
$str
©© 
;
©© 
int
™™ 
varid
™™ 
=
™™ 
$num
™™ 
;
™™ 
int
´´ 
attid
´´ 
=
´´ 
$num
´´ 
;
´´ 
Artech
¨¨ 
.
¨¨ 
Architecture
¨¨ 
.
¨¨  
UI
¨¨  "
.
¨¨" #
	Framework
¨¨# ,
.
¨¨, -
Objects
¨¨- 4
.
¨¨4 5
IGxDocument
¨¨5 @
document
¨¨A I
;
¨¨I J
foreach
≠≠ 
(
≠≠ 
object
≠≠ 
o
≠≠ 
in
≠≠  

parameters
≠≠! +
)
≠≠+ ,
{
ÆÆ 

Dictionary
ØØ 
<
ØØ 
string
ØØ !
,
ØØ! "
string
ØØ# )
>
ØØ) *
dic
ØØ+ .
=
ØØ/ 0
(
ØØ1 2

Dictionary
ØØ2 <
<
ØØ< =
string
ØØ= C
,
ØØC D
string
ØØE K
>
ØØK L
)
ØØL M
o
ØØM N
;
ØØN O
int
∞∞ 
cant
∞∞ 
=
∞∞ 
$num
∞∞ 
;
∞∞ 
foreach
≤≤ 
(
≤≤ 
string
≤≤ 
s
≤≤  !
in
≤≤" $
dic
≤≤% (
.
≤≤( )
Values
≤≤) /
)
≤≤/ 0
{
≥≥ 
switch
¥¥ 
(
¥¥ 
cant
¥¥  
)
¥¥  !
{
µµ 
case
∂∂ 
$num
∂∂ 
:
∂∂ 
objName
∑∑ #
=
∑∑$ %
s
∑∑& '
;
∑∑' (
break
∏∏ !
;
∏∏! "
case
ππ 
$num
ππ 
:
ππ 
type
∫∫  
=
∫∫! "
s
∫∫# $
;
∫∫$ %
break
ªª !
;
ªª! "
case
ºº 
$num
ºº 
:
ºº 
varid
ΩΩ !
=
ΩΩ" #
int
ΩΩ$ '
.
ΩΩ' (
Parse
ΩΩ( -
(
ΩΩ- .
s
ΩΩ. /
)
ΩΩ/ 0
;
ΩΩ0 1
break
ææ !
;
ææ! "
case
øø 
$num
øø 
:
øø 
attid
¿¿ !
=
¿¿" #
int
¿¿$ '
.
¿¿' (
Parse
¿¿( -
(
¿¿- .
s
¿¿. /
)
¿¿/ 0
;
¿¿0 1
break
¡¡ !
;
¡¡! "
default
¬¬ 
:
¬¬  
break
√√ !
;
√√! "
}
ƒƒ 
cant
≈≈ 
++
≈≈ 
;
≈≈ 
}
∆∆ 
}
«« 
if
   
(
   
objName
   
!=
   
$str
   
&&
    
attid
  ! &
!=
  ' )
$num
  * +
&&
  , .
type
  / 3
!=
  4 6
$str
  7 9
&&
  : <
varid
  = B
!=
  C E
$num
  F G
)
  G H
{
ÀÀ 
Artech
ÃÃ 
.
ÃÃ 
Genexus
ÃÃ 
.
ÃÃ 
Common
ÃÃ %
.
ÃÃ% &
Objects
ÃÃ& -
.
ÃÃ- .
	Attribute
ÃÃ. 7
a
ÃÃ8 9
=
ÃÃ: ;
Artech
ÃÃ< B
.
ÃÃB C
Genexus
ÃÃC J
.
ÃÃJ K
Common
ÃÃK Q
.
ÃÃQ R
Objects
ÃÃR Y
.
ÃÃY Z
	Attribute
ÃÃZ c
.
ÃÃc d
Get
ÃÃd g
(
ÃÃg h

UIServices
ÃÃh r
.
ÃÃr s
KB
ÃÃs u
.
ÃÃu v
CurrentModelÃÃv Ç
,ÃÃÇ É
attidÃÃÑ â
)ÃÃâ ä
;ÃÃä ã
foreach
ÕÕ 
(
ÕÕ 
KBObject
ÕÕ !
obj
ÕÕ" %
in
ÕÕ& (

UIServices
ÕÕ) 3
.
ÕÕ3 4
KB
ÕÕ4 6
.
ÕÕ6 7
CurrentModel
ÕÕ7 C
.
ÕÕC D
Objects
ÕÕD K
.
ÕÕK L
	GetByName
ÕÕL U
(
ÕÕU V
$str
ÕÕV _
,
ÕÕ_ `
null
ÕÕa e
,
ÕÕe f
objName
ÕÕg n
)
ÕÕn o
)
ÕÕo p
{
ŒŒ 
Variable
œœ 
v
œœ 
=
œœ  
obj
œœ! $
.
œœ$ %
Parts
œœ% *
.
œœ* +
Get
œœ+ .
<
œœ. /
VariablesPart
œœ/ <
>
œœ< =
(
œœ= >
)
œœ> ?
.
œœ? @
GetVariable
œœ@ K
(
œœK L
varid
œœL Q
)
œœQ R
;
œœR S
v
–– 
.
–– 
AttributeBasedOn
–– &
=
––' (
a
––) *
;
––* +
if
““ 
(
““ 

UIServices
““ "
.
““" #
DocumentManager
““# 2
.
““2 3
IsOpenDocument
““3 A
(
““A B
obj
““B E
,
““E F
out
““G J
document
““K S
)
““S T
)
““T U
{
”” 
ObjectsHelper
‘‘ %
.
‘‘% &
SetDocumentDirty
‘‘& 6
(
‘‘6 7
document
‘‘7 ?
)
‘‘? @
;
‘‘@ A

UIServices
’’ "
.
’’" #
TrackSelection
’’# 1
.
’’1 2
OnSelectChange
’’2 @
(
’’@ A
document
’’A I
.
’’I J
Object
’’J P
,
’’P Q
null
’’R V
)
’’V W
;
’’W X

MessageBox
÷÷ "
.
÷÷" #
Show
÷÷# '
(
÷÷' (
$str
÷÷( V
)
÷÷V W
;
÷÷W X
}
◊◊ 
else
ÿÿ 
{
ŸŸ 
obj
⁄⁄ 
.
⁄⁄ 
Save
⁄⁄  
(
⁄⁄  !
)
⁄⁄! "
;
⁄⁄" #

MessageBox
€€ "
.
€€" #
Show
€€# '
(
€€' (
$str
€€( <
)
€€< =
;
€€= >
}
‹‹ 
}
›› 
}
ﬁﬁ 
}
ﬂﬂ 	
public
·· 
static
·· 
void
··  
IndexWithNotRefAtt
·· -
(
··- .
)
··. /
{
‚‚ 	

IKBService
„„ 
kbserv
„„ 
=
„„ 

UIServices
„„  *
.
„„* +
KB
„„+ -
;
„„- .
string
‰‰ 
title
‰‰ 
=
‰‰ 
$str
‰‰ L
;
‰‰L M
string
ÂÂ 

outputFile
ÂÂ 
=
ÂÂ 
	Functions
ÂÂ  )
.
ÂÂ) *
CreateOutputFile
ÂÂ* :
(
ÂÂ: ;
kbserv
ÂÂ; A
,
ÂÂA B
title
ÂÂC H
)
ÂÂH I
;
ÂÂI J
IOutputService
ËË 
output
ËË !
=
ËË" #
CommonServices
ËË$ 2
.
ËË2 3
Output
ËË3 9
;
ËË9 :
output
ÈÈ 
.
ÈÈ 
StartSection
ÈÈ 
(
ÈÈ  
title
ÈÈ  %
)
ÈÈ% &
;
ÈÈ& '
KBDoctorXMLWriter
ÎÎ 
writer
ÎÎ $
=
ÎÎ% &
new
ÎÎ' *
KBDoctorXMLWriter
ÎÎ+ <
(
ÎÎ< =

outputFile
ÎÎ= G
,
ÎÎG H
Encoding
ÎÎI Q
.
ÎÎQ R
UTF8
ÎÎR V
)
ÎÎV W
;
ÎÎW X
writer
ÏÏ 
.
ÏÏ 
	AddHeader
ÏÏ 
(
ÏÏ 
title
ÏÏ "
)
ÏÏ" #
;
ÏÏ# $
writer
ÌÌ 
.
ÌÌ 
AddTableHeader
ÌÌ !
(
ÌÌ! "
new
ÌÌ" %
string
ÌÌ& ,
[
ÌÌ, -
]
ÌÌ- .
{
ÌÌ/ 0
$str
ÌÌ1 8
,
ÌÌ8 9
$str
ÌÌ: @
,
ÌÌ@ A
$str
ÌÌB M
,
ÌÌM N
$str
ÌÌO \
,
ÌÌ\ ]
$str
ÌÌ^ l
,
ÌÌl m
$strÌÌn è
,ÌÌè ê
$strÌÌë ∆
}ÌÌ« »
)ÌÌ» …
;ÌÌ…  
string
ÓÓ 
remove
ÓÓ 
=
ÓÓ 
$str
ÓÓ 
;
ÓÓ 
string
ÔÔ 
remAtt
ÔÔ 
=
ÔÔ 
$str
ÔÔ 
;
ÔÔ 
string
 
remAttRigth
 
=
  
$str
! #
;
# $ 
KBObjectCollection
ÚÚ 

attUnreach
ÚÚ )
=
ÚÚ* +
Unreachables
ÚÚ, 8
(
ÚÚ8 9
$str
ÚÚ9 D
)
ÚÚD E
;
ÚÚE F 
KBObjectCollection
ÛÛ 
indexes
ÛÛ &
=
ÛÛ' (
new
ÛÛ) , 
KBObjectCollection
ÛÛ- ?
(
ÛÛ? @
)
ÛÛ@ A
;
ÛÛA B 
KBObjectCollection
ÙÙ 
indexatt
ÙÙ '
=
ÙÙ( )
null
ÙÙ* .
;
ÙÙ. /
foreach
ıı 
(
ıı 
KBObject
ıı 
obj
ıı !
in
ıı" $
Artech
ıı% +
.
ıı+ ,
Genexus
ıı, 3
.
ıı3 4
Common
ıı4 :
.
ıı: ;
Objects
ıı; B
.
ııB C
Index
ııC H
.
ııH I
GetAll
ııI O
(
ııO P
kbserv
ııP V
.
ııV W
CurrentModel
ııW c
)
ııc d
)
ııd e
{
ˆˆ 
if
˜˜ 
(
˜˜ 
(
˜˜ 
(
˜˜ 
(
˜˜ 
Index
˜˜ 
)
˜˜ 
obj
˜˜  
)
˜˜  !
.
˜˜! "
Source
˜˜" (
==
˜˜) +
IndexSource
˜˜, 7
.
˜˜7 8
User
˜˜8 <
)
˜˜< =
&&
˜˜> @
(
˜˜A B
(
˜˜B C
(
˜˜C D
Index
˜˜D I
)
˜˜I J
obj
˜˜J M
)
˜˜M N
.
˜˜N O
Table
˜˜O T
!=
˜˜U W
null
˜˜X \
)
˜˜\ ]
)
˜˜] ^
indexes
¯¯ 
.
¯¯ 
Add
¯¯ 
(
¯¯  
obj
¯¯  #
)
¯¯# $
;
¯¯$ %
}
˘˘ 
bool
˚˚ 
indexWithAtt
˚˚ 
=
˚˚ 
false
˚˚  %
;
˚˚% &
string
¸¸ 
composition
¸¸ 
=
¸¸  
$str
¸¸! #
;
¸¸# $
foreach
˝˝ 
(
˝˝ 
Artech
˝˝ 
.
˝˝ 
Genexus
˝˝ #
.
˝˝# $
Common
˝˝$ *
.
˝˝* +
Objects
˝˝+ 2
.
˝˝2 3
	Attribute
˝˝3 <
obj
˝˝= @
in
˝˝A C

attUnreach
˝˝D N
)
˝˝N O
{
˛˛ 
indexatt
ˇˇ 
=
ˇˇ 
new
ˇˇ  
KBObjectCollection
ˇˇ 1
(
ˇˇ1 2
)
ˇˇ2 3
;
ˇˇ3 4
foreach
ÄÄ 
(
ÄÄ 
Index
ÄÄ 
ind
ÄÄ "
in
ÄÄ# %
indexes
ÄÄ& -
)
ÄÄ- .
{
ÅÅ 
indexWithAtt
ÇÇ  
=
ÇÇ! "
false
ÇÇ# (
;
ÇÇ( )
composition
ÉÉ 
=
ÉÉ  !
$str
ÉÉ" $
;
ÉÉ$ %
foreach
ÖÖ 
(
ÖÖ 
IndexMember
ÖÖ (
im
ÖÖ) +
in
ÖÖ, .
ind
ÖÖ/ 2
.
ÖÖ2 3
IndexStructure
ÖÖ3 A
.
ÖÖA B
Members
ÖÖB I
)
ÖÖI J
{
ÜÜ 
if
áá 
(
áá 
composition
áá '
!=
áá( *
$str
áá+ -
)
áá- .
{
àà 
composition
ââ '
+=
ââ( *
$str
ââ+ /
;
ââ/ 0
}
ää 
composition
ãã #
+=
ãã$ &
im
ãã' )
.
ãã) *
	Attribute
ãã* 3
.
ãã3 4
Name
ãã4 8
;
ãã8 9
if
åå 
(
åå 
im
åå 
.
åå 
	Attribute
åå (
.
åå( )
Id
åå) +
==
åå, .
obj
åå/ 2
.
åå2 3
Id
åå3 5
)
åå5 6
{
çç 
indexWithAtt
éé (
=
éé) *
true
éé+ /
;
éé/ 0
}
èè 
}
êê 
if
íí 
(
íí 
indexWithAtt
íí $
)
íí$ %
{
ìì 
indexatt
îî  
.
îî  !
Add
îî! $
(
îî$ %
ind
îî% (
)
îî( )
;
îî) *
remove
ïï 
=
ïï  
$strïï! Ç
+ïïÉ Ñ
indïïÖ à
.ïïà â
Idïïâ ã
+ïïå ç
$strïïé ó
+ïïò ô
objïïö ù
.ïïù û
Idïïû †
+ïï° ¢
$strïï£ ∏
;ïï∏ π
remAtt
ññ 
=
ññ  
$strññ! Ç
+ññÉ Ñ
indññÖ à
.ññà â
Idññâ ã
+ññå ç
$strññé ó
+ññò ô
objññö ù
.ññù û
Idññû †
+ññ° ¢
$strññ£ À
;ññÀ Ã
remAttRigth
óó #
=
óó$ %
$stróó& á
+óóà â
indóóä ç
.óóç é
Idóóé ê
+óóë í
$stróóì ú
+óóù û
objóóü ¢
.óó¢ £
Idóó£ •
+óó¶ ß
$stróó® ‰
;óó‰ Â
writer
òò 
.
òò 
AddTableData
òò +
(
òò+ ,
new
òò, /
string
òò0 6
[
òò6 7
]
òò7 8
{
òò9 :
ind
òò; >
.
òò> ?
Table
òò? D
.
òòD E
Name
òòE I
,
òòI J
ind
òòK N
.
òòN O
Name
òòO S
,
òòS T
obj
òòU X
.
òòX Y
Name
òòY ]
,
òò] ^
composition
òò_ j
,
òòj k
remove
òòl r
,
òòr s
remAtt
òòt z
,
òòz {
remAttRigthòò| á
}òòà â
)òòâ ä
;òòä ã
}
ôô 
}
öö 
indexes
õõ 
.
õõ 
	RemoveAll
õõ !
(
õõ! "
indexatt
õõ" *
)
õõ* +
;
õõ+ ,
}
úú 
writer
ùù 
.
ùù 
	AddFooter
ùù 
(
ùù 
)
ùù 
;
ùù 
writer
ûû 
.
ûû 
Close
ûû 
(
ûû 
)
ûû 
;
ûû 
KBDoctorHelper
†† 
.
†† !
ShowKBDoctorResults
†† .
(
††. /

outputFile
††/ 9
)
††9 :
;
††: ;
bool
°° 
success
°° 
=
°° 
true
°° 
;
°°  
output
¢¢ 
.
¢¢ 

EndSection
¢¢ 
(
¢¢ 
title
¢¢ #
,
¢¢# $
success
¢¢% ,
)
¢¢, -
;
¢¢- .
}
§§ 	
public
¶¶ 
static
¶¶  
KBObjectCollection
¶¶ (
Unreachables
¶¶) 5
(
¶¶5 6
string
¶¶6 <
type
¶¶= A
)
¶¶A B
{
ßß 	

IKBService
®® 
kbserv
®® 
=
®® 

UIServices
®®  *
.
®®* +
KB
®®+ -
;
®®- .
IOutputService
©© 
output
©© !
=
©©" #
CommonServices
©©$ 2
.
©©2 3
Output
©©3 9
;
©©9 : 
KBObjectCollection
´´ 
reachablesObjects
´´ 0
=
´´1 2
new
´´3 6 
KBObjectCollection
´´7 I
(
´´I J
)
´´J K
;
´´K L 
KBObjectCollection
¨¨ !
unreachablesObjects
¨¨ 2
=
¨¨3 4
new
¨¨5 8 
KBObjectCollection
¨¨9 K
(
¨¨K L
)
¨¨L M
;
¨¨M N

KBCategory
≠≠ 
mainCategory
≠≠ #
=
≠≠$ %

KBCategory
≠≠& 0
.
≠≠0 1
Get
≠≠1 4
(
≠≠4 5
kbserv
≠≠5 ;
.
≠≠; <
CurrentModel
≠≠< H
,
≠≠H I
$str
≠≠J Y
)
≠≠Y Z
;
≠≠Z [
foreach
ÆÆ 
(
ÆÆ 
KBObject
ÆÆ 
obj
ÆÆ !
in
ÆÆ" $
mainCategory
ÆÆ% 1
.
ÆÆ1 2

AllMembers
ÆÆ2 <
)
ÆÆ< =
{
ØØ 
MarkReachables
∞∞ 
(
∞∞ 
output
∞∞ %
,
∞∞% &
obj
∞∞' *
,
∞∞* +
reachablesObjects
∞∞, =
)
∞∞= >
;
∞∞> ?
}
±± 
if
≥≥ 
(
≥≥ 
type
≥≥ 
==
≥≥ 
$str
≥≥ #
)
≥≥# $
{
¥¥ 
foreach
µµ 
(
µµ 
KBObject
µµ !
obj
µµ" %
in
µµ& (
Artech
µµ) /
.
µµ/ 0
Genexus
µµ0 7
.
µµ7 8
Common
µµ8 >
.
µµ> ?
Objects
µµ? F
.
µµF G
	Attribute
µµG P
.
µµP Q
GetAll
µµQ W
(
µµW X
kbserv
µµX ^
.
µµ^ _
CurrentModel
µµ_ k
)
µµk l
)
µµl m
{
∂∂ !
unreachablesObjects
∑∑ '
.
∑∑' (
Add
∑∑( +
(
∑∑+ ,
obj
∑∑, /
)
∑∑/ 0
;
∑∑0 1
}
∏∏ 
}
ππ 
else
∫∫ 
{
ªª 
foreach
ºº 
(
ºº 
KBObject
ºº !
obj
ºº" %
in
ºº& (
kbserv
ºº) /
.
ºº/ 0
CurrentModel
ºº0 <
.
ºº< =
Objects
ºº= D
.
ººD E
GetAll
ººE K
(
ººK L
)
ººL M
)
ººM N
{
ΩΩ 
ICallableObject
ææ #
callableObject
ææ$ 2
=
ææ3 4
obj
ææ5 8
as
ææ9 ;
ICallableObject
ææ< K
;
ææK L
if
øø 
(
øø 
(
øø 
callableObject
øø '
!=
øø( *
null
øø+ /
)
øø/ 0
||
øø1 3
(
øø4 5
obj
øø5 8
is
øø9 ;
Artech
øø< B
.
øøB C
Genexus
øøC J
.
øøJ K
Common
øøK Q
.
øøQ R
Objects
øøR Y
.
øøY Z
	Attribute
øøZ c
)
øøc d
)
øød e
{
¿¿ !
unreachablesObjects
¡¡ +
.
¡¡+ ,
Add
¡¡, /
(
¡¡/ 0
obj
¡¡0 3
)
¡¡3 4
;
¡¡4 5
}
¬¬ 
}
√√ 
}
ƒƒ !
unreachablesObjects
≈≈ 
.
≈≈  
	RemoveAll
≈≈  )
(
≈≈) *
reachablesObjects
≈≈* ;
)
≈≈; <
;
≈≈< =
return
∆∆ !
unreachablesObjects
∆∆ &
;
∆∆& '
}
«« 	
public
…… 
static
…… 
void
…… "
RemoveIndexAttribute
…… /
(
……/ 0
object
……0 6
[
……6 7
]
……7 8

parameters
……9 C
)
……C D
{
   	

IKBService
ÀÀ 
kbserv
ÀÀ 
=
ÀÀ 

UIServices
ÀÀ  *
.
ÀÀ* +
KB
ÀÀ+ -
;
ÀÀ- .
int
ÃÃ 
type
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
int
ÕÕ 
indexId
ÕÕ 
=
ÕÕ 
$num
ÕÕ 
;
ÕÕ 
int
ŒŒ 
attid
ŒŒ 
=
ŒŒ 
$num
ŒŒ 
;
ŒŒ 
string
œœ 
mensaje
œœ 
=
œœ 
$str
œœ 
;
œœ  
string
–– 
name
–– 
=
–– 
$str
–– 
;
–– 
foreach
—— 
(
—— 
object
—— 
o
—— 
in
——  

parameters
——! +
)
——+ ,
{
““ 

Dictionary
”” 
<
”” 
string
”” !
,
””! "
string
””# )
>
””) *
dic
””+ .
=
””/ 0
(
””1 2

Dictionary
””2 <
<
””< =
string
””= C
,
””C D
string
””E K
>
””K L
)
””L M
o
””M N
;
””N O
int
‘‘ 
cant
‘‘ 
=
‘‘ 
$num
‘‘ 
;
‘‘ 
foreach
÷÷ 
(
÷÷ 
string
÷÷ 
s
÷÷  !
in
÷÷" $
dic
÷÷% (
.
÷÷( )
Values
÷÷) /
)
÷÷/ 0
{
◊◊ 
switch
ÿÿ 
(
ÿÿ 
cant
ÿÿ  
)
ÿÿ  !
{
ŸŸ 
case
⁄⁄ 
$num
⁄⁄ 
:
⁄⁄ 
type
€€  
=
€€! "
int
€€# &
.
€€& '
Parse
€€' ,
(
€€, -
s
€€- .
)
€€. /
;
€€/ 0
break
‹‹ !
;
‹‹! "
case
›› 
$num
›› 
:
›› 
indexId
ﬁﬁ #
=
ﬁﬁ$ %
int
ﬁﬁ& )
.
ﬁﬁ) *
Parse
ﬁﬁ* /
(
ﬁﬁ/ 0
s
ﬁﬁ0 1
)
ﬁﬁ1 2
;
ﬁﬁ2 3
break
ﬂﬂ !
;
ﬂﬂ! "
case
‡‡ 
$num
‡‡ 
:
‡‡ 
attid
·· !
=
··" #
int
··$ '
.
··' (
Parse
··( -
(
··- .
s
··. /
)
··/ 0
;
··0 1
break
‚‚ !
;
‚‚! "
default
„„ 
:
„„  
break
‰‰ !
;
‰‰! "
}
ÂÂ 
cant
ÊÊ 
++
ÊÊ 
;
ÊÊ 
}
ÁÁ 
}
ËË 
if
ÍÍ 
(
ÍÍ 
(
ÍÍ 
type
ÍÍ 
!=
ÍÍ 
$num
ÍÍ 
)
ÍÍ 
&&
ÍÍ 
(
ÍÍ  
indexId
ÍÍ  '
!=
ÍÍ( *
$num
ÍÍ+ ,
)
ÍÍ, -
&&
ÍÍ. 0
(
ÍÍ1 2
attid
ÍÍ2 7
!=
ÍÍ8 :
$num
ÍÍ; <
)
ÍÍ< =
)
ÍÍ= >
{
ÎÎ 
Index
ÏÏ 
i
ÏÏ 
=
ÏÏ 
Artech
ÏÏ  
.
ÏÏ  !
Genexus
ÏÏ! (
.
ÏÏ( )
Common
ÏÏ) /
.
ÏÏ/ 0
Objects
ÏÏ0 7
.
ÏÏ7 8
Index
ÏÏ8 =
.
ÏÏ= >
Get
ÏÏ> A
(
ÏÏA B
kbserv
ÏÏB H
.
ÏÏH I
CurrentModel
ÏÏI U
,
ÏÏU V
indexId
ÏÏW ^
)
ÏÏ^ _
;
ÏÏ_ `
Table
ÌÌ 
t
ÌÌ 
=
ÌÌ 
i
ÌÌ 
.
ÌÌ 
Table
ÌÌ !
;
ÌÌ! "
name
ÓÓ 
=
ÓÓ 
i
ÓÓ 
.
ÓÓ 
Name
ÓÓ 
;
ÓÓ 
if
ÔÔ 
(
ÔÔ 
type
ÔÔ 
==
ÔÔ 
$num
ÔÔ 
)
ÔÔ 
{
 
mensaje
ÒÒ 
=
ÒÒ 
string
ÒÒ $
.
ÒÒ$ %
Format
ÒÒ% +
(
ÒÒ+ ,
$str
ÒÒ, \
,
ÒÒ\ ]
i
ÒÒ^ _
.
ÒÒ_ `
Name
ÒÒ` d
)
ÒÒd e
;
ÒÒe f
DialogResult
ÚÚ  
dr
ÚÚ! #
=
ÚÚ$ %

MessageBox
ÚÚ& 0
.
ÚÚ0 1
Show
ÚÚ1 5
(
ÚÚ5 6
mensaje
ÚÚ6 =
,
ÚÚ= >
$str
ÚÚ? Q
,
ÚÚQ R
MessageBoxButtons
ÚÚS d
.
ÚÚd e
YesNo
ÚÚe j
,
ÚÚj k
MessageBoxIcon
ÚÚl z
.
ÚÚz {
QuestionÚÚ{ É
)ÚÚÉ Ñ
;ÚÚÑ Ö
if
ÛÛ 
(
ÛÛ 
dr
ÛÛ 
==
ÛÛ 
DialogResult
ÛÛ *
.
ÛÛ* +
Yes
ÛÛ+ .
)
ÛÛ. /
{
ÙÙ 
foreach
ıı 
(
ıı  !

TableIndex
ıı! +
index
ıı, 1
in
ıı2 4
t
ıı5 6
.
ıı6 7
TableIndexes
ıı7 C
.
ııC D
Indexes
ııD K
)
ııK L
{
ˆˆ 
if
˜˜ 
(
˜˜  
index
˜˜  %
.
˜˜% &
Index
˜˜& +
.
˜˜+ ,
Id
˜˜, .
==
˜˜/ 1
indexId
˜˜2 9
)
˜˜9 :
{
¯¯ 
t
˘˘  !
.
˘˘! "
TableIndexes
˘˘" .
.
˘˘. /
Indexes
˘˘/ 6
.
˘˘6 7
Remove
˘˘7 =
(
˘˘= >
index
˘˘> C
)
˘˘C D
;
˘˘D E
break
˙˙  %
;
˙˙% &
}
˚˚ 
}
¸¸ 
i
˝˝ 
.
˝˝ 
Delete
˝˝  
(
˝˝  !
)
˝˝! "
;
˝˝" #
t
ˇˇ 
.
ˇˇ 
Save
ˇˇ 
(
ˇˇ 
)
ˇˇ  
;
ˇˇ  !

MessageBox
ÄÄ "
.
ÄÄ" #
Show
ÄÄ# '
(
ÄÄ' (
$str
ÄÄ( 0
+
ÄÄ1 2
name
ÄÄ3 7
+
ÄÄ8 9
$str
ÄÄ: V
)
ÄÄV W
;
ÄÄW X
}
ÅÅ 
}
ÇÇ 
else
ÉÉ 
{
ÑÑ 
if
ÖÖ 
(
ÖÖ 
type
ÖÖ 
==
ÖÖ 
$num
ÖÖ  !
)
ÖÖ! "
{
ÜÜ 
foreach
áá 
(
áá  !
IndexMember
áá! ,
im
áá- /
in
áá0 2
i
áá3 4
.
áá4 5
IndexStructure
áá5 C
.
ááC D
Members
ááD K
)
ááK L
{
àà 
if
ââ 
(
ââ  
im
ââ  "
.
ââ" #
	Attribute
ââ# ,
.
ââ, -
Id
ââ- /
==
ââ0 2
attid
ââ3 8
)
ââ8 9
{
ää 
mensaje
ãã  '
=
ãã( )
string
ãã* 0
.
ãã0 1
Format
ãã1 7
(
ãã7 8
$str
ãã8 h
+
ããi j
im
ããk m
.
ããm n
	Attribute
ããn w
.
ããw x
Name
ããx |
+
ãã} ~
$strãã ï
,ããï ñ
iããó ò
.ããò ô
Nameããô ù
)ããù û
;ããû ü
DialogResult
åå  ,
dr
åå- /
=
åå0 1

MessageBox
åå2 <
.
åå< =
Show
åå= A
(
ååA B
mensaje
ååB I
,
ååI J
$str
ååK ]
,
åå] ^
MessageBoxButtons
åå_ p
.
ååp q
YesNo
ååq v
,
ååv w
MessageBoxIconååx Ü
.ååÜ á
Questionååá è
)ååè ê
;ååê ë
if
çç  "
(
çç# $
dr
çç$ &
==
çç' )
DialogResult
çç* 6
.
çç6 7
Yes
çç7 :
)
çç: ;
{
éé  !
i
èè$ %
.
èè% &
IndexStructure
èè& 4
.
èè4 5
Members
èè5 <
.
èè< =
Remove
èè= C
(
èèC D
im
èèD F
)
èèF G
;
èèG H
i
êê$ %
.
êê% &
Save
êê& *
(
êê* +
)
êê+ ,
;
êê, -

MessageBox
ëë$ .
.
ëë. /
Show
ëë/ 3
(
ëë3 4
$str
ëë4 <
+
ëë= >
name
ëë? C
+
ëëD E
$str
ëëF b
)
ëëb c
;
ëëc d
break
íí$ )
;
íí) *
}
ìì  !
}
îî 
}
ïï 
}
óó 
else
òò 
{
ôô 
if
öö 
(
öö 
type
öö  
==
öö! #
$num
öö$ %
)
öö% &
{
õõ 
	ArrayList
úú %
indexToRemove
úú& 3
=
úú4 5
new
úú6 9
	ArrayList
úú: C
(
úúC D
)
úúD E
;
úúE F
bool
ùù  
nextAtt
ùù! (
=
ùù) *
false
ùù+ 0
;
ùù0 1
foreach
ûû #
(
ûû$ %
IndexMember
ûû% 0
im
ûû1 3
in
ûû4 6
i
ûû7 8
.
ûû8 9
IndexStructure
ûû9 G
.
ûûG H
Members
ûûH O
)
ûûO P
{
üü 
if
††  "
(
††# $
im
††$ &
.
††& '
	Attribute
††' 0
.
††0 1
Id
††1 3
==
††4 6
attid
††7 <
)
††< =
{
°°  !
mensaje
¢¢$ +
=
¢¢, -
string
¢¢. 4
.
¢¢4 5
Format
¢¢5 ;
(
¢¢; <
$str
¢¢< l
+
¢¢m n
im
¢¢o q
.
¢¢q r
	Attribute
¢¢r {
.
¢¢{ |
Name¢¢| Ä
+¢¢Å Ç
$str¢¢É ±
,¢¢± ≤
i¢¢≥ ¥
.¢¢¥ µ
Name¢¢µ π
)¢¢π ∫
;¢¢∫ ª
DialogResult
££$ 0
dr
££1 3
=
££4 5

MessageBox
££6 @
.
££@ A
Show
££A E
(
££E F
mensaje
££F M
,
££M N
$str
££O a
,
££a b
MessageBoxButtons
££c t
.
££t u
YesNo
££u z
,
££z {
MessageBoxIcon££| ä
.££ä ã
Question££ã ì
)££ì î
;££î ï
if
§§$ &
(
§§' (
dr
§§( *
==
§§+ -
DialogResult
§§. :
.
§§: ;
Yes
§§; >
)
§§> ?
{
••$ %
indexToRemove
¶¶( 5
.
¶¶5 6
Add
¶¶6 9
(
¶¶9 :
im
¶¶: <
)
¶¶< =
;
¶¶= >
nextAtt
ßß( /
=
ßß0 1
true
ßß2 6
;
ßß6 7
}
®®$ %
}
©©  !
else
™™  $
if
´´$ &
(
´´' (
nextAtt
´´( /
)
´´/ 0
indexToRemove
¨¨$ 1
.
¨¨1 2
Add
¨¨2 5
(
¨¨5 6
im
¨¨6 8
)
¨¨8 9
;
¨¨9 :
}
ÆÆ 
if
ØØ 
(
ØØ  
nextAtt
ØØ  '
)
ØØ' (
{
∞∞ 
foreach
±±  '
(
±±( )
IndexMember
±±) 4
im2
±±5 8
in
±±9 ;
indexToRemove
±±< I
)
±±I J
i
≤≤$ %
.
≤≤% &
IndexStructure
≤≤& 4
.
≤≤4 5
Members
≤≤5 <
.
≤≤< =
Remove
≤≤= C
(
≤≤C D
im2
≤≤D G
)
≤≤G H
;
≤≤H I
i
≥≥  !
.
≥≥! "
Save
≥≥" &
(
≥≥& '
)
≥≥' (
;
≥≥( )

MessageBox
¥¥  *
.
¥¥* +
Show
¥¥+ /
(
¥¥/ 0
$str
¥¥0 8
+
¥¥9 :
name
¥¥; ?
+
¥¥@ A
$str
¥¥B ^
)
¥¥^ _
;
¥¥_ `
}
µµ 
}
∂∂ 
}
∑∑ 
}
∏∏ 
}
ππ 
}
∫∫ 	
public
ºº 
static
ºº 
void
ºº $
ObjectsWithVarsNotUsed
ºº 1
(
ºº1 2
)
ºº2 3
{
ΩΩ 	

IKBService
ææ 
kbserv
ææ 
=
ææ 

UIServices
ææ  *
.
ææ* +
KB
ææ+ -
;
ææ- .
IOutputService
øø 
output
øø !
=
øø" #
CommonServices
øø$ 2
.
øø2 3
Output
øø3 9
;
øø9 :
bool
¿¿ 
varused
¿¿ 
=
¿¿ 
true
¿¿ 
;
¿¿  
string
¡¡ 
title
¡¡ 
=
¡¡ 
$str
¡¡ F
;
¡¡F G
string
¬¬ 
varsNotUsed
¬¬ 
=
¬¬  
$str
¬¬! #
;
¬¬# $
string
√√ 
varname
√√ 
=
√√ 
$str
√√ 
;
√√  
string
ƒƒ 
remove
ƒƒ 
=
ƒƒ 
$str
ƒƒ 
;
ƒƒ 
output
∆∆ 
.
∆∆ 
StartSection
∆∆ 
(
∆∆  
title
∆∆  %
)
∆∆% &
;
∆∆& '
string
»» 

outputFile
»» 
=
»» 
	Functions
»»  )
.
»») *
CreateOutputFile
»»* :
(
»»: ;
kbserv
»»; A
,
»»A B
title
»»C H
)
»»H I
;
»»I J
KBDoctorXMLWriter
   
writer
   $
=
  % &
new
  ' *
KBDoctorXMLWriter
  + <
(
  < =

outputFile
  = G
,
  G H
Encoding
  I Q
.
  Q R
UTF8
  R V
)
  V W
;
  W X
writer
ÀÀ 
.
ÀÀ 
	AddHeader
ÀÀ 
(
ÀÀ 
title
ÀÀ "
)
ÀÀ" #
;
ÀÀ# $
writer
ÃÃ 
.
ÃÃ 
AddTableHeader
ÃÃ !
(
ÃÃ! "
new
ÃÃ" %
string
ÃÃ& ,
[
ÃÃ, -
]
ÃÃ- .
{
ÃÃ/ 0
$str
ÃÃ1 7
,
ÃÃ7 8
$str
ÃÃ9 ?
,
ÃÃ? @
$str
ÃÃA H
}
ÃÃI J
)
ÃÃJ K
;
ÃÃK L
foreach
ŒŒ 
(
ŒŒ 
KBObject
ŒŒ 
obj
ŒŒ !
in
ŒŒ" $
kbserv
ŒŒ% +
.
ŒŒ+ ,
CurrentModel
ŒŒ, 8
.
ŒŒ8 9
Objects
ŒŒ9 @
.
ŒŒ@ A
GetAll
ŒŒA G
(
ŒŒG H
)
ŒŒH I
)
ŒŒI J
{
œœ 
VariablesPart
–– 
vp
––  
=
––! "
obj
––# &
.
––& '
Parts
––' ,
.
––, -
Get
––- 0
<
––0 1
VariablesPart
––1 >
>
––> ?
(
––? @
)
––@ A
;
––A B
if
““ 
(
““ 
(
““ 
vp
““ 
!=
““ 
null
““ 
)
““  
&&
““! #
isGenerated
““$ /
(
““/ 0
obj
““0 3
)
““3 4
)
““4 5
{
”” 
output
‘‘ 
.
‘‘ 
AddLine
‘‘ "
(
‘‘" #
$str
‘‘# 0
+
‘‘1 2
obj
‘‘3 6
.
‘‘6 7
Name
‘‘7 ;
)
‘‘; <
;
‘‘< =
varsNotUsed
’’ 
=
’’  !
$str
’’" $
;
’’$ %
foreach
÷÷ 
(
÷÷ 
Variable
÷÷ %
v
÷÷& '
in
÷÷( *
vp
÷÷+ -
.
÷÷- .
	Variables
÷÷. 7
)
÷÷7 8
{
◊◊ 
if
ÿÿ 
(
ÿÿ 
!
ÿÿ 
v
ÿÿ 
.
ÿÿ 

IsStandard
ÿÿ )
)
ÿÿ) *
{
ŸŸ 
varused
⁄⁄ #
=
⁄⁄$ %
false
⁄⁄& +
;
⁄⁄+ ,
ProcedurePart
€€ )
pp
€€* ,
=
€€- .
obj
€€/ 2
.
€€2 3
Parts
€€3 8
.
€€8 9
Get
€€9 <
<
€€< =
ProcedurePart
€€= J
>
€€J K
(
€€K L
)
€€L M
;
€€M N
if
‹‹ 
(
‹‹  
pp
‹‹  "
!=
‹‹# %
null
‹‹& *
)
‹‹* +
{
›› 
varused
ﬁﬁ  '
=
ﬁﬁ( )
VarUsedInText
ﬁﬁ* 7
(
ﬁﬁ7 8
pp
ﬁﬁ8 :
.
ﬁﬁ: ;
Source
ﬁﬁ; A
,
ﬁﬁA B
varname
ﬁﬁC J
)
ﬁﬁJ K
;
ﬁﬁK L
}
ﬂﬂ 
if
‡‡ 
(
‡‡  
!
‡‡  !
varused
‡‡! (
)
‡‡( )
{
·· 
	RulesPart
‚‚  )
rp
‚‚* ,
=
‚‚- .
obj
‚‚/ 2
.
‚‚2 3
Parts
‚‚3 8
.
‚‚8 9
Get
‚‚9 <
<
‚‚< =
	RulesPart
‚‚= F
>
‚‚F G
(
‚‚G H
)
‚‚H I
;
‚‚I J
if
„„  "
(
„„# $
rp
„„$ &
!=
„„' )
null
„„* .
)
„„. /
{
‰‰  !
varused
ÂÂ$ +
=
ÂÂ, -
VarUsedInText
ÂÂ. ;
(
ÂÂ; <
rp
ÂÂ< >
.
ÂÂ> ?
Source
ÂÂ? E
,
ÂÂE F
varname
ÂÂG N
)
ÂÂN O
;
ÂÂO P
}
ÊÊ  !
}
ÁÁ 
if
ËË 
(
ËË  
!
ËË  !
varused
ËË! (
)
ËË( )
{
ÈÈ 
ConditionsPart
ÍÍ  .
cp
ÍÍ/ 1
=
ÍÍ2 3
obj
ÍÍ4 7
.
ÍÍ7 8
Parts
ÍÍ8 =
.
ÍÍ= >
Get
ÍÍ> A
<
ÍÍA B
ConditionsPart
ÍÍB P
>
ÍÍP Q
(
ÍÍQ R
)
ÍÍR S
;
ÍÍS T
if
ÎÎ  "
(
ÎÎ# $
cp
ÎÎ$ &
!=
ÎÎ' )
null
ÎÎ* .
)
ÎÎ. /
{
ÏÏ  !
varused
ÌÌ$ +
=
ÌÌ, -
VarUsedInText
ÌÌ. ;
(
ÌÌ; <
cp
ÌÌ< >
.
ÌÌ> ?
Source
ÌÌ? E
,
ÌÌE F
varname
ÌÌG N
)
ÌÌN O
;
ÌÌO P
}
ÓÓ  !
}
ÔÔ 
if
 
(
  
!
  !
varused
! (
)
( )
{
ÒÒ 

EventsPart
ÚÚ  *
ep
ÚÚ+ -
=
ÚÚ. /
obj
ÚÚ0 3
.
ÚÚ3 4
Parts
ÚÚ4 9
.
ÚÚ9 :
Get
ÚÚ: =
<
ÚÚ= >

EventsPart
ÚÚ> H
>
ÚÚH I
(
ÚÚI J
)
ÚÚJ K
;
ÚÚK L
if
ÛÛ  "
(
ÛÛ# $
ep
ÛÛ$ &
!=
ÛÛ' )
null
ÛÛ* .
)
ÛÛ. /
{
ÙÙ  !
varused
ıı$ +
=
ıı, -
VarUsedInText
ıı. ;
(
ıı; <
ep
ıı< >
.
ıı> ?
Source
ıı? E
,
ııE F
varname
ııG N
)
ııN O
;
ııO P
}
ˆˆ  !
}
˜˜ 
if
¯¯ 
(
¯¯  
!
¯¯  !
varused
¯¯! (
)
¯¯( )
{
˘˘ 
WebFormPart
˙˙  +
fp
˙˙, .
=
˙˙/ 0
obj
˙˙1 4
.
˙˙4 5
Parts
˙˙5 :
.
˙˙: ;
Get
˙˙; >
<
˙˙> ?
WebFormPart
˙˙? J
>
˙˙J K
(
˙˙K L
)
˙˙L M
;
˙˙M N
if
˚˚  "
(
˚˚# $
fp
˚˚$ &
!=
˚˚' )
null
˚˚* .
)
˚˚. /
{
¸¸  !
varused
˝˝$ +
=
˝˝, -
VarUsedInWebForm
˝˝. >
(
˝˝> ?
fp
˝˝? A
,
˝˝A B
v
˝˝C D
.
˝˝D E
Id
˝˝E G
)
˝˝G H
;
˝˝H I
;
˝˝J K
}
˛˛  !
}
ˇˇ 
if
ÄÄ 
(
ÄÄ  
!
ÄÄ  !
varused
ÄÄ! (
)
ÄÄ( )
{
ÅÅ 
if
ÇÇ  "
(
ÇÇ# $
varsNotUsed
ÇÇ$ /
!=
ÇÇ0 2
$str
ÇÇ3 5
)
ÇÇ5 6
{
ÉÉ  !
varsNotUsed
ÑÑ$ /
+=
ÑÑ0 2
$str
ÑÑ3 ;
+
ÑÑ< =
v
ÑÑ> ?
.
ÑÑ? @
Id
ÑÑ@ B
+
ÑÑC D
$str
ÑÑE H
;
ÑÑH I
}
ÖÖ  !
varsNotUsed
ÜÜ  +
+=
ÜÜ, .
v
ÜÜ/ 0
.
ÜÜ0 1
Id
ÜÜ1 3
;
ÜÜ3 4
}
áá 
}
ââ 
}
ää 
if
ãã 
(
ãã 
varsNotUsed
ãã #
!=
ãã$ &
$str
ãã' )
)
ãã) *
{
åå 
remove
çç 
=
çç  
$str
çç! y
+
ççz {
obj
çç| 
.çç Ä
NameççÄ Ñ
+ççÖ Ü
$strççá ê
+ççë í
varsNotUsedççì û
+ççü †
$strçç° Ω
;ççΩ æ
writer
éé 
.
éé 
AddTableData
éé +
(
éé+ ,
new
éé, /
string
éé0 6
[
éé6 7
]
éé7 8
{
éé9 :
obj
éé; >
.
éé> ?
TypeDescriptor
éé? M
.
ééM N
Name
ééN R
,
ééR S
obj
ééT W
.
ééW X
Name
ééX \
,
éé\ ]
remove
éé^ d
}
éée f
)
ééf g
;
éég h
}
èè 
}
êê 
}
ëë 
writer
ìì 
.
ìì 
	AddFooter
ìì 
(
ìì 
)
ìì 
;
ìì 
writer
îî 
.
îî 
Close
îî 
(
îî 
)
îî 
;
îî 
KBDoctorHelper
ññ 
.
ññ !
ShowKBDoctorResults
ññ .
(
ññ. /

outputFile
ññ/ 9
)
ññ9 :
;
ññ: ;
bool
òò 
success
òò 
=
òò 
true
òò 
;
òò  
output
ôô 
.
ôô 

EndSection
ôô 
(
ôô 
title
ôô #
,
ôô# $
success
ôô% ,
)
ôô, -
;
ôô- .
}
úú 	
public
ûû 
static
ûû 
bool
ûû 
VarUsedInText
ûû (
(
ûû( )
string
ûû) /
reglas
ûû0 6
,
ûû6 7
string
ûû8 >
varName
ûû? F
)
ûûF G
{
üü 	
bool
†† 
usedvar
†† 
=
†† 
false
††  
;
††  !
if
°° 
(
°° 
reglas
°° 
!=
°° 
null
°° 
)
°° 
{
¢¢ 
Regex
££ 
myReg
££ 
=
££ 
new
££ !
Regex
££" '
(
££' (
$str
££( .
,
££. /
RegexOptions
££0 <
.
££< =
None
££= A
)
££A B
;
££B C
Regex
§§ 
myReg2
§§ 
=
§§ 
new
§§ "
Regex
§§# (
(
§§( )
$str
§§) 4
,
§§4 5
RegexOptions
§§6 B
.
§§B C

Singleline
§§C M
)
§§M N
;
§§N O
Regex
•• 
paramReg
•• 
=
••  
new
••! $
Regex
••% *
(
••* +
varName
••+ 2
+
••3 4
$str
••5 ;
,
••; <
RegexOptions
••= I
.
••I J

Singleline
••J T
|
••U V
RegexOptions
••W c
.
••c d

IgnoreCase
••d n
)
••n o
;
••o p
reglas
¶¶ 
=
¶¶ 
myReg
¶¶ 
.
¶¶ 
Replace
¶¶ &
(
¶¶& '
reglas
¶¶' -
,
¶¶- .
$str
¶¶/ 1
)
¶¶1 2
;
¶¶2 3
reglas
ßß 
=
ßß 
myReg2
ßß 
.
ßß  
Replace
ßß  '
(
ßß' (
reglas
ßß( .
,
ßß. /
$str
ßß0 2
)
ßß2 3
;
ßß3 4
Match
®® 
match
®® 
=
®® 
paramReg
®® &
.
®®& '
Match
®®' ,
(
®®, -
reglas
®®- 3
)
®®3 4
;
®®4 5
if
©© 
(
©© 
match
©© 
.
©© 
Success
©© !
)
©©! "
{
™™ 
usedvar
´´ 
=
´´ 
true
´´ "
;
´´" #
}
¨¨ 
return
≠≠ 
usedvar
≠≠ 
;
≠≠ 
}
ÆÆ 
else
ØØ 
{
∞∞ 
return
±± 
false
±± 
;
±± 
}
≤≤ 
}
≥≥ 	
public
µµ 
static
µµ 
bool
µµ 
VarUsedInWebForm
µµ +
(
µµ+ ,
WebFormPart
µµ, 7
wF
µµ8 :
,
µµ: ;
int
µµ< ?
varId
µµ@ E
)
µµE F
{
∂∂ 	
return
∑∑ 
(
∑∑ 
wF
∑∑ 
.
∑∑ 
GetVariable
∑∑ "
(
∑∑" #
varId
∑∑# (
)
∑∑( )
!=
∑∑* ,
null
∑∑- 1
)
∑∑1 2
;
∑∑2 3
}
∏∏ 	
public
∫∫ 
static
∫∫ 
void
∫∫ 
CleanVarsNotUsed
∫∫ +
(
∫∫+ ,
)
∫∫, -
{
ªª 	
string
ºº 
title
ºº 
=
ºº 
$str
ºº T
;
ººT U
IOutputService
ΩΩ 
output
ΩΩ !
=
ΩΩ" #
CommonServices
ΩΩ$ 2
.
ΩΩ2 3
Output
ΩΩ3 9
;
ΩΩ9 :
output
ææ 
.
ææ 
StartSection
ææ 
(
ææ  
title
ææ  %
)
ææ% &
;
ææ& '
int
¿¿ 
totalvarremoved
¿¿ 
=
¿¿  !
$num
¿¿" #
;
¿¿# $
foreach
¡¡ 
(
¡¡ 
KBObject
¡¡ 
kbo
¡¡ !
in
¡¡" $

UIServices
¡¡% /
.
¡¡/ 0
KB
¡¡0 2
.
¡¡2 3
CurrentModel
¡¡3 ?
.
¡¡? @
Objects
¡¡@ G
.
¡¡G H
GetAll
¡¡H N
(
¡¡N O
)
¡¡O P
)
¡¡P Q
CleanKBHelper
¬¬ 
.
¬¬ $
CleanKBObjectVariables
¬¬ 4
(
¬¬4 5
kbo
¬¬5 8
)
¬¬8 9
;
¬¬9 :
output
ƒƒ 
.
ƒƒ 

EndSection
ƒƒ 
(
ƒƒ 
title
ƒƒ #
,
ƒƒ# $
true
ƒƒ% )
)
ƒƒ) *
;
ƒƒ* +
}
∆∆ 	
private
»» 
static
»» 
void
»» 
SetDocumentDirty
»» ,
(
»», -
IGxDocument
»»- 8
doc
»»9 <
)
»»< =
{
…… 	
if
   
(
   

UIServices
   
.
   
Environment
   &
.
  & '
InvokeRequired
  ' 5
)
  5 6

UIServices
ÀÀ 
.
ÀÀ 
Environment
ÀÀ &
.
ÀÀ& '
BeginInvoke
ÀÀ' 2
(
ÀÀ2 3
(
ÀÀ3 4
)
ÀÀ4 5
=>
ÀÀ6 8
SetDocumentDirty
ÀÀ9 I
(
ÀÀI J
doc
ÀÀJ M
)
ÀÀM N
)
ÀÀN O
;
ÀÀO P
else
ÃÃ 
doc
ÕÕ 
.
ÕÕ 
Dirty
ÕÕ 
=
ÕÕ 
true
ÕÕ  
;
ÕÕ  !
}
ŒŒ 	
public
–– 
static
–– 
bool
–– 
IsCallalable
–– '
(
––' (
KBObject
––( 0
obj
––1 4
)
––4 5
{
—— 	
return
““ 
(
““ 
(
““ 
obj
““ 
is
““ 
Transaction
““ '
)
““' (
||
““) +
(
““, -
obj
““- 0
is
““1 3
	Procedure
““4 =
)
““= >
||
““? A
(
““B C
obj
““C F
is
““G I
WebPanel
““J R
)
““R S
||
““T V
(
““W X
obj
““X [
is
““\ ^
	WorkPanel
““_ h
)
““h i
||
““j l
(
““m n
obj
““n q
is
““r t
DataProvider““u Å
)““Å Ç
||““É Ö
(““Ü á
obj““á ä
is““ã ç
Menubar““é ï
)““ï ñ
||““ó ô
(““ö õ
obj““õ û
is““ü °
DataSelector““¢ Æ
)““Æ Ø
)““Ø ∞
;““∞ ±
}
”” 	
public
’’ 
static
’’ 
bool
’’ "
isGeneratedbyPattern
’’ /
(
’’/ 0
KBObject
’’0 8
obj
’’9 <
)
’’< =
{
÷÷ 	
if
◊◊ 
(
◊◊ 
!
◊◊ 
(
◊◊ 
obj
◊◊ 
==
◊◊ 
null
◊◊ 
)
◊◊ 
)
◊◊ 
{
ÿÿ 
return
ÿÿ 
obj
ÿÿ 
.
ÿÿ 
GetPropertyValue
ÿÿ )
<
ÿÿ) *
bool
ÿÿ* .
>
ÿÿ. /
(
ÿÿ/ 0 
KBObjectProperties
ÿÿ0 B
.
ÿÿB C
IsGeneratedObject
ÿÿC T
)
ÿÿT U
;
ÿÿU V
}
ÿÿW X
else
ŸŸ 
{
⁄⁄ 
return
⁄⁄ 
true
⁄⁄ 
;
⁄⁄ 
}
⁄⁄ 
}
‹‹ 	
public
ﬁﬁ 
static
ﬁﬁ 
void
ﬁﬁ 
ResetWINForm
ﬁﬁ '
(
ﬁﬁ' (
)
ﬁﬁ( )
{
ﬂﬂ 	

IKBService
‡‡ 
kbserv
‡‡ 
=
‡‡ 

UIServices
‡‡  *
.
‡‡* +
KB
‡‡+ -
;
‡‡- .
IOutputService
·· 
output
·· !
=
··" #
CommonServices
··$ 2
.
··2 3
Output
··3 9
;
··9 :
bool
‚‚ 
varused
‚‚ 
=
‚‚ 
true
‚‚ 
;
‚‚  
string
„„ 
title
„„ 
=
„„ 
$str
„„ 7
;
„„7 8
string
‰‰ 
varsNotUsed
‰‰ 
=
‰‰  
$str
‰‰! #
;
‰‰# $
string
ÂÂ 
varname
ÂÂ 
=
ÂÂ 
$str
ÂÂ 
;
ÂÂ  
string
ÊÊ 
remove
ÊÊ 
=
ÊÊ 
$str
ÊÊ 
;
ÊÊ 
output
ËË 
.
ËË 
StartSection
ËË 
(
ËË  
title
ËË  %
)
ËË% &
;
ËË& '
string
ÍÍ 

outputFile
ÍÍ 
=
ÍÍ 
	Functions
ÍÍ  )
.
ÍÍ) *
CreateOutputFile
ÍÍ* :
(
ÍÍ: ;
kbserv
ÍÍ; A
,
ÍÍA B
title
ÍÍC H
)
ÍÍH I
;
ÍÍI J
KBDoctorXMLWriter
ÏÏ 
writer
ÏÏ $
=
ÏÏ% &
new
ÏÏ' *
KBDoctorXMLWriter
ÏÏ+ <
(
ÏÏ< =

outputFile
ÏÏ= G
,
ÏÏG H
Encoding
ÏÏI Q
.
ÏÏQ R
UTF8
ÏÏR V
)
ÏÏV W
;
ÏÏW X
writer
ÌÌ 
.
ÌÌ 
	AddHeader
ÌÌ 
(
ÌÌ 
title
ÌÌ "
)
ÌÌ" #
;
ÌÌ# $
writer
ÓÓ 
.
ÓÓ 
AddTableHeader
ÓÓ !
(
ÓÓ! "
new
ÓÓ" %
string
ÓÓ& ,
[
ÓÓ, -
]
ÓÓ- .
{
ÓÓ/ 0
$str
ÓÓ1 7
,
ÓÓ7 8
$str
ÓÓ9 ?
}
ÓÓ@ A
)
ÓÓA B
;
ÓÓB C
foreach
 
(
 
Transaction
  
obj
! $
in
% '
Transaction
( 3
.
3 4
GetAll
4 :
(
: ;
kbserv
; A
.
A B
CurrentModel
B N
)
N O
)
O P
{
ÒÒ 
if
ÚÚ 
(
ÚÚ 
isGenerated
ÚÚ 
(
ÚÚ  
obj
ÚÚ  #
)
ÚÚ# $
)
ÚÚ$ %
{
ÛÛ 
output
ÙÙ 
.
ÙÙ 
AddLine
ÙÙ "
(
ÙÙ" #
$str
ÙÙ# 0
+
ÙÙ1 2
obj
ÙÙ3 6
.
ÙÙ6 7
Name
ÙÙ7 ;
)
ÙÙ; <
;
ÙÙ< =
List
ˆˆ 
<
ˆˆ 
KBObjectPart
ˆˆ %
>
ˆˆ% &
parts
ˆˆ' ,
=
ˆˆ- .
new
ˆˆ/ 2
List
ˆˆ3 7
<
ˆˆ7 8
KBObjectPart
ˆˆ8 D
>
ˆˆD E
(
ˆˆE F
)
ˆˆF G
{
ˆˆH I
obj
ˆˆJ M
.
ˆˆM N
Parts
ˆˆN S
[
ˆˆS T
typeof
ˆˆT Z
(
ˆˆZ [
WinFormPart
ˆˆ[ f
)
ˆˆf g
.
ˆˆg h
GUID
ˆˆh l
]
ˆˆl m
}
ˆˆn o
;
ˆˆo p
parts
˜˜ 
.
˜˜ 
ForEach
˜˜ !
(
˜˜! "
part
˜˜" &
=>
˜˜' )
{
¯¯ 
if
˘˘ 
(
˘˘ 
part
˘˘  
.
˘˘  !
Default
˘˘! (
.
˘˘( )!
CanCalculateDefault
˘˘) <
(
˘˘< =
)
˘˘= >
)
˘˘> ?
{
˙˙ 
part
˚˚  
.
˚˚  !
Default
˚˚! (
.
˚˚( ) 
SilentSetIsDefault
˚˚) ;
(
˚˚; <
true
˚˚< @
)
˚˚@ A
;
˚˚A B
try
¸¸ 
{
˝˝ 
obj
˛˛  #
.
˛˛# $
Save
˛˛$ (
(
˛˛( )
)
˛˛) *
;
˛˛* +
}
ˇˇ 
catch
ÄÄ !
(
ÄÄ" #
	Exception
ÄÄ# ,
e
ÄÄ- .
)
ÄÄ. /
{
ÄÄ0 1
output
ÄÄ2 8
.
ÄÄ8 9
AddErrorLine
ÄÄ9 E
(
ÄÄE F
e
ÄÄF G
.
ÄÄG H
Message
ÄÄH O
)
ÄÄO P
;
ÄÄP Q
}
ÄÄR S
writer
ÇÇ "
.
ÇÇ" #
AddTableData
ÇÇ# /
(
ÇÇ/ 0
new
ÇÇ0 3
string
ÇÇ4 :
[
ÇÇ: ;
]
ÇÇ; <
{
ÇÇ= >
obj
ÇÇ? B
.
ÇÇB C
TypeDescriptor
ÇÇC Q
.
ÇÇQ R
Name
ÇÇR V
,
ÇÇV W
	Functions
ÇÇX a
.
ÇÇa b

linkObject
ÇÇb l
(
ÇÇl m
obj
ÇÇm p
)
ÇÇp q
}
ÇÇr s
)
ÇÇs t
;
ÇÇt u
}
ÉÉ 
}
ÑÑ 
)
ÖÖ  !
;
ÖÖ! "
}
ÜÜ 
}
áá 
writer
àà 
.
àà 
	AddFooter
àà 
(
àà 
)
àà 
;
àà 
writer
ââ 
.
ââ 
Close
ââ 
(
ââ 
)
ââ 
;
ââ 
KBDoctorHelper
ãã 
.
ãã !
ShowKBDoctorResults
ãã .
(
ãã. /

outputFile
ãã/ 9
)
ãã9 :
;
ãã: ;
bool
çç 
success
çç 
=
çç 
true
çç 
;
çç  
output
éé 
.
éé 

EndSection
éé 
(
éé 
title
éé #
,
éé# $
success
éé% ,
)
éé, -
;
éé- .
}
êê 	
public
íí 
static
íí 
void
íí &
BuildObjectAndReferences
íí 3
(
íí3 4
)
íí4 5
{
ìì 	

IKBService
îî 
kbserv
îî 
=
îî 

UIServices
îî  *
.
îî* +
KB
îî+ -
;
îî- .
KBModel
ïï 
kbModel
ïï 
=
ïï 

UIServices
ïï (
.
ïï( )
KB
ïï) +
.
ïï+ ,
CurrentModel
ïï, 8
;
ïï8 9
IOutputService
ññ 
output
ññ !
=
ññ" #
CommonServices
ññ$ 2
.
ññ2 3
Output
ññ3 9
;
ññ9 :
bool
òò 
success
òò 
=
òò 
true
òò 
;
òò  
string
ôô 
title
ôô 
=
ôô 
$str
ôô 4
;
ôô4 5
output
öö 
.
öö 
StartSection
öö 
(
öö  
title
öö  %
)
öö% &
;
öö& '
string
õõ 

outputFile
õõ 
=
õõ 
	Functions
õõ  )
.
õõ) *
CreateOutputFile
õõ* :
(
õõ: ;
kbserv
õõ; A
,
õõA B
title
õõC H
)
õõH I
;
õõI J
KBDoctorXMLWriter
úú 
writer
úú $
=
úú% &
new
úú' *
KBDoctorXMLWriter
úú+ <
(
úú< =

outputFile
úú= G
,
úúG H
Encoding
úúI Q
.
úúQ R
UTF8
úúR V
)
úúV W
;
úúW X
writer
ùù 
.
ùù 
	AddHeader
ùù 
(
ùù 
title
ùù "
)
ùù" #
;
ùù# $
writer
ûû 
.
ûû 
AddTableHeader
ûû !
(
ûû! "
new
ûû" %
string
ûû& ,
[
ûû, -
]
ûû- .
{
ûû/ 0
$str
ûû1 9
,
ûû9 :
$str
ûû; H
,
ûûH I
$str
ûûJ V
,
ûûV W
$str
ûûX j
}
ûûk l
)
ûûl m
;
ûûm n 
KBObjectCollection
°° 

objToBuild
°° )
=
°°* +
new
°°, / 
KBObjectCollection
°°0 B
(
°°B C
)
°°C D
;
°°D E!
SelectObjectOptions
££  
selectObjectOption
££  2
=
££3 4
new
££5 8!
SelectObjectOptions
££9 L
(
££L M
)
££M N
;
££N O 
selectObjectOption
§§ 
.
§§ 
MultipleSelection
§§ 0
=
§§1 2
true
§§3 7
;
§§7 8
foreach
ßß 
(
ßß 
KBObject
ßß 
obj
ßß !
in
ßß" $

UIServices
ßß% /
.
ßß/ 0 
SelectObjectDialog
ßß0 B
.
ßßB C
SelectObjects
ßßC P
(
ßßP Q 
selectObjectOption
ßßQ c
)
ßßc d
)
ßßd e
{
®® 
if
™™ 
(
™™ 
KBObjectHelper
™™ "
.
™™" #
IsSpecifiable
™™# 0
(
™™0 1
obj
™™1 4
)
™™4 5
)
™™5 6
{
´´ 
output
¨¨ 
.
¨¨ 
AddLine
¨¨ "
(
¨¨" #
obj
¨¨# &
.
¨¨& '
TypeDescriptor
¨¨' 5
.
¨¨5 6
Name
¨¨6 :
+
¨¨; <
$str
¨¨= @
+
¨¨A B
obj
¨¨C F
.
¨¨F G
Name
¨¨G K
)
¨¨K L
;
¨¨L M
if
≠≠ 
(
≠≠ 
!
≠≠ 

objToBuild
≠≠ #
.
≠≠# $
Contains
≠≠$ ,
(
≠≠, -
obj
≠≠- 0
)
≠≠0 1
)
≠≠1 2
{
ÆÆ 

objToBuild
ØØ "
.
ØØ" #
Add
ØØ# &
(
ØØ& '
obj
ØØ' *
)
ØØ* +
;
ØØ+ ,
writer
∞∞ 
.
∞∞ 
AddTableData
∞∞ +
(
∞∞+ ,
new
∞∞, /
string
∞∞0 6
[
∞∞6 7
]
∞∞7 8
{
∞∞9 :
obj
∞∞; >
.
∞∞> ?
QualifiedName
∞∞? L
.
∞∞L M
ToString
∞∞M U
(
∞∞U V
)
∞∞V W
,
∞∞W X
obj
∞∞Y \
.
∞∞\ ]
Description
∞∞] h
,
∞∞h i
obj
∞∞j m
.
∞∞m n
IsPublic
∞∞n v
?
∞∞w x
$str∞∞y Å
:∞∞Ç É
$str∞∞Ñ Ü
,∞∞Ü á
$str∞∞à ä
}∞∞ã å
)∞∞å ç
;∞∞ç é
}
±± 
}
≤≤ 
ModulesHelper
≥≥ 
.
≥≥ #
AddObjectsReferenceTo
≥≥ 3
(
≥≥3 4
obj
≥≥4 7
,
≥≥7 8

objToBuild
≥≥9 C
,
≥≥C D
writer
≥≥E K
)
≥≥K L
;
≥≥L M
}
µµ 
writer
∑∑ 
.
∑∑ 
	AddFooter
∑∑ 
(
∑∑ 
)
∑∑ 
;
∑∑ 
writer
∏∏ 
.
∏∏ 
Close
∏∏ 
(
∏∏ 
)
∏∏ 
;
∏∏ 
KBDoctorHelper
ππ 
.
ππ !
ShowKBDoctorResults
ππ .
(
ππ. /

outputFile
ππ/ 9
)
ππ9 :
;
ππ: ;
GenexusUIServices
ªª 
.
ªª 
Build
ªª #
.
ªª# $ 
BuildWithTheseOnly
ªª$ 6
(
ªª6 7

objToBuild
ªª7 A
.
ªªA B
Keys
ªªB F
)
ªªF G
;
ªªG H
do
ΩΩ 
{
ææ 
Application
øø 
.
øø 
DoEvents
øø $
(
øø$ %
)
øø% &
;
øø& '
}
¿¿ 
while
¿¿ 
(
¿¿ 
GenexusUIServices
¿¿ &
.
¿¿& '
Build
¿¿' ,
.
¿¿, -

IsBuilding
¿¿- 7
)
¿¿7 8
;
¿¿8 9
output
¬¬ 
.
¬¬ 

EndSection
¬¬ 
(
¬¬ 
title
¬¬ #
,
¬¬# $
true
¬¬% )
)
¬¬) *
;
¬¬* +
}
≈≈ 	
public
«« 
static
«« 
void
«« 
ListAPIObjects
«« )
(
««) *
)
««* +
{
»» 	

IKBService
…… 
kbserv
…… 
=
…… 

UIServices
……  *
.
……* +
KB
……+ -
;
……- .

Dictionary
ÀÀ 
<
ÀÀ 
string
ÀÀ 
,
ÀÀ  
KBObjectCollection
ÀÀ 1
>
ÀÀ1 2
dic
ÀÀ3 6
=
ÀÀ7 8
new
ÀÀ9 <

Dictionary
ÀÀ= G
<
ÀÀG H
string
ÀÀH N
,
ÀÀN O 
KBObjectCollection
ÀÀP b
>
ÀÀb c
(
ÀÀc d
)
ÀÀd e
;
ÀÀe f
string
ÕÕ 
title
ÕÕ 
=
ÕÕ 
$str
ÕÕ 9
;
ÕÕ9 :
string
ŒŒ 

outputFile
ŒŒ 
=
ŒŒ 
	Functions
ŒŒ  )
.
ŒŒ) *
CreateOutputFile
ŒŒ* :
(
ŒŒ: ;
kbserv
ŒŒ; A
,
ŒŒA B
title
ŒŒC H
)
ŒŒH I
;
ŒŒI J
IOutputService
–– 
output
–– !
=
––" #
CommonServices
––$ 2
.
––2 3
Output
––3 9
;
––9 :
output
—— 
.
—— 
StartSection
—— 
(
——  
title
——  %
)
——% &
;
——& '
string
”” 
sw
”” 
=
”” 
$str
”” 
,
”” 
sw2
”” 
=
””  
$str
””! #
;
””# $
int
÷÷ 
numObj
÷÷ 
=
÷÷ 
$num
÷÷ 
;
÷÷ 
foreach
⁄⁄ 
(
⁄⁄ 
KBObject
⁄⁄ 
obj
⁄⁄ !
in
⁄⁄" $
kbserv
⁄⁄% +
.
⁄⁄+ ,
CurrentModel
⁄⁄, 8
.
⁄⁄8 9
Objects
⁄⁄9 @
.
⁄⁄@ A
GetAll
⁄⁄A G
(
⁄⁄G H
)
⁄⁄H I
)
⁄⁄I J
{
€€ 
if
‹‹ 
(
‹‹ 
obj
‹‹ 
!=
‹‹ 
null
‹‹ 
&&
‹‹  "
ObjectsHelper
‹‹# 0
.
‹‹0 1
isGenerated
‹‹1 <
(
‹‹< =
obj
‹‹= @
)
‹‹@ A
)
‹‹A B
{
ﬂﬂ 
bool
‡‡ 
tieneInterfaz
‡‡ &
=
‡‡' (
false
‡‡) .
;
‡‡. /
if
·· 
(
·· 
obj
·· 
is
·· 
DataProvider
·· +
&&
··, .
obj
··/ 2
.
··2 3
GetPropertyValue
··3 C
<
··C D
bool
··D H
>
··H I
(
··I J
$str
··J Z
)
··Z [
)
··[ \
tieneInterfaz
‚‚ %
=
‚‚& '
true
‚‚( ,
;
‚‚, -
if
„„ 
(
„„ 
obj
„„ 
is
„„ 
Transaction
„„ *
||
„„+ -
obj
„„. 1
is
„„2 4
WebPanel
„„5 =
)
„„> ?
tieneInterfaz
‰‰ %
=
‰‰& '
true
‰‰( ,
;
‰‰, -
if
ÂÂ 
(
ÂÂ 
obj
ÂÂ 
.
ÂÂ 
TypeDescriptor
ÂÂ *
.
ÂÂ* +
Name
ÂÂ+ /
==
ÂÂ0 2
$str
ÂÂ3 ?
)
ÂÂ? @
tieneInterfaz
ÊÊ %
=
ÊÊ& '
false
ÊÊ( -
;
ÊÊ- .
string
ËË 
qualifiedName
ËË (
=
ËË) *
obj
ËË+ .
.
ËË. /
QualifiedName
ËË/ <
.
ËË< =
ToString
ËË= E
(
ËËE F
)
ËËF G
;
ËËG H
bool
ÈÈ 
isMain
ÈÈ 
=
ÈÈ  !
obj
ÈÈ" %
.
ÈÈ% &
GetPropertyValue
ÈÈ& 6
<
ÈÈ6 7
bool
ÈÈ7 ;
>
ÈÈ; <
(
ÈÈ< =
$str
ÈÈ= E
)
ÈÈE F
;
ÈÈF G
if
ÍÍ 
(
ÍÍ 
obj
ÍÍ 
is
ÍÍ 
	Procedure
ÍÍ (
&&
ÍÍ) +
isMain
ÍÍ, 2
)
ÍÍ2 3
{
ÎÎ 
qualifiedName
ÏÏ %
=
ÏÏ& '
obj
ÏÏ( +
.
ÏÏ+ ,
QualifiedName
ÏÏ, 9
.
ÏÏ9 :

ModuleName
ÏÏ: D
+
ÏÏE F
(
ÏÏG H
obj
ÏÏH K
.
ÏÏK L
QualifiedName
ÏÏL Y
.
ÏÏY Z

ModuleName
ÏÏZ d
==
ÏÏe g
$str
ÏÏh j
?
ÏÏj k
$str
ÏÏk n
:
ÏÏn o
$str
ÏÏo s
)
ÏÏs t
+
ÏÏv w
obj
ÏÏx {
.
ÏÏ{ |
QualifiedNameÏÏ| â
.ÏÏâ ä

ObjectNameÏÏä î
;ÏÏî ï
tieneInterfaz
ÌÌ )
=
ÌÌ* +
true
ÌÌ, 0
;
ÌÌ0 1
}
ÓÓ 
if
ÔÔ 
(
ÔÔ 
obj
ÔÔ 
is
ÔÔ 
	WorkPanel
ÔÔ (
&&
ÔÔ) +
isMain
ÔÔ, 2
)
ÔÔ2 3
tieneInterfaz
 %
=
& '
true
( ,
;
, -
if
ÚÚ 
(
ÚÚ 
obj
ÚÚ 
is
ÚÚ 
ExternalObject
ÚÚ -
||
ÚÚ. 0
obj
ÚÚ1 4
is
ÚÚ5 7
SDT
ÚÚ8 ;
)
ÚÚ; <
tieneInterfaz
ÛÛ %
=
ÛÛ& '
true
ÛÛ( ,
;
ÛÛ, -
string
ˆˆ 
ruleparm
ˆˆ #
=
ˆˆ$ %
	Functions
ˆˆ& /
.
ˆˆ/ 0
ExtractRuleParm
ˆˆ0 ?
(
ˆˆ? @
obj
ˆˆ@ C
)
ˆˆC D
;
ˆˆD E
ruleparm
˜˜ 
=
˜˜ 
Regex
˜˜ $
.
˜˜$ %
Replace
˜˜% ,
(
˜˜, -
ruleparm
˜˜- 5
,
˜˜5 6
$str
˜˜7 B
,
˜˜B C
$str
˜˜D F
)
˜˜F G
;
˜˜G H
ruleparm
¯¯ 
=
¯¯ 
ruleparm
¯¯ '
.
¯¯' (
Replace
¯¯( /
(
¯¯/ 0
$str
¯¯0 3
,
¯¯3 4
$str
¯¯5 7
)
¯¯7 8
;
¯¯8 9
string
˘˘ 
callprotocol
˘˘ '
=
˘˘( )
obj
˘˘* -
.
˘˘- .$
GetPropertyValueString
˘˘. D
(
˘˘D E
$str
˘˘E T
)
˘˘T U
;
˘˘U V
if
˙˙ 
(
˙˙ 
callprotocol
˙˙ $
==
˙˙% '
$str
˙˙( 2
)
˙˙2 3
callprotocol
˚˚ (
=
˚˚( )
$str
˚˚) +
;
˚˚+ ,
if
˝˝ 
(
˝˝ 
tieneInterfaz
˝˝ %
)
˝˝% &
{
˛˛ 
if
ˇˇ 
(
ˇˇ 
obj
ˇˇ 
is
ˇˇ  "
	Procedure
ˇˇ# ,
&&
ˇˇ- /
isMain
ˇˇ0 6
)
ˇˇ6 7
sw
ÇÇ 
+=
ÇÇ 
obj
ÇÇ !
.
ÇÇ! "
TypeDescriptor
ÇÇ" 0
.
ÇÇ0 1
Name
ÇÇ1 5
+
ÇÇ6 7
$str
ÇÇ8 <
+
ÇÇ= >
obj
ÇÇ? B
.
ÇÇB C
QualifiedName
ÇÇC P
+
ÇÇQ R
$str
ÇÇS W
+
ÇÇX Y
callprotocol
ÇÇZ f
+
ÇÇh i
$str
ÇÇj n
+
ÇÇp q
ruleparm
ÇÇr z
+
ÇÇ{ |
$strÇÇ} É
;ÇÇÉ Ñ
sw2
ÉÉ 
+=
ÉÉ 
qualifiedName
ÉÉ ,
+
ÉÉ- .
$str
ÉÉ/ 3
+
ÉÉ4 5
callprotocol
ÉÉ7 C
+
ÉÉD E
$str
ÉÉF L
;
ÉÉL M
}
ÑÑ 
numObj
ÖÖ 
+=
ÖÖ 
$num
ÖÖ 
;
ÖÖ  
if
ÜÜ 
(
ÜÜ 
(
ÜÜ 
numObj
ÜÜ 
%
ÜÜ  !
$num
ÜÜ" %
)
ÜÜ% &
==
ÜÜ' )
$num
ÜÜ* +
)
ÜÜ+ ,
output
áá 
.
áá 
AddLine
áá &
(
áá& '
obj
áá' *
.
áá* +
TypeDescriptor
áá+ 9
.
áá9 :
Name
áá: >
+
áá? @
$str
ááA D
+
ááE F
obj
ááG J
.
ááJ K
Name
ááK O
+
ááP Q
$str
ááR U
+
ááV W
obj
ááX [
.
áá[ \
Description
áá\ g
)
áág h
;
ááh i
}
àà 
}
ââ 
bool
éé 
success
éé 
=
éé 
true
éé 
;
éé  
string
ëë 
directoryArg
ëë 
=
ëë  !
KBDoctorHelper
ëë" 0
.
ëë0 1
SpcDirectory
ëë1 =
(
ëë= >
kbserv
ëë> D
)
ëëD E
;
ëëE F
string
íí 
	fechahora
íí 
=
íí 
String
íí %
.
íí% &
Format
íí& ,
(
íí, -
$str
íí- B
,
ííB C
DateTime
ííD L
.
ííL M
Now
ííM P
)
ííP Q
;
ííQ R
string
óó 
	fileName2
óó 
=
óó 
directoryArg
óó +
+
óó, -
$str
óó. 7
+
óó8 9
	fechahora
óó: C
+
óóD E
$str
óóF L
;
óóL M
System
òò 
.
òò 
IO
òò 
.
òò 
File
òò 
.
òò 
WriteAllText
òò '
(
òò' (
	fileName2
òò( 1
,
òò1 2
sw2
òò3 6
)
òò6 7
;
òò7 8
output
ôô 
.
ôô 
AddLine
ôô 
(
ôô 
$str
ôô 7
+
ôô8 9
	fileName2
ôô: C
)
ôôC D
;
ôôD E
output
öö 
.
öö 

EndSection
öö 
(
öö 
title
öö #
,
öö# $
success
öö% ,
)
öö, -
;
öö- .
}
ùù 	
public
üü 
static
üü 
void
üü )
ObjectsWithTheSameSignature
üü 6
(
üü6 7
)
üü7 8
{
†† 	

IKBService
¢¢ 
kbserv
¢¢ 
=
¢¢ 

UIServices
¢¢  *
.
¢¢* +
KB
¢¢+ -
;
¢¢- .
IOutputService
££ 
output
££ !
=
££" #
CommonServices
££$ 2
.
££2 3
Output
££3 9
;
££9 :
string
•• 
title
•• 
=
•• 
$str
•• G
;
••G H
output
¶¶ 
.
¶¶ 
StartSection
¶¶ 
(
¶¶  
title
¶¶  %
)
¶¶% &
;
¶¶& '
string
ßß 

outputFile
ßß 
=
ßß 
	Functions
ßß  )
.
ßß) *
CreateOutputFile
ßß* :
(
ßß: ;
kbserv
ßß; A
,
ßßA B
title
ßßC H
)
ßßH I
;
ßßI J
KBDoctorXMLWriter
©© 
writer
©© $
=
©©% &
new
©©' *
KBDoctorXMLWriter
©©+ <
(
©©< =

outputFile
©©= G
,
©©G H
Encoding
©©I Q
.
©©Q R
UTF8
©©R V
)
©©V W
;
©©W X
writer
™™ 
.
™™ 
	AddHeader
™™ 
(
™™ 
title
™™ "
)
™™" #
;
™™# $!
SelectObjectOptions
¨¨  
selectObjectOption
¨¨  2
=
¨¨3 4
new
¨¨5 8!
SelectObjectOptions
¨¨9 L
(
¨¨L M
)
¨¨M N
;
¨¨N O 
selectObjectOption
≠≠ 
.
≠≠ 
MultipleSelection
≠≠ 0
=
≠≠1 2
true
≠≠3 7
;
≠≠7 8 
selectObjectOption
ÆÆ 
.
ÆÆ 
ObjectTypes
ÆÆ *
.
ÆÆ* +
Add
ÆÆ+ .
(
ÆÆ. / 
KBObjectDescriptor
ÆÆ/ A
.
ÆÆA B
Get
ÆÆB E
<
ÆÆE F
Transaction
ÆÆF Q
>
ÆÆQ R
(
ÆÆR S
)
ÆÆS T
)
ÆÆT U
;
ÆÆU V
IEnumerable
ØØ 
<
ØØ 
KBObject
ØØ  
>
ØØ  !
objects
ØØ" )
=
ØØ* +
kbserv
ØØ, 2
.
ØØ2 3
CurrentModel
ØØ3 ?
.
ØØ? @
Objects
ØØ@ G
.
ØØG H
GetAll
ØØH N
(
ØØN O
)
ØØO P
;
ØØP Q
HashSet
±± 
<
±± 
int
±± 
>
±± 
classes
±±  
;
±±  !
	Hashtable
≤≤ 
[
≤≤ 
]
≤≤ 
Classes_types
≤≤ %
;
≤≤% &
API
¥¥ 
.
¥¥ 1
#GetClassesTypesWithTheSameSignature
¥¥ 3
(
¥¥3 4
objects
¥¥4 ;
,
¥¥; <
out
¥¥= @
classes
¥¥A H
,
¥¥H I
out
¥¥J M
Classes_types
¥¥N [
)
¥¥[ \
;
¥¥\ ]
writer
∂∂ 
.
∂∂ 
AddTableHeader
∂∂ !
(
∂∂! "
new
∂∂" %
string
∂∂& ,
[
∂∂, -
]
∂∂- .
{
∂∂/ 0
$str
∂∂1 8
,
∂∂8 9
$str
∂∂: B
,
∂∂B C
$str
∂∂D U
}
∂∂V W
)
∂∂W X
;
∂∂X Y
foreach
ππ 
(
ππ 
int
ππ 
i
ππ 
in
ππ 
classes
ππ %
)
ππ% &
{
∫∫ 
	Hashtable
ªª 

table_type
ªª $
=
ªª% &
Classes_types
ªª' 4
[
ªª4 5
i
ªª5 6
-
ªª7 8
$num
ªª9 :
]
ªª: ;
;
ªª; <
foreach
ºº 
(
ºº 
string
ºº 

parameters
ºº  *
in
ºº+ -

table_type
ºº. 8
.
ºº8 9
Keys
ºº9 =
)
ºº= >
{
ΩΩ 
List
ææ 
<
ææ 
KBObject
ææ !
>
ææ! "
objs
ææ# '
=
ææ( )

table_type
ææ* 4
[
ææ4 5

parameters
ææ5 ?
]
ææ? @
as
ææA C
List
ææD H
<
ææH I
KBObject
ææI Q
>
ææQ R
;
ææR S
if
øø 
(
øø 
objs
øø 
.
øø 
Count
øø "
>
øø# $
$num
øø% &
)
øø& '
{
¿¿ 
foreach
¡¡ 
(
¡¡  !
KBObject
¡¡! )
obj
¡¡* -
in
¡¡. 0
objs
¡¡1 5
)
¡¡5 6
{
¬¬ 
writer
√√ "
.
√√" #
AddTableData
√√# /
(
√√/ 0
new
√√0 3
string
√√4 :
[
√√: ;
]
√√; <
{
√√= >

parameters
√√? I
,
√√I J
obj
√√K N
.
√√N O
Name
√√O S
,
√√S T
	Functions
√√U ^
.
√√^ _
ExtractRuleParm
√√_ n
(
√√n o
obj
√√o r
)
√√r s
}
√√t u
)
√√u v
;
√√v w
}
ƒƒ 
}
≈≈ 
}
∆∆ 
}
«« 
writer
…… 
.
…… 
	AddFooter
…… 
(
…… 
)
…… 
;
…… 
writer
   
.
   
Close
   
(
   
)
   
;
   
bool
ÀÀ 
success
ÀÀ 
=
ÀÀ 
true
ÀÀ 
;
ÀÀ  
output
ÃÃ 
.
ÃÃ 

EndSection
ÃÃ 
(
ÃÃ 
title
ÃÃ #
,
ÃÃ# $
success
ÃÃ% ,
)
ÃÃ, -
;
ÃÃ- .
KBDoctorHelper
ŒŒ 
.
ŒŒ !
ShowKBDoctorResults
ŒŒ .
(
ŒŒ. /

outputFile
ŒŒ/ 9
)
ŒŒ9 :
;
ŒŒ: ;
}
œœ 	
public
—— 
static
—— 
void
—— 3
%ObjectsWithTheSameSignatureAssociated
—— @
(
——@ A
)
——A B
{
““ 	

IKBService
‘‘ 
kbserv
‘‘ 
=
‘‘ 

UIServices
‘‘  *
.
‘‘* +
KB
‘‘+ -
;
‘‘- .
IOutputService
’’ 
output
’’ !
=
’’" #
CommonServices
’’$ 2
.
’’2 3
Output
’’3 9
;
’’9 :
string
◊◊ 
title
◊◊ 
=
◊◊ 
$str
◊◊ c
;
◊◊c d
output
ÿÿ 
.
ÿÿ 
StartSection
ÿÿ 
(
ÿÿ  
title
ÿÿ  %
)
ÿÿ% &
;
ÿÿ& '
string
ŸŸ 

outputFile
ŸŸ 
=
ŸŸ 
	Functions
ŸŸ  )
.
ŸŸ) *
CreateOutputFile
ŸŸ* :
(
ŸŸ: ;
kbserv
ŸŸ; A
,
ŸŸA B
title
ŸŸC H
)
ŸŸH I
;
ŸŸI J
KBDoctorXMLWriter
€€ 
writer
€€ $
=
€€% &
new
€€' *
KBDoctorXMLWriter
€€+ <
(
€€< =

outputFile
€€= G
,
€€G H
Encoding
€€I Q
.
€€Q R
UTF8
€€R V
)
€€V W
;
€€W X
writer
‹‹ 
.
‹‹ 
	AddHeader
‹‹ 
(
‹‹ 
title
‹‹ "
)
‹‹" #
;
‹‹# $!
SelectObjectOptions
ﬁﬁ  
selectObjectOption
ﬁﬁ  2
=
ﬁﬁ3 4
new
ﬁﬁ5 8!
SelectObjectOptions
ﬁﬁ9 L
(
ﬁﬁL M
)
ﬁﬁM N
;
ﬁﬁN O 
selectObjectOption
ﬂﬂ 
.
ﬂﬂ 
MultipleSelection
ﬂﬂ 0
=
ﬂﬂ1 2
true
ﬂﬂ3 7
;
ﬂﬂ7 8 
selectObjectOption
‡‡ 
.
‡‡ 
ObjectTypes
‡‡ *
.
‡‡* +
Add
‡‡+ .
(
‡‡. / 
KBObjectDescriptor
‡‡/ A
.
‡‡A B
Get
‡‡B E
<
‡‡E F
Transaction
‡‡F Q
>
‡‡Q R
(
‡‡R S
)
‡‡S T
)
‡‡T U
;
‡‡U V
List
·· 
<
·· 
KBObject
·· 
>
·· 
objects
·· "
=
··# $
new
··% (
List
··) -
<
··- .
KBObject
··. 6
>
··6 7
(
··7 8
)
··8 9
;
··9 :
HashSet
‚‚ 
<
‚‚ 
	EntityKey
‚‚ 
>
‚‚ 
guids
‚‚ $
=
‚‚% &
new
‚‚' *
HashSet
‚‚+ 2
<
‚‚2 3
	EntityKey
‚‚3 <
>
‚‚< =
(
‚‚= >
)
‚‚> ?
;
‚‚? @
foreach
„„ 
(
„„ 
Transaction
„„  
transaction
„„! ,
in
„„- /

UIServices
„„0 :
.
„„: ; 
SelectObjectDialog
„„; M
.
„„M N
SelectObjects
„„N [
(
„„[ \ 
selectObjectOption
„„\ n
)
„„n o
)
„„o p
{
‰‰ 
foreach
ÂÂ 
(
ÂÂ 
EntityReference
ÂÂ (
refer
ÂÂ) .
in
ÂÂ/ 1
transaction
ÂÂ2 =
.
ÂÂ= >
GetReferences
ÂÂ> K
(
ÂÂK L
)
ÂÂL M
)
ÂÂM N
{
ÊÊ 
KBObject
ÁÁ 
refto
ÁÁ "
=
ÁÁ# $
KBObject
ÁÁ% -
.
ÁÁ- .
Get
ÁÁ. 1
(
ÁÁ1 2
kbserv
ÁÁ2 8
.
ÁÁ8 9
CurrentModel
ÁÁ9 E
,
ÁÁE F
refer
ÁÁG L
.
ÁÁL M
To
ÁÁM O
)
ÁÁO P
;
ÁÁP Q
ICallableObject
ËË #
callableObject
ËË$ 2
=
ËË3 4
refto
ËË5 :
as
ËË; =
ICallableObject
ËË> M
;
ËËM N
if
ÈÈ 
(
ÈÈ 
!
ÈÈ 
guids
ÈÈ 
.
ÈÈ 
Contains
ÈÈ '
(
ÈÈ' (
refer
ÈÈ( -
.
ÈÈ- .
To
ÈÈ. 0
)
ÈÈ0 1
)
ÈÈ1 2
{
ÍÍ 
if
ÎÎ 
(
ÎÎ 
callableObject
ÎÎ *
!=
ÎÎ+ -
null
ÎÎ. 2
)
ÎÎ2 3
{
ÏÏ 
objects
ÌÌ #
.
ÌÌ# $
Add
ÌÌ$ '
(
ÌÌ' (
refto
ÌÌ( -
)
ÌÌ- .
;
ÌÌ. /
guids
ÓÓ !
.
ÓÓ! "
Add
ÓÓ" %
(
ÓÓ% &
refer
ÓÓ& +
.
ÓÓ+ ,
To
ÓÓ, .
)
ÓÓ. /
;
ÓÓ/ 0
}
ÔÔ 
}
 
}
ÒÒ 
}
ÚÚ 
HashSet
ÙÙ 
<
ÙÙ 
int
ÙÙ 
>
ÙÙ 
classes
ÙÙ  
;
ÙÙ  !
	Hashtable
ıı 
[
ıı 
]
ıı 
Classes_types
ıı %
;
ıı% &
API
˜˜ 
.
˜˜ 1
#GetClassesTypesWithTheSameSignature
˜˜ 3
(
˜˜3 4
objects
˜˜4 ;
,
˜˜; <
out
˜˜= @
classes
˜˜A H
,
˜˜H I
out
˜˜J M
Classes_types
˜˜N [
)
˜˜[ \
;
˜˜\ ]
writer
˘˘ 
.
˘˘ 
AddTableHeader
˘˘ !
(
˘˘! "
new
˘˘" %
string
˘˘& ,
[
˘˘, -
]
˘˘- .
{
˘˘/ 0
$str
˘˘1 8
,
˘˘8 9
$str
˘˘: B
,
˘˘B C
$str
˘˘D U
}
˘˘V W
)
˘˘W X
;
˘˘X Y
foreach
¸¸ 
(
¸¸ 
int
¸¸ 
i
¸¸ 
in
¸¸ 
classes
¸¸ %
)
¸¸% &
{
˝˝ 
	Hashtable
˛˛ 

table_type
˛˛ $
=
˛˛% &
Classes_types
˛˛' 4
[
˛˛4 5
i
˛˛5 6
-
˛˛7 8
$num
˛˛9 :
]
˛˛: ;
;
˛˛; <
foreach
ˇˇ 
(
ˇˇ 
string
ˇˇ 

parameters
ˇˇ  *
in
ˇˇ+ -

table_type
ˇˇ. 8
.
ˇˇ8 9
Keys
ˇˇ9 =
)
ˇˇ= >
{
ÄÄ 
List
ÅÅ 
<
ÅÅ 
KBObject
ÅÅ !
>
ÅÅ! "
objs
ÅÅ# '
=
ÅÅ( )

table_type
ÅÅ* 4
[
ÅÅ4 5

parameters
ÅÅ5 ?
]
ÅÅ? @
as
ÅÅA C
List
ÅÅD H
<
ÅÅH I
KBObject
ÅÅI Q
>
ÅÅQ R
;
ÅÅR S
if
ÇÇ 
(
ÇÇ 
objs
ÇÇ 
.
ÇÇ 
Count
ÇÇ "
>
ÇÇ# $
$num
ÇÇ% &
)
ÇÇ& '
{
ÉÉ 
foreach
ÑÑ 
(
ÑÑ  !
KBObject
ÑÑ! )
obj
ÑÑ* -
in
ÑÑ. 0
objs
ÑÑ1 5
)
ÑÑ5 6
{
ÖÖ 
writer
ÜÜ "
.
ÜÜ" #
AddTableData
ÜÜ# /
(
ÜÜ/ 0
new
ÜÜ0 3
string
ÜÜ4 :
[
ÜÜ: ;
]
ÜÜ; <
{
ÜÜ= >

parameters
ÜÜ? I
,
ÜÜI J
obj
ÜÜK N
.
ÜÜN O
Name
ÜÜO S
,
ÜÜS T
	Functions
ÜÜU ^
.
ÜÜ^ _
ExtractRuleParm
ÜÜ_ n
(
ÜÜn o
obj
ÜÜo r
)
ÜÜr s
}
ÜÜt u
)
ÜÜu v
;
ÜÜv w
}
áá 
}
àà 
}
ââ 
}
ää 
writer
åå 
.
åå 
	AddFooter
åå 
(
åå 
)
åå 
;
åå 
writer
çç 
.
çç 
Close
çç 
(
çç 
)
çç 
;
çç 
bool
éé 
success
éé 
=
éé 
true
éé 
;
éé  
output
èè 
.
èè 

EndSection
èè 
(
èè 
title
èè #
,
èè# $
success
èè% ,
)
èè, -
;
èè- .
KBDoctorHelper
ëë 
.
ëë !
ShowKBDoctorResults
ëë .
(
ëë. /

outputFile
ëë/ 9
)
ëë9 :
;
ëë: ;
}
íí 	
public
îî 
static
îî 
void
îî 

TestParser
îî %
(
îî% &
)
îî& '
{
ïï 	
	Hashtable
óó 
token_meaning
óó #
=
óó$ %
new
óó& )
	Hashtable
óó* 3
(
óó3 4
)
óó4 5
;
óó5 6
token_meaning
ôô 
.
ôô 
Add
ôô 
(
ôô 
	TokensIds
ôô '
.
ôô' (
FNONE
ôô( -
,
ôô- .
$str
ôô/ 6
)
ôô6 7
;
ôô7 8
token_meaning
öö 
.
öö 
Add
öö 
(
öö 
	TokensIds
öö '
.
öö' (
FOB
öö( +
,
öö+ ,
$str
öö- @
)
öö@ A
;
ööA B
token_meaning
õõ 
.
õõ 
Add
õõ 
(
õõ 
	TokensIds
õõ '
.
õõ' (
FFN
õõ( +
,
õõ+ ,
$str
õõ- H
)
õõH I
;
õõI J
token_meaning
úú 
.
úú 
Add
úú 
(
úú 
	TokensIds
úú '
.
úú' (
FNA
úú( +
,
úú+ ,
$str
úú- >
)
úú> ?
;
úú? @
token_meaning
ùù 
.
ùù 
Add
ùù 
(
ùù 
	TokensIds
ùù '
.
ùù' (
FNC
ùù( +
,
ùù+ ,
$str
ùù- >
)
ùù> ?
;
ùù? @
token_meaning
ûû 
.
ûû 
Add
ûû 
(
ûû 
	TokensIds
ûû '
.
ûû' (
FCB
ûû( +
,
ûû+ ,
$str
ûû- A
)
ûûA B
;
ûûB C
token_meaning
üü 
.
üü 
Add
üü 
(
üü 
	TokensIds
üü '
.
üü' (
FPL
üü( +
,
üü+ ,
$str
üü- G
)
üüG H
;
üüH I
token_meaning
†† 
.
†† 
Add
†† 
(
†† 
	TokensIds
†† '
.
††' (
FPR
††( +
,
††+ ,
$str
††- K
)
††K L
;
††L M
token_meaning
°° 
.
°° 
Add
°° 
(
°° 
	TokensIds
°° '
.
°°' (
FCM
°°( +
,
°°+ ,
$str
°°- I
)
°°I J
;
°°J K
token_meaning
¢¢ 
.
¢¢ 
Add
¢¢ 
(
¢¢ 
	TokensIds
¢¢ '
.
¢¢' (
FNT
¢¢( +
,
¢¢+ ,
$str
¢¢- 9
)
¢¢9 :
;
¢¢: ;
token_meaning
££ 
.
££ 
Add
££ 
(
££ 
	TokensIds
££ '
.
££' (
FAN
££( +
,
££+ ,
$str
££- A
)
££A B
;
££B C
token_meaning
§§ 
.
§§ 
Add
§§ 
(
§§ 
	TokensIds
§§ '
.
§§' (
FRE
§§( +
,
§§+ ,
$str
§§- L
)
§§L M
;
§§M N
token_meaning
•• 
.
•• 
Add
•• 
(
•• 
	TokensIds
•• '
.
••' (
EXP
••( +
,
••+ ,
$str
••- :
)
••: ;
;
••; <
token_meaning
¶¶ 
.
¶¶ 
Add
¶¶ 
(
¶¶ 
	TokensIds
¶¶ '
.
¶¶' (
SUM
¶¶( +
,
¶¶+ ,
$str
¶¶- 3
)
¶¶3 4
;
¶¶4 5
token_meaning
ßß 
.
ßß 
Add
ßß 
(
ßß 
	TokensIds
ßß '
.
ßß' (
COU
ßß( +
,
ßß+ ,
$str
ßß- 5
)
ßß5 6
;
ßß6 7
token_meaning
®® 
.
®® 
Add
®® 
(
®® 
	TokensIds
®® '
.
®®' (
AVE
®®( +
,
®®+ ,
$str
®®- 7
)
®®7 8
;
®®8 9
token_meaning
©© 
.
©© 
Add
©© 
(
©© 
	TokensIds
©© '
.
©©' (
MAX
©©( +
,
©©+ ,
$str
©©- 7
)
©©7 8
;
©©8 9
token_meaning
™™ 
.
™™ 
Add
™™ 
(
™™ 
	TokensIds
™™ '
.
™™' (
MIN
™™( +
,
™™+ ,
$str
™™- 7
)
™™7 8
;
™™8 9
token_meaning
´´ 
.
´´ 
Add
´´ 
(
´´ 
	TokensIds
´´ '
.
´´' (
FIF
´´( +
,
´´+ ,
$str
´´- 6
)
´´6 7
;
´´7 8
token_meaning
¨¨ 
.
¨¨ 
Add
¨¨ 
(
¨¨ 
	TokensIds
¨¨ '
.
¨¨' (
FSC
¨¨( +
,
¨¨+ ,
$str
¨¨- =
)
¨¨= >
;
¨¨> ?
token_meaning
≠≠ 
.
≠≠ 
Add
≠≠ 
(
≠≠ 
	TokensIds
≠≠ '
.
≠≠' (
FOT
≠≠( +
,
≠≠+ ,
$str
≠≠- 9
)
≠≠9 :
;
≠≠: ;
token_meaning
ÆÆ 
.
ÆÆ 
Add
ÆÆ 
(
ÆÆ 
	TokensIds
ÆÆ '
.
ÆÆ' (
	ERR_TOKEN
ÆÆ( 1
,
ÆÆ1 2
$str
ÆÆ3 >
)
ÆÆ> ?
;
ÆÆ? @
token_meaning
ØØ 
.
ØØ 
Add
ØØ 
(
ØØ 
	TokensIds
ØØ '
.
ØØ' (
FEN
ØØ( +
,
ØØ+ ,
$str
ØØ- <
)
ØØ< =
;
ØØ= >
token_meaning
∞∞ 
.
∞∞ 
Add
∞∞ 
(
∞∞ 
	TokensIds
∞∞ '
.
∞∞' (
FCO
∞∞( +
,
∞∞+ ,
$str
∞∞- P
)
∞∞P Q
;
∞∞Q R
token_meaning
±± 
.
±± 
Add
±± 
(
±± 
	TokensIds
±± '
.
±±' (
FUV
±±( +
,
±±+ ,
$str
±±- T
)
±±T U
;
±±U V
token_meaning
≤≤ 
.
≤≤ 
Add
≤≤ 
(
≤≤ 
	TokensIds
≤≤ '
.
≤≤' (
FUA
≤≤( +
,
≤≤+ ,
$str
≤≤- J
)
≤≤J K
;
≤≤K L
token_meaning
≥≥ 
.
≥≥ 
Add
≥≥ 
(
≥≥ 
	TokensIds
≥≥ '
.
≥≥' (
FCN
≥≥( +
,
≥≥+ ,
$str
≥≥- P
)
≥≥P Q
;
≥≥Q R
token_meaning
¥¥ 
.
¥¥ 
Add
¥¥ 
(
¥¥ 
	TokensIds
¥¥ '
.
¥¥' (
FAM
¥¥( +
,
¥¥+ ,
$str
¥¥- O
)
¥¥O P
;
¥¥P Q
token_meaning
µµ 
.
µµ 
Add
µµ 
(
µµ 
	TokensIds
µµ '
.
µµ' (
FCL
µµ( +
,
µµ+ ,
$str
µµ- I
)
µµI J
;
µµJ K
token_meaning
∂∂ 
.
∂∂ 
Add
∂∂ 
(
∂∂ 
	TokensIds
∂∂ '
.
∂∂' (
FOI
∂∂( +
,
∂∂+ ,
$str
∂∂- J
)
∂∂J K
;
∂∂K L
token_meaning
∑∑ 
.
∑∑ 
Add
∑∑ 
(
∑∑ 
	TokensIds
∑∑ '
.
∑∑' (
FCT
∑∑( +
,
∑∑+ ,
$str
∑∑- P
)
∑∑P Q
;
∑∑Q R
token_meaning
∏∏ 
.
∏∏ 
Add
∏∏ 
(
∏∏ 
	TokensIds
∏∏ '
.
∏∏' (
FCI
∏∏( +
,
∏∏+ ,
$str
∏∏- Q
)
∏∏Q R
;
∏∏R S
token_meaning
ππ 
.
ππ 
Add
ππ 
(
ππ 
	TokensIds
ππ '
.
ππ' (
FMT
ππ( +
,
ππ+ ,
$str
ππ- f
)
ππf g
;
ππg h
token_meaning
∫∫ 
.
∫∫ 
Add
∫∫ 
(
∫∫ 
	TokensIds
∫∫ '
.
∫∫' (
FBI
∫∫( +
,
∫∫+ ,
$str
∫∫- h
)
∫∫h i
;
∫∫i j
token_meaning
ªª 
.
ªª 
Add
ªª 
(
ªª 
	TokensIds
ªª '
.
ªª' (
FDC
ªª( +
,
ªª+ ,
$str
ªª- Y
)
ªªY Z
;
ªªZ [
token_meaning
ºº 
.
ºº 
Add
ºº 
(
ºº 
	TokensIds
ºº '
.
ºº' (
FCV
ºº( +
,
ºº+ ,
$str
ºº- ~
)
ºº~ 
;ºº Ä
token_meaning
ΩΩ 
.
ΩΩ 
Add
ΩΩ 
(
ΩΩ 
	TokensIds
ΩΩ '
.
ΩΩ' (
FWH
ΩΩ( +
,
ΩΩ+ ,
$str
ΩΩ- L
)
ΩΩL M
;
ΩΩM N
token_meaning
ææ 
.
ææ 
Add
ææ 
(
ææ 
	TokensIds
ææ '
.
ææ' (
FNS
ææ( +
,
ææ+ ,
$str
ææ- >
)
ææ> ?
;
ææ? @
token_meaning
øø 
.
øø 
Add
øø 
(
øø 
	TokensIds
øø '
.
øø' (
FON
øø( +
,
øø+ ,
$str
øø- 6
)
øø6 7
;
øø7 8
token_meaning
¿¿ 
.
¿¿ 
Add
¿¿ 
(
¿¿ 
	TokensIds
¿¿ '
.
¿¿' (
FBC
¿¿( +
,
¿¿+ ,
$str
¿¿- D
)
¿¿D E
;
¿¿E F
token_meaning
¡¡ 
.
¡¡ 
Add
¡¡ 
(
¡¡ 
	TokensIds
¡¡ '
.
¡¡' (
FOR
¡¡( +
,
¡¡+ ,
$str
¡¡- 9
)
¡¡9 :
;
¡¡: ;
token_meaning
¬¬ 
.
¬¬ 
Add
¬¬ 
(
¬¬ 
	TokensIds
¬¬ '
.
¬¬' (
TKN_TRUE
¬¬( 0
,
¬¬0 1
$str
¬¬2 9
)
¬¬9 :
;
¬¬: ;
token_meaning
√√ 
.
√√ 
Add
√√ 
(
√√ 
	TokensIds
√√ '
.
√√' (
	TKN_FALSE
√√( 1
,
√√1 2
$str
√√3 ;
)
√√; <
;
√√< =
token_meaning
ƒƒ 
.
ƒƒ 
Add
ƒƒ 
(
ƒƒ 
	TokensIds
ƒƒ '
.
ƒƒ' (
TKN_NONE
ƒƒ( 0
,
ƒƒ0 1
$str
ƒƒ2 l
)
ƒƒl m
;
ƒƒm n
token_meaning
≈≈ 
.
≈≈ 
Add
≈≈ 
(
≈≈ 
	TokensIds
≈≈ '
.
≈≈' (
PRM
≈≈( +
,
≈≈+ ,
$str
≈≈- L
)
≈≈L M
;
≈≈M N
token_meaning
∆∆ 
.
∆∆ 
Add
∆∆ 
(
∆∆ 
	TokensIds
∆∆ '
.
∆∆' (
FND
∆∆( +
,
∆∆+ ,
$str
∆∆- ;
)
∆∆; <
;
∆∆< =
token_meaning
«« 
.
«« 
Add
«« 
(
«« 
	TokensIds
«« '
.
««' (
FLV
««( +
,
««+ ,
$str
««- ;
)
««; <
;
««< =
token_meaning
»» 
.
»» 
Add
»» 
(
»» 
	TokensIds
»» '
.
»»' (
TKN_NEW
»»( /
,
»»/ 0
$str
»»1 =
)
»»= >
;
»»> ?
token_meaning
…… 
.
…… 
Add
…… 
(
…… 
	TokensIds
…… '
.
……' (
FSDTCLS
……( /
,
……/ 0
$str
……1 C
)
……C D
;
……D E
token_meaning
   
.
   
Add
   
(
   
	TokensIds
   '
.
  ' (
TKN_NULL
  ( 0
,
  0 1
$str
  2 9
)
  9 :
;
  : ;
token_meaning
ÀÀ 
.
ÀÀ 
Add
ÀÀ 
(
ÀÀ 
	TokensIds
ÀÀ '
.
ÀÀ' (
TKN_IN
ÀÀ( .
,
ÀÀ. /
$str
ÀÀ0 5
)
ÀÀ5 6
;
ÀÀ6 7
token_meaning
ÃÃ 
.
ÃÃ 
Add
ÃÃ 
(
ÃÃ 
	TokensIds
ÃÃ '
.
ÃÃ' (
SSL
ÃÃ( +
,
ÃÃ+ ,
$str
ÃÃ- c
)
ÃÃc d
;
ÃÃd e
token_meaning
ÕÕ 
.
ÕÕ 
Add
ÕÕ 
(
ÕÕ 
	TokensIds
ÕÕ '
.
ÕÕ' (
FEX
ÕÕ( +
,
ÕÕ+ ,
$str
ÕÕ- >
)
ÕÕ> ?
;
ÕÕ? @
token_meaning
ŒŒ 
.
ŒŒ 
Add
ŒŒ 
(
ŒŒ 
	TokensIds
ŒŒ '
.
ŒŒ' (
TMSGID
ŒŒ( .
,
ŒŒ. /
$str
ŒŒ0 =
)
ŒŒ= >
;
ŒŒ> ?
token_meaning
œœ 
.
œœ 
Add
œœ 
(
œœ 
	TokensIds
œœ '
.
œœ' (
TNCNT
œœ( -
,
œœ- .
$str
œœ/ U
)
œœU V
;
œœV W
token_meaning
–– 
.
–– 
Add
–– 
(
–– 
	TokensIds
–– '
.
––' (
TFOR
––( ,
,
––, -
$str
––. j
)
––j k
;
––k l
token_meaning
—— 
.
—— 
Add
—— 
(
—— 
	TokensIds
—— '
.
——' (
TDEPENDENCIES
——( 5
,
——5 6
$str
——7 f
)
——f g
;
——g h
token_meaning
““ 
.
““ 
Add
““ 
(
““ 
	TokensIds
““ '
.
““' (
TRULE
““( -
,
““- .
$str
““/ <
)
““< =
;
““= >
token_meaning
”” 
.
”” 
Add
”” 
(
”” 
	TokensIds
”” '
.
””' (
TBY
””( +
,
””+ ,
$str
””- :
)
””: ;
;
””; <
token_meaning
‘‘ 
.
‘‘ 
Add
‘‘ 
(
‘‘ 
	TokensIds
‘‘ '
.
‘‘' (
TGIVEN
‘‘( .
,
‘‘. /
$str
‘‘0 @
)
‘‘@ A
;
‘‘A B
token_meaning
’’ 
.
’’ 
Add
’’ 
(
’’ 
	TokensIds
’’ '
.
’’' (
TWHERE
’’( .
,
’’. /
$str
’’0 \
)
’’\ ]
;
’’] ^
token_meaning
÷÷ 
.
÷÷ 
Add
÷÷ 
(
÷÷ 
	TokensIds
÷÷ '
.
÷÷' (

TDEFINEDBY
÷÷( 2
,
÷÷2 3
$str
÷÷4 I
)
÷÷I J
;
÷÷J K
token_meaning
◊◊ 
.
◊◊ 
Add
◊◊ 
(
◊◊ 
	TokensIds
◊◊ '
.
◊◊' (
TSECTION
◊◊( 0
,
◊◊0 1
$str
◊◊2 P
)
◊◊P Q
;
◊◊Q R
token_meaning
ÿÿ 
.
ÿÿ 
Add
ÿÿ 
(
ÿÿ 
	TokensIds
ÿÿ '
.
ÿÿ' (
TINDP
ÿÿ( -
,
ÿÿ- .
$str
ÿÿ/ T
)
ÿÿT U
;
ÿÿU V
token_meaning
ŸŸ 
.
ŸŸ 
Add
ŸŸ 
(
ŸŸ 
	TokensIds
ŸŸ '
.
ŸŸ' (
OPENSQUAREBRACKET
ŸŸ( 9
,
ŸŸ9 :
$str
ŸŸ; N
)
ŸŸN O
;
ŸŸO P
token_meaning
⁄⁄ 
.
⁄⁄ 
Add
⁄⁄ 
(
⁄⁄ 
	TokensIds
⁄⁄ '
.
⁄⁄' ( 
CLOSESQUAREBRACKET
⁄⁄( :
,
⁄⁄: ;
$str
⁄⁄< P
)
⁄⁄P Q
;
⁄⁄Q R
token_meaning
€€ 
.
€€ 
Add
€€ 
(
€€ 
	TokensIds
€€ '
.
€€' (

OUTPUTNAME
€€( 2
,
€€2 3
$str
€€4 @
)
€€@ A
;
€€A B
token_meaning
‹‹ 
.
‹‹ 
Add
‹‹ 
(
‹‹ 
	TokensIds
‹‹ '
.
‹‹' (
OUTPUTDYNAMICSYM
‹‹( 8
,
‹‹8 9
$str
‹‹: L
)
‹‹L M
;
‹‹M N
token_meaning
›› 
.
›› 
Add
›› 
(
›› 
	TokensIds
›› '
.
››' (
INPUT
››( -
,
››- .
$str
››/ 6
)
››6 7
;
››7 8
token_meaning
ﬁﬁ 
.
ﬁﬁ 
Add
ﬁﬁ 
(
ﬁﬁ 
	TokensIds
ﬁﬁ '
.
ﬁﬁ' (
OUTPUTPROPERTY
ﬁﬁ( 6
,
ﬁﬁ6 7
$str
ﬁﬁ8 H
)
ﬁﬁH I
;
ﬁﬁI J
token_meaning
ﬂﬂ 
.
ﬂﬂ 
Add
ﬂﬂ 
(
ﬂﬂ 
	TokensIds
ﬂﬂ '
.
ﬂﬂ' (
OBJREFERENCE
ﬂﬂ( 4
,
ﬂﬂ4 5
$str
ﬂﬂ6 D
)
ﬂﬂD E
;
ﬂﬂE F
token_meaning
‡‡ 
.
‡‡ 
Add
‡‡ 
(
‡‡ 
	TokensIds
‡‡ '
.
‡‡' (
TUSING
‡‡( .
,
‡‡. /
$str
‡‡0 8
)
‡‡8 9
;
‡‡9 :
token_meaning
·· 
.
·· 
Add
·· 
(
·· 
	TokensIds
·· '
.
··' (
TSIGN
··( -
,
··- .
$str··/ ù
)··ù û
;··û ü
token_meaning
‚‚ 
.
‚‚ 
Add
‚‚ 
(
‚‚ 
	TokensIds
‚‚ '
.
‚‚' (
TEXO
‚‚( ,
,
‚‚, -
$str
‚‚. 4
)
‚‚4 5
;
‚‚5 6
token_meaning
„„ 
.
„„ 
Add
„„ 
(
„„ 
	TokensIds
„„ '
.
„„' (
DTEJE
„„( -
,
„„- .
$str
„„/ 9
)
„„9 :
;
„„: ;
token_meaning
‰‰ 
.
‰‰ 
Add
‰‰ 
(
‰‰ 
	TokensIds
‰‰ '
.
‰‰' (
DTNSK
‰‰( -
,
‰‰- .
$str
‰‰/ :
)
‰‰: ;
;
‰‰; <
token_meaning
ÂÂ 
.
ÂÂ 
Add
ÂÂ 
(
ÂÂ 
	TokensIds
ÂÂ '
.
ÂÂ' (
DTLNN
ÂÂ( -
,
ÂÂ- .
$str
ÂÂ/ :
)
ÂÂ: ;
;
ÂÂ; <
token_meaning
ÊÊ 
.
ÊÊ 
Add
ÊÊ 
(
ÊÊ 
	TokensIds
ÊÊ '
.
ÊÊ' (
DTPRC
ÊÊ( -
,
ÊÊ- .
$str
ÊÊ/ 6
)
ÊÊ6 7
;
ÊÊ7 8
token_meaning
ÁÁ 
.
ÁÁ 
Add
ÁÁ 
(
ÁÁ 
	TokensIds
ÁÁ '
.
ÁÁ' (
DTCLL
ÁÁ( -
,
ÁÁ- .
$str
ÁÁ/ 8
)
ÁÁ8 9
;
ÁÁ9 :
token_meaning
ËË 
.
ËË 
Add
ËË 
(
ËË 
	TokensIds
ËË '
.
ËË' (
DTDBA
ËË( -
,
ËË- .
$str
ËË/ 6
)
ËË6 7
;
ËË7 8
token_meaning
ÈÈ 
.
ÈÈ 
Add
ÈÈ 
(
ÈÈ 
	TokensIds
ÈÈ '
.
ÈÈ' (
DTCOB
ÈÈ( -
,
ÈÈ- .
$str
ÈÈ/ 6
)
ÈÈ6 7
;
ÈÈ7 8
token_meaning
ÍÍ 
.
ÍÍ 
Add
ÍÍ 
(
ÍÍ 
	TokensIds
ÍÍ '
.
ÍÍ' (
DTASG
ÍÍ( -
,
ÍÍ- .
$str
ÍÍ/ <
)
ÍÍ< =
;
ÍÍ= >
token_meaning
ÎÎ 
.
ÎÎ 
Add
ÎÎ 
(
ÎÎ 
	TokensIds
ÎÎ '
.
ÎÎ' (
DTPRI
ÎÎ( -
,
ÎÎ- .
$str
ÎÎ/ 6
)
ÎÎ6 7
;
ÎÎ7 8
token_meaning
ÏÏ 
.
ÏÏ 
Add
ÏÏ 
(
ÏÏ 
	TokensIds
ÏÏ '
.
ÏÏ' (
DTIF
ÏÏ( ,
,
ÏÏ, -
$str
ÏÏ. 2
)
ÏÏ2 3
;
ÏÏ3 4
token_meaning
ÌÌ 
.
ÌÌ 
Add
ÌÌ 
(
ÌÌ 
	TokensIds
ÌÌ '
.
ÌÌ' (
DTELS
ÌÌ( -
,
ÌÌ- .
$str
ÌÌ/ 8
)
ÌÌ8 9
;
ÌÌ9 :
token_meaning
ÓÓ 
.
ÓÓ 
Add
ÓÓ 
(
ÓÓ 
	TokensIds
ÓÓ '
.
ÓÓ' (
DTEIF
ÓÓ( -
,
ÓÓ- .
$str
ÓÓ/ 9
)
ÓÓ9 :
;
ÓÓ: ;
token_meaning
ÔÔ 
.
ÔÔ 
Add
ÔÔ 
(
ÔÔ 
	TokensIds
ÔÔ '
.
ÔÔ' (
DTNPR
ÔÔ( -
,
ÔÔ- .
$str
ÔÔ/ ;
)
ÔÔ; <
;
ÔÔ< =
token_meaning
 
.
 
Add
 
(
 
	TokensIds
 '
.
' (
DTDEL
( -
,
- .
$str
/ :
)
: ;
;
; <
token_meaning
ÒÒ 
.
ÒÒ 
Add
ÒÒ 
(
ÒÒ 
	TokensIds
ÒÒ '
.
ÒÒ' (
DTDO
ÒÒ( ,
,
ÒÒ, -
$str
ÒÒ. 5
)
ÒÒ5 6
;
ÒÒ6 7
token_meaning
ÚÚ 
.
ÚÚ 
Add
ÚÚ 
(
ÚÚ 
	TokensIds
ÚÚ '
.
ÚÚ' (
DTEDO
ÚÚ( -
,
ÚÚ- .
$str
ÚÚ/ 9
)
ÚÚ9 :
;
ÚÚ: ;
token_meaning
ÛÛ 
.
ÛÛ 
Add
ÛÛ 
(
ÛÛ 
	TokensIds
ÛÛ '
.
ÛÛ' (
DTWHE
ÛÛ( -
,
ÛÛ- .
$str
ÛÛ/ 6
)
ÛÛ6 7
;
ÛÛ7 8
token_meaning
ÙÙ 
.
ÙÙ 
Add
ÙÙ 
(
ÙÙ 
	TokensIds
ÙÙ '
.
ÙÙ' (
DTNEW
ÙÙ( -
,
ÙÙ- .
$str
ÙÙ/ 4
)
ÙÙ4 5
;
ÙÙ5 6
token_meaning
ıı 
.
ıı 
Add
ıı 
(
ıı 
	TokensIds
ıı '
.
ıı' (
DTRET
ıı( -
,
ıı- .
$str
ıı/ 7
)
ıı7 8
;
ıı8 9
token_meaning
ˆˆ 
.
ˆˆ 
Add
ˆˆ 
(
ˆˆ 
	TokensIds
ˆˆ '
.
ˆˆ' (
DTHEA
ˆˆ( -
,
ˆˆ- .
$str
ˆˆ/ 6
)
ˆˆ6 7
;
ˆˆ7 8
token_meaning
˜˜ 
.
˜˜ 
Add
˜˜ 
(
˜˜ 
	TokensIds
˜˜ '
.
˜˜' (
DTBEG
˜˜( -
,
˜˜- .
$str
˜˜/ 6
)
˜˜6 7
;
˜˜7 8
token_meaning
¯¯ 
.
¯¯ 
Add
¯¯ 
(
¯¯ 
	TokensIds
¯¯ '
.
¯¯' (
DTFOR
¯¯( -
,
¯¯- .
$str
¯¯/ ;
)
¯¯; <
;
¯¯< =
token_meaning
˘˘ 
.
˘˘ 
Add
˘˘ 
(
˘˘ 
	TokensIds
˘˘ '
.
˘˘' (
DTEND
˘˘( -
,
˘˘- .
$str
˘˘/ 6
)
˘˘6 7
;
˘˘7 8
token_meaning
˙˙ 
.
˙˙ 
Add
˙˙ 
(
˙˙ 
	TokensIds
˙˙ '
.
˙˙' (
DTPL
˙˙( ,
,
˙˙, -
$str
˙˙. 4
)
˙˙4 5
;
˙˙5 6
token_meaning
˚˚ 
.
˚˚ 
Add
˚˚ 
(
˚˚ 
	TokensIds
˚˚ '
.
˚˚' (
DTMT
˚˚( ,
,
˚˚, -
$str
˚˚. 4
)
˚˚4 5
;
˚˚5 6
token_meaning
¸¸ 
.
¸¸ 
Add
¸¸ 
(
¸¸ 
	TokensIds
¸¸ '
.
¸¸' (
DTMB
¸¸( ,
,
¸¸, -
$str
¸¸. 4
)
¸¸4 5
;
¸¸5 6
token_meaning
˝˝ 
.
˝˝ 
Add
˝˝ 
(
˝˝ 
	TokensIds
˝˝ '
.
˝˝' (
DTSRC
˝˝( -
,
˝˝- .
$str
˝˝/ 6
)
˝˝6 7
;
˝˝7 8
token_meaning
˛˛ 
.
˛˛ 
Add
˛˛ 
(
˛˛ 
	TokensIds
˛˛ '
.
˛˛' (
DTENW
˛˛( -
,
˛˛- .
$str
˛˛/ 8
)
˛˛8 9
;
˛˛9 :
token_meaning
ˇˇ 
.
ˇˇ 
Add
ˇˇ 
(
ˇˇ 
	TokensIds
ˇˇ '
.
ˇˇ' (
DTEFO
ˇˇ( -
,
ˇˇ- .
$str
ˇˇ/ :
)
ˇˇ: ;
;
ˇˇ; <
token_meaning
ÄÄ 
.
ÄÄ 
Add
ÄÄ 
(
ÄÄ 
	TokensIds
ÄÄ '
.
ÄÄ' (
DTWDU
ÄÄ( -
,
ÄÄ- .
$str
ÄÄ/ B
)
ÄÄB C
;
ÄÄC D
token_meaning
ÅÅ 
.
ÅÅ 
Add
ÅÅ 
(
ÅÅ 
	TokensIds
ÅÅ '
.
ÅÅ' (
DTWNO
ÅÅ( -
,
ÅÅ- .
$str
ÅÅ/ =
)
ÅÅ= >
;
ÅÅ> ?
token_meaning
ÇÇ 
.
ÇÇ 
Add
ÇÇ 
(
ÇÇ 
	TokensIds
ÇÇ '
.
ÇÇ' (
DTCP
ÇÇ( ,
,
ÇÇ, -
$str
ÇÇ. 4
)
ÇÇ4 5
;
ÇÇ5 6
token_meaning
ÉÉ 
.
ÉÉ 
Add
ÉÉ 
(
ÉÉ 
	TokensIds
ÉÉ '
.
ÉÉ' (
DTCMM
ÉÉ( -
,
ÉÉ- .
$str
ÉÉ/ 7
)
ÉÉ7 8
;
ÉÉ8 9
token_meaning
ÑÑ 
.
ÑÑ 
Add
ÑÑ 
(
ÑÑ 
	TokensIds
ÑÑ '
.
ÑÑ' (
DTXFE
ÑÑ( -
,
ÑÑ- .
$str
ÑÑ/ 6
)
ÑÑ6 7
;
ÑÑ7 8
token_meaning
ÖÖ 
.
ÖÖ 
Add
ÖÖ 
(
ÖÖ 
	TokensIds
ÖÖ '
.
ÖÖ' (
DTXFF
ÖÖ( -
,
ÖÖ- .
$str
ÖÖ/ 6
)
ÖÖ6 7
;
ÖÖ7 8
token_meaning
ÜÜ 
.
ÜÜ 
Add
ÜÜ 
(
ÜÜ 
	TokensIds
ÜÜ '
.
ÜÜ' (
DTXNW
ÜÜ( -
,
ÜÜ- .
$str
ÜÜ/ 6
)
ÜÜ6 7
;
ÜÜ7 8
token_meaning
áá 
.
áá 
Add
áá 
(
áá 
	TokensIds
áá '
.
áá' (
DTXEF
áá( -
,
áá- .
$str
áá/ 6
)
áá6 7
;
áá7 8
token_meaning
àà 
.
àà 
Add
àà 
(
àà 
	TokensIds
àà '
.
àà' (
DTXEN
àà( -
,
àà- .
$str
àà/ 6
)
àà6 7
;
àà7 8
token_meaning
ââ 
.
ââ 
Add
ââ 
(
ââ 
	TokensIds
ââ '
.
ââ' (
DTDBY
ââ( -
,
ââ- .
$str
ââ/ 6
)
ââ6 7
;
ââ7 8
token_meaning
ää 
.
ää 
Add
ää 
(
ää 
	TokensIds
ää '
.
ää' (
DTEXF
ää( -
,
ää- .
$str
ää/ J
)
ääJ K
;
ääK L
token_meaning
ãã 
.
ãã 
Add
ãã 
(
ãã 
	TokensIds
ãã '
.
ãã' (
DTEXD
ãã( -
,
ãã- .
$str
ãã/ 6
)
ãã6 7
;
ãã7 8
token_meaning
åå 
.
åå 
Add
åå 
(
åå 
	TokensIds
åå '
.
åå' (
DTMSG
åå( -
,
åå- .
$str
åå/ >
)
åå> ?
;
åå? @
token_meaning
çç 
.
çç 
Add
çç 
(
çç 
	TokensIds
çç '
.
çç' (
DTFOO
çç( -
,
çç- .
$str
çç/ 6
)
çç6 7
;
çç7 8
token_meaning
éé 
.
éé 
Add
éé 
(
éé 
	TokensIds
éé '
.
éé' (
DTPRO
éé( -
,
éé- .
$str
éé/ D
)
ééD E
;
ééE F
token_meaning
èè 
.
èè 
Add
èè 
(
èè 
	TokensIds
èè '
.
èè' (
DTEPR
èè( -
,
èè- .
$str
èè/ :
)
èè: ;
;
èè; <
token_meaning
êê 
.
êê 
Add
êê 
(
êê 
	TokensIds
êê '
.
êê' (
DTDOP
êê( -
,
êê- .
$str
êê/ A
)
êêA B
;
êêB C
token_meaning
ëë 
.
ëë 
Add
ëë 
(
ëë 
	TokensIds
ëë '
.
ëë' (
DTEVT
ëë( -
,
ëë- .
$str
ëë/ 6
)
ëë6 7
;
ëë7 8
token_meaning
íí 
.
íí 
Add
íí 
(
íí 
	TokensIds
íí '
.
íí' (
DTEEV
íí( -
,
íí- .
$str
íí/ 6
)
íí6 7
;
íí7 8
token_meaning
ìì 
.
ìì 
Add
ìì 
(
ìì 
	TokensIds
ìì '
.
ìì' (
DTREF
ìì( -
,
ìì- .
$str
ìì/ 6
)
ìì6 7
;
ìì7 8
token_meaning
îî 
.
îî 
Add
îî 
(
îî 
	TokensIds
îî '
.
îî' (
DTFLN
îî( -
,
îî- .
$str
îî/ 6
)
îî6 7
;
îî7 8
token_meaning
ïï 
.
ïï 
Add
ïï 
(
ïï 
	TokensIds
ïï '
.
ïï' (
DTEFL
ïï( -
,
ïï- .
$str
ïï/ 6
)
ïï6 7
;
ïï7 8
token_meaning
ññ 
.
ññ 
Add
ññ 
(
ññ 
	TokensIds
ññ '
.
ññ' (
DTCNF
ññ( -
,
ññ- .
$str
ññ/ 6
)
ññ6 7
;
ññ7 8
token_meaning
óó 
.
óó 
Add
óó 
(
óó 
	TokensIds
óó '
.
óó' (
DTDOC
óó( -
,
óó- .
$str
óó/ 8
)
óó8 9
;
óó9 :
token_meaning
òò 
.
òò 
Add
òò 
(
òò 
	TokensIds
òò '
.
òò' (
DTCAS
òò( -
,
òò- .
$str
òò/ B
)
òòB C
;
òòC D
token_meaning
ôô 
.
ôô 
Add
ôô 
(
ôô 
	TokensIds
ôô '
.
ôô' (
DTECA
ôô( -
,
ôô- .
$str
ôô/ 8
)
ôô8 9
;
ôô9 :
token_meaning
öö 
.
öö 
Add
öö 
(
öö 
	TokensIds
öö '
.
öö' (
DTLOA
öö( -
,
öö- .
$str
öö/ 6
)
öö6 7
;
öö7 8
token_meaning
õõ 
.
õõ 
Add
õõ 
(
õõ 
	TokensIds
õõ '
.
õõ' (
DTLVL
õõ( -
,
õõ- .
$str
õõ/ 6
)
õõ6 7
;
õõ7 8
token_meaning
úú 
.
úú 
Add
úú 
(
úú 
	TokensIds
úú '
.
úú' (
DTRBK
úú( -
,
úú- .
$str
úú/ B
)
úúB C
;
úúC D
token_meaning
ùù 
.
ùù 
Add
ùù 
(
ùù 
	TokensIds
ùù '
.
ùù' (
DTSBM
ùù( -
,
ùù- .
$str
ùù/ @
)
ùù@ A
;
ùùA B
token_meaning
ûû 
.
ûû 
Add
ûû 
(
ûû 
	TokensIds
ûû '
.
ûû' (
DTGRA
ûû( -
,
ûû- .
$str
ûû/ 6
)
ûû6 7
;
ûû7 8
token_meaning
üü 
.
üü 
Add
üü 
(
üü 
	TokensIds
üü '
.
üü' (
DTERH
üü( -
,
üü- .
$str
üü/ H
)
üüH I
;
üüI J
token_meaning
†† 
.
†† 
Add
†† 
(
†† 
	TokensIds
†† '
.
††' (
DTVB
††( ,
,
††, -
$str
††. ;
)
††; <
;
††< =
token_meaning
°° 
.
°° 
Add
°° 
(
°° 
	TokensIds
°° '
.
°°' (
DTFSL
°°( -
,
°°- .
$str
°°/ 6
)
°°6 7
;
°°7 8
token_meaning
¢¢ 
.
¢¢ 
Add
¢¢ 
(
¢¢ 
	TokensIds
¢¢ '
.
¢¢' (
DTDMY
¢¢( -
,
¢¢- .
$str
¢¢/ F
)
¢¢F G
;
¢¢G H
token_meaning
££ 
.
££ 
Add
££ 
(
££ 
	TokensIds
££ '
.
££' (
DTOTH
££( -
,
££- .
$str
££/ :
)
££: ;
;
££; <
token_meaning
§§ 
.
§§ 
Add
§§ 
(
§§ 
	TokensIds
§§ '
.
§§' (
DTEFS
§§( -
,
§§- .
$str
§§/ Y
)
§§Y Z
;
§§Z [
token_meaning
•• 
.
•• 
Add
•• 
(
•• 
	TokensIds
•• '
.
••' (
DTJAV
••( -
,
••- .
$str
••/ >
)
••> ?
;
••? @
token_meaning
¶¶ 
.
¶¶ 
Add
¶¶ 
(
¶¶ 
	TokensIds
¶¶ '
.
¶¶' (
DTSQL
¶¶( -
,
¶¶- .
$str
¶¶/ =
)
¶¶= >
;
¶¶> ?
token_meaning
ßß 
.
ßß 
Add
ßß 
(
ßß 
	TokensIds
ßß '
.
ßß' (
DTFLS
ßß( -
,
ßß- .
$str
ßß/ 6
)
ßß6 7
;
ßß7 8
token_meaning
®® 
.
®® 
Add
®® 
(
®® 
	TokensIds
®® '
.
®®' (
DTFSS
®®( -
,
®®- .
$str
®®/ 6
)
®®6 7
;
®®7 8
token_meaning
©© 
.
©© 
Add
©© 
(
©© 
	TokensIds
©© '
.
©©' (
DTEFF
©©( -
,
©©- .
$str
©©/ 6
)
©©6 7
;
©©7 8
token_meaning
™™ 
.
™™ 
Add
™™ 
(
™™ 
	TokensIds
™™ '
.
™™' (
DTLNK
™™( -
,
™™- .
$str
™™/ >
)
™™> ?
;
™™? @
token_meaning
´´ 
.
´´ 
Add
´´ 
(
´´ 
	TokensIds
´´ '
.
´´' (
DTAPL
´´( -
,
´´- .
$str
´´/ H
)
´´H I
;
´´I J
token_meaning
¨¨ 
.
¨¨ 
Add
¨¨ 
(
¨¨ 
	TokensIds
¨¨ '
.
¨¨' (
DTAMI
¨¨( -
,
¨¨- .
$str
¨¨/ H
)
¨¨H I
;
¨¨I J
token_meaning
≠≠ 
.
≠≠ 
Add
≠≠ 
(
≠≠ 
	TokensIds
≠≠ '
.
≠≠' (
DTAMU
≠≠( -
,
≠≠- .
$str
≠≠/ H
)
≠≠H I
;
≠≠I J
token_meaning
ÆÆ 
.
ÆÆ 
Add
ÆÆ 
(
ÆÆ 
	TokensIds
ÆÆ '
.
ÆÆ' (
DTADI
ÆÆ( -
,
ÆÆ- .
$str
ÆÆ/ H
)
ÆÆH I
;
ÆÆI J
token_meaning
ØØ 
.
ØØ 
Add
ØØ 
(
ØØ 
	TokensIds
ØØ '
.
ØØ' (
DTFIN
ØØ( -
,
ØØ- .
$str
ØØ/ F
)
ØØF G
;
ØØG H
token_meaning
∞∞ 
.
∞∞ 
Add
∞∞ 
(
∞∞ 
	TokensIds
∞∞ '
.
∞∞' (
DTEFI
∞∞( -
,
∞∞- .
$str
∞∞/ I
)
∞∞I J
;
∞∞J K
token_meaning
±± 
.
±± 
Add
±± 
(
±± 
	TokensIds
±± '
.
±±' (
DTFFT
±±( -
,
±±- .
$str
±±/ U
)
±±U V
;
±±V W
token_meaning
≤≤ 
.
≤≤ 
Add
≤≤ 
(
≤≤ 
	TokensIds
≤≤ '
.
≤≤' (
DTEFT
≤≤( -
,
≤≤- .
$str
≤≤/ I
)
≤≤I J
;
≤≤J K
token_meaning
≥≥ 
.
≥≥ 
Add
≥≥ 
(
≥≥ 
	TokensIds
≥≥ '
.
≥≥' (
DTIN
≥≥( ,
,
≥≥, -
$str
≥≥. O
)
≥≥O P
;
≥≥P Q
token_meaning
¥¥ 
.
¥¥ 
Add
¥¥ 
(
¥¥ 
	TokensIds
¥¥ '
.
¥¥' (
DTTO
¥¥( ,
,
¥¥, -
$str
¥¥. V
)
¥¥V W
;
¥¥W X
token_meaning
µµ 
.
µµ 
Add
µµ 
(
µµ 
	TokensIds
µµ '
.
µµ' (
DTSTP
µµ( -
,
µµ- .
$str
µµ/ ]
)
µµ] ^
;
µµ^ _
token_meaning
∂∂ 
.
∂∂ 
Add
∂∂ 
(
∂∂ 
	TokensIds
∂∂ '
.
∂∂' (
DTCSH
∂∂( -
,
∂∂- .
$str
∂∂/ @
)
∂∂@ A
;
∂∂A B
token_meaning
∑∑ 
.
∑∑ 
Add
∑∑ 
(
∑∑ 
	TokensIds
∑∑ '
.
∑∑' (
DTON
∑∑( ,
,
∑∑, -
$str
∑∑. ;
)
∑∑; <
;
∑∑< =
token_meaning
∏∏ 
.
∏∏ 
Add
∏∏ 
(
∏∏ 
	TokensIds
∏∏ '
.
∏∏' (
DTWHN
∏∏( -
,
∏∏- .
$str
∏∏/ >
)
∏∏> ?
;
∏∏? @
token_meaning
ππ 
.
ππ 
Add
ππ 
(
ππ 
	TokensIds
ππ '
.
ππ' (
DTOPD
ππ( -
,
ππ- .
$str
ππ/ I
)
ππI J
;
ππJ K
token_meaning
∫∫ 
.
∫∫ 
Add
∫∫ 
(
∫∫ 
	TokensIds
∫∫ '
.
∫∫' (
DTUSG
∫∫( -
,
∫∫- .
$str
∫∫/ V
)
∫∫V W
;
∫∫W X
token_meaning
ªª 
.
ªª 
Add
ªª 
(
ªª 
	TokensIds
ªª '
.
ªª' (
DTPOPUP
ªª( /
,
ªª/ 0
$str
ªª1 C
)
ªªC D
;
ªªD E
token_meaning
ºº 
.
ºº 
Add
ºº 
(
ºº 
	TokensIds
ºº '
.
ºº' (
BLOCKING
ºº( 0
,
ºº0 1
$str
ºº2 E
)
ººE F
;
ººF G
token_meaning
ΩΩ 
.
ΩΩ 
Add
ΩΩ 
(
ΩΩ 
	TokensIds
ΩΩ '
.
ΩΩ' (
OUTPUTELEMENT
ΩΩ( 5
,
ΩΩ5 6
$str
ΩΩ7 F
)
ΩΩF G
;
ΩΩG H
token_meaning
ææ 
.
ææ 
Add
ææ 
(
ææ 
	TokensIds
ææ '
.
ææ' (
OPENCURLYBRACKET
ææ( 8
,
ææ8 9
$str
ææ: L
)
ææL M
;
ææM N
token_meaning
øø 
.
øø 
Add
øø 
(
øø 
	TokensIds
øø '
.
øø' (
CLOSECURLYBRACKET
øø( 9
,
øø9 :
$str
øø; N
)
øøN O
;
øøO P
token_meaning
¿¿ 
.
¿¿ 
Add
¿¿ 
(
¿¿ 
	TokensIds
¿¿ '
.
¿¿' (
PRINT
¿¿( -
,
¿¿- .
$str
¿¿/ 6
)
¿¿6 7
;
¿¿7 8
token_meaning
¡¡ 
.
¡¡ 
Add
¡¡ 
(
¡¡ 
	TokensIds
¡¡ '
.
¡¡' (
INSERT
¡¡( .
,
¡¡. /
$str
¡¡0 8
)
¡¡8 9
;
¡¡9 :
token_meaning
¬¬ 
.
¬¬ 
Add
¬¬ 
(
¬¬ 
	TokensIds
¬¬ '
.
¬¬' (
SUBGROUP
¬¬( 0
,
¬¬0 1
$str
¬¬2 <
)
¬¬< =
;
¬¬= >
token_meaning
√√ 
.
√√ 
Add
√√ 
(
√√ 
	TokensIds
√√ '
.
√√' (
ENDSUBGROUP
√√( 3
,
√√3 4
$str
√√5 B
)
√√B C
;
√√C D
token_meaning
ƒƒ 
.
ƒƒ 
Add
ƒƒ 
(
ƒƒ 
	TokensIds
ƒƒ '
.
ƒƒ' (
DTStub
ƒƒ( .
,
ƒƒ. /
$str
ƒƒ0 ?
)
ƒƒ? @
;
ƒƒ@ A
token_meaning
≈≈ 
.
≈≈ 
Add
≈≈ 
(
≈≈ 
	TokensIds
≈≈ '
.
≈≈' (
DTJavaScript
≈≈( 4
,
≈≈4 5
$str
≈≈6 v
)
≈≈v w
;
≈≈w x
token_meaning
∆∆ 
.
∆∆ 
Add
∆∆ 
(
∆∆ 
	TokensIds
∆∆ '
.
∆∆' (
	DTEndStub
∆∆( 1
,
∆∆1 2
$str
∆∆3 >
)
∆∆> ?
;
∆∆? @
token_meaning
«« 
.
«« 
Add
«« 
(
«« 
	TokensIds
«« '
.
««' (

DTCallStub
««( 2
,
««2 3
$str
««4 @
)
««@ A
;
««A B
token_meaning
»» 
.
»» 
Add
»» 
(
»» 
	TokensIds
»» '
.
»»' (
DTRuby
»»( .
,
»». /
$str
»»0 H
)
»»H I
;
»»I J
token_meaning
…… 
.
…… 
Add
…… 
(
…… 
	TokensIds
…… '
.
……' (
DTREDUNDANCY
……( 4
,
……4 5
$str
……6 f
)
……f g
;
……g h

IKBService
ÀÀ 
kbserv
ÀÀ 
=
ÀÀ 

UIServices
ÀÀ  *
.
ÀÀ* +
KB
ÀÀ+ -
;
ÀÀ- .
IOutputService
ÃÃ 
output
ÃÃ !
=
ÃÃ" #
CommonServices
ÃÃ$ 2
.
ÃÃ2 3
Output
ÃÃ3 9
;
ÃÃ9 :
string
ŒŒ 
title
ŒŒ 
=
ŒŒ 
$str
ŒŒ 9
;
ŒŒ9 :
output
œœ 
.
œœ 
StartSection
œœ 
(
œœ  
title
œœ  %
)
œœ% &
;
œœ& '
string
–– 

outputFile
–– 
=
–– 
	Functions
––  )
.
––) *
CreateOutputFile
––* :
(
––: ;
kbserv
––; A
,
––A B
title
––C H
)
––H I
;
––I J
KBDoctorXMLWriter
““ 
writer
““ $
=
““% &
new
““' *
KBDoctorXMLWriter
““+ <
(
““< =

outputFile
““= G
,
““G H
Encoding
““I Q
.
““Q R
UTF8
““R V
)
““V W
;
““W X
writer
”” 
.
”” 
	AddHeader
”” 
(
”” 
title
”” "
)
””" #
;
””# $!
SelectObjectOptions
’’  
selectObjectOption
’’  2
=
’’3 4
new
’’5 8!
SelectObjectOptions
’’9 L
(
’’L M
)
’’M N
;
’’N O 
selectObjectOption
÷÷ 
.
÷÷ 
MultipleSelection
÷÷ 0
=
÷÷1 2
true
÷÷3 7
;
÷÷7 8 
selectObjectOption
◊◊ 
.
◊◊ 
ObjectTypes
◊◊ *
.
◊◊* +
Add
◊◊+ .
(
◊◊. / 
KBObjectDescriptor
◊◊/ A
.
◊◊A B
Get
◊◊B E
<
◊◊E F
	Procedure
◊◊F O
>
◊◊O P
(
◊◊P Q
)
◊◊Q R
)
◊◊R S
;
◊◊S T
ILanguageService
ŸŸ 
	parserSrv
ŸŸ &
=
ŸŸ' (
Artech
ŸŸ) /
.
ŸŸ/ 0
Architecture
ŸŸ0 <
.
ŸŸ< =
Common
ŸŸ= C
.
ŸŸC D
Services
ŸŸD L
.
ŸŸL M
Services
ŸŸM U
.
ŸŸU V

GetService
ŸŸV `
(
ŸŸ` a
new
ŸŸa d
Guid
ŸŸe i
(
ŸŸi j
$strŸŸj ê
)ŸŸê ë
)ŸŸë í
asŸŸì ï 
ILanguageServiceŸŸñ ¶
;ŸŸ¶ ß
IParserEngine
⁄⁄ 
parser
⁄⁄  
=
⁄⁄! "
	parserSrv
⁄⁄# ,
.
⁄⁄, -
CreateEngine
⁄⁄- 9
(
⁄⁄9 :
)
⁄⁄: ;
;
⁄⁄; <

ParserInfo
€€ 

parserInfo
€€ !
;
€€! "
writer
‹‹ 
.
‹‹ 
AddTableHeader
‹‹ !
(
‹‹! "
new
‹‹" %
string
‹‹& ,
[
‹‹, -
]
‹‹- .
{
‹‹/ 0
$str
‹‹0 8
,
‹‹8 9
$str
‹‹: C
,
‹‹C D
$str
‹‹E L
,
‹‹L M
$str
‹‹N R
}
‹‹R S
)
‹‹S T
;
‹‹T U
foreach
ﬂﬂ 
(
ﬂﬂ 
KBObject
ﬂﬂ 
obj
ﬂﬂ !
in
ﬂﬂ" $

UIServices
ﬂﬂ% /
.
ﬂﬂ/ 0 
SelectObjectDialog
ﬂﬂ0 B
.
ﬂﬂB C
SelectObjects
ﬂﬂC P
(
ﬂﬂP Q 
selectObjectOption
ﬂﬂQ c
)
ﬂﬂc d
)
ﬂﬂd e
{
‡‡ 
writer
·· 
.
·· 
AddTableData
·· #
(
··# $
new
··$ '
string
··( .
[
··. /
]
··/ 0
{
··1 2
obj
··3 6
.
··6 7
Name
··7 ;
,
··; <
$str
··= ?
,
··? @
$str
··@ B
,
··B C
$str
··C E
}
··E F
)
··F G
;
··G H
Artech
‚‚ 
.
‚‚ 
Genexus
‚‚ 
.
‚‚ 
Common
‚‚ %
.
‚‚% &
Parts
‚‚& +
.
‚‚+ ,
ProcedurePart
‚‚, 9
source
‚‚: @
=
‚‚A B
obj
‚‚C F
.
‚‚F G
Parts
‚‚G L
.
‚‚L M
Get
‚‚M P
<
‚‚P Q
Artech
‚‚Q W
.
‚‚W X
Genexus
‚‚X _
.
‚‚_ `
Common
‚‚` f
.
‚‚f g
Parts
‚‚g l
.
‚‚l m
ProcedurePart
‚‚m z
>
‚‚z {
(
‚‚{ |
)
‚‚| }
;
‚‚} ~
if
„„ 
(
„„ 
source
„„ 
!=
„„ 
null
„„ "
)
„„" #
{
‰‰ 

parserInfo
ÂÂ 
=
ÂÂ  
new
ÂÂ! $

ParserInfo
ÂÂ% /
(
ÂÂ/ 0
source
ÂÂ0 6
)
ÂÂ6 7
;
ÂÂ7 8
foreach
ÊÊ 
(
ÊÊ 
	TokenData
ÊÊ &
token
ÊÊ' ,
in
ÊÊ- /
parser
ÊÊ0 6
.
ÊÊ6 7
	GetTokens
ÊÊ7 @
(
ÊÊ@ A
true
ÊÊA E
,
ÊÊE F

parserInfo
ÊÊG Q
,
ÊÊQ R
source
ÊÊS Y
.
ÊÊY Z
Source
ÊÊZ `
)
ÊÊ` a
)
ÊÊa b
{
ÁÁ 
string
ËË 
meaning
ËË &
=
ËË' (
token_meaning
ËË) 6
[
ËË6 7
(
ËË7 8
	TokensIds
ËË8 A
)
ËËA B
token
ËËB G
.
ËËG H
Token
ËËH M
]
ËËM N
as
ËËO Q
string
ËËR X
;
ËËX Y
if
ÈÈ 
(
ÈÈ 
token
ÈÈ !
.
ÈÈ! "
Token
ÈÈ" '
>=
ÈÈ( *
$num
ÈÈ+ .
)
ÈÈ. /
{
ÍÍ 
writer
ÎÎ "
.
ÎÎ" #
AddTableData
ÎÎ# /
(
ÎÎ/ 0
new
ÎÎ0 3
string
ÎÎ4 :
[
ÎÎ: ;
]
ÎÎ; <
{
ÎÎ= >
$str
ÎÎ? A
,
ÎÎA B
meaning
ÎÎC J
,
ÎÎJ K
$str
ÎÎL N
,
ÎÎN O
token
ÎÎP U
.
ÎÎU V
Token
ÎÎV [
.
ÎÎ[ \
ToString
ÎÎ\ d
(
ÎÎd e
)
ÎÎe f
}
ÎÎg h
)
ÎÎh i
;
ÎÎi j
}
ÏÏ 
else
ÌÌ 
{
ÓÓ 
}
 
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 
writer
ÙÙ 
.
ÙÙ 
	AddFooter
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
writer
ıı 
.
ıı 
Close
ıı 
(
ıı 
)
ıı 
;
ıı 
bool
ˆˆ 
success
ˆˆ 
=
ˆˆ 
true
ˆˆ 
;
ˆˆ  
output
˜˜ 
.
˜˜ 

EndSection
˜˜ 
(
˜˜ 
title
˜˜ #
,
˜˜# $
success
˜˜% ,
)
˜˜, -
;
˜˜- .
KBDoctorHelper
¯¯ 
.
¯¯ !
ShowKBDoctorResults
¯¯ .
(
¯¯. /

outputFile
¯¯/ 9
)
¯¯9 :
;
¯¯: ;
}
˘˘ 	
}
˚˚ 
}˛˛ ≤

=C:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\Package.cs
	namespace

 	
Concepto


 
.

 
Packages

 
.

 
KBDoctor

 $
{ 
[ 
Guid 
( 	
$str	 /
)/ 0
]0 1
public 	
class
 
Package 
: 
AbstractPackageUI +
{, -
public 
static 
Guid 
guid 
=  !
typeof" (
(( )
Package) 0
)0 1
.1 2
GUID2 6
;6 7
public 
override 
string 
Name !
{ 
get	 
{ 
return 
$str  
;  !
}" #
} 
public 
override 
void 

Initialize '
(' (
IGxServiceProvider( :
services; C
)C D
{ 
base	 
. 

Initialize 
( 
services !
)! "
;" #
AddCommandTarget 
( 
new  
CommandManager! /
(/ 0
)0 1
)1 2
;2 3
} 
} 
} ®
GC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\PromptDescription.cs
	namespace		 	
Concepto		
 
.		 
Packages		 
.		 
KBDoctor		 $
{

 
public 

partial 
class 
PromptDescription *
:+ ,
Form- 1
{ 
public 
PromptDescription  
(  !
string! '
message( /
)/ 0
{ 	
InitializeComponent 
(  
)  !
;! "
label1 
. 
Text 
= 
message !
;! "
} 	
public 
string 
Description !
{" #
get$ '
{( )
return* 0
textBox11 9
.9 :
Text: >
;> ?
}@ A
}B C
} 
} ≥
EC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Properties\AssemblyInfo.cs
[

 
assembly

 	
:

	 

AssemblyTitle

 
(

 
$str

 #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyDescription 
( 
$str d
)d e
]e f
[ 
assembly 	
:	 
!
AssemblyConfiguration  
(  !
$str! #
)# $
]$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str %
)% &
]& '
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str %
)% &
]& '
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 2
)2 3
]3 4
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str '
)' (
]( )
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 
: 
PackageAttribute 
( 
typeof $
($ %
Concepto% -
.- .
Packages. 6
.6 7
KBDoctor7 ?
.? @
Package@ G
)G H
,H I
IsCoreJ P
=Q R
falseS X
,X Y
IsUIPackageZ e
=f g
trueh l
)m n
]n o
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[)) 
assembly)) 	
:))	 

AssemblyVersion)) 
()) 
$str)) $
)))$ %
]))% &
[** 
assembly** 	
:**	 

AssemblyFileVersion** 
(** 
$str** (
)**( )
]**) *—ö

BC:\Models\nsanguinetti\KBDoctor\KBDoctorUI\Sources\TablesHelper.cs
	namespace 	
Concepto
 
. 
Packages 
. 
KBDoctor $
{ 
static 

class 
TablesHelper 
{ 
public 
static 
void 

ListTables %
(% &
)& '
{ 	

IKBService 
kbserv 
= 

UIServices  *
.* +
KB+ -
;- .
KBModel 
model 
= 

UIServices &
.& '
KB' )
.) *
CurrentModel* 6
;6 7
string 
title 
= 
$str .
;. /
string   

outputFile   
=   
	Functions    )
.  ) *
CreateOutputFile  * :
(  : ;
kbserv  ; A
,  A B
title  C H
)  H I
;  I J
IOutputService## 
output## !
=##" #
CommonServices##$ 2
.##2 3
Output##3 9
;##9 :
output$$ 
.$$ 
StartSection$$ 
($$  
title$$  %
)$$% &
;$$& '
KBDoctorXMLWriter'' 
writer'' $
=''% &
new''' *
KBDoctorXMLWriter''+ <
(''< =

outputFile''= G
,''G H
Encoding''I Q
.''Q R
UTF8''R V
)''V W
;''W X
writer(( 
.(( 
	AddHeader(( 
((( 
title(( "
)((" #
;((# $
writer)) 
.)) 
AddTableHeader)) !
())! "
new))" %
string))& ,
[)), -
]))- .
{))/ 0
$str** 
,** 
$str** %
,**% &
$str**& .
,**. /
$str**/ :
,**: ;
$str**< B
,**B C
$str**D O
,**O P
$str**Q a
,**a b
$str**c p
,**p q
$str**r 
,
**Ä Å
$str
**Ç è
}++ 
)++ 
;++ 
string-- 
description-- 
;-- 
foreach.. 
(.. 
Table.. 
t.. 
in.. 
Table..  %
...% &
GetAll..& ,
(.., -
kbserv..- 3
...3 4
CurrentModel..4 @
)..@ A
)..A B
{// 
description00 
=00 
$str00 ~
+	00 Ä
t
00Å Ç
.
00Ç É
Description
00É é
+
00è ê
$str
00ë ñ
+
00ó ò
t
00ô ö
.
00ö õ
Description
00õ ¶
+
00ß ®
$str
00© Ø
;
00Ø ∞
string11 
objNameLink11 "
=11# $
	Functions11% .
.11. /

linkObject11/ 9
(119 :
t11: ;
)11; <
;11< =
output33 
.33 
AddLine33 
(33 
$str33 /
+330 1
t332 3
.333 4
Name334 8
)338 9
;339 :
int55 
	countAttr55 
=55 
$num55  !
;55! "
int66 
countKeyAttr66  
=66! "
$num66# $
;66$ %
int77 
widthKey77 
=77 
$num77  
;77  !
int88 
width88 
=88 
$num88 
;88 
int99 
widthVariable99 !
=99" #
$num99$ %
;99% &
int:: 

widthFixed:: 
=::  
$num::! "
;::" #
foreach;; 
(;; 
TableAttribute;; '
attr;;( ,
in;;- /
t;;0 1
.;;1 2
TableStructure;;2 @
.;;@ A

Attributes;;A K
);;K L
{<< 
	countAttr== 
+===  
$num==! "
;==" #
if>> 
(>> 
attr>> 
.>> 
IsKey>> "
)>>" #
{?? 
countKeyAttr@@ $
+=@@% '
$num@@( )
;@@) *
widthKeyAA  
+=AA! #
attrAA$ (
.AA( )
	AttributeAA) 2
.AA2 3
LengthAA3 9
;AA9 :
}BB 
widthCC 
+=CC 
attrCC !
.CC! "
	AttributeCC" +
.CC+ ,
LengthCC, 2
;CC2 3
ifDD 
(DD 
(DD 
attrDD 
.DD 
	AttributeDD '
.DD' (
TypeDD( ,
==DD- /
ArtechDD0 6
.DD6 7
GenexusDD7 >
.DD> ?
CommonDD? E
.DDE F
eDBTypeDDF M
.DDM N
LONGVARCHARDDN Y
)DDY Z
||DD[ ]
(DD^ _
attrDD_ c
.DDc d
	AttributeDDd m
.DDm n
TypeDDn r
==DDs u
ArtechDDv |
.DD| }
Genexus	DD} Ñ
.
DDÑ Ö
Common
DDÖ ã
.
DDã å
eDBType
DDå ì
.
DDì î
VARCHAR
DDî õ
)
DDõ ú
)
DDú ù
{EE 
widthVariableFF %
+=FF& (
attrFF) -
.FF- .
	AttributeFF. 7
.FF7 8
LengthFF8 >
;FF> ?
}GG 
elseHH 
{II 

widthFixedJJ "
+=JJ# %
attrJJ& *
.JJ* +
	AttributeJJ+ 4
.JJ4 5
LengthJJ5 ;
;JJ; <
}KK 
}LL 
stringNN 

CacheLevelNN !
=NN" #
tNN$ %
.NN% &"
GetPropertyValueStringNN& <
(NN< =
$strNN= J
)NNJ K
;NNK L
stringOO 
isPublicOO 
=OO  !
tOO" #
.OO# $
IsPublicOO$ ,
?OO- .
$strOO/ 4
:OO5 6
$strOO7 9
;OO9 :
writerPP 
.PP 
AddTableDataPP #
(PP# $
newPP$ '
stringPP( .
[PP. /
]PP/ 0
{PP1 2
objNameLinkQQ 
,QQ  
tQQ! "
.QQ" #
DescriptionQQ# .
,QQ. /
TableModuleQQ0 ;
(QQ; <
modelQQ< A
,QQA B
tQQB C
)QQC D
.QQD E
NameQQE I
,QQI J
isPublicQQK S
,QQS T
countKeyAttrQQU a
.QQa b
ToStringQQb j
(QQj k
)QQk l
,QQl m
widthKeyQQn v
.QQv w
ToStringQQw 
(	QQ Ä
)
QQÄ Å
,
QQÅ Ç
widthVariable
QQÉ ê
.
QQê ë
ToString
QQë ô
(
QQô ö
)
QQö õ
,
QQõ ú

widthFixed
QQù ß
.
QQß ®
ToString
QQ® ∞
(
QQ∞ ±
)
QQ± ≤
,
QQ≤ ≥
width
QQ¥ π
.
QQπ ∫
ToString
QQ∫ ¬
(
QQ¬ √
)
QQ√ ƒ
,
QQ≈ ∆

CacheLevel
QQ« —
}RR 
)RR 
;RR 
}TT 
writerVV 
.VV 
	AddFooterVV 
(VV 
)VV 
;VV 
writerWW 
.WW 
CloseWW 
(WW 
)WW 
;WW 
KBDoctorHelperYY 
.YY 
ShowKBDoctorResultsYY .
(YY. /

outputFileYY/ 9
)YY9 :
;YY: ;
boolZZ 
successZZ 
=ZZ 
trueZZ 
;ZZ  
output[[ 
.[[ 

EndSection[[ 
([[ 
title[[ #
,[[# $
success[[% ,
)[[, -
;[[- .
}]] 	
internal__ 
static__ 
Table__ 
TableOfAttribute__ .
(__. /
Artech__/ 5
.__5 6
Genexus__6 =
.__= >
Common__> D
.__D E
Objects__E L
.__L M
	Attribute__M V
a__W X
)__X Y
{`` 	
foreachaa 
(aa 
EntityReferenceaa #
referaa$ )
inaa* ,
aaa- .
.aa. /
GetReferencesToaa/ >
(aa> ?
aaa? @
.aa@ A
ModelaaA F
.aaF G
IdaaG I
)aaI J
)aaJ K
{bb 
KBObjectcc 
tcc 
=cc 
KBObjectcc %
.cc% &
Getcc& )
(cc) *
acc* +
.cc+ ,
Modelcc, 1
,cc1 2
refercc3 8
.cc8 9
Fromcc9 =
)cc= >
;cc> ?
ifdd 
(dd 
tdd 
!=dd 
nulldd 
)dd 
{ee 
ifff 
(ff 
tff 
isff 
Tableff "
)ff" #
returngg 
(gg  
Tablegg  %
)gg% &
tgg& '
;gg' (
}hh 
}ii 
returnjj 
nulljj 
;jj 
}kk 	
publicmm 
staticmm 
voidmm "
ListWithoutDescriptionmm 1
(mm1 2
)mm2 3
{nn 	

IKBServiceoo 
kbservoo 
=oo 

UIServicesoo  *
.oo* +
KBoo+ -
;oo- .
stringpp 
titlepp 
=pp 
$strpp J
;ppJ K
stringqq 

outputFileqq 
=qq 
	Functionsqq  )
.qq) *
CreateOutputFileqq* :
(qq: ;
kbservqq; A
,qqA B
titleqqC H
)qqH I
;qqI J
IOutputServicett 
outputtt !
=tt" #
CommonServicestt$ 2
.tt2 3
Outputtt3 9
;tt9 :
outputuu 
.uu 
StartSectionuu 
(uu  
titleuu  %
)uu% &
;uu& '
KBDoctorXMLWriterxx 
writerxx $
=xx% &
newxx' *
KBDoctorXMLWriterxx+ <
(xx< =

outputFilexx= G
,xxG H
EncodingxxI Q
.xxQ R
UTF8xxR V
)xxV W
;xxW X
writeryy 
.yy 
	AddHeaderyy 
(yy 
titleyy "
)yy" #
;yy# $
writerzz 
.zz 
AddTableHeaderzz !
(zz! "
newzz" %
stringzz& ,
[zz, -
]zz- .
{zz/ 0
$str{{ 
,{{ 
$str{{ %
}|| 
)|| 
;|| 
string~~ 
description~~ 
;~~ 
foreach 
( 
Table 
t 
in 
Table  %
.% &
GetAll& ,
(, -
kbserv- 3
.3 4
CurrentModel4 @
)@ A
)A B
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
t
ÅÅ 
.
ÅÅ 
Name
ÅÅ 
==
ÅÅ 
t
ÅÅ 
.
ÅÅ  
Description
ÅÅ  +
.
ÅÅ+ ,
Replace
ÅÅ, 3
(
ÅÅ3 4
$str
ÅÅ4 7
,
ÅÅ7 8
$str
ÅÅ9 ;
)
ÅÅ; <
)
ÅÅ< =
{
ÇÇ 
description
ÉÉ 
=
ÉÉ  !
$strÉÉ" Ç
+ÉÉÉ Ñ
tÉÉÖ Ü
.ÉÉÜ á
NameÉÉá ã
+ÉÉå ç
$strÉÉé ì
+ÉÉî ï
tÉÉñ ó
.ÉÉó ò
DescriptionÉÉò £
+ÉÉ§ •
$strÉÉ¶ ¨
;ÉÉ¨ ≠
writer
ÑÑ 
.
ÑÑ 
AddTableData
ÑÑ '
(
ÑÑ' (
new
ÑÑ( +
string
ÑÑ, 2
[
ÑÑ2 3
]
ÑÑ3 4
{
ÑÑ5 6
t
ÖÖ 
.
ÖÖ 
Name
ÖÖ 
,
ÖÖ 
description
ÖÖ  +
}
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 
}
àà 
writer
ää 
.
ää 
	AddFooter
ää 
(
ää 
)
ää 
;
ää 
writer
ãã 
.
ãã 
Close
ãã 
(
ãã 
)
ãã 
;
ãã 
KBDoctorHelper
éé 
.
éé !
ShowKBDoctorResults
éé .
(
éé. /

outputFile
éé/ 9
)
éé9 :
;
éé: ;
bool
èè 
success
èè 
=
èè 
true
èè 
;
èè  
output
êê 
.
êê 

EndSection
êê 
(
êê 
title
êê #
,
êê# $
success
êê% ,
)
êê, -
;
êê- .
}
íí 	
public
îî 
static
îî 
void
îî )
ListGroupWithoutDescription
îî 6
(
îî6 7
)
îî7 8
{
ïï 	

IKBService
ññ 
kbserv
ññ 
=
ññ 

UIServices
ññ  *
.
ññ* +
KB
ññ+ -
;
ññ- .
string
óó 
title
óó 
=
óó 
$str
óó R
;
óóR S
string
òò 

outputFile
òò 
=
òò 
	Functions
òò  )
.
òò) *
CreateOutputFile
òò* :
(
òò: ;
kbserv
òò; A
,
òòA B
title
òòC H
)
òòH I
;
òòI J
IOutputService
õõ 
output
õõ !
=
õõ" #
CommonServices
õõ$ 2
.
õõ2 3
Output
õõ3 9
;
õõ9 :
output
úú 
.
úú 
StartSection
úú 
(
úú  
title
úú  %
)
úú% &
;
úú& '
KBDoctorXMLWriter
üü 
writer
üü $
=
üü% &
new
üü' *
KBDoctorXMLWriter
üü+ <
(
üü< =

outputFile
üü= G
,
üüG H
Encoding
üüI Q
.
üüQ R
UTF8
üüR V
)
üüV W
;
üüW X
writer
†† 
.
†† 
	AddHeader
†† 
(
†† 
title
†† "
)
††" #
;
††# $
writer
°° 
.
°° 
AddTableHeader
°° !
(
°°! "
new
°°" %
string
°°& ,
[
°°, -
]
°°- .
{
°°/ 0
$str
¢¢ 
,
¢¢ 
$str
¢¢ %
}
££ 
)
££ 
;
££ 
foreach
¶¶ 
(
¶¶ 
Group
¶¶ 
g
¶¶ 
in
¶¶ 
Group
¶¶  %
.
¶¶% &
GetAll
¶¶& ,
(
¶¶, -
kbserv
¶¶- 3
.
¶¶3 4
CurrentModel
¶¶4 @
)
¶¶@ A
)
¶¶A B
{
ßß 
if
®® 
(
®® 
g
®® 
.
®® 
Name
®® 
==
®® 
g
®® 
.
®®  
Description
®®  +
.
®®+ ,
Replace
®®, 3
(
®®3 4
$str
®®4 7
,
®®7 8
$str
®®9 ;
)
®®; <
||
®®= ?
(
®®@ A
g
®®A B
.
®®B C
Name
®®C G
==
®®H J
$str
®®K M
)
®®M N
)
®®N O
{
©© 
string
™™ 
grpLink
™™ "
=
™™# $
	Functions
™™% .
.
™™. /

linkObject
™™/ 9
(
™™9 :
g
™™: ;
)
™™; <
;
™™< =
writer
¨¨ 
.
¨¨ 
AddTableData
¨¨ '
(
¨¨' (
new
¨¨( +
string
¨¨, 2
[
¨¨2 3
]
¨¨3 4
{
¨¨5 6
grpLink
≠≠ 
,
≠≠  
g
≠≠! "
.
≠≠" #
Description
≠≠# .
}
ÆÆ 
)
ÆÆ 
;
ÆÆ 
}
ØØ 
}
∞∞ 
writer
≤≤ 
.
≤≤ 
	AddFooter
≤≤ 
(
≤≤ 
)
≤≤ 
;
≤≤ 
writer
≥≥ 
.
≥≥ 
Close
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥ 
KBDoctorHelper
µµ 
.
µµ !
ShowKBDoctorResults
µµ .
(
µµ. /

outputFile
µµ/ 9
)
µµ9 :
;
µµ: ;
bool
∂∂ 
success
∂∂ 
=
∂∂ 
true
∂∂ 
;
∂∂  
output
∑∑ 
.
∑∑ 

EndSection
∑∑ 
(
∑∑ 
title
∑∑ #
,
∑∑# $
success
∑∑% ,
)
∑∑, -
;
∑∑- .
}
ππ 	
public
ªª 
static
ªª 
void
ªª &
AssignDescriptionToTable
ªª 3
(
ªª3 4
object
ªª4 :
[
ªª: ;
]
ªª; <

parameters
ªª= G
)
ªªG H
{
ºº 	
foreach
ΩΩ 
(
ΩΩ 
object
ΩΩ 
o
ΩΩ 
in
ΩΩ  

parameters
ΩΩ! +
)
ΩΩ+ ,
{
ææ 

Dictionary
øø 
<
øø 
string
øø !
,
øø! "
string
øø# )
>
øø) *
dic
øø+ .
=
øø/ 0
(
øø1 2

Dictionary
øø2 <
<
øø< =
string
øø= C
,
øøC D
string
øøE K
>
øøK L
)
øøL M
o
øøM N
;
øøN O
int
¿¿ 
cant
¿¿ 
=
¿¿ 
$num
¿¿ 
;
¿¿ 
string
¬¬ 
tblName
¬¬ 
=
¬¬  
$str
¬¬! #
;
¬¬# $
string
√√ 
mensaje
√√ 
;
√√ 
PromptDescription
ƒƒ !
pd
ƒƒ" $
;
ƒƒ$ %
DialogResult
≈≈ 
dr
≈≈ 
;
≈≈  
foreach
«« 
(
«« 
string
«« 
s
««  !
in
««" $
dic
««% (
.
««( )
Values
««) /
)
««/ 0
{
»» 
if
…… 
(
…… 
cant
…… 
==
…… 
$num
……  !
)
……! "
{
   
tblName
ÀÀ 
=
ÀÀ  !
s
ÀÀ" #
;
ÀÀ# $
mensaje
ÃÃ 
=
ÃÃ  !
$str
ÃÃ" A
+
ÃÃB C
tblName
ÃÃD K
;
ÃÃK L
pd
ÕÕ 
=
ÕÕ 
new
ÕÕ  
PromptDescription
ÕÕ! 2
(
ÕÕ2 3
mensaje
ÕÕ3 :
)
ÕÕ: ;
;
ÕÕ; <
dr
ŒŒ 
=
ŒŒ 
pd
ŒŒ 
.
ŒŒ  

ShowDialog
ŒŒ  *
(
ŒŒ* +
)
ŒŒ+ ,
;
ŒŒ, -
if
–– 
(
–– 
dr
–– 
==
–– !
DialogResult
––" .
.
––. /
OK
––/ 1
)
––1 2
{
—— 
Table
““ !
t
““" #
=
““$ %
Table
““& +
.
““+ ,
Get
““, /
(
““/ 0

UIServices
““0 :
.
““: ;
KB
““; =
.
““= >
CurrentModel
““> J
,
““J K
tblName
““L S
)
““S T
;
““T U
t
”” 
.
”” 
Description
”” )
=
””* +
pd
””, .
.
””. /
Description
””/ :
;
””: ;
t
‘‘ 
.
‘‘ 
Save
‘‘ "
(
‘‘" #
)
‘‘# $
;
‘‘$ %
}
’’ 
}
÷÷ 
cant
ÿÿ 
++
ÿÿ 
;
ÿÿ 
}
ŸŸ 
}
⁄⁄ 
}
€€ 	
public
›› 
static
›› 
void
›› 
ListTablesWidth
›› *
(
››* +
)
››+ ,
{
ﬁﬁ 	

IKBService
ﬂﬂ 
kbserv
ﬂﬂ 
=
ﬂﬂ 

UIServices
ﬂﬂ  *
.
ﬂﬂ* +
KB
ﬂﬂ+ -
;
ﬂﬂ- .
string
‡‡ 
title
‡‡ 
=
‡‡ 
$str
‡‡ 4
;
‡‡4 5
string
·· 

outputFile
·· 
=
·· 
	Functions
··  )
.
··) *
CreateOutputFile
··* :
(
··: ;
kbserv
··; A
,
··A B
title
··C H
)
··H I
;
··I J
IOutputService
‰‰ 
output
‰‰ !
=
‰‰" #
CommonServices
‰‰$ 2
.
‰‰2 3
Output
‰‰3 9
;
‰‰9 :
output
ÂÂ 
.
ÂÂ 
StartSection
ÂÂ 
(
ÂÂ  
title
ÂÂ  %
)
ÂÂ% &
;
ÂÂ& '
KBDoctorXMLWriter
ËË 
writer
ËË $
=
ËË% &
new
ËË' *
KBDoctorXMLWriter
ËË+ <
(
ËË< =

outputFile
ËË= G
,
ËËG H
Encoding
ËËI Q
.
ËËQ R
UTF8
ËËR V
)
ËËV W
;
ËËW X
writer
ÈÈ 
.
ÈÈ 
	AddHeader
ÈÈ 
(
ÈÈ 
title
ÈÈ "
)
ÈÈ" #
;
ÈÈ# $
writer
ÍÍ 
.
ÍÍ 
AddTableHeader
ÍÍ !
(
ÍÍ! "
new
ÍÍ" %
string
ÍÍ& ,
[
ÍÍ, -
]
ÍÍ- .
{
ÍÍ/ 0
$str
ÎÎ 
,
ÎÎ 
$str
ÎÎ %
,
ÎÎ% &
$str
ÎÎ' -
,
ÎÎ- .
$str
ÎÎ/ :
,
ÎÎ: ;
$str
ÎÎ< L
,
ÎÎL M
$str
ÎÎN [
,
ÎÎ[ \
$str
ÎÎ] j
,
ÎÎk l
$str
ÎÎm z
}
ÏÏ 
)
ÏÏ 
;
ÏÏ 
string
ÓÓ 
description
ÓÓ 
;
ÓÓ 
foreach
ÔÔ 
(
ÔÔ 
Table
ÔÔ 
t
ÔÔ 
in
ÔÔ 
Table
ÔÔ  %
.
ÔÔ% &
GetAll
ÔÔ& ,
(
ÔÔ, -
kbserv
ÔÔ- 3
.
ÔÔ3 4
CurrentModel
ÔÔ4 @
)
ÔÔ@ A
)
ÔÔA B
{
 
description
ÒÒ 
=
ÒÒ 
$str
ÒÒ ~
+ÒÒ Ä
tÒÒÅ Ç
.ÒÒÇ É
DescriptionÒÒÉ é
+ÒÒè ê
$strÒÒë ñ
+ÒÒó ò
tÒÒô ö
.ÒÒö õ
DescriptionÒÒõ ¶
+ÒÒß ®
$strÒÒ© Ø
;ÒÒØ ∞
string
ÚÚ 
objNameLink
ÚÚ "
=
ÚÚ# $
	Functions
ÚÚ% .
.
ÚÚ. /

linkObject
ÚÚ/ 9
(
ÚÚ9 :
t
ÚÚ: ;
)
ÚÚ; <
;
ÚÚ< =
output
ÙÙ 
.
ÙÙ 
AddLine
ÙÙ 
(
ÙÙ 
$str
ÙÙ /
+
ÙÙ0 1
t
ÙÙ2 3
.
ÙÙ3 4
Name
ÙÙ4 8
)
ÙÙ8 9
;
ÙÙ9 :
int
ˆˆ 
	countAttr
ˆˆ 
=
ˆˆ 
$num
ˆˆ  !
;
ˆˆ! "
int
˜˜ 
countKeyAttr
˜˜  
=
˜˜! "
$num
˜˜# $
;
˜˜$ %
int
¯¯ 
widthKey
¯¯ 
=
¯¯ 
$num
¯¯  
;
¯¯  !
int
˘˘ 
width
˘˘ 
=
˘˘ 
$num
˘˘ 
;
˘˘ 
int
˙˙ 
widthVariable
˙˙ !
=
˙˙" #
$num
˙˙$ %
;
˙˙% &
int
˚˚ 

widthFixed
˚˚ 
=
˚˚  
$num
˚˚! "
;
˚˚" #
foreach
¸¸ 
(
¸¸ 
TableAttribute
¸¸ '
attr
¸¸( ,
in
¸¸- /
t
¸¸0 1
.
¸¸1 2
TableStructure
¸¸2 @
.
¸¸@ A

Attributes
¸¸A K
)
¸¸K L
{
˝˝ 
	countAttr
˛˛ 
+=
˛˛  
$num
˛˛! "
;
˛˛" #
if
ˇˇ 
(
ˇˇ 
attr
ˇˇ 
.
ˇˇ 
IsKey
ˇˇ "
)
ˇˇ" #
{
ÄÄ 
countKeyAttr
ÅÅ $
+=
ÅÅ% '
$num
ÅÅ( )
;
ÅÅ) *
widthKey
ÇÇ  
+=
ÇÇ! #
attr
ÇÇ$ (
.
ÇÇ( )
	Attribute
ÇÇ) 2
.
ÇÇ2 3
Length
ÇÇ3 9
;
ÇÇ9 :
}
ÉÉ 
width
ÑÑ 
+=
ÑÑ 
attr
ÑÑ !
.
ÑÑ! "
	Attribute
ÑÑ" +
.
ÑÑ+ ,
Length
ÑÑ, 2
;
ÑÑ2 3
if
ÖÖ 
(
ÖÖ 
(
ÖÖ 
attr
ÖÖ 
.
ÖÖ 
	Attribute
ÖÖ '
.
ÖÖ' (
Type
ÖÖ( ,
==
ÖÖ- /
Artech
ÖÖ0 6
.
ÖÖ6 7
Genexus
ÖÖ7 >
.
ÖÖ> ?
Common
ÖÖ? E
.
ÖÖE F
eDBType
ÖÖF M
.
ÖÖM N
LONGVARCHAR
ÖÖN Y
)
ÖÖY Z
||
ÖÖ[ ]
(
ÖÖ^ _
attr
ÖÖ_ c
.
ÖÖc d
	Attribute
ÖÖd m
.
ÖÖm n
Type
ÖÖn r
==
ÖÖs u
Artech
ÖÖv |
.
ÖÖ| }
GenexusÖÖ} Ñ
.ÖÖÑ Ö
CommonÖÖÖ ã
.ÖÖã å
eDBTypeÖÖå ì
.ÖÖì î
VARCHARÖÖî õ
)ÖÖõ ú
)ÖÖú ù
{
ÜÜ 
widthVariable
áá %
+=
áá& (
attr
áá) -
.
áá- .
	Attribute
áá. 7
.
áá7 8
Length
áá8 >
;
áá> ?
}
àà 
else
ââ 
{
ââ 

widthFixed
ää "
+=
ää# %
attr
ää& *
.
ää* +
	Attribute
ää+ 4
.
ää4 5
Length
ää5 ;
;
ää; <
}
ãã 
}
åå 
string
éé 

CacheLevel
éé !
=
éé" #
t
éé$ %
.
éé% &$
GetPropertyValueString
éé& <
(
éé< =
$str
éé= J
)
ééJ K
;
ééK L
writer
èè 
.
èè 
AddTableData
èè #
(
èè# $
new
èè$ '
string
èè( .
[
èè. /
]
èè/ 0
{
èè1 2
objNameLink
êê 
,
êê  
t
êê! "
.
êê" #
Description
êê# .
,
êê. /
countKeyAttr
êê0 <
.
êê< =
ToString
êê= E
(
êêE F
)
êêF G
,
êêG H
widthKey
êêI Q
.
êêQ R
ToString
êêR Z
(
êêZ [
)
êê[ \
,
êê\ ]
widthVariable
êê^ k
.
êêk l
ToString
êêl t
(
êêt u
)
êêu v
,
êêv w

widthFixedêêx Ç
.êêÇ É
ToStringêêÉ ã
(êêã å
)êêå ç
,êêç é
widthêêè î
.êêî ï
ToStringêêï ù
(êêù û
)êêû ü
,êê† °

CacheLevelêê¢ ¨
}
ëë 
)
ëë 
;
ëë 
}
ìì 
writer
ïï 
.
ïï 
	AddFooter
ïï 
(
ïï 
)
ïï 
;
ïï 
writer
ññ 
.
ññ 
Close
ññ 
(
ññ 
)
ññ 
;
ññ 
KBDoctorHelper
òò 
.
òò !
ShowKBDoctorResults
òò .
(
òò. /

outputFile
òò/ 9
)
òò9 :
;
òò: ;
bool
ôô 
success
ôô 
=
ôô 
true
ôô 
;
ôô  
output
öö 
.
öö 

EndSection
öö 
(
öö 
title
öö #
,
öö# $
success
öö% ,
)
öö, -
;
öö- .
}
úú 	
public
†† 
static
†† 
void
†† "
ListTableTransaction
†† /
(
††/ 0
)
††0 1
{
°° 	

IKBService
¢¢ 
kbserv
¢¢ 
=
¢¢ 

UIServices
¢¢  *
.
¢¢* +
KB
¢¢+ -
;
¢¢- .
string
££ 
title
££ 
=
££ 
$str
££ C
;
££C D
string
§§ 

outputFile
§§ 
=
§§ 
	Functions
§§  )
.
§§) *
CreateOutputFile
§§* :
(
§§: ;
kbserv
§§; A
,
§§A B
title
§§C H
)
§§H I
;
§§I J
StringCollection
ßß 
strCol
ßß #
=
ßß$ %
new
ßß& )
StringCollection
ßß* :
(
ßß: ;
)
ßß; <
;
ßß< =
IOutputService
®® 
output
®® !
=
®®" #
CommonServices
®®$ 2
.
®®2 3
Output
®®3 9
;
®®9 :
output
©© 
.
©© 
StartSection
©© 
(
©©  
title
©©  %
)
©©% &
;
©©& '
KBDoctorXMLWriter
´´ 
writer
´´ $
=
´´% &
new
´´' *
KBDoctorXMLWriter
´´+ <
(
´´< =

outputFile
´´= G
,
´´G H
Encoding
´´I Q
.
´´Q R
UTF8
´´R V
)
´´V W
;
´´W X
writer
¨¨ 
.
¨¨ 
	AddHeader
¨¨ 
(
¨¨ 
title
¨¨ "
)
¨¨" #
;
¨¨# $
writer
≠≠ 
.
≠≠ 
AddTableHeader
≠≠ !
(
≠≠! "
new
≠≠" %
string
≠≠& ,
[
≠≠, -
]
≠≠- .
{
≠≠/ 0
$str
ÆÆ 
,
ÆÆ 
$str
ÆÆ A
,
ÆÆA B
$str
ÆÆC k
,
ÆÆk l
$str
ÆÆl s
}
ØØ 
)
ØØ 
;
ØØ 
foreach
≤≤ 
(
≤≤ 
Table
≤≤ 
tbl
≤≤ 
in
≤≤ !
Table
≤≤" '
.
≤≤' (
GetAll
≤≤( .
(
≤≤. /
kbserv
≤≤/ 5
.
≤≤5 6
CurrentModel
≤≤6 B
)
≤≤B C
)
≤≤C D
{
≥≥ 
string
¥¥ 
tblNamelink
¥¥ "
=
¥¥# $
	Functions
¥¥% .
.
¥¥. /

linkObject
¥¥/ 9
(
¥¥9 :
(
¥¥: ;
KBObject
¥¥; C
)
¥¥C D
tbl
¥¥D G
)
¥¥G H
;
¥¥H I
string
∂∂ 
trnGen
∂∂ 
=
∂∂ 
$str
∂∂  "
;
∂∂" #
string
∑∑ 
trnNoGen
∑∑ 
=
∑∑  !
$str
∑∑" $
;
∑∑$ %
foreach
∏∏ 
(
∏∏ 
Transaction
∏∏ $
trn
∏∏% (
in
∏∏) +
tbl
∏∏, /
.
∏∏/ 0$
AssociatedTransactions
∏∏0 F
)
∏∏F G
{
ππ 
if
∫∫ 
(
∫∫ 
trn
∫∫ 
.
∫∫ 
GetPropertyValue
∫∫ ,
<
∫∫, -
bool
∫∫- 1
>
∫∫1 2
(
∫∫2 3

Properties
∫∫3 =
.
∫∫= >
TRN
∫∫> A
.
∫∫A B
GenerateObject
∫∫B P
)
∫∫P Q
)
∫∫Q R
trnGen
∫∫S Y
+=
∫∫Z \
	Functions
∫∫] f
.
∫∫f g

linkObject
∫∫g q
(
∫∫q r
trn
∫∫r u
)
∫∫u v
+
∫∫w x
$str
∫∫y |
;
∫∫| }
else
ªª 
trnNoGen
ªª !
+=
ªª" $
	Functions
ªª% .
.
ªª. /

linkObject
ªª/ 9
(
ªª9 :
trn
ªª: =
)
ªª= >
+
ªª? @
$str
ªªA D
;
ªªD E
}
ºº 
writer
ææ 
.
ææ 
AddTableData
ææ #
(
ææ# $
new
ææ$ '
string
ææ( .
[
ææ. /
]
ææ/ 0
{
ææ1 2
tblNamelink
¿¿ 
,
¿¿  
trnNoGen
¿¿! )
,
¿¿) *
trnGen
¿¿+ 1
,
¿¿1 2
(
¿¿2 3
trnGen
¿¿3 9
!=
¿¿9 ;
$str
¿¿; =
&&
¿¿> @
trnNoGen
¿¿A I
!=
¿¿I K
$str
¿¿K M
)
¿¿M N
?
¿¿N O
$str
¿¿O R
:
¿¿R S
$str
¿¿S U
}
¡¡ 
)
¡¡ 
;
¡¡ 
}
¬¬ 
writer
ƒƒ 
.
ƒƒ 
	AddFooter
ƒƒ 
(
ƒƒ 
)
ƒƒ 
;
ƒƒ 
writer
≈≈ 
.
≈≈ 
Close
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
KBDoctorHelper
«« 
.
«« !
ShowKBDoctorResults
«« .
(
««. /

outputFile
««/ 9
)
««9 :
;
««: ;
bool
»» 
success
»» 
=
»» 
true
»» 
;
»»  
output
…… 
.
…… 

EndSection
…… 
(
…… 
title
…… #
,
……# $
success
……% ,
)
……, -
;
……- .
}
ÀÀ 	
public
ÕÕ 
static
ÕÕ 
void
ÕÕ C
5GenterateSimpleTransactionFromNotGeneratedTransaction
ÕÕ P
(
ÕÕP Q
)
ÕÕQ R
{
ŒŒ 	

IKBService
œœ 
kbserv
œœ 
=
œœ 

UIServices
œœ  *
.
œœ* +
KB
œœ+ -
;
œœ- .
string
–– 
title
–– 
=
–– 
$str
–– D
;
––D E
StringCollection
““ 
strCol
““ #
=
““$ %
new
““& )
StringCollection
““* :
(
““: ;
)
““; <
;
““< =
IOutputService
”” 
output
”” !
=
””" #
CommonServices
””$ 2
.
””2 3
Output
””3 9
;
””9 :
output
‘‘ 
.
‘‘ 
StartSection
‘‘ 
(
‘‘  
title
‘‘  %
)
‘‘% &
;
‘‘& '
foreach
÷÷ 
(
÷÷ 
Transaction
÷÷  
trn
÷÷! $
in
÷÷% '
Transaction
÷÷( 3
.
÷÷3 4
GetAll
÷÷4 :
(
÷÷: ;
kbserv
÷÷; A
.
÷÷A B
CurrentModel
÷÷B N
)
÷÷N O
)
÷÷O P
{
◊◊ 
if
ÿÿ 
(
ÿÿ 
!
ÿÿ 
ObjectsHelper
ÿÿ "
.
ÿÿ" #
isGenerated
ÿÿ# .
(
ÿÿ. /
trn
ÿÿ/ 2
)
ÿÿ2 3
&&
ÿÿ4 6
!
ÿÿ7 8
trn
ÿÿ8 ;
.
ÿÿ; <
Name
ÿÿ< @
.
ÿÿ@ A

StartsWith
ÿÿA K
(
ÿÿK L
$str
ÿÿL W
)
ÿÿW X
)
ÿÿX Y
{
ŸŸ 
output
⁄⁄ 
.
⁄⁄ 
AddLine
⁄⁄ "
(
⁄⁄" #
$str
⁄⁄# %
)
⁄⁄% &
;
⁄⁄& '
output
€€ 
.
€€ 
AddLine
€€ "
(
€€" #
$str
€€# <
+
€€= >
trn
€€? B
.
€€B C
Name
€€C G
)
€€G H
;
€€H I
foreach
›› 
(
›› 
TransactionLevel
›› -
lvl
››. 1
in
››2 4
trn
››5 8
.
››8 9
	Structure
››9 B
.
››B C
	GetLevels
››C L
(
››L M
)
››M N
)
››N O
{
ﬁﬁ 
Table
ﬂﬂ 
tbl
ﬂﬂ !
=
ﬂﬂ" #
lvl
ﬂﬂ$ '
.
ﬂﬂ' (
AssociatedTable
ﬂﬂ( 7
;
ﬂﬂ7 8"
GenerateTrnFromTable
‡‡ ,
(
‡‡, -
kbserv
‡‡- 3
,
‡‡3 4
tbl
‡‡5 8
,
‡‡8 9
trn
‡‡: =
.
‡‡= >
Module
‡‡> D
)
‡‡D E
;
‡‡E F
}
·· 
try
‚‚ 
{
„„ 
trn
‰‰ 
.
‰‰ 
Delete
‰‰ "
(
‰‰" #
)
‰‰# $
;
‰‰$ %
output
ÂÂ 
.
ÂÂ 
AddLine
ÂÂ &
(
ÂÂ& '
$str
ÂÂ' >
+
ÂÂ? @
trn
ÂÂA D
.
ÂÂD E
Name
ÂÂE I
)
ÂÂI J
;
ÂÂJ K
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ $
e
ÁÁ% &
)
ÁÁ& '
{
ÁÁ( )
output
ÁÁ* 0
.
ÁÁ0 1
AddErrorLine
ÁÁ1 =
(
ÁÁ= >
$str
ÁÁ> `
+
ÁÁa b
trn
ÁÁc f
.
ÁÁf g
Name
ÁÁg k
+
ÁÁl m
e
ÁÁn o
.
ÁÁo p
Message
ÁÁp w
)
ÁÁw x
;
ÁÁx y
}
ÁÁz {
;
ÁÁ{ |
}
ËË 
}
ÍÍ 
bool
ÌÌ 
success
ÌÌ 
=
ÌÌ 
true
ÌÌ 
;
ÌÌ  
output
ÓÓ 
.
ÓÓ 

EndSection
ÓÓ 
(
ÓÓ 
title
ÓÓ #
,
ÓÓ# $
success
ÓÓ% ,
)
ÓÓ, -
;
ÓÓ- .
}
 	
public
ÛÛ 
static
ÛÛ 
void
ÛÛ 
ListTableUpdate
ÛÛ *
(
ÛÛ* +
)
ÛÛ+ ,
{
ÙÙ 	

IKBService
¯¯ 
kbserv
¯¯ 
=
¯¯ 

UIServices
¯¯  *
.
¯¯* +
KB
¯¯+ -
;
¯¯- .
string
˘˘ 
title
˘˘ 
=
˘˘ 
$str
˘˘ I
;
˘˘I J
string
˙˙ 

outputFile
˙˙ 
=
˙˙ 
	Functions
˙˙  )
.
˙˙) *
CreateOutputFile
˙˙* :
(
˙˙: ;
kbserv
˙˙; A
,
˙˙A B
title
˙˙C H
)
˙˙H I
;
˙˙I J
StringCollection
¸¸ 
strCol
¸¸ #
=
¸¸$ %
new
¸¸& )
StringCollection
¸¸* :
(
¸¸: ;
)
¸¸; <
;
¸¸< =
IOutputService
˝˝ 
output
˝˝ !
=
˝˝" #
CommonServices
˝˝$ 2
.
˝˝2 3
Output
˝˝3 9
;
˝˝9 :
output
˛˛ 
.
˛˛ 
StartSection
˛˛ 
(
˛˛  
title
˛˛  %
)
˛˛% &
;
˛˛& '
KBDoctorXMLWriter
ÅÅ 
writer
ÅÅ $
=
ÅÅ% &
new
ÅÅ' *
KBDoctorXMLWriter
ÅÅ+ <
(
ÅÅ< =

outputFile
ÅÅ= G
,
ÅÅG H
Encoding
ÅÅI Q
.
ÅÅQ R
UTF8
ÅÅR V
)
ÅÅV W
;
ÅÅW X
writer
ÇÇ 
.
ÇÇ 
	AddHeader
ÇÇ 
(
ÇÇ 
title
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
writer
ÉÉ 
.
ÉÉ 
AddTableHeader
ÉÉ !
(
ÉÉ! "
new
ÉÉ" %
string
ÉÉ& ,
[
ÉÉ, -
]
ÉÉ- .
{
ÉÉ/ 0
$str
ÑÑ 
,
ÑÑ 
$str
ÑÑ !
,
ÑÑ! "
$str
ÑÑ# +
,
ÑÑ+ ,
$str
ÑÑ- 5
,
ÑÑ5 6
$str
ÑÑ7 =
,
ÑÑ= >
$str
ÑÑ? B
}
ÖÖ 
)
ÖÖ 
;
ÖÖ 
KBModel
áá 
model
áá 
=
áá 

UIServices
áá &
.
áá& '
KB
áá' )
.
áá) *
CurrentModel
áá* 6
;
áá6 7
foreach
ãã 
(
ãã 
Table
ãã 
tbl
ãã 
in
ãã !
Table
ãã" '
.
ãã' (
GetAll
ãã( .
(
ãã. /
model
ãã/ 4
)
ãã4 5
)
ãã5 6
{
åå 
string
éé 
tblNamelink
éé "
=
éé# $
	Functions
éé% .
.
éé. /

linkObject
éé/ 9
(
éé9 :
(
éé: ;
KBObject
éé; C
)
ééC D
tbl
ééD G
)
ééG H
;
ééH I
string
êê 
objUpdaters
êê "
,
êê" #
objDeleters
êê$ /
,
êê/ 0
objInserters
êê1 =
,
êê= >

objReaders
êê? I
,
êêI J
str
êêK N
;
êêN O#
ObjectsReferenceTable
ëë %
(
ëë% &
model
ëë& +
,
ëë+ ,
tbl
ëë- 0
,
ëë0 1
out
ëë2 5
objUpdaters
ëë6 A
,
ëëA B
out
ëëC F
objDeleters
ëëG R
,
ëëR S
out
ëëT W
objInserters
ëëX d
,
ëëd e
out
ëëf i

objReaders
ëëj t
,
ëët u
out
ëëv y
str
ëëz }
)
ëë} ~
;
ëë~ 
writer
îî 
.
îî 
AddTableData
îî #
(
îî# $
new
îî$ '
string
îî( .
[
îî. /
]
îî/ 0
{
îî1 2
tblNamelink
ïï 
,
ïï  
objUpdaters
ïï! ,
,
ïï, -
objDeleters
ïï. 9
,
ïï9 :
objInserters
ïï; G
,
ïïG H

objReaders
ïïI S
,
ïïS T
str
ïïU X
}
ññ 
)
ññ 
;
ññ 
}
òò 
writer
õõ 
.
õõ 
	AddFooter
õõ 
(
õõ 
)
õõ 
;
õõ 
writer
úú 
.
úú 
Close
úú 
(
úú 
)
úú 
;
úú 
KBDoctorHelper
ûû 
.
ûû !
ShowKBDoctorResults
ûû .
(
ûû. /

outputFile
ûû/ 9
)
ûû9 :
;
ûû: ;
bool
üü 
success
üü 
=
üü 
true
üü 
;
üü  
output
†† 
.
†† 

EndSection
†† 
(
†† 
title
†† #
,
††# $
success
††% ,
)
††, -
;
††- .
}
¢¢ 	
public
§§ 
static
§§ 
void
§§ #
ObjectsReferenceTable
§§ 0
(
§§0 1
KBModel
§§1 8
model
§§9 >
,
§§> ?
Table
§§@ E
tbl
§§F I
,
§§I J
out
§§K N
string
§§O U
objUpdaterspar
§§V d
,
§§d e
out
§§f i
string
§§j p
objDeleterspar
§§q 
,§§ Ä
out§§Å Ñ
string§§Ö ã
objInserterspar§§å õ
,§§õ ú
out§§ù †
string§§° ß
objReaderspar§§® µ
,§§µ ∂
out§§∑ ∫
string§§ª ¡
str§§¬ ≈
)§§≈ ∆
{
•• 	
string
¶¶ 
objUpdaters
¶¶ 
=
¶¶  
$str
¶¶! #
;
¶¶# $
string
ßß 
objDeleters
ßß 
=
ßß  
$str
ßß! #
;
ßß# $
string
®® 
objInserters
®® 
=
®®  !
$str
®®" $
;
®®$ %
string
©© 

objReaders
©© 
=
©© 
$str
©©  "
;
©©" #
str
™™ 
=
™™ 
$str
™™ 
;
™™ 
IList
´´ 
<
´´ 
KBObject
´´ 
>
´´ 
updaters
´´ $
=
´´% &
(
´´' (
from
´´( ,
r
´´- .
in
´´/ 1
model
´´2 7
.
´´7 8
GetReferencesTo
´´8 G
(
´´G H
tbl
´´H K
.
´´K L
Key
´´L O
,
´´O P
LinkType
´´Q Y
.
´´Y Z

UsedObject
´´Z d
)
´´d e
where
¨¨( -
r
¨¨. /
.
¨¨/ 0
ReferenceType
¨¨0 =
==
¨¨> @
ReferenceType
¨¨A N
.
¨¨N O
WeakExternal
¨¨O [
where
≠≠( -
ReferenceTypeInfo
≠≠. ?
.
≠≠? @
HasUpdateAccess
≠≠@ O
(
≠≠O P
r
≠≠P Q
.
≠≠Q R
LinkTypeInfo
≠≠R ^
)
≠≠^ _
select
ÆÆ( .
model
ÆÆ/ 4
.
ÆÆ4 5
Objects
ÆÆ5 <
.
ÆÆ< =
Get
ÆÆ= @
(
ÆÆ@ A
r
ÆÆA B
.
ÆÆB C
From
ÆÆC G
)
ÆÆG H
)
ÆÆH I
.
ÆÆI J
ToList
ÆÆJ P
(
ÆÆP Q
)
ÆÆQ R
;
ÆÆR S
updaters
ØØ 
.
ØØ 
ToList
ØØ 
(
ØØ 
)
ØØ 
.
ØØ 
ForEach
ØØ %
(
ØØ% &
v
ØØ& '
=>
ØØ( *
objUpdaters
ØØ+ 6
+=
ØØ7 9
$str
ØØ: =
+
ØØ> ?
	Functions
ØØ@ I
.
ØØI J

linkObject
ØØJ T
(
ØØT U
v
ØØU V
)
ØØV W
)
ØØW X
;
ØØX Y
IList
±± 
<
±± 
KBObject
±± 
>
±± 
	inserters
±± %
=
±±& '
(
±±( )
from
±±) -
r
±±. /
in
±±0 2
model
±±3 8
.
±±8 9
GetReferencesTo
±±9 H
(
±±H I
tbl
±±I L
.
±±L M
Key
±±M P
,
±±P Q
LinkType
±±R Z
.
±±Z [

UsedObject
±±[ e
)
±±e f
where
≤≤) .
r
≤≤/ 0
.
≤≤0 1
ReferenceType
≤≤1 >
==
≤≤? A
ReferenceType
≤≤B O
.
≤≤O P
WeakExternal
≤≤P \
where
≥≥) .
ReferenceTypeInfo
≥≥/ @
.
≥≥@ A
HasInsertAccess
≥≥A P
(
≥≥P Q
r
≥≥Q R
.
≥≥R S
LinkTypeInfo
≥≥S _
)
≥≥_ `
select
¥¥) /
model
¥¥0 5
.
¥¥5 6
Objects
¥¥6 =
.
¥¥= >
Get
¥¥> A
(
¥¥A B
r
¥¥B C
.
¥¥C D
From
¥¥D H
)
¥¥H I
)
¥¥I J
.
¥¥J K
ToList
¥¥K Q
(
¥¥Q R
)
¥¥R S
;
¥¥S T
	inserters
µµ 
.
µµ 
ToList
µµ 
(
µµ 
)
µµ 
.
µµ 
ForEach
µµ &
(
µµ& '
v
µµ' (
=>
µµ) +
objInserters
µµ, 8
+=
µµ9 ;
$str
µµ< ?
+
µµ@ A
	Functions
µµB K
.
µµK L

linkObject
µµL V
(
µµV W
v
µµW X
)
µµX Y
)
µµY Z
;
µµZ [
IList
∑∑ 
<
∑∑ 
KBObject
∑∑ 
>
∑∑ 
deleters
∑∑ $
=
∑∑% &
(
∑∑' (
from
∑∑( ,
r
∑∑- .
in
∑∑/ 1
model
∑∑2 7
.
∑∑7 8
GetReferencesTo
∑∑8 G
(
∑∑G H
tbl
∑∑H K
.
∑∑K L
Key
∑∑L O
,
∑∑O P
LinkType
∑∑Q Y
.
∑∑Y Z

UsedObject
∑∑Z d
)
∑∑d e
where
∏∏( -
r
∏∏. /
.
∏∏/ 0
ReferenceType
∏∏0 =
==
∏∏> @
ReferenceType
∏∏A N
.
∏∏N O
WeakExternal
∏∏O [
where
ππ( -
ReferenceTypeInfo
ππ. ?
.
ππ? @
HasDeleteAccess
ππ@ O
(
ππO P
r
ππP Q
.
ππQ R
LinkTypeInfo
ππR ^
)
ππ^ _
select
∫∫( .
model
∫∫/ 4
.
∫∫4 5
Objects
∫∫5 <
.
∫∫< =
Get
∫∫= @
(
∫∫@ A
r
∫∫A B
.
∫∫B C
From
∫∫C G
)
∫∫G H
)
∫∫H I
.
∫∫I J
ToList
∫∫J P
(
∫∫P Q
)
∫∫Q R
;
∫∫R S
deleters
ªª 
.
ªª 
ToList
ªª 
(
ªª 
)
ªª 
.
ªª 
ForEach
ªª %
(
ªª% &
v
ªª& '
=>
ªª( *
objDeleters
ªª+ 6
+=
ªª7 9
$str
ªª: =
+
ªª> ?
	Functions
ªª@ I
.
ªªI J

linkObject
ªªJ T
(
ªªT U
v
ªªU V
)
ªªV W
)
ªªW X
;
ªªX Y
IList
ΩΩ 
<
ΩΩ 
KBObject
ΩΩ 
>
ΩΩ 
readers
ΩΩ #
=
ΩΩ$ %
(
ΩΩ& '
from
ΩΩ' +
r
ΩΩ, -
in
ΩΩ. 0
model
ΩΩ1 6
.
ΩΩ6 7
GetReferencesTo
ΩΩ7 F
(
ΩΩF G
tbl
ΩΩG J
.
ΩΩJ K
Key
ΩΩK N
,
ΩΩN O
LinkType
ΩΩP X
.
ΩΩX Y

UsedObject
ΩΩY c
)
ΩΩc d
where
ææ' ,
r
ææ- .
.
ææ. /
ReferenceType
ææ/ <
==
ææ= ?
ReferenceType
ææ@ M
.
ææM N
WeakExternal
ææN Z
where
øø' ,
ReferenceTypeInfo
øø- >
.
øø> ?
HasReadAccess
øø? L
(
øøL M
r
øøM N
.
øøN O
LinkTypeInfo
øøO [
)
øø[ \
select
¿¿' -
model
¿¿. 3
.
¿¿3 4
Objects
¿¿4 ;
.
¿¿; <
Get
¿¿< ?
(
¿¿? @
r
¿¿@ A
.
¿¿A B
From
¿¿B F
)
¿¿F G
)
¿¿G H
.
¿¿H I
ToList
¿¿I O
(
¿¿O P
)
¿¿P Q
;
¿¿Q R
readers
¡¡ 
.
¡¡ 
ToList
¡¡ 
(
¡¡ 
)
¡¡ 
.
¡¡ 
ForEach
¡¡ $
(
¡¡$ %
v
¡¡% &
=>
¡¡' )

objReaders
¡¡* 4
+=
¡¡5 7
$str
¡¡8 ;
+
¡¡< =
	Functions
¡¡> G
.
¡¡G H

linkObject
¡¡H R
(
¡¡R S
v
¡¡S T
)
¡¡T U
)
¡¡U V
;
¡¡V W
if
√√ 
(
√√ 
objUpdaters
√√ 
!=
√√ 
$str
√√ !
||
√√" $
objDeleters
√√% 0
!=
√√1 3
$str
√√4 6
||
√√7 9
objInserters
√√: F
!=
√√G I
$str
√√J L
)
√√L M
str
√√N Q
=
√√R S
$str
√√T V
;
√√V W
else
ƒƒ 
str
ƒƒ 
=
ƒƒ 
$str
ƒƒ 
;
ƒƒ 
objUpdaterspar
≈≈ 
=
≈≈ 
objUpdaters
≈≈ (
;
≈≈( )
objInserterspar
∆∆ 
=
∆∆ 
objInserters
∆∆ *
;
∆∆* +
objReaderspar
«« 
=
«« 

objReaders
«« &
;
««& '
objDeleterspar
»» 
=
»» 
objDeleters
»» (
;
»»( )
}
…… 	
public
ÕÕ 
static
ÕÕ 
IList
ÕÕ 
<
ÕÕ 
KBObject
ÕÕ $
>
ÕÕ$ %-
ObjectsUpdateTableOutsideModule
ÕÕ& E
(
ÕÕE F
KBModel
ÕÕF M
model
ÕÕN S
,
ÕÕS T
Table
ÕÕU Z
tbl
ÕÕ[ ^
)
ÕÕ^ _
{
ŒŒ 	
Module
œœ 
mdlTable
œœ 
=
œœ 
TableModule
œœ )
(
œœ) *
model
œœ* /
,
œœ/ 0
tbl
œœ1 4
)
œœ4 5
;
œœ5 6
IList
—— 
<
—— 
KBObject
—— 
>
—— 
updaters
—— $
=
——% &
(
——' (
from
——( ,
r
——- .
in
——/ 1
model
——2 7
.
——7 8
GetReferencesTo
——8 G
(
——G H
tbl
——H K
.
——K L
Key
——L O
,
——O P
LinkType
——Q Y
.
——Y Z

UsedObject
——Z d
)
——d e
where
““( -
r
““. /
.
““/ 0
ReferenceType
““0 =
==
““> @
ReferenceType
““A N
.
““N O
WeakExternal
““O [
where
””( -
ReferenceTypeInfo
””. ?
.
””? @
HasUpdateAccess
””@ O
(
””O P
r
””P Q
.
””Q R
LinkTypeInfo
””R ^
)
””^ _
||
””` b
ReferenceTypeInfo
””c t
.
””t u
HasInsertAccess””u Ñ
(””Ñ Ö
r””Ö Ü
.””Ü á
LinkTypeInfo””á ì
)””ì î
||””ï ó!
ReferenceTypeInfo””ò ©
.””© ™
HasDeleteAccess””™ π
(””π ∫
r””∫ ª
.””ª º
LinkTypeInfo””º »
)””» …
where
‘‘( -
model
‘‘. 3
.
‘‘3 4
Objects
‘‘4 ;
.
‘‘; <
Get
‘‘< ?
(
‘‘? @
r
‘‘@ A
.
‘‘A B
From
‘‘B F
)
‘‘F G
.
‘‘G H
Module
‘‘H N
!=
‘‘O Q
mdlTable
‘‘R Z
select
’’( .
model
’’/ 4
.
’’4 5
Objects
’’5 <
.
’’< =
Get
’’= @
(
’’@ A
r
’’A B
.
’’B C
From
’’C G
)
’’G H
)
’’H I
.
’’I J
ToList
’’J P
(
’’P Q
)
’’Q R
;
’’R S
return
÷÷ 
updaters
÷÷ 
;
÷÷ 
}
ÿÿ 	
public
⁄⁄ 
static
⁄⁄ 
IList
⁄⁄ 
<
⁄⁄ 
KBObject
⁄⁄ $
>
⁄⁄$ %+
ObjectsReadTableOutsideModule
⁄⁄& C
(
⁄⁄C D
Table
⁄⁄D I
tbl
⁄⁄J M
)
⁄⁄M N
{
€€ 	
KBModel
‹‹ 
model
‹‹ 
=
‹‹ 
tbl
‹‹ 
.
‹‹  
Model
‹‹  %
;
‹‹% &
Module
›› 
mdlTable
›› 
=
›› 
TableModule
›› )
(
››) *
model
››* /
,
››/ 0
tbl
››1 4
)
››4 5
;
››5 6
IList
ﬂﬂ 
<
ﬂﬂ 
KBObject
ﬂﬂ 
>
ﬂﬂ 
readers
ﬂﬂ #
=
ﬂﬂ$ %
(
ﬂﬂ& '
from
ﬂﬂ' +
r
ﬂﬂ, -
in
ﬂﬂ. 0
model
ﬂﬂ1 6
.
ﬂﬂ6 7
GetReferencesTo
ﬂﬂ7 F
(
ﬂﬂF G
tbl
ﬂﬂG J
.
ﬂﬂJ K
Key
ﬂﬂK N
,
ﬂﬂN O
LinkType
ﬂﬂP X
.
ﬂﬂX Y

UsedObject
ﬂﬂY c
)
ﬂﬂc d
where
‡‡( -
r
‡‡. /
.
‡‡/ 0
ReferenceType
‡‡0 =
==
‡‡> @
ReferenceType
‡‡A N
.
‡‡N O
WeakExternal
‡‡O [
where
‚‚( -
model
‚‚. 3
.
‚‚3 4
Objects
‚‚4 ;
.
‚‚; <
Get
‚‚< ?
(
‚‚? @
r
‚‚@ A
.
‚‚A B
From
‚‚B F
)
‚‚F G
.
‚‚G H
Module
‚‚H N
!=
‚‚O Q
mdlTable
‚‚R Z
select
„„( .
model
„„/ 4
.
„„4 5
Objects
„„5 <
.
„„< =
Get
„„= @
(
„„@ A
r
„„A B
.
„„B C
From
„„C G
)
„„G H
)
„„H I
.
„„I J
ToList
„„J P
(
„„P Q
)
„„Q R
;
„„R S
return
‰‰ 
readers
‰‰ 
;
‰‰ 
}
ÊÊ 	
public
ÁÁ 
static
ÁÁ 
void
ÁÁ  
ListTableInsertNew
ÁÁ -
(
ÁÁ- .
)
ÁÁ. /
{
ËË 	

IKBService
ÈÈ 
kbserv
ÈÈ 
=
ÈÈ 

UIServices
ÈÈ  *
.
ÈÈ* +
KB
ÈÈ+ -
;
ÈÈ- .
string
ÍÍ 
title
ÍÍ 
=
ÍÍ 
$str
ÍÍ Q
;
ÍÍQ R
string
ÎÎ 

outputFile
ÎÎ 
=
ÎÎ 
	Functions
ÎÎ  )
.
ÎÎ) *
CreateOutputFile
ÎÎ* :
(
ÎÎ: ;
kbserv
ÎÎ; A
,
ÎÎA B
title
ÎÎC H
)
ÎÎH I
;
ÎÎI J
StringCollection
ÔÔ 
strCol
ÔÔ #
=
ÔÔ$ %
new
ÔÔ& )
StringCollection
ÔÔ* :
(
ÔÔ: ;
)
ÔÔ; <
;
ÔÔ< =
IOutputService
 
output
 !
=
" #
CommonServices
$ 2
.
2 3
Output
3 9
;
9 :
output
ÒÒ 
.
ÒÒ 
StartSection
ÒÒ 
(
ÒÒ  
title
ÒÒ  %
)
ÒÒ% &
;
ÒÒ& '
KBDoctorXMLWriter
ÛÛ 
writer
ÛÛ $
=
ÛÛ% &
new
ÛÛ' *
KBDoctorXMLWriter
ÛÛ+ <
(
ÛÛ< =

outputFile
ÛÛ= G
,
ÛÛG H
Encoding
ÛÛI Q
.
ÛÛQ R
UTF8
ÛÛR V
)
ÛÛV W
;
ÛÛW X
writer
ÙÙ 
.
ÙÙ 
	AddHeader
ÙÙ 
(
ÙÙ 
title
ÙÙ "
)
ÙÙ" #
;
ÙÙ# $
writer
ıı 
.
ıı 
AddTableHeader
ıı !
(
ıı! "
new
ıı" %
string
ıı& ,
[
ıı, -
]
ıı- .
{
ıı/ 0
$str
ˆˆ 
,
ˆˆ 
$str
ˆˆ !
,
ˆˆ! "
$str
ˆˆ# 7
}
˜˜ 
)
˜˜ 
;
˜˜ 
KBModel
˘˘ 
model
˘˘ 
=
˘˘ 

UIServices
˘˘ &
.
˘˘& '
KB
˘˘' )
.
˘˘) *
CurrentModel
˘˘* 6
;
˘˘6 7
foreach
˝˝ 
(
˝˝ 
Table
˝˝ 
tbl
˝˝ 
in
˝˝ !
Table
˝˝" '
.
˝˝' (
GetAll
˝˝( .
(
˝˝. /
model
˝˝/ 4
)
˝˝4 5
)
˝˝5 6
{
˛˛ 
string
ÄÄ 
objInserters
ÄÄ #
=
ÄÄ$ %
$str
ÄÄ& (
;
ÄÄ( )
string
ÅÅ 
str
ÅÅ 
=
ÅÅ 
$str
ÅÅ 
;
ÅÅ  
string
ÇÇ 
tblNamelink
ÇÇ "
=
ÇÇ# $
	Functions
ÇÇ% .
.
ÇÇ. /

linkObject
ÇÇ/ 9
(
ÇÇ9 :
(
ÇÇ: ;
KBObject
ÇÇ; C
)
ÇÇC D
tbl
ÇÇD G
)
ÇÇG H
;
ÇÇH I 
KBObjectCollection
ÑÑ "
attTable
ÑÑ# +
=
ÑÑ, -
new
ÑÑ. 1 
KBObjectCollection
ÑÑ2 D
(
ÑÑD E
)
ÑÑE F
;
ÑÑF G
foreach
ÜÜ 
(
ÜÜ 
Artech
ÜÜ 
.
ÜÜ  
Genexus
ÜÜ  '
.
ÜÜ' (
Common
ÜÜ( .
.
ÜÜ. /
Objects
ÜÜ/ 6
.
ÜÜ6 7
	Attribute
ÜÜ7 @
att
ÜÜA D
in
ÜÜE G
tbl
ÜÜH K
.
ÜÜK L
GetAttributes
ÜÜL Y
(
ÜÜY Z
)
ÜÜZ [
)
ÜÜ[ \
{
áá 
Formula
àà 
formula
àà #
=
àà$ %
att
àà& )
.
àà) *
Formula
àà* 1
;
àà1 2
if
ââ 
(
ââ 
formula
ââ 
==
ââ  "
null
ââ# '
)
ââ' (
{
ää 
if
ãã 
(
ãã 
!
ãã 
	Functions
ãã &
.
ãã& '
AttIsSubtype
ãã' 3
(
ãã3 4
att
ãã4 7
)
ãã7 8
)
ãã8 9
attTable
ãã: B
.
ããB C
Add
ããC F
(
ããF G
att
ããG J
)
ããJ K
;
ããK L
}
åå 
}
çç 
IList
èè 
<
èè 
KBObject
èè 
>
èè 
	inserters
èè  )
=
èè* +
(
èè, -
from
èè- 1
r
èè2 3
in
èè4 6
model
èè7 <
.
èè< =
GetReferencesTo
èè= L
(
èèL M
tbl
èèM P
.
èèP Q
Key
èèQ T
,
èèT U
LinkType
èèV ^
.
èè^ _

UsedObject
èè_ i
)
èèi j
where
êê- 2
r
êê3 4
.
êê4 5
ReferenceType
êê5 B
==
êêC E
ReferenceType
êêF S
.
êêS T
WeakExternal
êêT `
where
ëë- 2
ReferenceTypeInfo
ëë3 D
.
ëëD E
HasInsertAccess
ëëE T
(
ëëT U
r
ëëU V
.
ëëV W
LinkTypeInfo
ëëW c
)
ëëc d
select
íí- 3
model
íí4 9
.
íí9 :
Objects
íí: A
.
ííA B
Get
ííB E
(
ííE F
r
ííF G
.
ííG H
From
ííH L
)
ííL M
)
ííM N
.
ííN O
ToList
ííO U
(
ííU V
)
ííV W
;
ííW X
foreach
îî 
(
îî 
KBObject
îî !
prc
îî" %
in
îî& (
	inserters
îî) 2
)
îî2 3
{
ïï 
if
ññ 
(
ññ 
prc
ññ 
is
ññ 
	Procedure
ññ (
)
ññ( )
{
óó 
objInserters
òò $
+=
òò% '
$str
òò( +
+
òò, -
	Functions
òò. 7
.
òò7 8

linkObject
òò8 B
(
òòB C
prc
òòC F
)
òòF G
;
òòG H
foreach
ôô 
(
ôô  !
EntityReference
ôô! 0
	reference
ôô1 :
in
ôô; =
prc
ôô> A
.
ôôA B
GetReferences
ôôB O
(
ôôO P
)
ôôP Q
)
ôôQ R
{
öö 
KBObject
õõ $
objRef
õõ% +
=
õõ, -
KBObject
õõ. 6
.
õõ6 7
Get
õõ7 :
(
õõ: ;
prc
õõ; >
.
õõ> ?
Model
õõ? D
,
õõD E
	reference
õõF O
.
õõO P
To
õõP R
)
õõR S
;
õõS T
if
úú 
(
úú  
(
úú  !
objRef
úú! '
!=
úú( *
null
úú+ /
)
úú/ 0
&&
úú1 3
(
úú4 5
objRef
úú5 ;
is
úú< >
Artech
úú? E
.
úúE F
Genexus
úúF M
.
úúM N
Common
úúN T
.
úúT U
Objects
úúU \
.
úú\ ]
	Attribute
úú] f
)
úúf g
)
úúg h
{
ùù 
attTable
ûû  (
.
ûû( )
Remove
ûû) /
(
ûû/ 0
objRef
ûû0 6
)
ûû6 7
;
ûû7 8
}
üü 
}
†† 
}
¢¢ 
}
££ 
if
•• 
(
•• 
objInserters
••  
!=
••! #
$str
••$ &
)
••& '
{
¶¶ 
attTable
ßß 
.
ßß 
ToList
ßß #
(
ßß# $
)
ßß$ %
.
ßß% &
ForEach
ßß& -
(
ßß- .
v
ßß. /
=>
ßß0 2
str
ßß3 6
+=
ßß7 9
$str
ßß: =
+
ßß> ?
	Functions
ßß@ I
.
ßßI J

linkObject
ßßJ T
(
ßßT U
v
ßßU V
)
ßßV W
)
ßßW X
;
ßßX Y
writer
®® 
.
®® 
AddTableData
®® '
(
®®' (
new
®®( +
string
®®, 2
[
®®2 3
]
®®3 4
{
®®5 6
tblNamelink
©© #
,
©©# $
objInserters
©©% 1
,
©©1 2
str
©©3 6
}
™™ 
)
™™ 
;
™™ 
}
´´ 
;
´´ 
}
≠≠ 
writer
∞∞ 
.
∞∞ 
	AddFooter
∞∞ 
(
∞∞ 
)
∞∞ 
;
∞∞ 
writer
±± 
.
±± 
Close
±± 
(
±± 
)
±± 
;
±± 
KBDoctorHelper
≥≥ 
.
≥≥ !
ShowKBDoctorResults
≥≥ .
(
≥≥. /

outputFile
≥≥/ 9
)
≥≥9 :
;
≥≥: ;
bool
¥¥ 
success
¥¥ 
=
¥¥ 
true
¥¥ 
;
¥¥  
output
µµ 
.
µµ 

EndSection
µµ 
(
µµ 
title
µµ #
,
µµ# $
success
µµ% ,
)
µµ, -
;
µµ- .
}
∑∑ 	
internal
ππ 
static
ππ 
void
ππ #
GenerateTrnFromTables
ππ 2
(
ππ2 3
)
ππ3 4
{
∫∫ 	

IKBService
ºº 
kbserv
ºº 
=
ºº 

UIServices
ºº  *
.
ºº* +
KB
ºº+ -
;
ºº- .!
SelectObjectOptions
øø  
selectObjectOption
øø  2
=
øø3 4
new
øø5 8!
SelectObjectOptions
øø9 L
(
øøL M
)
øøM N
;
øøN O 
selectObjectOption
¿¿ 
.
¿¿ 
MultipleSelection
¿¿ 0
=
¿¿1 2
true
¿¿3 7
;
¿¿7 8
IOutputService
¡¡ 
output
¡¡ !
=
¡¡" #
CommonServices
¡¡$ 2
.
¡¡2 3
Output
¡¡3 9
;
¡¡9 :
output
¬¬ 
.
¬¬ 
StartSection
¬¬ 
(
¬¬  
$str
¬¬  B
)
¬¬B C
;
¬¬C D 
selectObjectOption
ƒƒ 
.
ƒƒ 
ObjectTypes
ƒƒ *
.
ƒƒ* +
Add
ƒƒ+ .
(
ƒƒ. / 
KBObjectDescriptor
ƒƒ/ A
.
ƒƒA B
Get
ƒƒB E
<
ƒƒE F
Table
ƒƒF K
>
ƒƒK L
(
ƒƒL M
)
ƒƒM N
)
ƒƒN O
;
ƒƒO P
foreach
≈≈ 
(
≈≈ 
KBObject
≈≈ 
obj
≈≈ !
in
≈≈" $

UIServices
≈≈% /
.
≈≈/ 0 
SelectObjectDialog
≈≈0 B
.
≈≈B C
SelectObjects
≈≈C P
(
≈≈P Q 
selectObjectOption
≈≈Q c
)
≈≈c d
)
≈≈d e
{
∆∆ 
Module
«« 
m
«« 
=
«« 
TableModule
«« &
(
««& '
kbserv
««' -
.
««- .
CurrentModel
««. :
,
««: ;
(
««< =
Table
««= B
)
««B C
obj
««C F
)
««F G
;
««G H"
GenerateTrnFromTable
»» $
(
»»$ %
kbserv
»»% +
,
»»+ ,
(
»»- .
Table
»». 3
)
»»3 4
obj
»»4 7
,
»»7 8
m
»»9 :
)
»»: ;
;
»»; <
}
…… 
output
   
.
   

EndSection
   
(
   
$str
   @
,
  @ A
true
  B F
)
  F G
;
  G H
}
ÀÀ 	
internal
ÕÕ 
static
ÕÕ 
void
ÕÕ $
GenerateTrnFromTables2
ÕÕ 3
(
ÕÕ3 4
)
ÕÕ4 5
{
ŒŒ 	

IKBService
–– 
kbserv
–– 
=
–– 

UIServices
––  *
.
––* +
KB
––+ -
;
––- .!
SelectObjectOptions
””  
selectObjectOption
””  2
=
””3 4
new
””5 8!
SelectObjectOptions
””9 L
(
””L M
)
””M N
;
””N O 
selectObjectOption
‘‘ 
.
‘‘ 
MultipleSelection
‘‘ 0
=
‘‘1 2
true
‘‘3 7
;
‘‘7 8
IOutputService
’’ 
output
’’ !
=
’’" #
CommonServices
’’$ 2
.
’’2 3
Output
’’3 9
;
’’9 :
output
÷÷ 
.
÷÷ 
StartSection
÷÷ 
(
÷÷  
$str
÷÷  @
)
÷÷@ A
;
÷÷A B 
selectObjectOption
ÿÿ 
.
ÿÿ 
ObjectTypes
ÿÿ *
.
ÿÿ* +
Add
ÿÿ+ .
(
ÿÿ. / 
KBObjectDescriptor
ÿÿ/ A
.
ÿÿA B
Get
ÿÿB E
<
ÿÿE F
Table
ÿÿF K
>
ÿÿK L
(
ÿÿL M
)
ÿÿM N
)
ÿÿN O
;
ÿÿO P
foreach
ŸŸ 
(
ŸŸ 
KBObject
ŸŸ 
obj
ŸŸ !
in
ŸŸ" $

UIServices
ŸŸ% /
.
ŸŸ/ 0 
SelectObjectDialog
ŸŸ0 B
.
ŸŸB C
SelectObjects
ŸŸC P
(
ŸŸP Q 
selectObjectOption
ŸŸQ c
)
ŸŸc d
)
ŸŸd e
{
⁄⁄ 
Module
€€ 
m
€€ 
=
€€ 
TableModule
€€ &
(
€€& '
kbserv
€€' -
.
€€- .
CurrentModel
€€. :
,
€€: ;
(
€€< =
Table
€€= B
)
€€B C
obj
€€C F
)
€€F G
;
€€G H3
%GenerateInitializdeProcedureFromTable
‹‹ 5
(
‹‹5 6
kbserv
‹‹6 <
,
‹‹< =
(
‹‹> ?
Table
‹‹? D
)
‹‹D E
obj
‹‹E H
,
‹‹H I
m
‹‹J K
)
‹‹K L
;
‹‹L M
}
›› 
output
ﬁﬁ 
.
ﬁﬁ 

EndSection
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ >
,
ﬁﬁ> ?
true
ﬁﬁ@ D
)
ﬁﬁD E
;
ﬁﬁE F
}
ﬂﬂ 	
public
·· 
static
·· 
Module
·· 
TableModule
·· (
(
··( )
KBModel
··) 0
m
··1 2
,
··2 3
Table
··4 9
t
··: ;
)
··; <
{
‚‚ 	
return
„„ 
Artech
„„ 
.
„„ 
Genexus
„„ !
.
„„! "
Common
„„" (
.
„„( )
Services
„„) 1
.
„„1 2
GenexusBLServices
„„2 C
.
„„C D
Tables
„„D J
.
„„J K*
GetBestAssociatedTransaction
„„K g
(
„„g h
m
„„h i
,
„„i j
t
„„k l
.
„„l m
Key
„„m p
)
„„p q
.
„„q r
Module
„„r x
;
„„x y
}
‰‰ 	
public
ÊÊ 
static
ÊÊ 
void
ÊÊ "
GenerateTrnFromTable
ÊÊ /
(
ÊÊ/ 0

IKBService
ÊÊ0 :
kbserv
ÊÊ; A
,
ÊÊA B
Table
ÊÊC H
t
ÊÊI J
,
ÊÊJ K
Module
ÊÊL R
m
ÊÊS T
)
ÊÊT U
{
ÁÁ 	
IOutputService
ËË 
output
ËË !
=
ËË" #
CommonServices
ËË$ 2
.
ËË2 3
Output
ËË3 9
;
ËË9 :
Transaction
ÈÈ 
trn
ÈÈ 
=
ÈÈ 
Transaction
ÈÈ )
.
ÈÈ) *
Create
ÈÈ* 0
(
ÈÈ0 1
kbserv
ÈÈ1 7
.
ÈÈ7 8
CurrentModel
ÈÈ8 D
)
ÈÈD E
;
ÈÈE F
trn
ÍÍ 
.
ÍÍ 
Name
ÍÍ 
=
ÍÍ 
$str
ÍÍ (
+
ÍÍ) *
t
ÍÍ+ ,
.
ÍÍ, -
Name
ÍÍ- 1
;
ÍÍ1 2
trn
ÎÎ 
.
ÎÎ 
Description
ÎÎ 
=
ÎÎ 
t
ÎÎ 
.
ÎÎ  
Description
ÎÎ  +
;
ÎÎ+ ,
trn
ÏÏ 
.
ÏÏ 
SetPropertyValue
ÏÏ  
(
ÏÏ  !

Properties
ÏÏ! +
.
ÏÏ+ ,
TRN
ÏÏ, /
.
ÏÏ/ 0
GenerateObject
ÏÏ0 >
,
ÏÏ> ?
false
ÏÏ@ E
)
ÏÏE F
;
ÏÏF G
trn
ÌÌ 
.
ÌÌ 
SetPropertyValue
ÌÌ  
(
ÌÌ  !

Properties
ÌÌ! +
.
ÌÌ+ ,
TRN
ÌÌ, /
.
ÌÌ/ 0

MasterPage
ÌÌ0 :
,
ÌÌ: ;
WebPanelReference
ÌÌ< M
.
ÌÌM N
NoneRef
ÌÌN U
)
ÌÌU V
;
ÌÌV W
trn
ÓÓ 
.
ÓÓ 
Module
ÓÓ 
=
ÓÓ 
m
ÓÓ 
;
ÓÓ 
foreach
 
(
 
TableAttribute
 #
attr
$ (
in
) +
t
, -
.
- .
TableStructure
. <
.
< =

Attributes
= G
)
G H
{
ÒÒ "
TransactionAttribute
ÚÚ $
trnAtt
ÚÚ% +
=
ÚÚ, -
trn
ÚÚ. 1
.
ÚÚ1 2
	Structure
ÚÚ2 ;
.
ÚÚ; <
Root
ÚÚ< @
.
ÚÚ@ A
AddAttribute
ÚÚA M
(
ÚÚM N
attr
ÚÚN R
)
ÚÚR S
;
ÚÚS T
trnAtt
ÛÛ 
.
ÛÛ 
IsKey
ÛÛ 
=
ÛÛ 
attr
ÛÛ #
.
ÛÛ# $
IsKey
ÛÛ$ )
;
ÛÛ) *
}
ÙÙ 
;
ÙÙ 
output
ıı 
.
ıı 
AddLine
ıı 
(
ıı 
$str
ıı 0
+
ıı1 2
trn
ıı3 6
.
ıı6 7
Name
ıı7 ;
+
ıı< =
$str
ıı> L
+
ııM N
t
ııO P
.
ııP Q
Name
ııQ U
)
ııU V
;
ııV W
try
ˆˆ 
{
ˆˆ 
trn
˜˜ 
.
˜˜ 
Save
˜˜ 
(
˜˜ 
)
˜˜ 
;
˜˜ 
}
¯¯ 
catch
¯¯ 
(
¯¯ 
	Exception
¯¯ 
e
¯¯  
)
¯¯  !
{
¯¯" #
output
¯¯$ *
.
¯¯* +
AddErrorLine
¯¯+ 7
(
¯¯7 8
$str
¯¯8 Y
+
¯¯Z [
trn
¯¯\ _
.
¯¯_ `
Name
¯¯` d
+
¯¯e f
$str
¯¯g y
+
¯¯z {
e
¯¯| }
.
¯¯} ~
Message¯¯~ Ö
)¯¯Ö Ü
;¯¯Ü á
}¯¯à â
}
˘˘ 	
public
˚˚ 
static
˚˚ 
void
˚˚ 3
%GenerateInitializdeProcedureFromTable
˚˚ @
(
˚˚@ A

IKBService
˚˚A K
kbserv
˚˚L R
,
˚˚R S
Table
˚˚T Y
t
˚˚Z [
,
˚˚[ \
Module
˚˚] c
m
˚˚d e
)
˚˚e f
{
¸¸ 	
IOutputService
˝˝ 
output
˝˝ !
=
˝˝" #
CommonServices
˝˝$ 2
.
˝˝2 3
Output
˝˝3 9
;
˝˝9 :
	Procedure
˛˛ 
p
˛˛ 
=
˛˛ 
	Procedure
˛˛ #
.
˛˛# $
Create
˛˛$ *
(
˛˛* +
kbserv
˛˛+ 1
.
˛˛1 2
CurrentModel
˛˛2 >
)
˛˛> ?
;
˛˛? @
string
ˇˇ 
source
ˇˇ 
=
ˇˇ 
$str
ˇˇ 
;
ˇˇ 
p
ÄÄ 
.
ÄÄ 
Name
ÄÄ 
=
ÄÄ 
$str
ÄÄ +
+
ÄÄ, -
t
ÄÄ. /
.
ÄÄ/ 0
Name
ÄÄ0 4
;
ÄÄ4 5
p
ÅÅ 
.
ÅÅ 
Description
ÅÅ 
=
ÅÅ 
t
ÅÅ 
.
ÅÅ 
Description
ÅÅ )
;
ÅÅ) *
p
ÇÇ 
.
ÇÇ 
SetPropertyValue
ÇÇ 
(
ÇÇ 

Properties
ÇÇ )
.
ÇÇ) *
PRC
ÇÇ* -
.
ÇÇ- .
GenerateObject
ÇÇ. <
,
ÇÇ< =
true
ÇÇ> B
)
ÇÇB C
;
ÇÇC D
p
ÉÉ 
.
ÉÉ 
Module
ÉÉ 
=
ÉÉ 
m
ÉÉ 
;
ÉÉ 
VariablesPart
ÖÖ 
vp
ÖÖ 
=
ÖÖ 
p
ÖÖ  
.
ÖÖ  !
Parts
ÖÖ! &
.
ÖÖ& '
Get
ÖÖ' *
<
ÖÖ* +
VariablesPart
ÖÖ+ 8
>
ÖÖ8 9
(
ÖÖ9 :
)
ÖÖ: ;
;
ÖÖ; <
Variable
ÜÜ 
v
ÜÜ 
=
ÜÜ 
new
ÜÜ 
Variable
ÜÜ %
(
ÜÜ% &
vp
ÜÜ& (
)
ÜÜ( )
;
ÜÜ) *
v
áá 
.
áá 
Name
áá 
=
áá 
$str
áá 
;
áá 
v
àà 
.
àà 
Type
àà 
=
àà 
eDBType
àà 
.
àà 
	CHARACTER
àà &
;
àà& '
v
ââ 
.
ââ 
Length
ââ 
=
ââ 
$num
ââ 
;
ââ 
p
ãã 
.
ãã 
	Variables
ãã 
.
ãã 
Add
ãã 
(
ãã 
v
ãã 
)
ãã 
;
ãã 
Variable
çç 
ret
çç 
=
çç 
new
çç 
Variable
çç '
(
çç' (
vp
çç( *
)
çç* +
;
çç+ ,
ret
éé 
.
éé 
Name
éé 
=
éé 
$str
éé 
;
éé 
ret
èè 
.
èè 
Type
èè 
=
èè 
eDBType
èè 
.
èè 
NUMERIC
èè &
;
èè& '
ret
êê 
.
êê 
Length
êê 
=
êê 
$num
êê 
;
êê 
p
ëë 
.
ëë 
	Variables
ëë 
.
ëë 
Add
ëë 
(
ëë 
ret
ëë 
)
ëë  
;
ëë  !
string
ìì 
outputfilename
ìì !
=
ìì" #
kbserv
ìì$ *
.
ìì* +
	CurrentKB
ìì+ 4
.
ìì4 5
UserDirectory
ìì5 B
+
ììC D
$str
ììE I
+
ììJ K
t
ììL M
.
ììM N
Name
ììN R
+
ììS T
$str
ììU [
;
ìì[ \
source
ïï 
=
ïï 
$str
ïï '
+
ïï( )
outputfilename
ïï* 8
+
ïï9 :
$str
ïï; E
+
ïïF G
Environment
ïïH S
.
ïïS T
NewLine
ïïT [
;
ïï[ \
source
ññ 
+=
ññ 
String
ññ 
.
ññ 
Format
ññ #
(
ññ# $
$str
ññ$ H
,
ññH I
t
ññJ K
.
ññK L
Name
ññL P
)
ññP Q
+
ññS T
Environment
ññU `
.
ññ` a
NewLine
ñña h
;
ññh i
source
óó 
+=
óó 
String
óó 
.
óó 
Format
óó #
(
óó# $
$str
óó$ 5
)
óó5 6
+
óó7 8
Environment
óó9 D
.
óóD E
NewLine
óóE L
;
óóL M
source
òò 
+=
òò 
$str
òò %
+
òò& '
Environment
òò( 3
.
òò3 4
NewLine
òò4 ;
;
òò; <
source
ôô 
+=
ôô 
$str
ôô !
+
ôô" #
Environment
ôô$ /
.
ôô/ 0
NewLine
ôô0 7
;
ôô7 8
source
öö 
+=
öö 
$str
öö 2
+
öö3 4
Environment
öö5 @
.
öö@ A
NewLine
ööA H
;
ööH I
source
õõ 
+=
õõ 
String
õõ 
.
õõ 
Format
õõ #
(
õõ# $
$str
õõ$ 8
)
õõ8 9
+
õõ: ;
Environment
õõ< G
.
õõG H
NewLine
õõH O
;
õõO P
foreach
úú 
(
úú 
TableAttribute
úú #
attr
úú$ (
in
úú) +
t
úú, -
.
úú- .
TableStructure
úú. <
.
úú< =

Attributes
úú= G
)
úúG H
{
ùù 
string
ûû 

comillaini
ûû !
=
ûû" #
$str
ûû$ &
;
ûû& '
string
üü 

comillafin
üü !
=
üü" #
$str
üü$ &
;
üü& '
if
†† 
(
†† 
attr
†† 
.
†† 
	Attribute
†† "
.
††" #
Type
††# '
==
††( *
eDBType
††+ 2
.
††2 3
	CHARACTER
††3 <
||
††= ?
attr
††@ D
.
††D E
	Attribute
††E N
.
††N O
Type
††O S
==
††T V
eDBType
††W ^
.
††^ _
VARCHAR
††_ f
||
††g i
attr
††j n
.
††n o
	Attribute
††o x
.
††x y
Type
††y }
==††~ Ä
eDBType††Å à
.††à â
LONGVARCHAR††â î
)††î ï
{
°° 

comillaini
¢¢ 
=
¢¢  
$str
¢¢! 1
;
¢¢1 2

comillafin
££ 
=
££  
$str
££! /
;
££/ 0
}
§§ 
else
•• 
{
¶¶ 

comillaini
ßß 
=
ßß  
$str
ßß! &
;
ßß& '

comillafin
®® 
=
®®  
$str
®®! #
;
®®# $
}
©© 
source
™™ 
+=
™™ 
String
™™  
.
™™  !
Format
™™! '
(
™™' (
$str
™™( l
,
™™l m
attr
™™m q
.
™™q r
Name
™™r v
,
™™v w

comillaini™™w Å
,™™Å Ç

comillafin™™Ç å
)™™å ç
+™™é è
Environment™™ê õ
.™™õ ú
NewLine™™ú £
;™™£ §
source
´´ 
+=
´´ 
String
´´  
.
´´  !
Format
´´! '
(
´´' (
$str
´´( =
)
´´= >
+
´´? @
Environment
´´A L
.
´´L M
NewLine
´´M T
;
´´T U
}
¨¨ 
source
≠≠ 
+=
≠≠ 
$str
≠≠ 5
+
≠≠6 7
Environment
≠≠8 C
.
≠≠C D
NewLine
≠≠D K
+
≠≠L M
Environment
≠≠N Y
.
≠≠Y Z
NewLine
≠≠Z a
;
≠≠a b
source
ÆÆ 
+=
ÆÆ 
String
ÆÆ 
.
ÆÆ 
Format
ÆÆ #
(
ÆÆ# $
$str
ÆÆ$ 5
)
ÆÆ5 6
+
ÆÆ7 8
Environment
ÆÆ9 D
.
ÆÆD E
NewLine
ÆÆE L
;
ÆÆL M
source
∞∞ 
+=
∞∞ 
$str
∞∞ 
+
∞∞  !
Environment
∞∞" -
.
∞∞- .
NewLine
∞∞. 5
;
∞∞5 6
source
±± 
+=
±± 
$str
±± )
+
±±* +
Environment
±±, 7
.
±±7 8
NewLine
±±8 ?
;
±±? @
source
≤≤ 
+=
≤≤ 
$str
≤≤ ,
+
≤≤, -
outputfilename
≤≤- ;
+
≤≤< =
$str
≤≤> I
;
≤≤I J
p
¥¥ 
.
¥¥ 
SetPropertyValue
¥¥ 
(
¥¥ 
$str
¥¥ '
,
¥¥' (
true
¥¥) -
)
¥¥- .
;
¥¥. /
p
µµ 
.
µµ 
SetPropertyValue
µµ 
(
µµ 
$str
µµ .
,
µµ. /
$str
µµ0 7
)
µµ7 8
;
µµ8 9
p
∑∑ 
.
∑∑ 
ProcedurePart
∑∑ 
.
∑∑ 
Source
∑∑ "
=
∑∑# $
source
∑∑% +
;
∑∑+ ,
try
∫∫ 
{
ªª 
p
ºº 
.
ºº 
Save
ºº 
(
ºº 
)
ºº 
;
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
	Exception
ææ 
e
ææ 
)
ææ 
{
ææ  !
output
ææ" (
.
ææ( )
AddErrorLine
ææ) 5
(
ææ5 6
$str
ææ6 K
+
ææL M
p
ææN O
.
ææO P
Name
ææP T
+
ææU V
Environment
ææW b
.
ææb c
NewLine
ææc j
+
ææk l
e
ææm n
.
ææn o
Message
ææo v
)
ææv w
;
ææw x
}
ææy z
}
¿¿ 	
public
ƒƒ 
static
ƒƒ 
void
ƒƒ  
GenerateSQLScripts
ƒƒ -
(
ƒƒ- .
)
ƒƒ. /
{
≈≈ 	

IKBService
ÃÃ 
kbserv
ÃÃ 
=
ÃÃ 

UIServices
ÃÃ  *
.
ÃÃ* +
KB
ÃÃ+ -
;
ÃÃ- .
string
ÕÕ 
title
ÕÕ 
=
ÕÕ 
$str
ÕÕ E
;
ÕÕE F
string
ŒŒ 

outputFile
ŒŒ 
=
ŒŒ 
	Functions
ŒŒ  )
.
ŒŒ) *
CreateOutputFile
ŒŒ* :
(
ŒŒ: ;
kbserv
ŒŒ; A
,
ŒŒA B
title
ŒŒC H
)
ŒŒH I
;
ŒŒI J
KBModel
–– 
model
–– 
=
–– 
kbserv
–– "
.
––" #
	CurrentKB
––# ,
.
––, -
DesignModel
––- 8
;
––8 9
int
—— 
ATTNAME_LEN
—— 
=
—— 
model
—— #
.
——# $
GetPropertyValue
——$ 4
<
——4 5
int
——5 8
>
——8 9
(
——9 :
$str
——: G
)
——G H
;
——H I
int
““ 
TBLNAME_LEN
““ 
=
““ 
model
““ #
.
““# $
GetPropertyValue
““$ 4
<
““4 5
int
““5 8
>
““8 9
(
““9 :
$str
““: G
)
““G H
;
““H I
int
”” 
OBJNAME_LEN
”” 
=
”” 
model
”” #
.
””# $
GetPropertyValue
””$ 4
<
””4 5
int
””5 8
>
””8 9
(
””9 :
$str
””: G
)
””G H
;
””H I
IOutputService
÷÷ 
output
÷÷ !
=
÷÷" #
CommonServices
÷÷$ 2
.
÷÷2 3
Output
÷÷3 9
;
÷÷9 :
output
◊◊ 
.
◊◊ 
StartSection
◊◊ 
(
◊◊  
title
◊◊  %
)
◊◊% &
;
◊◊& '
KBDoctorXMLWriter
ŸŸ 
writer
ŸŸ $
=
ŸŸ% &
new
ŸŸ' *
KBDoctorXMLWriter
ŸŸ+ <
(
ŸŸ< =

outputFile
ŸŸ= G
,
ŸŸG H
Encoding
ŸŸI Q
.
ŸŸQ R
UTF8
ŸŸR V
)
ŸŸV W
;
ŸŸW X
writer
⁄⁄ 
.
⁄⁄ 
	AddHeader
⁄⁄ 
(
⁄⁄ 
title
⁄⁄ "
)
⁄⁄" #
;
⁄⁄# $
writer
€€ 
.
€€ 
AddTableHeader
€€ !
(
€€! "
new
€€" %
string
€€& ,
[
€€, -
]
€€- .
{
€€/ 0
$str
€€1 8
,
€€8 9
$str
€€: @
}
€€A B
)
€€B C
;
€€C D
string
›› 
Check
›› 
=
›› 
$str
›› /
;
››/ 0
string
ﬁﬁ 
Name
ﬁﬁ 
=
ﬁﬁ 
	Functions
ﬁﬁ #
.
ﬁﬁ# $
CleanFileName
ﬁﬁ$ 1
(
ﬁﬁ1 2
Check
ﬁﬁ2 7
)
ﬁﬁ7 8
;
ﬁﬁ8 9
string
ﬂﬂ 
FileName
ﬂﬂ 
=
ﬂﬂ 
kbserv
ﬂﬂ $
.
ﬂﬂ$ %
	CurrentKB
ﬂﬂ% .
.
ﬂﬂ. /
UserDirectory
ﬂﬂ/ <
+
ﬂﬂ= >
$str
ﬂﬂ? L
+
ﬂﬂM N
Name
ﬂﬂO S
+
ﬂﬂT U
$str
ﬂﬂV \
;
ﬂﬂ\ ]+
GenerateSciptCheckDBStructure
·· )
(
··) *
Name
··* .
,
··. /
FileName
··0 8
,
··8 9
ATTNAME_LEN
··: E
,
··E F
TBLNAME_LEN
··F Q
)
··Q R
;
··R S
writer
‚‚ 
.
‚‚ 
AddTableData
‚‚ 
(
‚‚  
new
‚‚  #
string
‚‚$ *
[
‚‚* +
]
‚‚+ ,
{
‚‚- .
Check
‚‚/ 4
,
‚‚4 5
	Functions
‚‚6 ?
.
‚‚? @
linkFile
‚‚@ H
(
‚‚H I
FileName
‚‚I Q
)
‚‚Q R
}
‚‚S T
)
‚‚T U
;
‚‚U V
Check
‰‰ 
=
‰‰ 
$str
‰‰ (
;
‰‰( )
Name
ÂÂ 
=
ÂÂ 
	Functions
ÂÂ 
.
ÂÂ 
CleanFileName
ÂÂ *
(
ÂÂ* +
Check
ÂÂ+ 0
)
ÂÂ0 1
;
ÂÂ1 2
FileName
ÊÊ 
=
ÊÊ 
kbserv
ÊÊ 
.
ÊÊ 
	CurrentKB
ÊÊ '
.
ÊÊ' (
UserDirectory
ÊÊ( 5
+
ÊÊ6 7
$str
ÊÊ8 E
+
ÊÊF G
Name
ÊÊH L
+
ÊÊM N
$str
ÊÊO U
;
ÊÊU V+
GenerateSciptUpdateNullValues
ÁÁ )
(
ÁÁ) *
Name
ÁÁ* .
,
ÁÁ. /
FileName
ÁÁ0 8
,
ÁÁ8 9
ATTNAME_LEN
ÁÁ: E
,
ÁÁE F
TBLNAME_LEN
ÁÁG R
)
ÁÁR S
;
ÁÁS T
;
ÁÁU V
writer
ËË 
.
ËË 
AddTableData
ËË 
(
ËË  
new
ËË  #
string
ËË$ *
[
ËË* +
]
ËË+ ,
{
ËË- .
Check
ËË/ 4
,
ËË4 5
	Functions
ËË6 ?
.
ËË? @
linkFile
ËË@ H
(
ËËH I
FileName
ËËI Q
)
ËËQ R
}
ËËS T
)
ËËT U
;
ËËU V
Check
ÍÍ 
=
ÍÍ 
$str
ÍÍ +
;
ÍÍ+ ,
Name
ÎÎ 
=
ÎÎ 
	Functions
ÎÎ 
.
ÎÎ 
CleanFileName
ÎÎ *
(
ÎÎ* +
Check
ÎÎ+ 0
)
ÎÎ0 1
;
ÎÎ1 2
FileName
ÏÏ 
=
ÏÏ 
kbserv
ÏÏ 
.
ÏÏ 
	CurrentKB
ÏÏ '
.
ÏÏ' (
UserDirectory
ÏÏ( 5
+
ÏÏ6 7
$str
ÏÏ8 E
+
ÏÏF G
Name
ÏÏH L
+
ÏÏM N
$str
ÏÏO U
;
ÏÏU V-
GenerateSciptCheckPKEmptyValues
ÌÌ +
(
ÌÌ+ ,
Name
ÌÌ, 0
,
ÌÌ0 1
FileName
ÌÌ2 :
,
ÌÌ: ;
ATTNAME_LEN
ÌÌ< G
,
ÌÌG H
TBLNAME_LEN
ÌÌI T
)
ÌÌT U
;
ÌÌU V
writer
ÓÓ 
.
ÓÓ 
AddTableData
ÓÓ 
(
ÓÓ  
new
ÓÓ  #
string
ÓÓ$ *
[
ÓÓ* +
]
ÓÓ+ ,
{
ÓÓ- .
Check
ÓÓ/ 4
,
ÓÓ4 5
	Functions
ÓÓ6 ?
.
ÓÓ? @
linkFile
ÓÓ@ H
(
ÓÓH I
FileName
ÓÓI Q
)
ÓÓQ R
}
ÓÓS T
)
ÓÓT U
;
ÓÓU V
Check
 
=
 
$str
 +
;
+ ,
Name
ÒÒ 
=
ÒÒ 
	Functions
ÒÒ 
.
ÒÒ 
CleanFileName
ÒÒ *
(
ÒÒ* +
Check
ÒÒ+ 0
)
ÒÒ0 1
;
ÒÒ1 2
FileName
ÚÚ 
=
ÚÚ 
kbserv
ÚÚ 
.
ÚÚ 
	CurrentKB
ÚÚ '
.
ÚÚ' (
UserDirectory
ÚÚ( 5
+
ÚÚ6 7
$str
ÚÚ8 E
+
ÚÚF G
Name
ÚÚH L
+
ÚÚM N
$str
ÚÚO U
;
ÚÚU V-
GenerateSciptCheckFKEmptyValues
ÛÛ +
(
ÛÛ+ ,
Name
ÛÛ, 0
,
ÛÛ0 1
FileName
ÛÛ2 :
,
ÛÛ: ;
ATTNAME_LEN
ÛÛ< G
,
ÛÛG H
TBLNAME_LEN
ÛÛI T
)
ÛÛT U
;
ÛÛU V
writer
ÙÙ 
.
ÙÙ 
AddTableData
ÙÙ 
(
ÙÙ  
new
ÙÙ  #
string
ÙÙ$ *
[
ÙÙ* +
]
ÙÙ+ ,
{
ÙÙ- .
Check
ÙÙ/ 4
,
ÙÙ4 5
	Functions
ÙÙ6 ?
.
ÙÙ? @
linkFile
ÙÙ@ H
(
ÙÙH I
FileName
ÙÙI Q
)
ÙÙQ R
}
ÙÙS T
)
ÙÙT U
;
ÙÙU V
Check
ˆˆ 
=
ˆˆ 
$str
ˆˆ :
;
ˆˆ: ;
Name
˜˜ 
=
˜˜ 
	Functions
˜˜ 
.
˜˜ 
CleanFileName
˜˜ *
(
˜˜* +
Check
˜˜+ 0
)
˜˜0 1
;
˜˜1 2
FileName
¯¯ 
=
¯¯ 
kbserv
¯¯ 
.
¯¯ 
	CurrentKB
¯¯ '
.
¯¯' (
UserDirectory
¯¯( 5
+
¯¯6 7
$str
¯¯8 E
+
¯¯F G
Name
¯¯H L
+
¯¯M N
$str
¯¯O U
;
¯¯U V7
)GenerateCountReferentialIntegrityProblems
˘˘ 5
(
˘˘5 6
Name
˘˘6 :
,
˘˘: ;
FileName
˘˘< D
,
˘˘D E
ATTNAME_LEN
˘˘F Q
,
˘˘Q R
TBLNAME_LEN
˘˘S ^
)
˘˘^ _
;
˘˘_ `
writer
˙˙ 
.
˙˙ 
AddTableData
˙˙ 
(
˙˙  
new
˙˙  #
string
˙˙$ *
[
˙˙* +
]
˙˙+ ,
{
˙˙- .
Check
˙˙/ 4
,
˙˙4 5
	Functions
˙˙6 ?
.
˙˙? @
linkFile
˙˙@ H
(
˙˙H I
FileName
˙˙I Q
)
˙˙Q R
}
˙˙S T
)
˙˙T U
;
˙˙U V
Check
¸¸ 
=
¸¸ 
$str
¸¸ 1
;
¸¸1 2
Name
˝˝ 
=
˝˝ 
	Functions
˝˝ 
.
˝˝ 
CleanFileName
˝˝ *
(
˝˝* +
Check
˝˝+ 0
)
˝˝0 1
;
˝˝1 2
FileName
˛˛ 
=
˛˛ 
kbserv
˛˛ 
.
˛˛ 
	CurrentKB
˛˛ '
.
˛˛' (
UserDirectory
˛˛( 5
+
˛˛6 7
$str
˛˛8 E
+
˛˛F G
Name
˛˛H L
+
˛˛M N
$str
˛˛O U
;
˛˛U V/
!GenerateCheckReferentialIntegrity
ˇˇ -
(
ˇˇ- .
Name
ˇˇ. 2
,
ˇˇ2 3
FileName
ˇˇ4 <
,
ˇˇ< =
ATTNAME_LEN
ˇˇ> I
,
ˇˇI J
TBLNAME_LEN
ˇˇK V
)
ˇˇV W
;
ˇˇW X
writer
ÄÄ 
.
ÄÄ 
AddTableData
ÄÄ 
(
ÄÄ  
new
ÄÄ  #
string
ÄÄ$ *
[
ÄÄ* +
]
ÄÄ+ ,
{
ÄÄ- .
Check
ÄÄ/ 4
,
ÄÄ4 5
	Functions
ÄÄ6 ?
.
ÄÄ? @
linkFile
ÄÄ@ H
(
ÄÄH I
FileName
ÄÄI Q
)
ÄÄQ R
}
ÄÄS T
)
ÄÄT U
;
ÄÄU V
Check
ÇÇ 
=
ÇÇ 
$str
ÇÇ 5
;
ÇÇ5 6
Name
ÉÉ 
=
ÉÉ 
	Functions
ÉÉ 
.
ÉÉ 
CleanFileName
ÉÉ *
(
ÉÉ* +
Check
ÉÉ+ 0
)
ÉÉ0 1
;
ÉÉ1 2
FileName
ÑÑ 
=
ÑÑ 
kbserv
ÑÑ 
.
ÑÑ 
	CurrentKB
ÑÑ '
.
ÑÑ' (
UserDirectory
ÑÑ( 5
+
ÑÑ6 7
$str
ÑÑ8 E
+
ÑÑF G
Name
ÑÑH L
+
ÑÑM N
$str
ÑÑO U
;
ÑÑU V2
$GenerateDeleteInvalidIntegrityValues
ÖÖ 0
(
ÖÖ0 1
Name
ÖÖ1 5
,
ÖÖ5 6
FileName
ÖÖ7 ?
,
ÖÖ? @
ATTNAME_LEN
ÖÖA L
,
ÖÖL M
TBLNAME_LEN
ÖÖN Y
)
ÖÖY Z
;
ÖÖZ [
writer
ÜÜ 
.
ÜÜ 
AddTableData
ÜÜ 
(
ÜÜ  
new
ÜÜ  #
string
ÜÜ$ *
[
ÜÜ* +
]
ÜÜ+ ,
{
ÜÜ- .
Check
ÜÜ/ 4
,
ÜÜ4 5
	Functions
ÜÜ6 ?
.
ÜÜ? @
linkFile
ÜÜ@ H
(
ÜÜH I
FileName
ÜÜI Q
)
ÜÜQ R
}
ÜÜS T
)
ÜÜT U
;
ÜÜU V
Check
àà 
=
àà 
$str
àà 3
;
àà3 4
Name
ââ 
=
ââ 
	Functions
ââ 
.
ââ 
CleanFileName
ââ *
(
ââ* +
Check
ââ+ 0
)
ââ0 1
;
ââ1 2
FileName
ää 
=
ää 
kbserv
ää 
.
ää 
	CurrentKB
ää '
.
ää' (
UserDirectory
ää( 5
+
ää6 7
$str
ää8 E
+
ääF G
Name
ääH L
+
ääM N
$str
ääO U
;
ääU V"
GenerateCopyTestData
ãã  
(
ãã  !
Name
ãã! %
,
ãã% &
FileName
ãã' /
,
ãã/ 0
ATTNAME_LEN
ãã1 <
,
ãã< =
TBLNAME_LEN
ãã> I
)
ããI J
;
ããJ K
writer
åå 
.
åå 
AddTableData
åå 
(
åå  
new
åå  #
string
åå$ *
[
åå* +
]
åå+ ,
{
åå- .
Check
åå/ 4
,
åå4 5
	Functions
åå6 ?
.
åå? @
linkFile
åå@ H
(
ååH I
FileName
ååI Q
)
ååQ R
}
ååS T
)
ååT U
;
ååU V
Check
éé 
=
éé 
$str
éé :
;
éé: ;
Name
èè 
=
èè 
	Functions
èè 
.
èè 
CleanFileName
èè *
(
èè* +
Check
èè+ 0
)
èè0 1
;
èè1 2
FileName
êê 
=
êê 
kbserv
êê 
.
êê 
	CurrentKB
êê '
.
êê' (
UserDirectory
êê( 5
+
êê6 7
$str
êê8 E
+
êêF G
Name
êêH L
+
êêM N
$str
êêO U
;
êêU V1
#GenerateCheckReferentialIntegrityN3
ëë /
(
ëë/ 0
Name
ëë0 4
,
ëë4 5
FileName
ëë6 >
,
ëë> ?
ATTNAME_LEN
ëë@ K
,
ëëK L
TBLNAME_LEN
ëëM X
)
ëëX Y
;
ëëY Z
writer
íí 
.
íí 
AddTableData
íí 
(
íí  
new
íí  #
string
íí$ *
[
íí* +
]
íí+ ,
{
íí- .
Check
íí/ 4
,
íí4 5
	Functions
íí6 ?
.
íí? @
linkFile
íí@ H
(
ííH I
FileName
ííI Q
)
ííQ R
}
ííS T
)
ííT U
;
ííU V
writer
ññ 
.
ññ 
	AddFooter
ññ 
(
ññ 
)
ññ 
;
ññ 
writer
óó 
.
óó 
Close
óó 
(
óó 
)
óó 
;
óó 
KBDoctorHelper
ôô 
.
ôô !
ShowKBDoctorResults
ôô .
(
ôô. /

outputFile
ôô/ 9
)
ôô9 :
;
ôô: ;
bool
öö 
success
öö 
=
öö 
true
öö 
;
öö  
output
õõ 
.
õõ 

EndSection
õõ 
(
õõ 
title
õõ #
,
õõ# $
success
õõ% ,
)
õõ, -
;
õõ- .
}
úú 	
private
ûû 
static
ûû 
void
ûû "
GenerateKBTableGraph
ûû 0
(
ûû0 1
string
ûû1 7
name
ûû8 <
,
ûû< =
string
ûû> D
fileName
ûûE M
)
ûûM N
{
üü 	

IKBService
†† 
kbserv
†† 
=
†† 

UIServices
††  *
.
††* +
KB
††+ -
;
††- .
KBModel
°° 
model
°° 
=
°° 
kbserv
°° "
.
°°" #
CurrentModel
°°# /
;
°°/ 0
StreamWriter
¢¢ 

scriptFile
¢¢ #
=
¢¢$ %
new
¢¢& )
StreamWriter
¢¢* 6
(
¢¢6 7
fileName
¢¢7 ?
)
¢¢? @
;
¢¢@ A
IOutputService
££ 
output
££ !
=
££" #
CommonServices
££$ 2
.
££2 3
Output
££3 9
;
££9 :
StringCollection
§§ 
aristas
§§ $
=
§§% &
new
§§' *
StringCollection
§§+ ;
(
§§; <
)
§§< =
;
§§= >
output
•• 
.
•• 
AddLine
•• 
(
•• 
$str
•• (
+
••) *
name
••+ /
)
••/ 0
;
••0 1

scriptFile
ßß 
.
ßß 
	WriteLine
ßß  
(
ßß  !
$str
ßß! M
)
ßßM N
;
ßßN O

scriptFile
©© 
.
©© 
	WriteLine
©©  
(
©©  !
$str
©©! |
)
©©| }
;
©©} ~

scriptFile
™™ 
.
™™ 
	WriteLine
™™  
(
™™  !
$str™™! »
)™™» …
;™™…  

scriptFile
¨¨ 
.
¨¨ 
	WriteLine
¨¨  
(
¨¨  !
$str
¨¨! [
)
¨¨[ \
;
¨¨\ ]

scriptFile
≠≠ 
.
≠≠ 
	WriteLine
≠≠  
(
≠≠  !
$str≠≠! Ç
)≠≠Ç É
;≠≠É Ñ

scriptFile
ØØ 
.
ØØ 
	WriteLine
ØØ  
(
ØØ  !
$str
ØØ! 0
)
ØØ0 1
;
ØØ1 2
foreach
∞∞ 
(
∞∞ 
Table
∞∞ 
t
∞∞ 
in
∞∞ 
Table
∞∞  %
.
∞∞% &
GetAll
∞∞& ,
(
∞∞, -
model
∞∞- 2
)
∞∞2 3
)
∞∞3 4
{
±± 

scriptFile
≤≤ 
.
≤≤ 
	WriteLine
≤≤ (
(
≤≤( )
$str
≤≤) ?
+
≤≤@ A
t
≤≤B C
.
≤≤C D
Name
≤≤D H
+
≤≤I J
$str
≤≤K V
+
≤≤W X
t
≤≤Y Z
.
≤≤Z [
Name
≤≤[ _
+
≤≤` a
$str
≤≤b g
)
≤≤g h
;
≤≤h i

scriptFile
≥≥ 
.
≥≥ 
	WriteLine
≥≥ (
(
≥≥( )
$str
≥≥) a
+
≥≥b c
TablesHelper
≥≥d p
.
≥≥p q
TableModule
≥≥q |
(
≥≥| }
model≥≥} Ç
,≥≥Ç É
t≥≥É Ñ
)≥≥Ñ Ö
.≥≥Ö Ü
Name≥≥Ü ä
+≥≥ã å
$str≥≥ç †
)≥≥† °
;≥≥° ¢

scriptFile
¥¥ 
.
¥¥ 
	WriteLine
¥¥ (
(
¥¥( )
$str
¥¥) <
)
¥¥< =
;
¥¥= >
foreach
µµ 
(
µµ 
TableRelation
µµ &
relation
µµ' /
in
µµ0 2
t
µµ3 4
.
µµ4 5"
SuperordinatedTables
µµ5 I
)
µµI J
{
∂∂ 
String
∑∑ 
edge
∑∑ 
=
∑∑  !
$str
∑∑" F
+
∑∑G H
relation
∑∑I Q
.
∑∑Q R
	BaseTable
∑∑R [
.
∑∑[ \
Name
∑∑\ `
+
∑∑a b
$str
∑∑c o
+
∑∑p q
relation
∑∑r z
.
∑∑z {
RelatedTable∑∑{ á
.∑∑á à
Name∑∑à å
+∑∑ç é
$str∑∑è ó
;∑∑ó ò
if
∏∏ 
(
∏∏ 
!
∏∏ 
aristas
∏∏  
.
∏∏  !
Contains
∏∏! )
(
∏∏) *
edge
∏∏* .
)
∏∏. /
)
∏∏/ 0
aristas
ππ &
.
ππ& '
Add
ππ' *
(
ππ* +
edge
ππ+ /
)
ππ/ 0
;
ππ0 1
}
∫∫ 
}
ªª 
;
ªª 

scriptFile
ºº 
.
ºº 
	WriteLine
ºº  
(
ºº  !
$str
ºº! 1
)
ºº1 2
;
ºº2 3

scriptFile
øø 
.
øø 
	WriteLine
øø  
(
øø  !
$str
øø! 0
)
øø0 1
;
øø1 2
int
¡¡ 
i
¡¡ 
=
¡¡ 
$num
¡¡ 
;
¡¡ 
foreach
¬¬ 
(
¬¬ 
String
¬¬ 
s
¬¬ 
in
¬¬  
aristas
¬¬! (
)
¬¬( )
{
√√ 
string
ƒƒ 
s2
ƒƒ 
=
ƒƒ 
s
ƒƒ 
.
ƒƒ 
Replace
ƒƒ %
(
ƒƒ% &
$str
ƒƒ& ,
,
ƒƒ, -
i
ƒƒ. /
.
ƒƒ/ 0
ToString
ƒƒ0 8
(
ƒƒ8 9
)
ƒƒ9 :
)
ƒƒ: ;
;
ƒƒ; <

scriptFile
≈≈ 
.
≈≈ 
	WriteLine
≈≈ $
(
≈≈$ %
$str
≈≈% 1
+
≈≈2 3
s2
≈≈4 6
)
≈≈6 7
;
≈≈7 8
i
∆∆ 
+=
∆∆ 
$num
∆∆ 
;
∆∆ 
}
«« 
;
«« 

scriptFile
»» 
.
»» 
	WriteLine
»»  
(
»»  !
$str
»»! 1
)
»»1 2
;
»»2 3

scriptFile
…… 
.
…… 
	WriteLine
……  
(
……  !
$str
……! -
)
……- .
;
……. /

scriptFile
   
.
   
	WriteLine
    
(
    !
$str
  ! *
)
  * +
;
  + ,

scriptFile
ÀÀ 
.
ÀÀ 
Close
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
private
ŒŒ 
static
ŒŒ 
void
ŒŒ #
GenerateKBObjectGraph
ŒŒ 1
(
ŒŒ1 2
string
ŒŒ2 8
name
ŒŒ9 =
,
ŒŒ= >
string
ŒŒ? E
fileName
ŒŒF N
)
ŒŒN O
{
œœ 	

IKBService
–– 
kbserv
–– 
=
–– 

UIServices
––  *
.
––* +
KB
––+ -
;
––- .
KBModel
—— 
model
—— 
=
—— 
kbserv
—— "
.
——" #
CurrentModel
——# /
;
——/ 0
StreamWriter
““ 

scriptFile
““ #
=
““$ %
new
““& )
StreamWriter
““* 6
(
““6 7
fileName
““7 ?
)
““? @
;
““@ A
IOutputService
”” 
output
”” !
=
””" #
CommonServices
””$ 2
.
””2 3
Output
””3 9
;
””9 :
StringCollection
‘‘ 
aristas
‘‘ $
=
‘‘% &
new
‘‘' *
StringCollection
‘‘+ ;
(
‘‘; <
)
‘‘< =
;
‘‘= >
output
’’ 
.
’’ 
AddLine
’’ 
(
’’ 
$str
’’ (
+
’’) *
name
’’+ /
)
’’/ 0
;
’’0 1

scriptFile
◊◊ 
.
◊◊ 
	WriteLine
◊◊  
(
◊◊  !
$str
◊◊! M
)
◊◊M N
;
◊◊N O

scriptFile
ŸŸ 
.
ŸŸ 
	WriteLine
ŸŸ  
(
ŸŸ  !
$str
ŸŸ! |
)
ŸŸ| }
;
ŸŸ} ~

scriptFile
⁄⁄ 
.
⁄⁄ 
	WriteLine
⁄⁄  
(
⁄⁄  !
$str⁄⁄! »
)⁄⁄» …
;⁄⁄…  

scriptFile
‹‹ 
.
‹‹ 
	WriteLine
‹‹  
(
‹‹  !
$str
‹‹! [
)
‹‹[ \
;
‹‹\ ]

scriptFile
›› 
.
›› 
	WriteLine
››  
(
››  !
$str››! Ç
)››Ç É
;››É Ñ

scriptFile
ﬂﬂ 
.
ﬂﬂ 
	WriteLine
ﬂﬂ  
(
ﬂﬂ  !
$str
ﬂﬂ! 0
)
ﬂﬂ0 1
;
ﬂﬂ1 2
foreach
‡‡ 
(
‡‡ 
KBObject
‡‡ 
obj
‡‡ !
in
‡‡" $
model
‡‡% *
.
‡‡* +
Objects
‡‡+ 2
.
‡‡2 3
GetAll
‡‡3 9
(
‡‡9 :
)
‡‡: ;
)
‡‡; <
{
·· 
if
‚‚ 
(
‚‚ 
	Functions
‚‚ 
.
‚‚ 
	isRunable
‚‚ '
(
‚‚' (
obj
‚‚( +
)
‚‚+ ,
||
‚‚- /
obj
‚‚0 3
is
‚‚4 6
Table
‚‚7 <
)
‚‚< =
{
„„ 
string
‰‰ 

modulename
‰‰ %
=
‰‰& '
ModulesHelper
‰‰( 5
.
‰‰5 6
ObjectModule
‰‰6 B
(
‰‰B C
obj
‰‰C F
)
‰‰F G
;
‰‰G H

scriptFile
ÊÊ 
.
ÊÊ 
	WriteLine
ÊÊ (
(
ÊÊ( )
$str
ÊÊ) ?
+
ÊÊ@ A
obj
ÊÊB E
.
ÊÊE F
Name
ÊÊF J
+
ÊÊK L
$str
ÊÊM X
+
ÊÊY Z
obj
ÊÊ[ ^
.
ÊÊ^ _
Name
ÊÊ_ c
+
ÊÊd e
$str
ÊÊf k
)
ÊÊk l
;
ÊÊl m

scriptFile
ÁÁ 
.
ÁÁ 
	WriteLine
ÁÁ (
(
ÁÁ( )
$str
ÁÁ) a
+
ÁÁb c

modulename
ÁÁd n
+
ÁÁo p
$strÁÁq Ñ
)ÁÁÑ Ö
;ÁÁÖ Ü

scriptFile
ËË 
.
ËË 
	WriteLine
ËË (
(
ËË( )
$str
ËË) <
)
ËË< =
;
ËË= >
foreach
ÍÍ 
(
ÍÍ 
EntityReference
ÍÍ ,
r
ÍÍ- .
in
ÍÍ/ 1
obj
ÍÍ2 5
.
ÍÍ5 6
GetReferences
ÍÍ6 C
(
ÍÍC D
)
ÍÍD E
)
ÍÍE F
{
ÎÎ 
KBObject
ÏÏ  
objRef
ÏÏ! '
=
ÏÏ( )
KBObject
ÏÏ* 2
.
ÏÏ2 3
Get
ÏÏ3 6
(
ÏÏ6 7
obj
ÏÏ7 :
.
ÏÏ: ;
Model
ÏÏ; @
,
ÏÏ@ A
r
ÏÏB C
.
ÏÏC D
To
ÏÏD F
)
ÏÏF G
;
ÏÏG H
if
ÌÌ 
(
ÌÌ 
(
ÌÌ 
objRef
ÌÌ #
!=
ÌÌ$ &
null
ÌÌ' +
)
ÌÌ+ ,
&&
ÌÌ- /
(
ÌÌ0 1
	Functions
ÌÌ1 :
.
ÌÌ: ;
	isRunable
ÌÌ; D
(
ÌÌD E
objRef
ÌÌE K
)
ÌÌK L
||
ÌÌM O
objRef
ÌÌP V
is
ÌÌW Y
Table
ÌÌZ _
)
ÌÌ_ `
)
ÌÌ` a
{
ÔÔ 
String
 "
edge
# '
=
( )
$str
* N
+
O P
obj
Q T
.
T U
Name
U Y
+
Z [
$str
\ h
+
i j
objRef
k q
.
q r
Name
r v
+
w x
$stry Å
;Å Ç
if
ÒÒ 
(
ÒÒ  
!
ÒÒ  !
aristas
ÒÒ! (
.
ÒÒ( )
Contains
ÒÒ) 1
(
ÒÒ1 2
edge
ÒÒ2 6
)
ÒÒ6 7
)
ÒÒ7 8
aristas
ÚÚ  '
.
ÚÚ' (
Add
ÚÚ( +
(
ÚÚ+ ,
edge
ÚÚ, 0
)
ÚÚ0 1
;
ÚÚ1 2
}
ÛÛ 
}
ÙÙ 
}
ıı 
}
ˆˆ 
;
ˆˆ 

scriptFile
˜˜ 
.
˜˜ 
	WriteLine
˜˜  
(
˜˜  !
$str
˜˜! 1
)
˜˜1 2
;
˜˜2 3

scriptFile
˙˙ 
.
˙˙ 
	WriteLine
˙˙  
(
˙˙  !
$str
˙˙! 0
)
˙˙0 1
;
˙˙1 2
int
¸¸ 
i
¸¸ 
=
¸¸ 
$num
¸¸ 
;
¸¸ 
foreach
˝˝ 
(
˝˝ 
String
˝˝ 
s
˝˝ 
in
˝˝  
aristas
˝˝! (
)
˝˝( )
{
˛˛ 
string
ˇˇ 
s2
ˇˇ 
=
ˇˇ 
s
ˇˇ 
.
ˇˇ 
Replace
ˇˇ %
(
ˇˇ% &
$str
ˇˇ& ,
,
ˇˇ, -
i
ˇˇ. /
.
ˇˇ/ 0
ToString
ˇˇ0 8
(
ˇˇ8 9
)
ˇˇ9 :
)
ˇˇ: ;
;
ˇˇ; <

scriptFile
ÄÄ 
.
ÄÄ 
	WriteLine
ÄÄ $
(
ÄÄ$ %
$str
ÄÄ% 1
+
ÄÄ2 3
s2
ÄÄ4 6
)
ÄÄ6 7
;
ÄÄ7 8
i
ÅÅ 
+=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 
;
ÇÇ 

scriptFile
ÉÉ 
.
ÉÉ 
	WriteLine
ÉÉ  
(
ÉÉ  !
$str
ÉÉ! 1
)
ÉÉ1 2
;
ÉÉ2 3

scriptFile
ÑÑ 
.
ÑÑ 
	WriteLine
ÑÑ  
(
ÑÑ  !
$str
ÑÑ! -
)
ÑÑ- .
;
ÑÑ. /

scriptFile
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ  
(
ÖÖ  !
$str
ÖÖ! *
)
ÖÖ* +
;
ÖÖ+ ,

scriptFile
ÜÜ 
.
ÜÜ 
Close
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 	
private
ãã 
static
ãã 
void
ãã "
GenerateCopyTestData
ãã 0
(
ãã0 1
string
ãã1 7
name
ãã8 <
,
ãã< =
string
ãã> D
fileName
ããE M
,
ããM N
int
ããO R
ATTNAME_LEN
ããS ^
,
ãã^ _
int
ãã` c
TBLNAME_LEN
ããd o
)
ãão p
{
åå 	

IKBService
çç 
kbserv
çç 
=
çç 

UIServices
çç  *
.
çç* +
KB
çç+ -
;
çç- .
KBModel
éé 
model
éé 
=
éé 
kbserv
éé "
.
éé" #
CurrentModel
éé# /
;
éé/ 0
StreamWriter
èè 

scriptFile
èè #
=
èè$ %
new
èè& )
StreamWriter
èè* 6
(
èè6 7
fileName
èè7 ?
)
èè? @
;
èè@ A
IOutputService
êê 
output
êê !
=
êê" #
CommonServices
êê$ 2
.
êê2 3
Output
êê3 9
;
êê9 :
output
ëë 
.
ëë 
AddLine
ëë 
(
ëë 
$str
ëë (
+
ëë) *
name
ëë+ /
)
ëë/ 0
;
ëë0 1

scriptFile
ìì 
.
ìì 
	WriteLine
ìì  
(
ìì  !
$str
ìì! >
+
ìì? @
DateTime
ììA I
.
ììI J
Now
ììJ M
.
ììM N
ToString
ììN V
(
ììV W
$str
ììW c
)
ììc d
)
ììd e
;
ììe f

scriptFile
îî 
.
îî 
	WriteLine
îî  
(
îî  !
$str
îî! #
)
îî# $
;
îî$ %

scriptFile
ïï 
.
ïï 
	WriteLine
ïï  
(
ïï  !
$str
ïï! V
)
ïïV W
;
ïïW X

scriptFile
ññ 
.
ññ 
	WriteLine
ññ  
(
ññ  !
$str
ññ! j
)
ññj k
;
ññk l

scriptFile
óó 
.
óó 
	WriteLine
óó  
(
óó  !
$str
óó! #
)
óó# $
;
óó$ %

scriptFile
òò 
.
òò 
	WriteLine
òò  
(
òò  !
$str
òò! c
)
òòc d
;
òòd e

scriptFile
ôô 
.
ôô 
	WriteLine
ôô  
(
ôô  !
$str
ôô! &
)
ôô& '
;
ôô' (

scriptFile
öö 
.
öö 
	WriteLine
öö  
(
öö  !
$str
öö! +
)
öö+ ,
;
öö, -
foreach
ùù 
(
ùù 
Table
ùù 
t
ùù 
in
ùù 
Table
ùù  %
.
ùù% &
GetAll
ùù& ,
(
ùù, -
model
ùù- 2
)
ùù2 3
)
ùù3 4
{
ûû 
string
†† 
tblAtt
†† 
=
†† 
$str
††  "
;
††" #
string
°° 
coma
°° 
=
°° 
$str
°°  
;
°°  !
string
¢¢ 
tblName
¢¢ 
=
¢¢  
	ShortName
¢¢! *
(
¢¢* +
TBLNAME_LEN
¢¢+ 6
,
¢¢6 7
t
¢¢8 9
.
¢¢9 :
Name
¢¢: >
)
¢¢> ?
;
¢¢? @
string
££ 
PreAutonumber
££ $
=
££$ %
$str
££% '
,
££' (
PostAutonumber
££) 7
=
££7 8
$str
££8 :
,
££: ;
SeedAutonumber
££< J
=
££J K
$str
££K M
;
££M N
foreach
•• 
(
•• 
TableAttribute
•• '
a
••( )
in
••* ,
t
••- .
.
••. /
TableStructure
••/ =
.
••= >

Attributes
••> H
)
••H I
{
¶¶ 
string
®® 
attName
®® "
=
®®# $
	ShortName
®®% .
(
®®. /
ATTNAME_LEN
®®/ :
,
®®: ;
a
®®< =
.
®®= >
Name
®®> B
)
®®B C
;
®®C D
bool
©© 
isAutonumber
©© %
=
©©& '
IsAutonumberAndPK
©©( 9
(
©©9 :
t
©©: ;
,
©©; <
a
©©= >
)
©©> ?
;
©©? @
if
´´ 
(
´´ 
isAutonumber
´´ $
&&
´´% '
a
´´( )
.
´´) *
IsKey
´´* /
)
´´/ 0
{
¨¨ 
PreAutonumber
≠≠ %
=
≠≠& '
Environment
≠≠( 3
.
≠≠3 4
NewLine
≠≠4 ;
+
≠≠< =
$str
≠≠> n
+
≠≠o p
tblName
≠≠q x
+
≠≠y z
$str≠≠{ Ç
;≠≠Ç É
PostAutonumber
ÆÆ &
=
ÆÆ' (
$str
ÆÆ) Y
+
ÆÆZ [
tblName
ÆÆ\ c
+
ÆÆd e
$str
ÆÆf n
;
ÆÆn o
}
≥≥ 
if
µµ 
(
µµ 
!
µµ 
(
µµ 
a
µµ 
.
µµ 
	IsFormula
µµ %
)
µµ% &
||
µµ' )
(
µµ* +
a
µµ+ ,
.
µµ, -
	IsFormula
µµ- 6
&&
µµ7 9
a
µµ: ;
.
µµ; <
IsRedundant
µµ< G
)
µµG H
)
µµH I
if
∂∂ 
(
∂∂ 
!
∂∂ 
(
∂∂ 
a
∂∂ 
.
∂∂  

IsInferred
∂∂  *
)
∂∂* +
)
∂∂+ ,
{
∑∑ 
tblAtt
∏∏ "
+=
∏∏# %
coma
∏∏& *
+
∏∏+ ,
attName
∏∏- 4
;
∏∏4 5
coma
ππ  
=
ππ! "
$str
ππ# &
;
ππ& '
}
∫∫ 
}
ºº 

scriptFile
ΩΩ 
.
ΩΩ 
	WriteLine
ΩΩ $
(
ΩΩ$ %
PreAutonumber
ΩΩ% 2
)
ΩΩ2 3
;
ΩΩ3 4

scriptFile
ææ 
.
ææ 
	WriteLine
ææ $
(
ææ$ %
$str
ææ% M
+
ææN O
tblName
ææP W
+
ææX Y
$str
ææZ ^
+
ææ_ `
tblAtt
ææa g
+
ææh i
$str
ææj v
+
ææw x
tblAtt
ææy 
+ææÄ Å
$strææÇ •
+ææ¶ ß
tblNameææ® Ø
+ææ∞ ±
$strææ≤ µ
)ææµ ∂
;ææ∂ ∑

scriptFile
øø 
.
øø 
	WriteLine
øø $
(
øø$ %
PostAutonumber
øø% 3
)
øø3 4
;
øø4 5
}
¡¡ 

scriptFile
¬¬ 
.
¬¬ 
Close
¬¬ 
(
¬¬ 
)
¬¬ 
;
¬¬ 
}
√√ 	
private
≈≈ 
static
≈≈ 
bool
≈≈ 
IsAutonumberAndPK
≈≈ -
(
≈≈- .
Table
≈≈. 3
t
≈≈4 5
,
≈≈5 6
TableAttribute
≈≈7 E
a
≈≈F G
)
≈≈G H
{
∆∆ 	
if
»» 
(
»» 
(
»» 
t
»» 
.
»» 
TableStructure
»» !
.
»»! "

PrimaryKey
»»" ,
.
»», -
Count
»»- 2
==
»»2 4
$num
»»4 5
)
»»5 6
&&
»»7 9
a
»»: ;
.
»»; <
IsKey
»»< A
&&
»»B D
a
»»E F
.
»»F G
	Attribute
»»G P
.
»»P Q
GetPropertyValue
»»Q a
<
»»a b
bool
»»b f
>
»»f g
(
»»g h
$str
»»h t
)
»»t u
)
»»u v
return
…… 
true
…… 
;
…… 
else
   
return
ÀÀ 
false
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
public
ŒŒ 
static
ŒŒ 
void
ŒŒ +
GenerateSciptCheckDBStructure
ŒŒ 8
(
ŒŒ8 9
string
ŒŒ9 ?
Name
ŒŒ@ D
,
ŒŒD E
string
ŒŒF L
FileName
ŒŒM U
,
ŒŒU V
int
ŒŒW Z
ATTNAME_LEN
ŒŒ[ f
,
ŒŒf g
int
ŒŒh k
TBLNAME_LEN
ŒŒl w
)
ŒŒw x
{
œœ 	

IKBService
–– 
kbserv
–– 
=
–– 

UIServices
––  *
.
––* +
KB
––+ -
;
––- .
KBModel
—— 
model
—— 
=
—— 
kbserv
—— "
.
——" #
CurrentModel
——# /
;
——/ 0
StreamWriter
““ 

scriptFile
““ #
=
““$ %
new
““& )
StreamWriter
““* 6
(
““6 7
FileName
““7 ?
)
““? @
;
““@ A
IOutputService
”” 
output
”” !
=
””" #
CommonServices
””$ 2
.
””2 3
Output
””3 9
;
””9 :
output
‘‘ 
.
‘‘ 
AddLine
‘‘ 
(
‘‘ 
$str
‘‘ (
+
‘‘) *
Name
‘‘+ /
)
‘‘/ 0
;
‘‘0 1

scriptFile
÷÷ 
.
÷÷ 
	WriteLine
÷÷  
(
÷÷  !
$str
÷÷! B
+
÷÷C D
DateTime
÷÷E M
.
÷÷M N
Now
÷÷N Q
.
÷÷Q R
ToString
÷÷R Z
(
÷÷Z [
$str
÷÷[ g
)
÷÷g h
)
÷÷h i
;
÷÷i j

scriptFile
◊◊ 
.
◊◊ 
	WriteLine
◊◊  
(
◊◊  !
$str
◊◊! #
)
◊◊# $
;
◊◊$ %

scriptFile
ÿÿ 
.
ÿÿ 
	WriteLine
ÿÿ  
(
ÿÿ  !
$str
ÿÿ! e
)
ÿÿe f
;
ÿÿf g

scriptFile
ŸŸ 
.
ŸŸ 
	WriteLine
ŸŸ  
(
ŸŸ  !
$str
ŸŸ! #
)
ŸŸ# $
;
ŸŸ$ %

scriptFile
⁄⁄ 
.
⁄⁄ 
	WriteLine
⁄⁄  
(
⁄⁄  !
$str
⁄⁄! c
)
⁄⁄c d
;
⁄⁄d e

scriptFile
€€ 
.
€€ 
	WriteLine
€€  
(
€€  !
$str
€€! &
)
€€& '
;
€€' (

scriptFile
‹‹ 
.
‹‹ 
	WriteLine
‹‹  
(
‹‹  !
$str
‹‹! +
)
‹‹+ ,
;
‹‹, -
foreach
ﬁﬁ 
(
ﬁﬁ 
Table
ﬁﬁ 
t
ﬁﬁ 
in
ﬁﬁ 
Table
ﬁﬁ  %
.
ﬁﬁ% &
GetAll
ﬁﬁ& ,
(
ﬁﬁ, -
model
ﬁﬁ- 2
)
ﬁﬁ2 3
)
ﬁﬁ3 4
{
ﬂﬂ 
string
·· 
tblAtt
·· 
=
·· 
$str
··  "
;
··" #
string
‚‚ 
coma
‚‚ 
=
‚‚ 
$str
‚‚  
;
‚‚  !
string
„„ 
tblName
„„ 
=
„„  
	ShortName
„„! *
(
„„* +
TBLNAME_LEN
„„+ 6
,
„„6 7
t
„„7 8
.
„„8 9
Name
„„9 =
)
„„= >
;
„„> ?
foreach
ÂÂ 
(
ÂÂ 
TableAttribute
ÂÂ '
a
ÂÂ( )
in
ÂÂ* ,
t
ÂÂ- .
.
ÂÂ. /
TableStructure
ÂÂ/ =
.
ÂÂ= >

Attributes
ÂÂ> H
)
ÂÂH I
{
ÊÊ 
if
ÁÁ 
(
ÁÁ 
!
ÁÁ 
(
ÁÁ 
a
ÁÁ 
.
ÁÁ 
	IsFormula
ÁÁ %
)
ÁÁ% &
&&
ÁÁ' )
!
ÁÁ* +
(
ÁÁ+ ,
a
ÁÁ, -
.
ÁÁ- .

IsInferred
ÁÁ. 8
)
ÁÁ8 9
)
ÁÁ9 :
{
ËË 
string
ÈÈ 
attName
ÈÈ &
=
ÈÈ' (
	ShortName
ÈÈ) 2
(
ÈÈ2 3
ATTNAME_LEN
ÈÈ3 >
,
ÈÈ> ?
a
ÈÈ@ A
.
ÈÈA B
Name
ÈÈB F
)
ÈÈF G
;
ÈÈG H
tblAtt
ÍÍ 
+=
ÍÍ !
coma
ÍÍ" &
+
ÍÍ' (
attName
ÍÍ) 0
;
ÍÍ0 1
coma
ÎÎ 
=
ÎÎ 
$str
ÎÎ "
;
ÎÎ" #
}
ÏÏ 
}
ÌÌ 

scriptFile
ÓÓ 
.
ÓÓ 
	WriteLine
ÓÓ $
(
ÓÓ$ %
$str
ÓÓ% .
+
ÓÓ/ 0
tblAtt
ÓÓ1 7
+
ÓÓ8 9
$str
ÓÓ: B
+
ÓÓC D
tblName
ÓÓE L
+
ÓÓM N
$str
ÓÓO \
)
ÓÓ\ ]
;
ÓÓ] ^
}
ÔÔ 

scriptFile
 
.
 
Close
 
(
 
)
 
;
 
}
ÒÒ 	
public
ıı 
static
ıı 
void
ıı -
GenerateSciptCheckPKEmptyValues
ıı :
(
ıı: ;
string
ıı; A
Name
ııB F
,
ııF G
string
ııH N
FileName
ııO W
,
ııW X
int
ııY \
ATTNAME_LEN
ıı] h
,
ııh i
int
ııj m
TBLNAME_LEN
ıın y
)
ııy z
{
ˆˆ 	

IKBService
˜˜ 
kbserv
˜˜ 
=
˜˜ 

UIServices
˜˜  *
.
˜˜* +
KB
˜˜+ -
;
˜˜- .
KBModel
¯¯ 
model
¯¯ 
=
¯¯ 
kbserv
¯¯ "
.
¯¯" #
CurrentModel
¯¯# /
;
¯¯/ 0
StreamWriter
˘˘ 

scriptFile
˘˘ #
=
˘˘$ %
new
˘˘& )
StreamWriter
˘˘* 6
(
˘˘6 7
FileName
˘˘7 ?
)
˘˘? @
;
˘˘@ A
IOutputService
˙˙ 
output
˙˙ !
=
˙˙" #
CommonServices
˙˙$ 2
.
˙˙2 3
Output
˙˙3 9
;
˙˙9 :
output
˚˚ 
.
˚˚ 
AddLine
˚˚ 
(
˚˚ 
$str
˚˚ (
+
˚˚) *
Name
˚˚+ /
)
˚˚/ 0
;
˚˚0 1

scriptFile
˝˝ 
.
˝˝ 
	WriteLine
˝˝  
(
˝˝  !
$str
˝˝! 1
+
˝˝2 3
Name
˝˝4 8
+
˝˝9 :
$str
˝˝; >
+
˝˝? @
DateTime
˝˝A I
.
˝˝I J
Now
˝˝J M
.
˝˝M N
ToString
˝˝N V
(
˝˝V W
$str
˝˝W c
)
˝˝c d
)
˝˝d e
;
˝˝e f

scriptFile
˛˛ 
.
˛˛ 
	WriteLine
˛˛  
(
˛˛  !
$str
˛˛! #
)
˛˛# $
;
˛˛$ %

scriptFile
ˇˇ 
.
ˇˇ 
	WriteLine
ˇˇ  
(
ˇˇ  !
$str
ˇˇ! L
)
ˇˇL M
;
ˇˇM N

scriptFile
ÄÄ 
.
ÄÄ 
	WriteLine
ÄÄ  
(
ÄÄ  !
$str
ÄÄ! #
)
ÄÄ# $
;
ÄÄ$ %

scriptFile
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ  
(
ÅÅ  !
$str
ÅÅ! d
)
ÅÅd e
;
ÅÅe f

scriptFile
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ  
(
ÇÇ  !
$str
ÇÇ! &
)
ÇÇ& '
;
ÇÇ' (

scriptFile
ÉÉ 
.
ÉÉ 
	WriteLine
ÉÉ  
(
ÉÉ  !
$str
ÉÉ! +
)
ÉÉ+ ,
;
ÉÉ, -
string
ÖÖ 
description
ÖÖ 
;
ÖÖ 
string
ÜÜ 
comilla
ÜÜ 
=
ÜÜ 
$str
ÜÜ !
;
ÜÜ! "
foreach
áá 
(
áá 
Table
áá 
t
áá 
in
áá 
Table
áá  %
.
áá% &
GetAll
áá& ,
(
áá, -
model
áá- 2
)
áá2 3
)
áá3 4
{
àà 
string
ââ 
gxnullcondition
ââ &
=
ââ' (
NullConditionKey
ââ) 9
(
ââ9 :
t
ââ: ;
,
ââ; <
ATTNAME_LEN
ââ< G
)
ââG H
;
ââH I
string
ää 
tblKey
ää 
=
ää 
KeyList
ää  '
(
ää' (
t
ää( )
,
ää) *
ATTNAME_LEN
ää+ 6
)
ää6 7
;
ää7 8
string
ãã 
tblName
ãã 
=
ãã  
	ShortName
ãã! *
(
ãã* +
TBLNAME_LEN
ãã+ 6
,
ãã6 7
t
ãã8 9
.
ãã9 :
Name
ãã: >
)
ãã> ?
;
ãã? @

scriptFile
çç 
.
çç 
	WriteLine
çç $
(
çç$ %
$str
çç% '
)
çç' (
;
çç( )

scriptFile
éé 
.
éé 
	WriteLine
éé $
(
éé$ %
$str
éé% 9
+
éé: ;
tblName
éé< C
+
ééD E
$str
ééF V
+
ééW X
tblKey
ééY _
+
éé` a
$str
ééb j
)
ééj k
;
éék l

scriptFile
èè 
.
èè 
	WriteLine
èè $
(
èè$ %
$str
èè% .
+
èè/ 0
tblKey
èè1 7
+
èè8 9
$str
èè: B
+
èèC D
t
èèE F
.
èèF G
Name
èèG K
+
èèL M
$str
èèN W
+
èèX Y
gxnullcondition
èèZ i
+
èèj k
$str
èèl o
)
èèo p
;
èèp q
}
êê 

scriptFile
ëë 
.
ëë 
Close
ëë 
(
ëë 
)
ëë 
;
ëë 
}
íí 	
public
îî 
static
îî 
void
îî -
GenerateSciptCheckFKEmptyValues
îî :
(
îî: ;
string
îî; A
Name
îîB F
,
îîF G
string
îîH N
FileName
îîO W
,
îîW X
int
îîY \
ATTNAME_LEN
îî] h
,
îîh i
int
îîj m
TBLNAME_LEN
îîn y
)
îîy z
{
ïï 	
string
ññ 
description
ññ 
;
ññ 

IKBService
óó 
kbserv
óó 
=
óó 

UIServices
óó  *
.
óó* +
KB
óó+ -
;
óó- .
KBModel
òò 
model
òò 
=
òò 
kbserv
òò "
.
òò" #
CurrentModel
òò# /
;
òò/ 0
string
ôô 
comilla
ôô 
=
ôô 
$str
ôô !
;
ôô! "
IOutputService
õõ 
output
õõ !
=
õõ" #
CommonServices
õõ$ 2
.
õõ2 3
Output
õõ3 9
;
õõ9 :
output
úú 
.
úú 
AddLine
úú 
(
úú 
$str
úú (
+
úú) *
Name
úú+ /
)
úú/ 0
;
úú0 1
StreamWriter
ûû 

scriptFile
ûû #
=
ûû$ %
new
ûû& )
StreamWriter
ûû* 6
(
ûû6 7
FileName
ûû7 ?
)
ûû? @
;
ûû@ A

scriptFile
üü 
.
üü 
	WriteLine
üü  
(
üü  !
$str
üü! 1
+
üü2 3
Name
üü4 8
+
üü9 :
$str
üü; >
+
üü? @
DateTime
üüA I
.
üüI J
Now
üüJ M
.
üüM N
ToString
üüN V
(
üüV W
$str
üüW c
)
üüc d
)
üüd e
;
üüe f

scriptFile
†† 
.
†† 
	WriteLine
††  
(
††  !
$str
††! #
)
††# $
;
††$ %

scriptFile
°° 
.
°° 
	WriteLine
°°  
(
°°  !
$str
°°! L
)
°°L M
;
°°M N

scriptFile
¢¢ 
.
¢¢ 
	WriteLine
¢¢  
(
¢¢  !
$str
¢¢! #
)
¢¢# $
;
¢¢$ %

scriptFile
££ 
.
££ 
	WriteLine
££  
(
££  !
$str
££! d
)
££d e
;
££e f

scriptFile
§§ 
.
§§ 
	WriteLine
§§  
(
§§  !
$str
§§! &
)
§§& '
;
§§' (

scriptFile
•• 
.
•• 
	WriteLine
••  
(
••  !
$str
••! +
)
••+ ,
;
••, -
foreach
ßß 
(
ßß 
Table
ßß 
t
ßß 
in
ßß 
Table
ßß  %
.
ßß% &
GetAll
ßß& ,
(
ßß, -
model
ßß- 2
)
ßß2 3
)
ßß3 4
{
®® 
foreach
©© 
(
©© 
TableAttribute
©© '
a
©©( )
in
©©* ,
t
©©- .
.
©©. /
TableStructure
©©/ =
.
©©= >"
ForeignKeyAttributes
©©> R
)
©©R S
{
™™ 
string
´´ 
tblKey
´´ !
=
´´" #
KeyList
´´$ +
(
´´+ ,
t
´´, -
,
´´- .
ATTNAME_LEN
´´/ :
)
´´: ;
;
´´; <

scriptFile
≠≠ 
.
≠≠ 
	WriteLine
≠≠ (
(
≠≠( )
$str
≠≠) +
)
≠≠+ ,
;
≠≠, -

scriptFile
ÆÆ 
.
ÆÆ 
	WriteLine
ÆÆ (
(
ÆÆ( )
$str
ÆÆ) =
+
ÆÆ> ?
t
ÆÆ@ A
.
ÆÆA B
Name
ÆÆB F
+
ÆÆG H
$str
ÆÆI Y
+
ÆÆZ [
tblKey
ÆÆ\ b
+
ÆÆc d
$str
ÆÆe x
+
ÆÆy z
a
ÆÆ{ |
.
ÆÆ| }
NameÆÆ} Å
+ÆÆÇ É
$strÆÆÑ ç
)ÆÆç é
;ÆÆé è

scriptFile
ØØ 
.
ØØ 
	WriteLine
ØØ (
(
ØØ( )
$str
ØØ) 2
+
ØØ3 4
tblKey
ØØ5 ;
+
ØØ< =
$str
ØØ> G
+
ØØH I
a
ØØJ K
.
ØØK L
Name
ØØL P
+
ØØQ R
$str
ØØS [
+
ØØ\ ]
t
ØØ^ _
.
ØØ_ `
Name
ØØ` d
+
ØØe f
$str
ØØg p
+
ØØq r
a
ØØs t
.
ØØt u
Name
ØØu y
+
ØØz {
$str
ØØ| 
+ØØÄ Å
GxNullØØÇ à
(ØØà â
aØØâ ä
)ØØä ã
+ØØå ç
$strØØé ë
)ØØë í
;ØØí ì
}
∞∞ 
}
±± 

scriptFile
≤≤ 
.
≤≤ 
Close
≤≤ 
(
≤≤ 
)
≤≤ 
;
≤≤ 
}
≥≥ 	
public
µµ 
static
µµ 
void
µµ +
GenerateSciptUpdateNullValues
µµ 8
(
µµ8 9
string
µµ9 ?
Name
µµ@ D
,
µµD E
string
µµF L
FileName
µµM U
,
µµU V
int
µµW Z
ATTNAME_LEN
µµ[ f
,
µµf g
int
µµh k
TBLNAME_LEN
µµl w
)
µµw x
{
∂∂ 	

IKBService
∑∑ 
kbserv
∑∑ 
=
∑∑ 

UIServices
∑∑  *
.
∑∑* +
KB
∑∑+ -
;
∑∑- .
KBModel
∏∏ 
model
∏∏ 
=
∏∏ 
kbserv
∏∏ "
.
∏∏" #
CurrentModel
∏∏# /
;
∏∏/ 0
StreamWriter
ππ 

scriptFile
ππ #
=
ππ$ %
new
ππ& )
StreamWriter
ππ* 6
(
ππ6 7
FileName
ππ7 ?
)
ππ? @
;
ππ@ A

scriptFile
∫∫ 
.
∫∫ 
	WriteLine
∫∫  
(
∫∫  !
$str
∫∫! 1
+
∫∫2 3
Name
∫∫4 8
+
∫∫9 :
$str
∫∫; >
+
∫∫? @
DateTime
∫∫A I
.
∫∫I J
Now
∫∫J M
.
∫∫M N
ToString
∫∫N V
(
∫∫V W
$str
∫∫W c
)
∫∫c d
)
∫∫d e
;
∫∫e f

scriptFile
ªª 
.
ªª 
	WriteLine
ªª  
(
ªª  !
$str
ªª! #
)
ªª# $
;
ªª$ %

scriptFile
ºº 
.
ºº 
	WriteLine
ºº  
(
ºº  !
$str
ºº! I
)
ººI J
;
ººJ K

scriptFile
ΩΩ 
.
ΩΩ 
	WriteLine
ΩΩ  
(
ΩΩ  !
$str
ΩΩ! #
)
ΩΩ# $
;
ΩΩ$ %

scriptFile
ææ 
.
ææ 
	WriteLine
ææ  
(
ææ  !
$str
ææ! d
)
ææd e
;
ææe f

scriptFile
øø 
.
øø 
	WriteLine
øø  
(
øø  !
$str
øø! &
)
øø& '
;
øø' (

scriptFile
¿¿ 
.
¿¿ 
	WriteLine
¿¿  
(
¿¿  !
$str
¿¿! +
)
¿¿+ ,
;
¿¿, -
foreach
¬¬ 
(
¬¬ 
Table
¬¬ 
t
¬¬ 
in
¬¬ 
Table
¬¬  %
.
¬¬% &
GetAll
¬¬& ,
(
¬¬, -
model
¬¬- 2
)
¬¬2 3
)
¬¬3 4
{
√√ 
string
ƒƒ 
tblKey
ƒƒ 
=
ƒƒ 
KeyList
ƒƒ  '
(
ƒƒ' (
t
ƒƒ( )
,
ƒƒ) *
ATTNAME_LEN
ƒƒ+ 6
)
ƒƒ6 7
;
ƒƒ7 8
foreach
≈≈ 
(
≈≈ 
TableAttribute
≈≈ '
a
≈≈( )
in
≈≈* ,
t
≈≈- .
.
≈≈. /
TableStructure
≈≈/ =
.
≈≈= >

Attributes
≈≈> H
)
≈≈H I
{
∆∆ 
if
«« 
(
«« 
(
«« 
a
«« 
.
«« 
	Attribute
«« $
.
««$ %
Type
««% )
.
««) *
ToString
««* 2
(
««2 3
)
««3 4
.
««4 5
Contains
««5 =
(
««= >
$str
««> D
)
««D E
||
««F H
(
««I J
a
««J K
.
««K L
	Attribute
««L U
.
««U V
Type
««V Z
==
««[ ]
eDBType
««^ e
.
««e f
NUMERIC
««f m
)
««m n
||
««o q
a
««r s
.
««s t
	Attribute
««t }
.
««} ~
Type««~ Ç
==««É Ö
eDBType««Ü ç
.««ç é
DATE««é í
||««ì ï
a««ñ ó
.««ó ò
	Attribute««ò °
.««° ¢
Type««¢ ¶
==««ß ©
eDBType««™ ±
.««± ≤
DATETIME««≤ ∫
)««∫ ª
&&
»» 
!
»» 
(
»» 
a
»» 
.
»» 
	IsFormula
»» (
)
»»( )
&&
»»* ,
!
»»- .
(
»». /
a
»»/ 0
.
»»0 1

IsInferred
»»1 ;
)
»»; <
&&
»»= ?
!
»»@ A
(
»»A B
a
»»B C
.
»»C D
IsKey
»»D I
)
»»I J
)
»»J K
{
…… 

scriptFile
   "
.
  " #
	WriteLine
  # ,
(
  , -
$str
  - 6
+
  7 8
t
  9 :
.
  : ;
Name
  ; ?
+
  @ A
$str
  B I
+
  J K
a
  L M
.
  M N
Name
  N R
+
  S T
$str
  U Y
+
  Z [
GxNull
  \ b
(
  b c
a
  c d
)
  d e
+
  f g
$str
  h q
+
  r s
a
  t u
.
  u v
Name
  v z
+
  { |
$str  } à
)  à â
;  â ä
}
ÀÀ 
}
ÃÃ 
}
ÕÕ 

scriptFile
ŒŒ 
.
ŒŒ 
Close
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 	
private
—— 
static
—— 
void
—— /
!GenerateCheckReferentialIntegrity
—— =
(
——= >
string
——> D
Name
——E I
,
——I J
string
——K Q
FileName
——R Z
,
——Z [
int
——\ _
ATTNAME_LEN
——` k
,
——k l
int
——m p
TBLNAME_LEN
——q |
)
——| }
{
““ 	

IKBService
”” 
kbserv
”” 
=
”” 

UIServices
””  *
.
””* +
KB
””+ -
;
””- .
KBModel
‘‘ 
model
‘‘ 
=
‘‘ 
kbserv
‘‘ "
.
‘‘" #
CurrentModel
‘‘# /
;
‘‘/ 0
StreamWriter
’’ 

scriptFile
’’ #
=
’’$ %
new
’’& )
StreamWriter
’’* 6
(
’’6 7
FileName
’’7 ?
)
’’? @
;
’’@ A
IOutputService
÷÷ 
output
÷÷ !
=
÷÷" #
CommonServices
÷÷$ 2
.
÷÷2 3
Output
÷÷3 9
;
÷÷9 :
output
◊◊ 
.
◊◊ 
AddLine
◊◊ 
(
◊◊ 
$str
◊◊ (
+
◊◊) *
Name
◊◊+ /
)
◊◊/ 0
;
◊◊0 1

scriptFile
ŸŸ 
.
ŸŸ 
	WriteLine
ŸŸ  
(
ŸŸ  !
$str
ŸŸ! 1
+
ŸŸ2 3
Name
ŸŸ4 8
+
ŸŸ9 :
$str
ŸŸ; >
+
ŸŸ? @
DateTime
ŸŸA I
.
ŸŸI J
Now
ŸŸJ M
.
ŸŸM N
ToString
ŸŸN V
(
ŸŸV W
$str
ŸŸW c
)
ŸŸc d
)
ŸŸd e
;
ŸŸe f

scriptFile
⁄⁄ 
.
⁄⁄ 
	WriteLine
⁄⁄  
(
⁄⁄  !
$str
⁄⁄! #
)
⁄⁄# $
;
⁄⁄$ %

scriptFile
€€ 
.
€€ 
	WriteLine
€€  
(
€€  !
$str
€€! X
)
€€X Y
;
€€Y Z

scriptFile
‹‹ 
.
‹‹ 
	WriteLine
‹‹  
(
‹‹  !
$str
‹‹! #
)
‹‹# $
;
‹‹$ %

scriptFile
›› 
.
›› 
	WriteLine
››  
(
››  !
$str
››! d
)
››d e
;
››e f

scriptFile
ﬁﬁ 
.
ﬁﬁ 
	WriteLine
ﬁﬁ  
(
ﬁﬁ  !
$str
ﬁﬁ! &
)
ﬁﬁ& '
;
ﬁﬁ' (

scriptFile
ﬂﬂ 
.
ﬂﬂ 
	WriteLine
ﬂﬂ  
(
ﬂﬂ  !
$str
ﬂﬂ! +
)
ﬂﬂ+ ,
;
ﬂﬂ, -
string
·· 
comilla
·· 
=
·· 
$str
··  
;
··  !
foreach
„„ 
(
„„ 
Table
„„ 
t
„„ 
in
„„ 
Table
„„  %
.
„„% &
GetAll
„„& ,
(
„„, -
model
„„- 2
)
„„2 3
)
„„3 4
{
‰‰ 
string
ÊÊ 
tblKey
ÊÊ 
=
ÊÊ 
KeyList
ÊÊ  '
(
ÊÊ' (
t
ÊÊ( )
,
ÊÊ) *
ATTNAME_LEN
ÊÊ* 5
)
ÊÊ5 6
;
ÊÊ6 7
foreach
ËË 
(
ËË 
TableRelation
ËË &
relation
ËË' /
in
ËË0 2
t
ËË3 4
.
ËË4 5"
SuperordinatedTables
ËË5 I
)
ËËI J
{
ÈÈ 
string
ÍÍ 
baseAttributes
ÍÍ )
=
ÍÍ* +'
ExtractListBaseAttributes
ÍÍ, E
(
ÍÍE F
relation
ÍÍF N
,
ÍÍN O
ATTNAME_LEN
ÍÍP [
)
ÍÍ[ \
;
ÍÍ\ ]
string
ÎÎ 
relatedAttributes
ÎÎ ,
=
ÎÎ- .*
ExtractListRelatedAttributes
ÎÎ/ K
(
ÎÎK L
relation
ÎÎL T
,
ÎÎT U
ATTNAME_LEN
ÎÎV a
)
ÎÎa b
;
ÎÎb c
string
ÏÏ 
whereCondition
ÏÏ )
=
ÏÏ* +#
ExtractWhereCondition
ÏÏ, A
(
ÏÏA B
t
ÏÏB C
,
ÏÏC D
relation
ÏÏE M
,
ÏÏM N
ATTNAME_LEN
ÏÏO Z
,
ÏÏZ [
TBLNAME_LEN
ÏÏ[ f
)
ÏÏf g
;
ÏÏg h
string
ÌÌ  
whereJoinCondition
ÌÌ -
=
ÌÌ. /'
ExtractWhereJoinCondition
ÌÌ0 I
(
ÌÌI J
t
ÌÌJ K
,
ÌÌK L
relation
ÌÌM U
,
ÌÌU V
ATTNAME_LEN
ÌÌW b
,
ÌÌb c
TBLNAME_LEN
ÌÌd o
)
ÌÌo p
;
ÌÌp q

scriptFile
ÔÔ 
.
ÔÔ 
	WriteLine
ÔÔ (
(
ÔÔ( )
$str
ÔÔ) 3
+
ÔÔ4 5
comilla
ÔÔ6 =
+
ÔÔ> ?
	ShortName
ÔÔ@ I
(
ÔÔI J
TBLNAME_LEN
ÔÔJ U
,
ÔÔU V
t
ÔÔV W
.
ÔÔW X
Name
ÔÔX \
)
ÔÔ\ ]
+
ÔÔ^ _
comilla
ÔÔ` g
+
ÔÔh i
$str
ÔÔj m
+
ÔÔn o
tblKey
ÔÔp v
+
ÔÔw x
$strÔÔy Å
+ÔÔÇ É
comillaÔÔÑ ã
+ÔÔå ç
	ShortNameÔÔé ó
(ÔÔó ò
TBLNAME_LENÔÔò £
,ÔÔ£ §
relationÔÔ§ ¨
.ÔÔ¨ ≠
RelatedTableÔÔ≠ π
.ÔÔπ ∫
NameÔÔ∫ æ
)ÔÔæ ø
+
 
comilla
 !
+
" #
$str
$ '
+
( )
baseAttributes
* 8
+
9 :
$str
; C
+
D E
	ShortName
F O
(
O P
TBLNAME_LEN
P [
,
[ \
relation
\ d
.
d e
	BaseTable
e n
.
n o
Name
o s
)
s t
+
ÒÒ 
$str
ÒÒ /
+
ÒÒ0 1
$str
ÒÒ2 C
+
ÒÒD E
	ShortName
ÒÒF O
(
ÒÒO P
TBLNAME_LEN
ÒÒP [
,
ÒÒ[ \
relation
ÒÒ\ d
.
ÒÒd e
RelatedTable
ÒÒe q
.
ÒÒq r
Name
ÒÒr v
)
ÒÒv w
+
ÒÒx y
$strÒÒz É
+
ÚÚ  
whereJoinCondition
ÚÚ ,
+
ÚÚ- .
$str
ÚÚ/ 3
+
ÚÚ4 5
whereCondition
ÚÚ6 D
+
ÚÚE F
$str
ÚÚG J
)
ÚÚJ K
;
ÚÚK L
output
ÛÛ 
.
ÛÛ 
AddLine
ÛÛ "
(
ÛÛ" #
relation
ÛÛ# +
.
ÛÛ+ ,
	BaseTable
ÛÛ, 5
.
ÛÛ5 6
Name
ÛÛ6 :
+
ÛÛ; <
$str
ÛÛ= @
+
ÛÛA B
relation
ÛÛC K
.
ÛÛK L
RelatedTable
ÛÛL X
.
ÛÛX Y
Name
ÛÛY ]
)
ÛÛ] ^
;
ÛÛ^ _
}
ÙÙ 
}
ˆˆ 

scriptFile
˜˜ 
.
˜˜ 
Close
˜˜ 
(
˜˜ 
)
˜˜ 
;
˜˜ 
}
¯¯ 	
private
˙˙ 
static
˙˙ 
void
˙˙ 1
#GenerateCheckReferentialIntegrityN3
˙˙ ?
(
˙˙? @
string
˙˙@ F
Name
˙˙G K
,
˙˙K L
string
˙˙M S
FileName
˙˙T \
,
˙˙\ ]
int
˙˙^ a
ATTNAME_LEN
˙˙b m
,
˙˙m n
int
˙˙o r
TBLNAME_LEN
˙˙s ~
)
˙˙~ 
{
˚˚ 	

IKBService
¸¸ 
kbserv
¸¸ 
=
¸¸ 

UIServices
¸¸  *
.
¸¸* +
KB
¸¸+ -
;
¸¸- .
KBModel
˝˝ 
model
˝˝ 
=
˝˝ 
kbserv
˝˝ "
.
˝˝" #
CurrentModel
˝˝# /
;
˝˝/ 0
StreamWriter
˛˛ 

scriptFile
˛˛ #
=
˛˛$ %
new
˛˛& )
StreamWriter
˛˛* 6
(
˛˛6 7
FileName
˛˛7 ?
)
˛˛? @
;
˛˛@ A
IOutputService
ˇˇ 
output
ˇˇ !
=
ˇˇ" #
CommonServices
ˇˇ$ 2
.
ˇˇ2 3
Output
ˇˇ3 9
;
ˇˇ9 :
output
Ä	Ä	 
.
Ä	Ä	 
AddLine
Ä	Ä	 
(
Ä	Ä	 
$str
Ä	Ä	 (
+
Ä	Ä	) *
Name
Ä	Ä	+ /
)
Ä	Ä	/ 0
;
Ä	Ä	0 1

scriptFile
Ç	Ç	 
.
Ç	Ç	 
	WriteLine
Ç	Ç	  
(
Ç	Ç	  !
$str
Ç	Ç	! 1
+
Ç	Ç	2 3
Name
Ç	Ç	4 8
+
Ç	Ç	9 :
$str
Ç	Ç	; >
+
Ç	Ç	? @
DateTime
Ç	Ç	A I
.
Ç	Ç	I J
Now
Ç	Ç	J M
.
Ç	Ç	M N
ToString
Ç	Ç	N V
(
Ç	Ç	V W
$str
Ç	Ç	W c
)
Ç	Ç	c d
)
Ç	Ç	d e
;
Ç	Ç	e f

scriptFile
É	É	 
.
É	É	 
	WriteLine
É	É	  
(
É	É	  !
$str
É	É	! #
)
É	É	# $
;
É	É	$ %

scriptFile
Ñ	Ñ	 
.
Ñ	Ñ	 
	WriteLine
Ñ	Ñ	  
(
Ñ	Ñ	  !
$str
Ñ	Ñ	! X
)
Ñ	Ñ	X Y
;
Ñ	Ñ	Y Z

scriptFile
Ö	Ö	 
.
Ö	Ö	 
	WriteLine
Ö	Ö	  
(
Ö	Ö	  !
$str
Ö	Ö	! #
)
Ö	Ö	# $
;
Ö	Ö	$ %

scriptFile
Ü	Ü	 
.
Ü	Ü	 
	WriteLine
Ü	Ü	  
(
Ü	Ü	  !
$str
Ü	Ü	! d
)
Ü	Ü	d e
;
Ü	Ü	e f

scriptFile
á	á	 
.
á	á	 
	WriteLine
á	á	  
(
á	á	  !
$str
á	á	! &
)
á	á	& '
;
á	á	' (

scriptFile
à	à	 
.
à	à	 
	WriteLine
à	à	  
(
à	à	  !
$str
à	à	! +
)
à	à	+ ,
;
à	à	, -
string
ä	ä	 
comilla
ä	ä	 
=
ä	ä	 
$str
ä	ä	  
;
ä	ä	  !!
SelectObjectOptions
å	å	  
selectObjectOption
å	å	  2
=
å	å	3 4
new
å	å	5 8!
SelectObjectOptions
å	å	9 L
(
å	å	L M
)
å	å	M N
;
å	å	N O 
selectObjectOption
ç	ç	 
.
ç	ç	 
MultipleSelection
ç	ç	 0
=
ç	ç	1 2
true
ç	ç	3 7
;
ç	ç	7 8 
selectObjectOption
é	é	 
.
é	é	 
ObjectTypes
é	é	 *
.
é	é	* +
Add
é	é	+ .
(
é	é	. / 
KBObjectDescriptor
é	é	/ A
.
é	é	A B
Get
é	é	B E
<
é	é	E F
Artech
é	é	F L
.
é	é	L M
Genexus
é	é	M T
.
é	é	T U
Common
é	é	U [
.
é	é	[ \
Objects
é	é	\ c
.
é	é	c d
	Attribute
é	é	d m
>
é	é	m n
(
é	é	n o
)
é	é	o p
)
é	é	p q
;
é	é	q r
foreach
è	è	 
(
è	è	 
Artech
è	è	 
.
è	è	 
Genexus
è	è	 #
.
è	è	# $
Common
è	è	$ *
.
è	è	* +
Objects
è	è	+ 2
.
è	è	2 3
	Attribute
è	è	3 <
att
è	è	= @
in
è	è	B D

UIServices
è	è	E O
.
è	è	O P 
SelectObjectDialog
è	è	P b
.
è	è	b c
SelectObjects
è	è	c p
(
è	è	p q!
selectObjectOptionè	è	q É
)è	è	É Ñ
)è	è	Ñ Ö
{
ê	ê	 
foreach
ë	ë	 
(
ë	ë	 
EntityReference
ë	ë	 (
rto
ë	ë	) ,
in
ë	ë	- /
att
ë	ë	0 3
.
ë	ë	3 4
GetReferencesTo
ë	ë	4 C
(
ë	ë	C D
)
ë	ë	D E
)
ë	ë	F G
{
í	í	 
KBObject
ì	ì	 
tbl
ì	ì	  
=
ì	ì	! "
KBObject
ì	ì	# +
.
ì	ì	+ ,
Get
ì	ì	, /
(
ì	ì	/ 0
att
ì	ì	0 3
.
ì	ì	3 4
Model
ì	ì	4 9
,
ì	ì	9 :
rto
ì	ì	; >
.
ì	ì	> ?
From
ì	ì	? C
)
ì	ì	C D
;
ì	ì	D E
if
î	î	 
(
î	î	 
tbl
î	î	 
!=
î	î	 
null
î	î	 #
&&
î	î	$ &
tbl
î	î	' *
is
î	î	+ -
Table
î	î	. 3
)
î	î	3 4
{
ï	ï	 
string
ñ	ñ	 
line
ñ	ñ	 #
=
ñ	ñ	$ %
$str
ñ	ñ	& /
+
ñ	ñ	0 1
comilla
ñ	ñ	2 9
+
ñ	ñ	: ;
tbl
ñ	ñ	< ?
.
ñ	ñ	? @
Name
ñ	ñ	@ D
+
ñ	ñ	E F
comilla
ñ	ñ	G N
+
ñ	ñ	O P
$str
ñ	ñ	Q l
+
ñ	ñ	m n
tbl
ñ	ñ	o r
.
ñ	ñ	r s
Name
ñ	ñ	s w
+
ñ	ñ	x y
$strñ	ñ	z É
+ñ	ñ	Ñ Ö
attñ	ñ	Ü â
.ñ	ñ	â ä
Nameñ	ñ	ä é
+ñ	ñ	è ê
$strñ	ñ	ë –
;ñ	ñ	– —
output
ó	ó	 
.
ó	ó	 
AddLine
ó	ó	 &
(
ó	ó	& '
line
ó	ó	' +
)
ó	ó	+ ,
;
ó	ó	, -

scriptFile
ò	ò	 "
.
ò	ò	" #
	WriteLine
ò	ò	# ,
(
ò	ò	, -
line
ò	ò	- 1
)
ò	ò	1 2
;
ò	ò	2 3
}
ô	ô	 
}
õ	õ	 
}
ú	ú	 

scriptFile
†	†	 
.
†	†	 
Close
†	†	 
(
†	†	 
)
†	†	 
;
†	†	 
}
°	°	 	
private
£	£	 
static
£	£	 
void
£	£	 7
)GenerateCountReferentialIntegrityProblems
£	£	 E
(
£	£	E F
string
£	£	F L
Name
£	£	M Q
,
£	£	Q R
string
£	£	S Y
FileName
£	£	Z b
,
£	£	b c
int
£	£	d g
ATTNAME_LEN
£	£	h s
,
£	£	s t
int
£	£	u x
TBLNAME_LEN£	£	y Ñ
)£	£	Ñ Ö
{
§	§	 	

IKBService
•	•	 
kbserv
•	•	 
=
•	•	 

UIServices
•	•	  *
.
•	•	* +
KB
•	•	+ -
;
•	•	- .
KBModel
¶	¶	 
model
¶	¶	 
=
¶	¶	 
kbserv
¶	¶	 "
.
¶	¶	" #
CurrentModel
¶	¶	# /
;
¶	¶	/ 0
StreamWriter
ß	ß	 

scriptFile
ß	ß	 #
=
ß	ß	$ %
new
ß	ß	& )
StreamWriter
ß	ß	* 6
(
ß	ß	6 7
FileName
ß	ß	7 ?
)
ß	ß	? @
;
ß	ß	@ A
IOutputService
®	®	 
output
®	®	 !
=
®	®	" #
CommonServices
®	®	$ 2
.
®	®	2 3
Output
®	®	3 9
;
®	®	9 :
output
©	©	 
.
©	©	 
AddLine
©	©	 
(
©	©	 
$str
©	©	 (
+
©	©	) *
Name
©	©	+ /
)
©	©	/ 0
;
©	©	0 1

scriptFile
´	´	 
.
´	´	 
	WriteLine
´	´	  
(
´	´	  !
$str
´	´	! 1
+
´	´	2 3
Name
´	´	4 8
+
´	´	9 :
$str
´	´	; >
+
´	´	? @
DateTime
´	´	A I
.
´	´	I J
Now
´	´	J M
.
´	´	M N
ToString
´	´	N V
(
´	´	V W
$str
´	´	W c
)
´	´	c d
)
´	´	d e
;
´	´	e f

scriptFile
¨	¨	 
.
¨	¨	 
	WriteLine
¨	¨	  
(
¨	¨	  !
$str
¨	¨	! #
)
¨	¨	# $
;
¨	¨	$ %

scriptFile
≠	≠	 
.
≠	≠	 
	WriteLine
≠	≠	  
(
≠	≠	  !
$str
≠	≠	! Y
)
≠	≠	Y Z
;
≠	≠	Z [

scriptFile
Æ	Æ	 
.
Æ	Æ	 
	WriteLine
Æ	Æ	  
(
Æ	Æ	  !
$str
Æ	Æ	! #
)
Æ	Æ	# $
;
Æ	Æ	$ %

scriptFile
Ø	Ø	 
.
Ø	Ø	 
	WriteLine
Ø	Ø	  
(
Ø	Ø	  !
$str
Ø	Ø	! d
)
Ø	Ø	d e
;
Ø	Ø	e f

scriptFile
∞	∞	 
.
∞	∞	 
	WriteLine
∞	∞	  
(
∞	∞	  !
$str
∞	∞	! &
)
∞	∞	& '
;
∞	∞	' (

scriptFile
±	±	 
.
±	±	 
	WriteLine
±	±	  
(
±	±	  !
$str
±	±	! +
)
±	±	+ ,
;
±	±	, -
string
≥	≥	 
comilla
≥	≥	 
=
≥	≥	 
$str
≥	≥	  
;
≥	≥	  !
foreach
µ	µ	 
(
µ	µ	 
Table
µ	µ	 
t
µ	µ	 
in
µ	µ	 
Table
µ	µ	  %
.
µ	µ	% &
GetAll
µ	µ	& ,
(
µ	µ	, -
model
µ	µ	- 2
)
µ	µ	2 3
)
µ	µ	3 4
{
∂	∂	 
string
∏	∏	 
tblKey
∏	∏	 
=
∏	∏	 
KeyList
∏	∏	  '
(
∏	∏	' (
t
∏	∏	( )
,
∏	∏	) *
ATTNAME_LEN
∏	∏	* 5
)
∏	∏	5 6
;
∏	∏	6 7
foreach
∫	∫	 
(
∫	∫	 
TableRelation
∫	∫	 &
relation
∫	∫	' /
in
∫	∫	0 2
t
∫	∫	3 4
.
∫	∫	4 5"
SuperordinatedTables
∫	∫	5 I
)
∫	∫	I J
{
ª	ª	 
string
º	º	 
baseAttributes
º	º	 )
=
º	º	* +'
ExtractListBaseAttributes
º	º	, E
(
º	º	E F
relation
º	º	F N
,
º	º	N O
ATTNAME_LEN
º	º	O Z
)
º	º	Z [
;
º	º	[ \
string
Ω	Ω	 
relatedAttributes
Ω	Ω	 ,
=
Ω	Ω	- .*
ExtractListRelatedAttributes
Ω	Ω	/ K
(
Ω	Ω	K L
relation
Ω	Ω	L T
,
Ω	Ω	T U
ATTNAME_LEN
Ω	Ω	U `
)
Ω	Ω	` a
;
Ω	Ω	a b
string
æ	æ	 
whereCondition
æ	æ	 )
=
æ	æ	* +#
ExtractWhereCondition
æ	æ	, A
(
æ	æ	A B
t
æ	æ	B C
,
æ	æ	C D
relation
æ	æ	E M
,
æ	æ	M N
ATTNAME_LEN
æ	æ	N Y
,
æ	æ	Y Z
TBLNAME_LEN
æ	æ	Z e
)
æ	æ	e f
;
æ	æ	f g
string
ø	ø	  
whereJoinCondition
ø	ø	 -
=
ø	ø	. /'
ExtractWhereJoinCondition
ø	ø	0 I
(
ø	ø	I J
t
ø	ø	J K
,
ø	ø	K L
relation
ø	ø	M U
,
ø	ø	U V
ATTNAME_LEN
ø	ø	V a
,
ø	ø	a b
TBLNAME_LEN
ø	ø	b m
)
ø	ø	m n
;
ø	ø	n o

scriptFile
¿	¿	 
.
¿	¿	 
	WriteLine
¿	¿	 (
(
¿	¿	( )
$str
¿	¿	) 3
+
¿	¿	4 5
comilla
¿	¿	6 =
+
¿	¿	> ?
	ShortName
¿	¿	@ I
(
¿	¿	I J
TBLNAME_LEN
¿	¿	J U
,
¿	¿	U V
relation
¿	¿	V ^
.
¿	¿	^ _
RelatedTable
¿	¿	_ k
.
¿	¿	k l
Name
¿	¿	l p
)
¿	¿	p q
+
¿	¿	r s
comilla
¿	¿	t {
+
¿	¿	| }
$str¿	¿	~ Ü
+
¡	¡	4 5
comilla
¡	¡	6 =
+
¡	¡	> ?
	ShortName
¡	¡	@ I
(
¡	¡	I J
TBLNAME_LEN
¡	¡	J U
,
¡	¡	U V
relation
¡	¡	W _
.
¡	¡	_ `
	BaseTable
¡	¡	` i
.
¡	¡	i j
Name
¡	¡	j n
)
¡	¡	n o
+
¡	¡	p q
comilla
¡	¡	r y
+
¡	¡	z {
$str
¡	¡	| 
+
¬	¬	4 5
baseAttributes
¬	¬	6 D
+
¬	¬	E F
$str
¬	¬	G X
+
¬	¬	Y Z
	ShortName
¬	¬	[ d
(
¬	¬	d e
TBLNAME_LEN
¬	¬	e p
,
¬	¬	p q
relation
¬	¬	q y
.
¬	¬	y z
	BaseTable¬	¬	z É
.¬	¬	É Ñ
Name¬	¬	Ñ à
)¬	¬	à â
+
√	√	4 5
$str
√	√	6 Y
+
√	√	Z [
	ShortName
√	√	\ e
(
√	√	e f
TBLNAME_LEN
√	√	f q
,
√	√	q r
relation
√	√	r z
.
√	√	z {
RelatedTable√	√	{ á
.√	√	á à
Name√	√	à å
)√	√	å ç
+
ƒ	ƒ	4 5
$str
ƒ	ƒ	6 ?
+
ƒ	ƒ	@ A 
whereJoinCondition
ƒ	ƒ	B T
+
ƒ	ƒ	U V
$str
ƒ	ƒ	W [
+
≈	≈	4 5
whereCondition
≈	≈	6 D
+
≈	≈	E F
$str
≈	≈	G T
+
≈	≈	U V
baseAttributes
≈	≈	W e
+
≈	≈	f g
$str
≈	≈	h k
)
≈	≈	k l
;
≈	≈	l m
}
«	«	 
}
…	…	 

scriptFile
 	 	 
.
 	 	 
Close
 	 	 
(
 	 	 
)
 	 	 
;
 	 	 
}
À	À	 	
private
Õ	Õ	 
static
Õ	Õ	 
void
Õ	Õ	 2
$GenerateDeleteInvalidIntegrityValues
Õ	Õ	 @
(
Õ	Õ	@ A
string
Õ	Õ	A G
name
Õ	Õ	H L
,
Õ	Õ	L M
string
Õ	Õ	N T
fileName
Õ	Õ	U ]
,
Õ	Õ	] ^
int
Õ	Õ	_ b
ATTNAME_LEN
Õ	Õ	c n
,
Õ	Õ	n o
int
Õ	Õ	p s
TBLNAME_LEN
Õ	Õ	t 
)Õ	Õ	 Ä
{
Œ	Œ	 	

IKBService
œ	œ	 
kbserv
œ	œ	 
=
œ	œ	 

UIServices
œ	œ	  *
.
œ	œ	* +
KB
œ	œ	+ -
;
œ	œ	- .
KBModel
–	–	 
model
–	–	 
=
–	–	 
kbserv
–	–	 "
.
–	–	" #
CurrentModel
–	–	# /
;
–	–	/ 0
StreamWriter
—	—	 

scriptFile
—	—	 #
=
—	—	$ %
new
—	—	& )
StreamWriter
—	—	* 6
(
—	—	6 7
fileName
—	—	7 ?
)
—	—	? @
;
—	—	@ A
IOutputService
“	“	 
output
“	“	 !
=
“	“	" #
CommonServices
“	“	$ 2
.
“	“	2 3
Output
“	“	3 9
;
“	“	9 :
output
”	”	 
.
”	”	 
AddLine
”	”	 
(
”	”	 
$str
”	”	 (
+
”	”	) *
name
”	”	+ /
)
”	”	/ 0
;
”	”	0 1

scriptFile
’	’	 
.
’	’	 
	WriteLine
’	’	  
(
’	’	  !
$str
’	’	! 1
+
’	’	2 3
name
’	’	4 8
+
’	’	9 :
$str
’	’	; >
+
’	’	? @
DateTime
’	’	A I
.
’	’	I J
Now
’	’	J M
.
’	’	M N
ToString
’	’	N V
(
’	’	V W
$str
’	’	W c
)
’	’	c d
)
’	’	d e
;
’	’	e f

scriptFile
÷	÷	 
.
÷	÷	 
	WriteLine
÷	÷	  
(
÷	÷	  !
$str
÷	÷	! #
)
÷	÷	# $
;
÷	÷	$ %

scriptFile
◊	◊	 
.
◊	◊	 
	WriteLine
◊	◊	  
(
◊	◊	  !
$str
◊	◊	! Z
)
◊	◊	Z [
;
◊	◊	[ \

scriptFile
ÿ	ÿ	 
.
ÿ	ÿ	 
	WriteLine
ÿ	ÿ	  
(
ÿ	ÿ	  !
$str
ÿ	ÿ	! #
)
ÿ	ÿ	# $
;
ÿ	ÿ	$ %

scriptFile
Ÿ	Ÿ	 
.
Ÿ	Ÿ	 
	WriteLine
Ÿ	Ÿ	  
(
Ÿ	Ÿ	  !
$str
Ÿ	Ÿ	! T
)
Ÿ	Ÿ	T U
;
Ÿ	Ÿ	U V

scriptFile
⁄	⁄	 
.
⁄	⁄	 
	WriteLine
⁄	⁄	  
(
⁄	⁄	  !
$str
⁄	⁄	! &
)
⁄	⁄	& '
;
⁄	⁄	' (

scriptFile
€	€	 
.
€	€	 
	WriteLine
€	€	  
(
€	€	  !
$str
€	€	! +
)
€	€	+ ,
;
€	€	, -
string
›	›	 
comilla
›	›	 
=
›	›	 
$str
›	›	  
;
›	›	  !
foreach
ﬂ	ﬂ	 
(
ﬂ	ﬂ	 
Table
ﬂ	ﬂ	 
t
ﬂ	ﬂ	 
in
ﬂ	ﬂ	 
Table
ﬂ	ﬂ	  %
.
ﬂ	ﬂ	% &
GetAll
ﬂ	ﬂ	& ,
(
ﬂ	ﬂ	, -
model
ﬂ	ﬂ	- 2
)
ﬂ	ﬂ	2 3
)
ﬂ	ﬂ	3 4
{
‡	‡	 
string
‚	‚	 
tblKey
‚	‚	 
=
‚	‚	 
KeyList
‚	‚	  '
(
‚	‚	' (
t
‚	‚	( )
,
‚	‚	) *
ATTNAME_LEN
‚	‚	* 5
)
‚	‚	5 6
;
‚	‚	6 7
foreach
‰	‰	 
(
‰	‰	 
TableRelation
‰	‰	 &
relation
‰	‰	' /
in
‰	‰	0 2
t
‰	‰	3 4
.
‰	‰	4 5"
SuperordinatedTables
‰	‰	5 I
)
‰	‰	I J
{
Â	Â	 
string
Á	Á	  
whereJoinCondition
Á	Á	 -
=
Á	Á	. /'
ExtractWhereJoinCondition
Á	Á	0 I
(
Á	Á	I J
t
Á	Á	J K
,
Á	Á	K L
relation
Á	Á	M U
,
Á	Á	U V
ATTNAME_LEN
Á	Á	V a
,
Á	Á	a b
TBLNAME_LEN
Á	Á	b m
)
Á	Á	m n
;
Á	Á	n o

scriptFile
È	È	 
.
È	È	 
	WriteLine
È	È	 (
(
È	È	( )
$str
È	È	) 7
+
È	È	8 9
	ShortName
È	È	: C
(
È	È	C D
TBLNAME_LEN
È	È	D O
,
È	È	O P
t
È	È	P Q
.
È	È	Q R
Name
È	È	R V
)
È	È	V W
+
È	È	X Y
$str
È	È	Z }
+
Í	Í	 
	ShortName
Í	Í	 #
(
Í	Í	# $
TBLNAME_LEN
Í	Í	$ /
,
Í	Í	/ 0
relation
Í	Í	0 8
.
Í	Í	8 9
RelatedTable
Í	Í	9 E
.
Í	Í	E F
Name
Í	Í	F J
)
Í	Í	J K
+
Í	Í	L M
$str
Í	Í	N W
+
Í	Í	X Y 
whereJoinCondition
Í	Í	Z l
+
Í	Í	m n
$str
Í	Í	o s
)
Í	Í	s t
;
Í	Í	t u
}
Î	Î	 
}
Ì	Ì	 

scriptFile
Ó	Ó	 
.
Ó	Ó	 
Close
Ó	Ó	 
(
Ó	Ó	 
)
Ó	Ó	 
;
Ó	Ó	 
}
Ô	Ô	 
public
Ò	Ò	 
static
Ò	Ò	 
string
Ò	Ò	 
	ShortName
Ò	Ò	 &
(
Ò	Ò	& '
int
Ò	Ò	' *
length
Ò	Ò	+ 1
,
Ò	Ò	1 2
string
Ò	Ò	3 9
name
Ò	Ò	: >
)
Ò	Ò	> ?
{
Ú	Ú	 	
if
Û	Û	 
(
Û	Û	 
name
Û	Û	 
.
Û	Û	 
Length
Û	Û	 
>
Û	Û	 
length
Û	Û	 $
)
Û	Û	$ %
name
Ù	Ù	 
=
Ù	Ù	 
name
Ù	Ù	 
.
Ù	Ù	 
	Substring
Ù	Ù	 %
(
Ù	Ù	% &
$num
Ù	Ù	& '
,
Ù	Ù	' (
length
Ù	Ù	) /
)
Ù	Ù	/ 0
;
Ù	Ù	0 1
return
ı	ı	 
name
ı	ı	 
;
ı	ı	 
}
ˆ	ˆ	 	
private
¯	¯	 
static
¯	¯	 
string
¯	¯	 
KeyList
¯	¯	 %
(
¯	¯	% &
Table
¯	¯	& +
t
¯	¯	, -
,
¯	¯	- .
int
¯	¯	/ 2
ATTNAME_LEN
¯	¯	3 >
)
¯	¯	> ?
{
˘	˘	 	
string
˙	˙	 
tblKey
˙	˙	 
=
˙	˙	 
$str
˙	˙	 
;
˙	˙	 
string
˚	˚	 
coma
˚	˚	 
=
˚	˚	 
$str
˚	˚	 
;
˚	˚	 
foreach
¸	¸	 
(
¸	¸	 
TableAttribute
¸	¸	 #
a
¸	¸	$ %
in
¸	¸	& (
t
¸	¸	) *
.
¸	¸	* +
TableStructure
¸	¸	+ 9
.
¸	¸	9 :

PrimaryKey
¸	¸	: D
)
¸	¸	D E
{
˝	˝	 
string
˛	˛	 
attName
˛	˛	 
=
˛	˛	  
	ShortName
˛	˛	! *
(
˛	˛	* +
ATTNAME_LEN
˛	˛	+ 6
,
˛	˛	6 7
a
˛	˛	8 9
.
˛	˛	9 :
Name
˛	˛	: >
)
˛	˛	> ?
;
˛	˛	? @
tblKey
ˇ	ˇ	 
+=
ˇ	ˇ	 
coma
ˇ	ˇ	 
+
ˇ	ˇ	  
attName
ˇ	ˇ	! (
;
ˇ	ˇ	( )
coma
Ä
Ä
 
=
Ä
Ä
 
$str
Ä
Ä
 
;
Ä
Ä
 
}
Å
Å
 
return
É
É
 
tblKey
É
É
 
;
É
É
 
}
Ñ
Ñ
 	
private
Ü
Ü
 
static
Ü
Ü
 
string
Ü
Ü
 
NullConditionKey
Ü
Ü
 .
(
Ü
Ü
. /
Table
Ü
Ü
/ 4
t
Ü
Ü
5 6
,
Ü
Ü
6 7
int
Ü
Ü
8 ;
ATTNAME_LEN
Ü
Ü
< G
)
Ü
Ü
G H
{
á
á
 	
string
à
à
 
gxnullcondition
à
à
 "
=
à
à
# $
$str
à
à
% '
;
à
à
' (
string
â
â
 
orstr
â
â
 
=
â
â
 
$str
â
â
 
;
â
â
 
foreach
ä
ä
 
(
ä
ä
 
TableAttribute
ä
ä
 #
a
ä
ä
$ %
in
ä
ä
& (
t
ä
ä
) *
.
ä
ä
* +
TableStructure
ä
ä
+ 9
.
ä
ä
9 :

PrimaryKey
ä
ä
: D
)
ä
ä
D E
{
ã
ã
 
string
å
å
 
attName
å
å
 
=
å
å
  
	ShortName
å
å
! *
(
å
å
* +
ATTNAME_LEN
å
å
+ 6
,
å
å
6 7
a
å
å
8 9
.
å
å
9 :
Name
å
å
: >
)
å
å
> ?
;
å
å
? @
gxnullcondition
ç
ç
 
+=
ç
ç
  "
orstr
ç
ç
# (
+
ç
ç
) *
attName
ç
ç
+ 2
+
ç
ç
3 4
$str
ç
ç
5 8
+
ç
ç
9 :
GxNull
ç
ç
; A
(
ç
ç
A B
a
ç
ç
B C
)
ç
ç
C D
;
ç
ç
D E
orstr
é
é
 
=
é
é
 
$str
é
é
 
;
é
é
 
}
è
è
 
return
ë
ë
 
gxnullcondition
ë
ë
 "
;
ë
ë
" #
}
í
í
 	
private
ï
ï
 
static
ï
ï
 
string
ï
ï
 #
ExtractWhereCondition
ï
ï
 3
(
ï
ï
3 4
Table
ï
ï
4 9
t
ï
ï
: ;
,
ï
ï
; <
TableRelation
ï
ï
= J
relation
ï
ï
K S
,
ï
ï
S T
int
ï
ï
U X
ATTNAME_LEN
ï
ï
Z e
,
ï
ï
e f
int
ï
ï
g j
TBLNAME_LEN
ï
ï
k v
)
ï
ï
v w
{
ñ
ñ
 	

IKBService
ó
ó
 
kbserv
ó
ó
 
=
ó
ó
 

UIServices
ó
ó
  *
.
ó
ó
* +
KB
ó
ó
+ -
;
ó
ó
- .
KBModel
ò
ò
 
model
ò
ò
 
=
ò
ò
 
kbserv
ò
ò
 "
.
ò
ò
" #
CurrentModel
ò
ò
# /
;
ò
ò
/ 0
string
ô
ô
 
whereCondition2
ô
ô
 "
=
ô
ô
# $
$str
ô
ô
% '
;
ô
ô
' (
foreach
ö
ö
 
(
ö
ö
 
Artech
ö
ö
 
.
ö
ö
 
Genexus
ö
ö
 #
.
ö
ö
# $
Common
ö
ö
$ *
.
ö
ö
* +
Objects
ö
ö
+ 2
.
ö
ö
2 3
	Attribute
ö
ö
3 <
arel2
ö
ö
= B
in
ö
ö
C E
relation
ö
ö
F N
.
ö
ö
N O
BaseAttributes
ö
ö
O ]
)
ö
ö
] ^
{
õ
õ
 
Artech
ú
ú
 
.
ú
ú
 
Genexus
ú
ú
 
.
ú
ú
 
Common
ú
ú
 %
.
ú
ú
% &
Objects
ú
ú
& -
.
ú
ú
- .
	Attribute
ú
ú
. 7
attaux
ú
ú
8 >
=
ú
ú
? @
Artech
ú
ú
A G
.
ú
ú
G H
Genexus
ú
ú
H O
.
ú
ú
O P
Common
ú
ú
P V
.
ú
ú
V W
Objects
ú
ú
W ^
.
ú
ú
^ _
	Attribute
ú
ú
_ h
.
ú
ú
h i
Get
ú
ú
i l
(
ú
ú
l m
model
ú
ú
m r
,
ú
ú
r s
arel2
ú
ú
t y
.
ú
ú
y z
Id
ú
ú
z |
)
ú
ú
| }
;
ú
ú
} ~
TableAttribute
ù
ù
 
tatt
ù
ù
 #
=
ù
ù
$ %
t
ù
ù
& '
.
ù
ù
' (
TableStructure
ù
ù
( 6
.
ù
ù
6 7
GetAttribute
ù
ù
7 C
(
ù
ù
C D
attaux
ù
ù
D J
)
ù
ù
J K
;
ù
ù
K L
if
û
û
 
(
û
û
 
tatt
û
û
 
.
û
û
 

IsNullable
û
û
 #
==
û
û
$ &
TableAttribute
û
û
' 5
.
û
û
5 6
IsNullableValue
û
û
6 E
.
û
û
E F
True
û
û
F J
)
û
û
J K
{
ü
ü
 
whereCondition2
†
†
 #
+=
†
†
$ &
$str
†
†
' .
+
†
†
/ 0
	ShortName
†
†
1 :
(
†
†
: ;
TBLNAME_LEN
†
†
; F
,
†
†
F G
t
†
†
G H
.
†
†
H I
Name
†
†
I M
)
†
†
M N
+
†
†
O P
$str
†
†
Q T
+
†
†
U V
	ShortName
†
†
W `
(
†
†
` a
ATTNAME_LEN
†
†
a l
,
†
†
l m
arel2
†
†
m r
.
†
†
r s
Name
†
†
s w
)
†
†
w x
+
†
†
y z
$str
†
†
{ 
+†
†
Ä Å
GxNull†
†
Ç à
(†
†
à â
attaux†
†
â è
)†
†
è ê
+†
†
ë í
$str†
†
ì ñ
;†
†
ñ ó
}
°
°
 
}
¢
¢
 
return
§
§
 
whereCondition2
§
§
 "
;
§
§
" #
}
•
•
 	
private
ß
ß
 
static
ß
ß
 
string
ß
ß
 '
ExtractListBaseAttributes
ß
ß
 7
(
ß
ß
7 8
TableRelation
ß
ß
8 E
relation
ß
ß
F N
,
ß
ß
N O
int
ß
ß
P S
ATTNAME_LEN
ß
ß
T _
)
ß
ß
_ `
{
®
®
 	
string
©
©
 
baseAttributes
©
©
 !
=
©
©
" #
$str
©
©
$ &
;
©
©
& '
string
™
™
 
coma
™
™
 
=
™
™
 
$str
™
™
 
;
™
™
 
foreach
´
´
 
(
´
´
 
Artech
´
´
 
.
´
´
 
Genexus
´
´
 #
.
´
´
# $
Common
´
´
$ *
.
´
´
* +
Objects
´
´
+ 2
.
´
´
2 3
	Attribute
´
´
3 <
arel2
´
´
= B
in
´
´
C E
relation
´
´
F N
.
´
´
N O
BaseAttributes
´
´
O ]
)
´
´
] ^
{
¨
¨
 
baseAttributes
≠
≠
 
+=
≠
≠
 !
coma
≠
≠
" &
+
≠
≠
' (
	ShortName
≠
≠
) 2
(
≠
≠
2 3
ATTNAME_LEN
≠
≠
3 >
,
≠
≠
> ?
arel2
≠
≠
? D
.
≠
≠
D E
Name
≠
≠
E I
)
≠
≠
I J
;
≠
≠
J K
coma
Æ
Æ
 
=
Æ
Æ
 
$str
Æ
Æ
 
;
Æ
Æ
 
}
Ø
Ø
 
return
±
±
 
baseAttributes
±
±
 !
;
±
±
! "
}
≤
≤
 	
private
¥
¥
 
static
¥
¥
 
string
¥
¥
 *
ExtractListRelatedAttributes
¥
¥
 :
(
¥
¥
: ;
TableRelation
¥
¥
; H
relation
¥
¥
I Q
,
¥
¥
Q R
int
¥
¥
S V
ATTNAME_LEN
¥
¥
W b
)
¥
¥
b c
{
µ
µ
 	
string
∂
∂
 
relatedAttributes
∂
∂
 $
=
∂
∂
% &
$str
∂
∂
' )
;
∂
∂
) *
foreach
∑
∑
 
(
∑
∑
 
Artech
∑
∑
 
.
∑
∑
 
Genexus
∑
∑
 #
.
∑
∑
# $
Common
∑
∑
$ *
.
∑
∑
* +
Objects
∑
∑
+ 2
.
∑
∑
2 3
	Attribute
∑
∑
3 <
arel
∑
∑
= A
in
∑
∑
B D
relation
∑
∑
E M
.
∑
∑
M N
RelatedAttributes
∑
∑
N _
)
∑
∑
_ `
{
∏
∏
 
relatedAttributes
π
π
 !
+=
π
π
" $
$str
π
π
% *
+
π
π
+ ,
	ShortName
π
π
- 6
(
π
π
6 7
ATTNAME_LEN
π
π
7 B
,
π
π
B C
arel
π
π
D H
.
π
π
H I
Name
π
π
I M
)
π
π
M N
;
π
π
N O
}
∫
∫
 
return
º
º
 
relatedAttributes
º
º
 $
;
º
º
$ %
}
Ω
Ω
 	
private
ø
ø
 
static
ø
ø
 
string
ø
ø
 '
ExtractWhereJoinCondition
ø
ø
 7
(
ø
ø
7 8
Table
ø
ø
8 =
t
ø
ø
> ?
,
ø
ø
? @
TableRelation
ø
ø
A N
relation
ø
ø
O W
,
ø
ø
W X
int
ø
ø
X [
ATTNAME_LEN
ø
ø
\ g
,
ø
ø
g h
int
ø
ø
h k
TBLNAME_LEN
ø
ø
l w
)
ø
ø
w x
{
¿
¿
 	
string
¬
¬
 
whereCondition
¬
¬
 !
=
¬
¬
" #
$str
¬
¬
$ &
;
¬
¬
& '
string
√
√
 
andstr
√
√
 
=
√
√
 
$str
√
√
 
;
√
√
 
for
ƒ
ƒ
 
(
ƒ
ƒ
 
int
ƒ
ƒ
 
i
ƒ
ƒ
 
=
ƒ
ƒ
 
$num
ƒ
ƒ
 
;
ƒ
ƒ
 
i
ƒ
ƒ
 
<
ƒ
ƒ
 
relation
ƒ
ƒ
  (
.
ƒ
ƒ
( )
BaseAttributes
ƒ
ƒ
) 7
.
ƒ
ƒ
7 8
Count
ƒ
ƒ
8 =
;
ƒ
ƒ
= >
i
ƒ
ƒ
? @
++
ƒ
ƒ
@ B
)
ƒ
ƒ
B C
{
≈
≈
 
whereCondition
∆
∆
 
+=
∆
∆
 !
andstr
∆
∆
" (
+
∆
∆
) *
	ShortName
∆
∆
+ 4
(
∆
∆
4 5
TBLNAME_LEN
∆
∆
5 @
,
∆
∆
@ A
t
∆
∆
A B
.
∆
∆
B C
Name
∆
∆
C G
)
∆
∆
G H
+
∆
∆
I J
$str
∆
∆
K N
+
∆
∆
O P
	ShortName
∆
∆
Q Z
(
∆
∆
Z [
ATTNAME_LEN
∆
∆
[ f
,
∆
∆
f g
relation
∆
∆
g o
.
∆
∆
o p
BaseAttributes
∆
∆
p ~
[
∆
∆
~ 
i∆
∆
 Ä
]∆
∆
Ä Å
.∆
∆
Å Ç
Name∆
∆
Ç Ü
)∆
∆
Ü á
+∆
∆
à â
$str∆
∆
ä ç
+∆
∆
é è
	ShortName∆
∆
ê ô
(∆
∆
ô ö
TBLNAME_LEN∆
∆
ö •
,∆
∆
• ¶
relation∆
∆
ß Ø
.∆
∆
Ø ∞
RelatedTable∆
∆
∞ º
.∆
∆
º Ω
Name∆
∆
Ω ¡
)∆
∆
¡ ¬
+∆
∆
√ ƒ
$str∆
∆
≈ »
+∆
∆
…  
	ShortName∆
∆
À ‘
(∆
∆
‘ ’
ATTNAME_LEN∆
∆
’ ‡
,∆
∆
‡ ·
relation∆
∆
‚ Í
.∆
∆
Í Î!
RelatedAttributes∆
∆
Î ¸
[∆
∆
¸ ˝
i∆
∆
˝ ˛
]∆
∆
˛ ˇ
.∆
∆
ˇ Ä
Name∆
∆
Ä Ñ
)∆
∆
Ñ Ö
;∆
∆
Ö Ü
andstr
«
«
 
=
«
«
 
$str
«
«
  
;
«
«
  !
}
»
»
 
return
…
…
 
whereCondition
…
…
 !
;
…
…
! "
}
 
 
 	
private
Ã
Ã
 
static
Ã
Ã
 
string
Ã
Ã
 
GxNull
Ã
Ã
 $
(
Ã
Ã
$ %
Artech
Ã
Ã
% +
.
Ã
Ã
+ ,
Genexus
Ã
Ã
, 3
.
Ã
Ã
3 4
Common
Ã
Ã
4 :
.
Ã
Ã
: ;
Objects
Ã
Ã
; B
.
Ã
Ã
B C
	Attribute
Ã
Ã
C L
a
Ã
Ã
M N
)
Ã
Ã
N O
{
Õ
Õ
 	
string
Œ
Œ
 
gxnull
Œ
Œ
 
=
Œ
Œ
 
$str
Œ
Œ
  
;
Œ
Œ
  !
if
œ
œ
 
(
œ
œ
 
a
œ
œ
 
.
œ
œ
 
Type
œ
œ
 
==
œ
œ
 
eDBType
œ
œ
 !
.
œ
œ
! "
Boolean
œ
œ
" )
)
œ
œ
) *
gxnull
–
–
 
=
–
–
 
$str
–
–
  
;
–
–
  !
if
—
—
 
(
—
—
 
a
—
—
 
.
—
—
 
Type
—
—
 
==
—
—
 
eDBType
—
—
 !
.
—
—
! "
	CHARACTER
—
—
" +
)
—
—
+ ,
gxnull
“
“
 
=
“
“
 
$str
“
“
 
;
“
“
 
if
”
”
 
(
”
”
 
a
”
”
 
.
”
”
 
Type
”
”
 
==
”
”
 
eDBType
”
”
 !
.
”
”
! "
VARCHAR
”
”
" )
)
”
”
) *
gxnull
‘
‘
 
=
‘
‘
 
$str
‘
‘
 
;
‘
‘
 
if
’
’
 
(
’
’
 
a
’
’
 
.
’
’
 
Type
’
’
 
==
’
’
 
eDBType
’
’
 !
.
’
’
! "
LONGVARCHAR
’
’
" -
)
’
’
- .
gxnull
÷
÷
 
=
÷
÷
 
$str
÷
÷
 
;
÷
÷
 
if
◊
◊
 
(
◊
◊
 
a
◊
◊
 
.
◊
◊
 
Type
◊
◊
 
==
◊
◊
 
eDBType
◊
◊
 !
.
◊
◊
! "
NUMERIC
◊
◊
" )
)
◊
◊
) *
gxnull
ÿ
ÿ
 
=
ÿ
ÿ
 
$str
ÿ
ÿ
 
;
ÿ
ÿ
 
if
Ÿ
Ÿ
 
(
Ÿ
Ÿ
 
a
Ÿ
Ÿ
 
.
Ÿ
Ÿ
 
Type
Ÿ
Ÿ
 
==
Ÿ
Ÿ
 
eDBType
Ÿ
Ÿ
 !
.
Ÿ
Ÿ
! "
DATE
Ÿ
Ÿ
" &
)
Ÿ
Ÿ
& '
gxnull
⁄
⁄
 
=
⁄
⁄
 
$str
⁄
⁄
 '
;
⁄
⁄
' (
if
€
€
 
(
€
€
 
a
€
€
 
.
€
€
 
Type
€
€
 
==
€
€
 
eDBType
€
€
 !
.
€
€
! "
DATETIME
€
€
" *
)
€
€
* +
gxnull
‹
‹
 
=
‹
‹
 
$str
‹
‹
 '
;
‹
‹
' (
return
›
›
 
gxnull
›
›
 
;
›
›
 
}
ﬁ
ﬁ
 
}
‡
‡
 
}·
·
 